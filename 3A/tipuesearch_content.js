var tipuesearch = {"pages":[{"title":"レポート課題5(10/31出題)","text":"ApsolusZym6f2SxMrzlNlg==;;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-report5.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-report5.html"},{"title":"確率と統計(1)基礎概念","text":"講師： 本多 淳也 参考書： エージェントアプローチ人工知能 第2版 参考書： イラストで学ぶ 人工知能概論 In [1]: import numpy as np import matplotlib.pyplot as plt 講義概要 確率変数と確率分布 確率分布の性質を表す指標 同時確率 条件付き確率 確率変数と確率分布 用語 意味 確率(probability) 事象の起こりやすさを定量的に示す $0$ から $1$ の値 確率変数(random variable) その変数に関する任意の事象に対して確率が定義されている変数 確率分布(probability distribution) 確率変数に関する各事象に対してその確率を与える関数 離散型(discrete type)確率変数 ある可算集合 $\\mathcal{X}$ の中のいずれかの値をとる確率変数 確率質量関数(probability mass function) $f(x)$ $$f(x)\\geq0,\\quad \\sum_{x\\in\\mathcal{X}}f(x) = 1$$ 連続型(continuous type)確率変数 連続値をとる確率変数 確率密度関数(probability density function) $f(x)$ $$f(x)\\geq0,\\quad\\int_{-\\infty}&#94;{\\infty}f(x)dx=1$$ 累積分布関数(cumulative distribution function) $F(x)$ $$F(x) = P(X\\leq x)=\\int_{-\\infty}&#94;{x}f(u)du\\ \\text{ or } \\sum_{i:i\\leq x}f(i)$$ 確率分布の性質を表す指標 用語 数式 説明 期待値(expectation) $$E(X) = \\sum_xxf(x)\\ \\text{ or }\\int xf(x)dx$$ 確率変数の値の平均（正確には確率による重み付きの平均） 確率変数を代表する値を表す指標 ※ 外れ値(outlier)に敏感 中央値(median) $P(X\\leq x)=1/2$ を満たす $x$ データを大きい順（または小さい順）に並べたときの真ん中の値。 最頻値(mode) $f(x)$ を最大にする $x$ データの中で最も頻度が高い値 分散(variance) $$\\begin{aligned}V(X) &= E\\left\\{(X-E[X])&#94;2\\right\\}\\\\&=E\\left\\{X&#94;2-2E[X]X+(E[X])&#94;2\\right\\}\\\\&=E[X&#94;2]-E\\left[2E[X]X\\right]+(E[X])&#94;2\\\\&=E[X&#94;2]-2E[X]E[X]+(E[X])&#94;2\\\\&=E[X&#94;2]-(E[X])&#94;2\\end{aligned}$$ 確率変数の散らばり具合を表す指標 標準偏差(standard devariation) $\\sqrt{V(X)}$ 分散の平方根 標準化(standardization) $$Z=\\frac{X-E(X)}{\\sqrt{V(X)}}$$ 任意の確率変数 $X$ に対して、期待値 $0$、分散 $1$ の確率変数 $Z$ が定義できる。 歪度(skewness) $$\\alpha_3 = \\frac{E\\left\\{\\left[X - E(X)\\right]&#94;3\\right\\}}{\\left\\{V(X)\\right\\}&#94;{3/2}}$$ 確率変数の非対称性を表す。 劣度(kurtosis) $$\\beta_4 = \\frac{E\\left\\{\\left[X - E(X)\\right]&#94;4\\right\\}}{\\left\\{V(X)\\right\\}&#94;{2}}-3$$ 確率分布の尖り具合を表す。 積率(moment) $$\\mu_r = E\\left[X&#94;r\\right]$$ 期待値・分散・歪度・劣度などを表すパラメータ。全ての次数の積率を指定すれば、確率分布を一位に決定することができる。（左は $r$ 次の積率） 積率母関数(moment generating function) $$M_X(t) = E[e&#94;{tX}]=\\begin{cases}\\sum_xe&#94;{tx}f(x)\\\\\\int e&#94;{tx}f(x)dx\\end{cases}\\\\ M_X&#94;{(r)}(0)=\\mu_r$$ 全ての次数の積率を生成する関数。存在しない（無限大に発散する）こともある。 In [2]: def computation_variance ( n = 10000 , mu = 0 , sigma = 1 , seed = None ): X = np . random . RandomState ( seed ) . normal ( loc = mu , scale = sigma , size = n ) EX = sum ( X ) / n EX2 = sum ( X ** 2 ) / n # Calculate variance in 3 ways. var1 = np . var ( X ) var2 = sum (( X - EX ) ** 2 ) / n var3 = EX2 - EX ** 2 print ( \"`np.var(X)` =\" , var1 ) print ( \"E{(X - E[X])&#94;2} =\" , var2 ) print ( \"E[X&#94;2] - (E[X])&#94;2 =\" , var3 ) In [3]: computation_variance ( mu = 100 , seed = 0 ) `np.var(X)` = 0.9752679753477969 E{(X - E[X])&#94;2} = 0.9752679753477979 E[X&#94;2] - (E[X])&#94;2 = 0.9752679752218683 In [4]: computation_variance ( mu = 1e8 , seed = 1 ) `np.var(X)` = 0.9975731614280597 E{(X - E[X])&#94;2} = 0.9975731614281662 E[X&#94;2] - (E[X])&#94;2 = -98.0 ※ 「二乗の平均 - 平均の二乗」は丸め誤差の影響を受けやすい 歪度(skewness) 確率変数の非対称性を表す。 $$\\alpha_3 = \\frac{E\\left\\{\\left[X - E(X)\\right]&#94;3\\right\\}}{\\left\\{V(X)\\right\\}&#94;{3/2}}$$ In [5]: def plot_skewness ( ax = None , seed = None , n = 100 ): if ax == None : fig , ax = plt . subplots () X = np . random . RandomState ( seed ) . randint ( low = 1 , high = 7 , size = n ) ax . hist ( X , density = True , bins = 6 , color = \"blue\" , align = 'left' ) EX = np . mean ( X ) VX = np . var ( X ) skewness = np . mean (( X - EX ) ** 3 ) / VX ** ( 3 / 2 ) ax . set_title ( f \"skewness = {skewness:.3f} \" ) return ax In [6]: fig = plt . figure ( figsize = ( 12 , 3 )) for i , seed in enumerate ([ 44756 , 96331 , 76432 ]): ax = fig . add_subplot ( 1 , 3 , i + 1 ) ax = plot_skewness ( ax = ax , seed = seed ) plt . show () 劣度(kurtosis) 確率分布の尖り具合を表す。 $$\\beta_4 = \\frac{E\\left\\{\\left[X - E(X)\\right]&#94;4\\right\\}}{\\left\\{V(X)\\right\\}&#94;{2}}-3$$ In [7]: X = np . linspace ( - 5 , 5 , 10000 ) In [8]: f1 = lambda x : 1 / 1250 * ( 5 - abs ( x )) ** 4 f2 = lambda x , mu = 0 , sigma = 1 : 1 / np . sqrt ( 2 * np . pi * sigma ** 2 ) * np . exp ( - ( x - mu ) ** 2 / 2 * sigma ** 2 ) f3 = lambda x : 1 / 4 if abs ( x ) <= 2 else 0 In [9]: def plot_kurtosis ( X , func , ax = None ): if ax == None : fig , ax = plt . subplots () Y = np . array ([ func ( x ) for x in X ]) ax . plot ( X , Y , color = \"red\" ) Y /= sum ( Y ) EX = np . sum ( Y * X ) VX = np . sum ( Y * ( X - EX ) ** 2 ) kurtosis = np . sum ( Y * ( X - EX ) ** 4 ) / VX ** 2 - 3 ax . set_title ( f \"kurtosis = {kurtosis:.3f} \" ) return ax In [10]: fig = plt . figure ( figsize = ( 12 , 3 )) for i , func in enumerate ([ f1 , f2 , f3 ]): ax = fig . add_subplot ( 1 , 3 , i + 1 ) ax = plot_kurtosis ( X = X , func = func , ax = ax ) ax . set_xlim ( - 5 , 5 ); ax . set_ylim ( 0 , 1 ) plt . show () 同時確率 用語 数式 説明 同時確率(joint probability) 複数の確率変数が関わる確率 同時確率質量関数 $$P(X=x,Y=y) = f(x,y)\\\\f(x,y)\\geq0,\\quad\\sum_{x\\in\\mathcal{X}}\\sum_{y\\in\\mathcal{Y}}f(x,y)=1$$ 離散型の同時確率 同時確率密度関数 $$P(a\\leq X\\leq b,c\\leq Y\\leq d) = \\int_c&#94;d\\int_a&#94;bf(x,y)dxdy\\\\f(x,y)\\geq0,\\quad\\int_{-\\infty}&#94;{\\infty}\\int_{-\\infty}&#94;{\\infty}f(x,y)dxdy=1$$ 連続型の同時確率 共分散 $X$ と $X&#94;{\\prime}$ の 共分散(covariance) ： $$\\mathrm{Cov}(X,X&#94;{\\prime}) = E\\left[(X-E[X])(X&#94;{\\prime}-E[X&#94;{\\prime}])\\right]$$ $\\mathrm{Cov}(X,X&#94;{\\prime})>0$ の時：$X$ と $X&#94;{\\prime}$ の増減は 同傾向 $\\mathrm{Cov}(X,X&#94;{\\prime})<0$ の時：$X$ と $X&#94;{\\prime}$ の増減は 逆傾向 $\\mathrm{Cov}(X,X&#94;{\\prime})=0$ の時：$X$ と $X&#94;{\\prime}$ の増減は 無関係 共分散は、以下の形でも表されるので、A社の株価を $X$、B社の株価を $X&#94;{\\prime}$ とすると、以下の解釈も可能 $$V(X+X&#94;{\\prime}) = V(X) + V(X&#94;{\\prime}) + 2\\mathrm{Cov}(X,X&#94;{\\prime})$$ $\\mathrm{Cov}(X,X&#94;{\\prime})>0\\Longleftrightarrow V(X+X&#94;{\\prime})>V(X)+V(X&#94;{\\prime})$ なので、A,B両者の株を買うと分散が 拡大 する → 変動リスクが増大し、資産価値は不安定 $0>\\mathrm{Cov}(X,X&#94;{\\prime})\\Longleftrightarrow V(X)+V(X&#94;{\\prime})>V(X+X&#94;{\\prime})$ なので、A,B両者の株を買うと分散が 縮小 する → 変動リスクが抑制され、資産価値は安定 独立性 全ての $(x,y)$ で $p_{X,Y}(x,y) = p_X(x)p_Y(y)$ の時、$X$ と $Y$ は互いに 独立(independent) 2つの確率変数が独立の時、 積の期待値は各々の期待値の積と一致 $$E[XY] = E[X]E[Y]$$ 和の積率母関数は各々の積率母関数の積と一致 $$M_{X+Y}(t) = M_X(t)M_Y(t)$$ ２つの確率変数は無相関 $$\\mathrm{Cov}(X,Y) = 0$$ 2つの確率変数が独立ならば無相関であるが、逆は一般には正しくない。 条件付き確率 ベイズの定理(Bayes' theorem) $$P(X|Y) = \\frac{P(Y|X)P(X)}{P(Y)}$$ In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-5.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-5.html"},{"title":"生物物理学 第6回","text":"エネルギー生産系の仕組み（細胞内小器官） 光関連の現象 細胞・器官 たんぱく質等 眼で見る 視細胞（桿体、錐体細胞） ロドプシン等 光合成 葉緑体 光システム（タンパク質複合体） 蛍の光 発色細胞 ルシフェリン+ルシフェラーゼ クラゲの光 発色細胞 エコーリン、GFP(green fluorescence protein) 日焼け 色素形成細胞（メラノサイト） メラニン（チロシンの重合体） 体内時計 目のメラノプシン発現網膜神経細胞 メラノプシン ATPを作るプロセス 光合成(photosynthesis) は、高等植物や緑藻（青色細菌）が 葉緑体（クロロプラスト） 内で行う、二酸化炭素の固定反応である。 この過程で水が酸素に酸化され、二酸化炭素は還元されて糖になる。 光合成は大きく2つの段階に区別される。 1つは 明反応 と呼ばれ、光のエネルギーを利用して水が酸素に酸化されるとともに、二酸化炭素の還元に必要な \\(\\mathrm{NADPH}_2&#94;+\\) と \\(\\mathrm{ATP}\\) をつくりだす。 もう1つの段階は 暗反応 と呼ばれ、 \\(\\mathrm{NADPH}_2&#94;+\\) と \\(\\mathrm{ATP}\\) を利用して二酸化炭素から種々の糖がつくられる。 クロロプラスト中の大部分のクロロフィルは 光を集めるアンテナ の役割を果たす。吸収された光子のエネルギーはアンテナクロロフィル間を励起エネルギーとして移動し、 アンテナクロロフィル よりも励起エネルギーの 低い 反応中心クロロフィル に集められる。 FRET(Fluorescence resonance energy transfer) $$\\text{Transfer Efficiency at two rates: } E= \\frac{k_T}{k_T+k_F} = \\frac{1}{1 + \\frac{k_F}{k_T}}$$ \\(k_T\\) ：Donor から Acceptor に移動する速度 \\(k_F\\) ：Donor が吸収する速度 Chl(from) Chl(to) 移動効率（移動距離） b(F) a(A) 高 b(F) b(A) 中 a(F) a(A) 中 a(F) b(A) 低 幅 \\(L\\) の中の電子のエネルギー準位： \\(E_n = \\frac{1}{8m}\\left(\\frac{nh}{L&#94;{\\prime}}\\right)&#94;2\\) フェミルの黄金律 時間的に変化しない弱い相互作用（摂動）のある電子系が、あるエネルギー固有状態から別のエネルギー固有状態へ移る際の単位時間あたりの遷移確率は、摂動法（時間で展開）の最低次数として近似計算できる。 遷移速度 \\(k_T\\) は、エネルギー固有状態の単位時間あたりの遷移確率である。 $$\\Psi_{\\mathrm{Da}}\\Psi_{\\mathrm{Ab}}\\underset{k_T}{\\longrightarrow}\\Psi_{\\mathrm{Db}}\\Psi_{\\mathrm{Aa}}$$ Da: Active state of Donor Ab: Ground state of Acceptor 光合成の概要 水を分解して、電子を膜間に入れる。 光を用いて電子の酸化還元電位を上げる。 酸化還元電位を利用してチラコイド外のプロトンを内側に輸送する。 内側のプロトンのケミカルポテンシャルを利用してATPを合成する。 まとめ 共役長が長くなる と吸収波長は長くなり、可視光の利用が可能となる。 分子間距離が近いと エネルギー移動や電子移動 が起こる。電子移動の方向は、酸化還元電位に依存する。 エネルギーを 酸化還元電位 に交換する（逆も） 生物は、 多数のタンパク質が 上記1-3の原理を巧みに利用して、光化学反応（葉緑体内の光合成）や電子伝達（ミトコンドリア内）の機能を行う。 ATP を合成するF1,F0は高効率でATPを合成する。特に、F1は仕事効率が約100%である。 .prompt { /* This is for jupyter blog.*/ min-width: 0; /* This padding is tuned to match the padding on the CodeMirror editor. */ padding: 0em 0.4em 0em 0em; margin: 0px; font-family: monaco; } /*蛍光ペン(pink)*/ .marker-pink { color: #c45a5a; background: linear-gradient(transparent 70%, #ff66ff 60%); font-weight: bold; } /*蛍光ペン(blue) & hover info*/ .marker-info { color: #5C7DC4; background: linear-gradient(transparent 70%, #66FFCC 60%); font-weight: bold; position: relative; cursor: pointer; } .marker-info:hover:before { opacity: 1; z-index: 2; } .marker-info:before { content: attr(aria-label); opacity: 0; position: absolute; top: 30px; right: -90px; font-size: 14px; width: 300px; padding: 10px; color: #fff; background-color: #555; border-radius: 3px; pointer-events: none; } /* 枠囲み */ .frame { border: solid 1.0px #000000; padding: 0.5em 1em; margin: 2em 0; } /* 暗記用 question box */ span .qbox{ display: none; } span.qbox-wrapper:hover .qbox-default{ display: none; } span.qbox-wrapper:hover .qbox{ display: inline; } .qbox-wrapper{ font-weight: bold; padding: 5px 10px; border-radius: 5px; border: solid 2px #000000; margin: 5px } .qbox-wrapper:hover{ text-shadow: 0px 0px 6px rgba(255, 255, 255, 1); -webkit-box-shadow: 0px 5px 40px -10px rgba(0,0,0,0.57); -moz-box-shadow: 0px 5px 40px -10px rgba(0,0,0,0.57); transition: all 0.4s ease 0s; } /* 画像吹き出し */ .balloon { display: table; width: 100%; } .balloon_img { display: table-cell; vertical-align: middle; width: 50%; padding-right: 10px; } .balloon_comment { border: #83274e solid 4px; position: relative; background: #fff; padding: 12px; border-radius: 13px; display: block } .balloon_comment::before { content: \"\"; position: absolute; border-right: 23px solid #83274e; border-bottom: 20px solid transparent; border-top: 20px solid transparent; top: 30%; left: -23px; } .balloon_comment::after { content: \"\"; position: absolute; border-right: 24px solid #fff; border-bottom: 20px solid transparent; border-top: 20px solid transparent; top: 30%; left: -17px; } if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物物理学","url":"https://iwasakishuto.github.io/University/3A/生物物理学-6.html","loc":"https://iwasakishuto.github.io/University/3A/生物物理学-6.html"},{"title":"機械学習概論","text":"講師： 山崎俊彦 参考書： CG-ARTS協会発行「ディジタル画像処理」 参考書： R. Szeliski, Computer Vision Algorithms and Applications, Springer (PDF版はインターネット上で無料公開) In [1]: import numpy as np import matplotlib.pyplot as plt 教師付き学習(Supervised learning) 大量の教師データがあれば、DNNですごい性能を出せるので、今の研究の主流は以下。 transfer learning (転移学習) few-shot learning (一枚だけで汎化性能を得る。) zero-shot learning (文字の情報を用いて画像の識別を行う。) メタ学習 (どうやって学習すれば良いかを学ぶ。) Nearest Neighbor法 決定木(decision tree) Support Vector Machine(SVM) アンサンブル学習 Neural Network Nearest Neighbor法 In [2]: N = 150 ; K = 3 In [3]: data = np . concatenate ([ np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 0 , 0 ], cov = np . eye ( 2 ), size = int ( N / 3 )), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 1 , 5 ], cov = np . eye ( 2 ), size = int ( N / 3 )), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 3 , 2 ], cov = np . eye ( 2 ), size = int ( N / 3 )), ]) x , y = data . T In [4]: cls = np . concatenate ([ np . full ( shape = int ( N / 3 ), fill_value = 0 ), np . full ( shape = int ( N / 3 ), fill_value = 1 ), np . full ( shape = int ( N / 3 ), fill_value = 2 ), ]) In [5]: xmin , ymin = np . min ( data , axis = 0 ) xmax , ymax = np . max ( data , axis = 0 ) Xs , Ys = np . meshgrid ( np . linspace ( xmin , xmax , 100 ), np . linspace ( ymin , ymax , 100 )) XYs = np . c_ [ Xs . ravel (), Ys . ravel ()] In [6]: # Nearest Neighbor Zs = np . asarray ([ cls [ np . argmin ( np . sum ( np . square ( xy - data ), axis = 1 ))] for xy in XYs ], dtype = int ) . reshape ( Xs . shape ) In [7]: plt . figure ( figsize = ( 8 , 6 )) plt . scatter ( x , y , c = cls , s = 50 ) plt . pcolor ( Xs , Ys , Zs , alpha = 0.2 ) plt . title ( \"Nearest Neighbor\" ), plt . xlim ( xmin , xmax ), plt . ylim ( ymin , ymax ) plt . xticks ([]), plt . yticks ([]) plt . show () 決定木(decision tree) $M$ 個のクラスに分割したとして、 $$\\text{Information gain} = \\text{Entropy}(S) - \\left\\{\\text{Entropy}(S_1) + \\cdots + \\text{Entropy}(S_M)\\right\\}$$ が最大になるように条件を設定する。 In [8]: from kerasy.ML.tree import DecisionTreeClassifier In [9]: N = 150 ; K = 3 In [10]: data = np . concatenate ([ np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 0 , 0 ], cov = np . eye ( 2 ), size = int ( N / 3 )), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 1 , 5 ], cov = np . eye ( 2 ), size = int ( N / 3 )), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 3 , 2 ], cov = np . eye ( 2 ), size = int ( N / 3 )), ]) x , y = data . T In [11]: cls = np . concatenate ([ np . full ( shape = int ( N / 3 ), fill_value = 0 ), np . full ( shape = int ( N / 3 ), fill_value = 1 ), np . full ( shape = int ( N / 3 ), fill_value = 2 ), ]) In [12]: xmin , ymin = np . min ( data , axis = 0 ) xmax , ymax = np . max ( data , axis = 0 ) Xs , Ys = np . meshgrid ( np . linspace ( xmin , xmax , 100 ), np . linspace ( ymin , ymax , 100 )) XYs = np . c_ [ Xs . ravel (), Ys . ravel ()] In [13]: model = DecisionTreeClassifier ( criterion = \"gini\" , max_depth = 3 , random_state = 0 ) model . fit ( data , cls ) predictions = model . predict ( data ) In [14]: # Decision Tree Zs = model . predict ( XYs ) . reshape ( Xs . shape ) In [15]: fig = plt . figure ( figsize = ( 18 , 4 )) for i , seed in enumerate ([ 0 , 1 , 5 ]): ax = fig . add_subplot ( 1 , 3 , i + 1 ) model = DecisionTreeClassifier ( criterion = \"gini\" , max_depth = 3 , random_state = seed ) model . fit ( data , cls ) predictions = model . predict ( data ) Zs = model . predict ( XYs ) . reshape ( Xs . shape ) ax . scatter ( x , y , c = predictions , s = 50 ) ax . pcolor ( Xs , Ys , Zs , alpha = 0.2 ) ax . set_title ( f \"Decision Tree seed= {seed} \" ), ax . set_xlim ( xmin , xmax ), ax . set_ylim ( ymin , ymax ) ax . set_xticks ([]), ax . set_yticks ([]) plt . tight_layout () plt . show () Support Vector Machine(SVM) $$f(\\mathbf{x}) = \\mathbf{w}\\cdot\\mathbf{x} + \\mathbf{b} = \\mathbf{0}$$ $\\|\\mathbf{w}\\|$ を決定するためには、黄色の線上にある点(support vector)のみ寄与。SVMの重要なところは、通常 $$\\mathrm{Error}_{\\text{世の中全体}}>\\mathrm{Error}_{\\text{見たことのある世界}}$$ であるが、発明者 Vapnic が $$\\mathrm{Error}_{\\text{世の中全体}}\\leq\\mathrm{Error}_{\\text{見たことのある世界}} + \\alpha$$ を証明してしまった。なお、$\\alpha$ も $\\|\\mathbf{w}\\|$ の最小化で最小化できるため、$\\|\\mathbf{w}\\|$ の最小化をひたすら頑張るだけで良い。 ※ 実装は ここ アンサンブル学習 名前 説明 強学習器 bagging トレーニングデータをランダムにサンプリングして学習器 $f&#94;b(\\mathbf{x}),(b=1,2,\\ldots,B)$ を作る。 $$f(\\mathbf{x}) = \\frac{1}{B}\\sum_b&#94;Bf&#94;b(\\mathbf{x})$$ Random Forest (RF) 決定木 $f&#94;r(\\mathbf{x}),(r=1,2,\\ldots,R)$ をランダムに作る。木がたくさんあるので森(forest)になる。 $$f(\\mathbf{x}) = \\frac{1}{R}\\sum_r&#94;Rf&#94;r(\\mathbf{x})$$ boosting 弱学習器 $f&#94;t(\\mathbf{x})$ の精度に応じた重み付き多数決を行う。なお、$\\alpha$ の決め方はadaboostやXGboostなど様々ある。 $$f(\\mathbf{x}) = \\frac{1}{T}\\sum_t&#94;T\\alpha&#94;tf&#94;t(\\mathbf{x})$$ Neural Network パーセプトロン $\\mathbf{w}$ を法線と考えると、超平面のあっちとこっちを判定しているだけ＝SVMと同じ。 perceptronの学習アルゴリズムは、下記の流れで収束することが知られている。 重み（法線）ベクトルをランダムに設定 2クラス $0,1$ があったとして、training dataから順に取り出して、$y$ を出力してみる（平面のどちら側か） 合っていたら何もしない。間違っていたら $$ \\begin{cases} \\mathbf{w}\\longleftarrow\\mathbf{w} +\\rho \\mathbf{x} & (\\text{クラス1を0と誤判定した時})\\\\ \\mathbf{w}\\longleftarrow\\mathbf{w} -\\rho \\mathbf{x} & (\\text{クラス0を1と誤判定した時}) \\end{cases}$$ 2,3を全てのtraining dataに対して行う。 全てのtraining dataに対して正解が規定回数に達したら終了。それ以外の場合、2に戻る。 # Pythonでプログラム化すると以下。 while True : n_true = 0 for x , c in zip ( data , cls ): if c == 1 and sum ( w * x ) < 0 : w += rho * x elif c == 0 and sum ( w * x ) >= 0 : w -= rho * x else : n_true += 1 if n_true > N * true_rate : break In [16]: n_cls0 = 30 ; n_cls1 = 40 N = n_cls0 + n_cls1 In [17]: w = np . random . RandomState ( 0 ) . uniform ( size = 2 ) # Initialization. rho = 1e-3 # step size. true_rate = 0.9 In [18]: # train_x data = np . concatenate ([ np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 2 , 4 ], cov = np . eye ( 2 ), size = n_cls0 ), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 3 , 1 ], cov = np . eye ( 2 ), size = n_cls1 ), ]) X1 , X2 = data . T # train_t cls = np . concatenate ([ np . zeros ( shape = ( n_cls0 ), dtype = int ), np . ones ( shape = ( n_cls1 ), dtype = int ) ]) In [19]: while True : n_true = 0 for x , c in zip ( data , cls ): if c == 1 and sum ( w * x ) < 0 : w += rho * x elif c == 0 and sum ( w * x ) >= 0 : w -= rho * x else : n_true += 1 if n_true > N * true_rate : break In [20]: X = np . linspace ( min ( X1 ), max ( X2 ), 1000 ) Y = ( - w [ 0 ] / w [ 1 ]) * X In [21]: plt . scatter ( X1 , X2 , c = cls ) plt . plot ( X , Y , color = \"red\" ) plt . xlabel ( \"$x_1$\" , fontsize = 18 ), plt . ylabel ( \"$x_2$\" , fontsize = 18 ) plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"映像メディア工学","url":"https://iwasakishuto.github.io/University/3A/映像メディア工学-4.html","loc":"https://iwasakishuto.github.io/University/3A/映像メディア工学-4.html"},{"title":"生物統計論 第5回","text":"In [1]: import numpy as np import matplotlib.pyplot as plt Section5.1 Bayesian Model Comparison Overfitting In [2]: N = 15 Ms = [ 2 , 4 , 8 , 16 ] seed = 0 In [3]: # Training data. x = np . random . RandomState ( seed ) . uniform ( low = 0 , high = 1 , size = N ) Noise = np . random . RandomState ( seed ) . normal ( loc = 0 , scale = 0.1 , size = N ) t = np . sin ( 2 * np . pi * x ) + Noise In [4]: fig = plt . figure ( figsize = ( 12 , 8 )) for i , M in enumerate ( Ms ): ax = fig . add_subplot ( 2 , 2 , i + 1 ) # Training. X = np . array ([ x ** m for m in range ( M + 1 )]) . T w = np . linalg . solve ( X . T . dot ( X ), X . T . dot ( t )) # For Validation plot. Xs = np . linspace ( 0 , 1 , 1000 ) t_true = np . sin ( 2 * np . pi * Xs ) t_pred = w . dot ( np . array ([ Xs ** m for m in range ( M + 1 )])) # RSS(Residual Sum of Squares) residual = t - w . dot ( np . array ([ x ** m for m in range ( M + 1 )])) RSS = residual . T . dot ( residual ) # Plot. ax . plot ( Xs , t_true , color = \"black\" , label = \"$t=\\sin(2\\pi x)$\" ) ax . plot ( Xs , t_pred , color = \"red\" , label = f \"prediction ($M= {M} $)\" ) ax . scatter ( x , t , edgecolors = 'blue' , facecolor = \"white\" , label = \"train data\" ) ax . set_title ( f \"Results (RSS=$ {RSS:.3f} $,M=$ {M} $)\" ), ax . set_xlabel ( \"$x$\" ), ax . set_ylabel ( \"$t$\" ) ax . set_xlim ( 0 , 1 ), ax . set_ylim ( - 1.2 , 1.2 ) ax . legend () plt . tight_layout () plt . show () Varying Component Number In [5]: from kerasy.ML.MixedDistribution import MixedGaussian from kerasy.utils.data_generator import generateMultivariateNormal In [6]: N = 200 cls = 6 seed = 123 In [7]: data , means = generateMultivariateNormal ( cls = cls , N = N , scale = 8e-3 , same = False , seed = seed ) x , y = data . T mux , muy = means . T In [8]: # Background Color xmin , ymin = np . min ( data , axis = 0 ); xmax , ymax = np . max ( data , axis = 0 ) Xs , Ys = np . meshgrid ( np . linspace ( xmin , xmax , 100 ), np . linspace ( ymin , ymax , 100 )) XYs = np . c_ [ Xs . ravel (), Ys . ravel ()] In [9]: Nfig = cls col = 3 row = Nfig // col + 1 if Nfig % col != 0 else Nfig//col fig = plt . figure ( figsize = ( 6 * col , 4 * row )) Likelihoods = [] for i , K in enumerate ( range ( 1 , cls + 1 )): ax = fig . add_subplot ( row , col , i + 1 ) model = MixedGaussian ( K = K , random_state = seed ) model . fit ( data , span = 20 ) Z = model . predict ( XYs ) idx = np . argmax ( model . predict ( data ), axis = 1 ) Zs = np . sum ( Z , axis = 1 ) . reshape ( Xs . shape ) # Likelihood. likelihood = np . sum ( Z ) ax . scatter ( x , y , c = idx ) ax . pcolor ( Xs , Ys , Zs , alpha = 0.2 ) ax . set_xlim ( xmin , xmax ) ax . set_ylim ( ymin , ymax ) ax . set_title ( f \"K= {K} , {np.sum(Z):.1f}\" ) Likelihoods . append ( likelihood ) plt . tight_layout () plt . show () In [10]: fig = plt . figure ( figsize = ( 12 , 4 )) axL = fig . add_subplot ( 1 , 2 , 1 ) axL . scatter ( x , y , label = \"data\" ) axL . scatter ( mux , muy , label = \"mean\" , marker = \"*\" , color = \"red\" , s = 150 ) axL . set_title ( \"Training Data.\" ) axL . legend () axR = fig . add_subplot ( 1 , 2 , 2 ) axR . plot ( np . arange ( cls ) + 1 , Likelihoods ) axR . scatter ( np . arange ( cls ) + 1 , Likelihoods ) axR . set_xlabel ( \"num comp\" ) axR . set_ylabel ( \"likelihoods\" ) axR . set_title ( \"Log likelihood vs num comp\" , fontsize = 18 ) plt . tight_layout () plt . show () Cross Validation ※ Not Bayesian estimate the skill of a machine learning model on unseen data. use a limited sample in order to estimate how the model is expected to perform in general when used to make predictions on data not used during the training of the model. In [11]: n_fold = 5 size = N // n_fold Kmax = 30 In [12]: Likelihoods = [] CrossValidationLikelihoods = [] for i , K in enumerate ( range ( 1 , Kmax + 1 )): H = 0 for h in range ( n_fold ): mask = np . ones ( shape = N , dtype = bool ) mask [ h * size :( h + 1 ) * size ] = False model = MixedGaussian ( K = K , random_state = seed ) model . fit ( data [ mask ], span = 20 ) Z = model . predict ( data [ np . logical_not ( mask )]) H += np . sum ( Z ) model = MixedGaussian ( K = K , random_state = seed ) model . fit ( data , span = 20 ) Z = model . predict ( data ) Likelihoods . append ( np . sum ( Z )) CrossValidationLikelihoods . append ( H ) In [13]: fig = plt . figure ( figsize = ( 12 , 4 )) axL = fig . add_subplot ( 1 , 2 , 1 ) axL . plot ( np . arange ( Kmax ) + 1 , CrossValidationLikelihoods ) axL . scatter ( np . arange ( Kmax ) + 1 , CrossValidationLikelihoods ) axL . set_xlabel ( \"num comp\" ), axL . set_ylabel ( \"Cross Validation likelihoods\" ), axL . set_title ( \"Cross Validation Log likelihood vs num comp\" , fontsize = 18 ) axR = fig . add_subplot ( 1 , 2 , 2 ) axR . plot ( np . arange ( Kmax ) + 1 , Likelihoods ) axR . scatter ( np . arange ( Kmax ) + 1 , Likelihoods ) axR . set_xlabel ( \"num comp\" ), axR . set_ylabel ( \"likelihoods\" ), axR . set_title ( \"Log likelihood vs num comp\" , fontsize = 18 ) plt . tight_layout () plt . show () Cross Entropy of Prediction ※ Not Bayesian empirical distribution $D = \\left\\{\\mathbf{x}&#94;{(h)}|h=1,\\ldots,n\\right\\}$ $x\\sim\\mathrm{Emp}(D)$ $f_X(\\mathbf{X}) = \\frac{1}{n}\\sum_{h=1}&#94;n\\delta\\left(\\mathbf{x}-\\mathbf{x}&#94;{(h)}\\right)$ $\\mathbb{E}\\left(g(\\mathbf{x})\\right) = \\frac{1}{n}\\sum_{h=1}&#94;n\\int d\\mathbf{x}g(\\mathbf{x})\\delta\\left(\\mathbf{x}-\\mathbf{x}&#94;{(h)}\\right) = \\frac{1}{n}\\sum_{h=1}&#94;ng\\left(\\mathbf{x}&#94;{(h)}\\right)$ In [14]: seed = 0 N = 1000 In [15]: data = np . random . RandomState ( seed ) . normal ( size = N ) In [16]: Emp = dict ( zip ( data , np . zeros ( N ))) for x in data : Emp [ x ] += 1 / N In [17]: for X , Y in sorted ( Emp . items ()): plt . plot (( X , X ),( 0 , Y ), color = \"black\" , alpha = 0.1 ) plt . title ( \"Empirical distribution (Normal)\" ) plt . xlabel ( \"x\" ) plt . show () We can assume Empirical distribution as a true distribution . Cross Entropy $$ \\begin{aligned} H(D,\\boldsymbol{\\theta}) &= \\text{Cross Entropy between }f_{\\text{Emp}(D)} \\text{ and }f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right)\\\\ &= \\mathbb{E}_{\\text{Emp}(D)}\\left(-\\log f\\left(\\mathbf{X}|\\boldsymbol{\\theta}\\right)\\right)\\\\ &= -\\int f_{\\text{Emp}(D)}(\\mathbf{x})\\log f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right)d\\mathbf{x}\\\\ &= -\\frac{1}{n}\\sum_{h=1}&#94;n\\log f\\left(\\mathbf{x}&#94;{(h)}|\\boldsymbol{\\theta}\\right)\\\\ &= -\\bar{l}&#94;{(n)}\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right) \\end{aligned} $$ We can also say that: $$ \\begin{aligned} H(D,\\boldsymbol{\\theta}) &= -\\int f_{\\text{Emp}}(\\mathbf{x})\\log f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right)d\\mathbf{x}\\\\ &\\Rightarrow \\int f_{\\text{Emp}}(\\mathbf{x})\\log f_{\\text{Emp}}(\\mathbf{x})d\\mathbf{x} -\\int f_{\\text{Emp}}(\\mathbf{x})\\log f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right)d\\mathbf{x}\\\\ &= -\\int f_{\\text{Emp}}(\\mathbf{x})\\log\\left\\{\\frac{f_{\\text{Emp}}(\\mathbf{x})}{f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right)}\\right\\}d\\mathbf{x}\\\\ &= \\mathrm{KL}\\left(f_{\\text{Emp}}\\|f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right)\\right)\\\\ &= \\text{Kullback-Leibler divergence between}f_{\\text{Emp}(D)} \\text{ and }f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right) \\end{aligned} $$ Evidence Approximation ※ Yes Bayesian In a fully Bayesian treatment of the linear basis function model, we would introduce prior distributions over the hyperparameters $\\alpha$, and $\\beta$. $$ \\begin{aligned} p(t|\\mathbf{t},\\mathbf{X},\\mathbf{x},\\alpha,\\beta) &= \\int p(t|\\mathbf{w},\\mathbf{x},\\beta)p(\\mathbf{w}|\\mathbf{t},\\mathbf{X},\\alpha,\\beta)d\\mathbf{w}& (3.57)\\\\ &\\Rightarrow \\int p(t|\\mathbf{w},\\mathbf{x},\\beta)p(\\mathbf{w}|\\mathbf{t},\\mathbf{X},\\alpha,\\beta)p(\\alpha,\\beta|\\mathbf{t},\\mathbf{X})d\\mathbf{w}d\\alpha d\\beta& (3.74) \\end{aligned} $$ Marginalize with respect to these hyperparameters as well as with respect to the parameters $\\mathbf{w}$ to make predictions. Complete marginalization over all of these variables is analytically intractable. We will maximize $(3.74)$ in line with the framework of empirical Bayes (or type 2 maximum likelihood , generalized maximum likelihood , evidence approximation ) Obtain the marginal likelihoo function by first integrating over the parameters $\\mathbf{w}$ $$p(\\mathbf{t}|\\alpha,\\beta) = \\int p(\\mathbf{t}|\\mathbf{w},\\mathbf{X},\\beta)p(\\mathbf{w}|\\alpha)d\\mathbf{w}\\qquad (3.77)$$ Maximize $p(\\mathbf{t}|\\alpha,\\beta)$ with respect to $\\alpha$ and $\\beta$. In [18]: from kerasy.utils.preprocessing import PolynomialBaseTransformer from kerasy.utils.data_generator import generateSin , generateGausian from kerasy.ML.linear import EvidenceApproxBayesianRegression In [19]: N = 20 Ms = np . arange ( 10 ) xmin = 0 ; xmax = 1 seed = 0 In [20]: x_train , y_train = generateSin ( size = N , xmin = xmin , xmax = xmax , seed = seed ) _ , y_noise = generateGausian ( size = N , x = x_train , loc = 0 , scale = 0.15 , seed = seed ) y_train += 1 + y_noise In [21]: alpha = 100 beta = 100 In [22]: evidences = [] history = [] for M in Ms : phi = PolynomialBaseTransformer ( M = M ) x_train_features = phi . transform ( x_train ) model = EvidenceApproxBayesianRegression ( alpha = alpha , beta = beta , iter_max = 10000 ) model . fit ( x_train_features , y_train ) evidences . append ( model . evidence ( x_train_features , y_train )) history . append ( model ) best_M = np . argmax ( evidences [ 1 :]) + 1 best_model = history [ best_M ] In [23]: x_test = np . linspace ( xmin , xmax , 1000 ) phi = PolynomialBaseTransformer ( M = best_M ) x_test_features = phi . transform ( x_test ) y_test = 1 + np . sin ( 2 * np . pi * x_test ) y_pred , y_std = best_model . predict ( x_test_features ) In [24]: fig = plt . figure ( figsize = ( 12 , 4 )) axEVI = fig . add_subplot ( 1 , 2 , 1 ) axEVI . plot ( Ms , evidences ) axEVI . scatter ( Ms , evidences ) axEVI . set_title ( \"The relationship between 'model evidence' and $M$\" ), axEVI . set_xlabel ( \"$M$\" ), axEVI . set_ylabel ( \"$\\log({model\\ evidence})$\" , fontsize = 16 ) axBest = fig . add_subplot ( 1 , 2 , 2 ) axBest . plot ( x_test , y_test , color = \"black\" , label = \"$\\sin(2\\pi x)$\" ) axBest . plot ( x_test , y_pred , color = \"red\" , label = \"predict($\\mu$)\" ) axBest . fill_between ( x_test , y_pred - y_std , y_pred + y_std , color = \"pink\" , alpha = 0.5 ) axBest . scatter ( x_train , y_train , s = 50 , edgecolors = 'black' , facecolor = \"white\" , label = \"train data\" ) axBest . set_ylim ( - 0.5 , 2.5 ), axBest . legend (), axBest . set_title ( f \"Bayesian Linear Regression (M= {best_M} )\" ) plt . tight_layout () plt . show () In [25]: print ( \"[Best Parameter]\" ) print ( f \"M = {best_M} \" ) print ( f \"alpha = {best_model.alpha} \" ) print ( f \"beta = {best_model.beta} \" ) [Best Parameter] M = 3 alpha = 0.0025750535934692723 beta = 56.07833727501231 Section5.2 Markov Process Biological Diversity Single Origin of Life \"Nothing in Biology Makes Sense Except in the Light of Evolution\" C.T. Dobzhansky Stochastic Transcription (Stochasticity vs Regulation) Stochasticity in Development Stochastic Process Mathematical description of stochastic behaviors. data: $\\left\\{\\mathbf{X}_t|t=1,\\ldots,n\\right\\}$ Probability: $\\mathbb{P}\\left(\\mathbf{X}_{t_m} = \\mathbf{x}_{t_m},\\ldots,\\mathbf{X}_{t_2} = \\mathbf{x}_{t_2},\\mathbf{X}_{t_1} = \\mathbf{x}_{t_1}\\right)$ $\\omega$ is one of the random paths. $\\mathbf{X}_t$ is a map indicats which state random paths $\\omega$ is in at time $t$ Events $E$ is a constraint on the value of $\\mathbf{X}_t$ at some times. $P(E)$ is the probability if the random paths satisfy the constraint $E$. markov Process $$\\mathbb{P}\\left(\\mathbf{X}_t = \\mathbf{x}_t|\\mathbf{X}_{t-1} = \\mathbf{x}_{t-1},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right) = \\mathbb{P}\\left(\\mathbf{X}_t=\\mathbf{x}_t|\\mathbf{X}_{t-1}=\\mathbf{x_{t-1}}\\right)$$ Decomposition of Joint Distribution $$ \\begin{aligned} &\\mathbb{P}\\left(\\mathbf{X}_t = \\mathbf{x}_t,\\mathbf{X}_{t-1} = \\mathbf{x}_{t-1},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\\\ &=\\mathbb{P}\\left(\\mathbf{X}_t = \\mathbf{x}_t | \\mathbf{X}_{t-1} = \\mathbf{x}_{t-1},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\times\\mathbb{P}\\left(\\mathbf{X}_{t-1} = \\mathbf{x}_{t-1},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\\\ &=\\mathbb{P}\\left(\\mathbf{X}_t = \\mathbf{x}_t | \\mathbf{X}_{t-1} = \\mathbf{x}_{t-1},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\times \\mathbb{P}\\left(\\mathbf{X}_{t-1} = \\mathbf{x}_{t-1} | \\mathbf{X}_{t-2} = \\mathbf{x}_{t-2},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\times \\mathbb{P}\\left(\\mathbf{X}_{t-2} = \\mathbf{x}_{t-2},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\\\ &= \\mathbb{P}\\left(\\mathbf{X}_t = \\mathbf{x}_t | \\mathbf{X}_{t-1} = \\mathbf{x}_{t-1},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\times \\cdots \\times\\mathbb{P}\\left(\\mathbf{X}_2=\\mathbf{x}_2|\\mathbf{X}_1=\\mathbf{x}_1,\\mathbf{X}_0=\\mathbf{x}_0\\right)\\times \\mathbb{P}\\left(\\mathbf{X}_1=\\mathbf{x}_1|\\mathbf{X}_0=\\mathbf{x}_0\\right)\\times\\mathbb{P}\\left(\\mathbf{X}_0=\\mathbf{x}_0\\right)\\\\ &= \\mathbb{P}\\left(\\mathbf{X}_t = \\mathbf{x}_t | \\mathbf{X}_{t-1} = \\mathbf{x}_{t-1}\\right) \\times \\mathbb{P}\\left(\\mathbf{X}_{t-1} = \\mathbf{x}_{t-1} | \\mathbf{X}_{t-2} = \\mathbf{x}_{t-2}\\right)\\times \\cdots\\times\\mathbb{P}\\left(\\mathbf{X}_1=\\mathbf{x}_1|\\mathbf{X}_0=\\mathbf{x}_0\\right)\\times\\mathbb{P}\\left(\\mathbf{X}_0=\\mathbf{x}_0\\right)\\quad\\left(\\because \\text{Markov Process}\\right) \\end{aligned} $$ Transition Matrix (Assume Time Independence ): $$P = \\left\\{P_{ij}\\right\\} = \\left\\{\\mathbb{P}\\left(\\mathbf{X}_t=i|\\mathbf{X}_{t-1}=j\\right)\\right\\},\\quad P_{ij}\\geq0,\\sum_i P_{ij}=1$$ Computing transition probability Birth and Death process $$ P= \\left(\\begin{matrix}1-\\lambda_0&\\mu_1&0&0\\\\\\lambda_0&1-\\lambda_1-\\mu_1&\\mu_2&0\\\\0&\\lambda_1&1-\\lambda_2-\\mu_2&\\mu_3\\\\0&0&\\lambda_2&1-\\mu_3\\end{matrix}\\right) $$ $P = U\\Lambda U&#94;{-1}$: Eigen decomposition $P&#94;n = U\\Lambda&#94;n U&#94;{-1}$ In [26]: def makeRandomP ( N , seed = 123 ): lambdas = np . r_ [ np . random . RandomState ( seed ) . uniform ( low = 0 , high = 1 / N , size = N - 1 ), np . zeros ( shape = 1 )] mus = np . r_ [ np . zeros ( shape = 1 ), np . random . RandomState ( seed + 1 ) . uniform ( low = 0 , high = 1 / N , size = N - 1 )] P = np . zeros ( shape = ( N , N )) for i in range ( N ): P [ i , - 1 + i ] = mus [ i ]; P [ i , i ] = 1 - mus [ i ] - lambdas [ i ]; P [ i , 1 + i if 1 + i < N else 1 + i - N ] = lambdas [ i ] return P In [27]: def LongTimeBehaviors ( P , even = True ): inf = 50 if even else 51 eigenvals , eigenvecs = np . linalg . eig ( P ) Lambda = np . diag ( eigenvals ) eigenvecs_inv = np . linalg . inv ( eigenvecs ) Pn = np . dot ( eigenvecs , np . dot ( Lambda ** inf , eigenvecs_inv )) Pn = np . where ( Pn < 1e-5 , 0 , Pn ) return Pn example Periodic In [28]: P = np . array ([ [ 0 , 1 , 0 ], [ 1 / 2 , 0 , 1 / 2 ], [ 0 , 1 , 0 ] ]) In [29]: print ( f \"P&#94;2n: \\n {LongTimeBehaviors(P, even=True)} \\n \" ) print ( f \"P&#94;2n+1: \\n {LongTimeBehaviors(P, even=False)}\" ) P&#94;2n: [[0.5 0. 0.5] [0. 1. 0. ] [0.5 0. 0.5]] P&#94;2n+1: [[0. 1. 0. ] [0.5 0. 0.5] [0. 1. 0. ]] Reducible In [30]: P = np . array ([ [ 1 / 3 , 3 / 4 , 0 , 0 ], [ 2 / 3 , 1 / 4 , 0 , 0 ], [ 0 , 0 , 1 / 3 , 3 / 4 ], [ 0 , 0 , 2 / 3 , 1 / 4 ] ]) In [31]: LongTimeBehaviors ( P ) Out[31]: array([[0.52941176, 0.52941176, 0. , 0. ], [0.47058824, 0.47058824, 0. , 0. ], [0. , 0. , 0.52941176, 0.52941176], [0. , 0. , 0.47058824, 0.47058824]]) Absorbing In [32]: P = np . array ([ [ 1 , 1 / 2 , 0 , 0 ], [ 0 , 0 , 1 / 2 , 0 ], [ 0 , 1 / 2 , 0 , 0 ], [ 0 , 0 , 1 / 2 , 1 ] ]) In [33]: LongTimeBehaviors ( P ) Out[33]: array([[1. , 0.66666667, 0.33333333, 0. ], [0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. ], [0. , 0.33333333, 0.66666667, 1. ]]) Irreducible, Aperiodic In [34]: P = np . array ([ [ 2 / 3 , 1 / 12 , 0 ], [ 1 / 3 , 5 / 8 , 1 / 8 ], [ 0 , 7 / 24 , 7 / 8 ], ]) In [35]: LongTimeBehaviors ( P ) Out[35]: array([[0.06976762, 0.06976748, 0.06976741], [0.27906992, 0.2790698 , 0.27906974], [0.65116246, 0.65116272, 0.65116286]]) In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物統計論","url":"https://iwasakishuto.github.io/University/3A/生物統計論-5.html","loc":"https://iwasakishuto.github.io/University/3A/生物統計論-5.html"},{"title":"レポート課題4(10/24出題)","text":"Vmc9u7EGTCn70UwyxDxbcA==;;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-report4.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-report4.html"},{"title":"探索","text":"講師： 本多 淳也 参考書： エージェントアプローチ人工知能 第2版 参考書： イラストで学ぶ 人工知能概論 講義概要 状態空間 15パズル 迷路 コスト無しグラフの探索 コスト付きグラフの探索 ゲーム木の探索 状態空間 ありうる局面の１つ１つを 状態 と言う。 状態全体からなる集合を 状態空間 と言う。 目的： 初期状態から出発して、許される 状態遷移 を繰り返し、最終状態へたどり着くこと。 これは、 グラフ(graph) の 探索(search) 問題と等価 （ノードが状態に、エッジが状態遷移にそれぞれ対応する。） 15パズル ルール： 一度に動かせるのは1パネルのみ。 飽きますに隣のパネルをずらす操作のみ可能 目標： 「できるだけ少ない手数で」 与えられた配置から元の配置に戻すこと。 元に戻すことが不可能な問題を識別する。 迷路 目的：スタートからゴールまで誘導する。 状態(state) $s$：移動できる場所 行動(action) $a$：進む方向 コスト無しグラフの探索 用語 意味 オープンリスト(open list) これから探索するノードの候補リスト クローズドリスト(closed list) 探索が終わったノードのリスト キュー(queue) 先入れ先出し スタック(stack) 後入れ先出し 探索の基本アルゴリズム open_list = [ initial_state ] # オープンリストは初期化状態のみ closed_list = [] # クローズドリストは空 while ( open_list ): # オープンリストが空になるまで以下を繰り返す。 state = getOptimalState ( open_list ) # オープンリストから（何らかの基準で）状態sを取り出す。 closed_list . append ( state ) # sをクローズドリストに追加する。 if state == last_state : break # sが最終状態ならば探索終了 open_list += [ s for s in state . transibles () if s not in closed_list ] # sから遷移可能でまだクローズドリストに入っていない状態をオープンリストに追加する。 深さ優先探索 行き止まりに当たるまで進み、ゴールが見つからなかったら直近の分岐に戻って別の道を探す探索法。 メモリ使用量が少ない ゴールが近くにあっても、他の深い別れ道に迷い込むと時間がかかる ゴールが複数ある時、一番近くのものが見つかるとは限らない オープンリストは スタック （後入れ先出し） にする。 open_list = [ initial_state ] closed_list = [] while ( open_list ): state = open_list . pop ( 0 ) # オープンリストの先頭の状態sを取り出す。 closed_list . append ( state ) if state == last_state : break open_list . push ([ s for s in state . transibles () if s not in closed_list ]) # sから遷移可能でまだクローズドリストに入っていない状態をオープンリストの\"先頭に\"追加する。 幅優先探索 分かれ道に来たらそれぞれの道を一歩ずつ進み，ゴールが見つからなかったらそれぞれの道をもう一歩ずつ進む探索法。 ゴールが近くにある時、早く見つかる。 ゴールが複数ある時、一番近くのものが見つかる。 分かれ道での分岐数が多いとメモリ使用量が多い。 オープンリストは キュー （先入れ後出し） にする。 open_list = [ initial_state ] closed_list = [] while ( open_list ): state = open_list . pop ( - 1 ) # オープンリストの\"末尾\"の状態sを取り出す。 closed_list . append ( state ) if state == last_state : break open_list . push ([ s for s in state . transibles () if s not in closed_list ]) # sから遷移可能でまだクローズドリストに入っていない状態をオープンリストの\"先頭に\"追加する。 反復深化探索 深さに制限をつけて深さ優先探索を行い、徐々に深さを深くしていく探索法 ゴールが近くにある時、早く見つかる ゴールが複数ある時、一番近くのものが見つかる 同じノードを何度も訪れる（分岐が多いと影響小） まとめ 深さ優先探索・幅優先探索・反復深化探索は、グラフに関する特別な知識を使わずにオープンリストから状態を選択することから、 ブラインド探索(blined search) と呼ばれる。 # 探さ優先探索 幅優先探索 反復深化探索 完全性（必ず解が見つかるか） (completeness) $m$ が有限なら Yes Yes Yes 時間計算量 (time complexity) $\\mathrm{O}(b&#94;m)$ $\\mathrm{O}(b&#94;d)$ $\\mathrm{O}(b&#94;d)$ 空間計算量(space complexity) $\\mathrm{O}(bm)$ $\\mathrm{O}(b&#94;d)$ $\\mathrm{O}(bd)$ 最適性（一番近くの解が見つかるか） (optimality) Yes Yes Yes $b$：最大分岐数 $d$：一番浅い解の深さ $m$：最大の深さ コスト付きグラフの探索 各エッジに 遷移コスト が割り当てられている場合の最適遷移パス探索問題。 ブラインド探索 ：グラフに関する特別な知識を使わずにオープンリストから状態を選択。 貪欲探索(greedy search)：現在の状態からの遷移コストが最小の状態を選ぶ。 （深さ優先探索に対応） 最適探索(optimal search)：初期状態からの遷移コスト和が最小の状態を選ぶ。 （各コストが1だと幅優先探索になる。ダイクストラ法とも。） ヒューリスティック探索（最良優先探索, best-first search） ：グラフに関する何らかの知識を使ってオープンリストから適切と思われる状態を選択。 貪欲最良優先探索 $A&#94;{\\ast}$ 探索 貪欲最良優先探索 $\\hat{h}(s)$ を最小にする状態を選ぶ $h(s)$：$s$ から最終状態までの遷移コスト和の最小値 $\\hat{h}(s)$：$h(s)$ の推定（ヒューリスティック関数） 一度オープンリストに入ったの評価値更新は不要 ヒューリスティック関数の選び方： ユーザが 事前知識 により構築（例：直線距離） データから 機械学習 により自動構築 一般には完全性も最適性もないが、実用上は（そこそこ）うまくいくことが（それなりに）多い。 $A&#94;{\\ast}$ 探索(A-start search) $s$ を経由する場合の遷移コスト和の推定値 $\\left(\\hat{g}(s)+\\hat{h}(s)\\right)$ を最小にする状態を選ぶ。 $g(s)$：初期状態から $s$ までの遷移コスト和の最小値 $\\hat{g}(s)$：探索済みノードから $s$ に遷移する場合の最小値（ダイクストラ法と同じ） ノード $s$ を訪れると隣接ノードの $\\hat{g}(s&#94;{\\prime})$ が更新される。 $h(s)$：$s$ から最終状態までの遷移コスト和の最小値 $\\hat{h}(s)$：$h(s)$ のヒューリスティック推定値 最適経路上の $s$ ではいずれも $g(s)+h(s)$ が最小、経路外の点ではそれより大きい値をとることを利用 $\\forall s, 0\\leq\\hat{h}(s)\\leq h(s)$ が成り立つ時、$\\hat{h}(s)$ は 許容的(admissible) であるといい、この場合には $A&#94;{\\ast}$ 探索は最適性を持つ。 ※ 実装等は、 レポート課題 に記載。 In [1]: from kerasy.search.Astar import OptimalTransit In [2]: n = 3 m = 3 initial_str = \"2,-1,6,1,3,4,7,5,8\" last_str = \"1,2,3,4,5,6,7,8,-1\" In [3]: OptimalTransit ( n , m , initial_str , last_str , heuristic_method = \"Manhattan_distance\" , n_row = 5 ) n_transition = 9 ゲーム木の探索 2人のプレイヤーが交互に遷移先を決めるゲーム（ex. 将棋・囲碁・リバーシ・◯×など）における最適遷移探索問題 ミニマックス探索 自分は一番良い（点数を最大化する）手を選ぶ 相手は一番悪い（点数を最小化する）手を選ぶ アルファ・ベータ探索 ミニ・マックス探索では、全ての局面に対する点数を求める必要があり、時間がかかる。 不要な点数計算を省略することで効率化 $\\alpha$：max計算の際の下界値 $\\beta$：min計算の際の上界値 モンテカルロ木探索 アルファ・ベータ法を用いても、ゲーム木を深く探索するのは困難（$b&#94;d$ が $b&#94;{d/2}$ になる程度。） そこで、 ランダムに 手を打つ。 囲碁やスケジューリングなどで活用されている。 まとめ 広大な状態空間を効率よく探索したい コスト無しグラフの探索 コスト付きグラフの探索 ゲーム木の探索 膨大な状態空間の探索には，近似的な手法が有用 事前知識や機械学習によるヒューリスティック関数の構築 モンテカル 木探索 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-4.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-4.html"},{"title":"ガウシアンプロセスとベイズ最適化","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) In [1]: import numpy as np import matplotlib.pyplot as plt import seaborn as sns データ駆動科学とベイズ最適化 データ駆動科学では、データに基づいて、新たな知見・事柄を発見することが求められる 単に予測を行うだけでなく、それに基づいて「行動」を設計することが必要 これらは、「ベイズ最適化」の枠組みに乗ることが多い 概要 ベイズ線形回帰 ガウシアンプロセス ベイズ最適化 ベイズ線形回帰 線形回帰モデルのパラメータを 最尤推定 によって決める場合、 解こうとしている問題に合わせてモデルの複雑さを適切に決めることが必要 ↑は、単純に尤度を最大化するだけでは 過学習 を引き起こしてしまう。 データの一部を独立なテスト用データとして取っておく ことでモデルの汎化性能を評価できるが、この方法は 計算量が大きく 、 データの無駄遣い となり得る。 これらの問題に対処するため、線形回帰モデルをベイズ的に取り扱うことで最尤推定の過学習を回避するとともに 「訓練データだけからモデルの複雑さを自動的に決定する。」 概要 解こうとしている問題に沿った 尤度関数(likelihood function) （ $p(\\mathbf{t}|\\mathbf{X},\\mathbf{w})$ ） を定義する。 モデルパラメータの 事前分布(prior distribution) （ $p(\\mathbf{w})$ ） を、 尤度関数 の 共役事前分布(conjugate prior) の形で定義する。 ベイズの公式より、 事後分布(posterior distribution) は 事前分布 と 尤度関数 の積に比例する。 （ $p(\\mathbf{w}|\\mathbf{t},\\mathbf{X})\\propto p(\\mathbf{t}|\\mathbf{X},\\mathbf{w})\\cdot p(\\mathbf{w})$ ） あるパラメータ （ $\\mathbf{w}$ ） 下で入力 $\\mathbf{x}$ が与えられた時の確率分布 （ $p(t|\\mathbf{w},\\mathbf{x})$ ） を、3で求めた 事後分布 （ $p(\\mathbf{w}|\\mathbf{t},\\mathbf{X})$ ） で重み付けしながら 周辺化(marginalization) する （ $p(t|\\mathbf{t},\\mathbf{X},\\mathbf{x}) = \\int p(t|\\mathbf{w},\\mathbf{x})p(\\mathbf{w}|\\mathbf{t},\\mathbf{X})d\\mathbf{w}$ ） ことで、 予測分布(predivtive distribution) （ $p(t|\\mathbf{w},\\mathbf{x})$ ） を得る。 具体例 ※ $D$ 次元の説明変数 $\\mathbf{x}$ で一次元の目標変数 $t$ を線形回帰するモデルをベイズ的に取り扱う。 目標変数 $t$ が決定論的な関数 $y(\\mathbf{x},\\mathbf{w})$ と加法性のガウスノイズの和で与えられる場合を考える。 $$t = y(\\mathbf{x},\\mathbf{w}) + \\epsilon\\qquad (3.7)$$ ここで、$\\epsilon$ は期待値が $0$ で精度が $\\beta$ のガウス確率変数である。すなわち、以下で表すことができる。 $$p(t|\\mathbf{x},\\mathbf{w},\\beta) = \\mathcal{N}\\left(t|y(\\mathbf{x},\\mathbf{w}),\\beta&#94;{-1}\\right)\\qquad (3.8)$$ データ点が $(3.8)$ の分布から 独立に生成された と仮定すると、尤度関数を次のように表せる。 $$p(\\mathbf{t}|\\mathbf{X},\\mathbf{w},\\beta) = \\prod_{n=1}&#94;N\\mathcal{N}\\left(t_n|\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n),\\beta&#94;{-1}\\right)\\qquad (3.10)$$ モデルパラメータ $\\mathbf{w}$ の事前分布を導入する。 ここで、 $\\beta$ が既知 と仮定すると、上記の尤度関数の共役事前分布である、期待値 $\\mathbf{m}_0$ 共分散 $\\mathbf{S}_0$ を持つガウス分布で表すのが適当である。 $$p(\\mathbf{w}) = \\mathcal{N}(\\mathbf{w}|\\mathbf{m}_0,\\mathbf{S}_0)\\qquad (3.48)$$ ※ なお、$\\mathbf{w},\\beta$ の両方が未知である場合、共役事前分布は ガウス-ガンマ分布 隣、予測分布は スチューデントのt分布 となる。 ベイズの公式より、 事後分布は事前分布と尤度関数の積に比例する ので、これを解くことで事後分布を次の形で書き出すことができる。 （導出） $$ p(\\mathbf{w}|\\mathbf{t},\\mathbf{X},\\beta) = \\mathcal{N}(\\mathbf{w}|\\mathbf{m}_N,\\mathbf{S}_N) \\qquad (3.49)\\\\ \\begin{cases} \\mathbf{m}_N &= \\mathbf{S}_N\\left(\\mathbf{S}_0&#94;{-1}\\mathbf{m}_0 + \\beta\\boldsymbol{\\Phi}&#94;T\\mathbf{t}\\right) & (3.50)\\\\ \\mathbf{S}_N&#94;{-1} &= \\mathbf{S}_0&#94;{-1} + \\beta\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi} & (3.51) \\end{cases} $$ $\\mathbf{w}$ で周辺化することで、予測分布を求めるが、議論の簡単のために、 「モデルパラメータ $\\mathbf{w}$ の事前分布 $p(\\mathbf{w})$ が、単一の制度パラメータ $\\alpha$ で記述される期待値が $0$ の等方的ガウス分布である」 とする。 $$p(\\mathbf{w}|\\alpha) = \\mathcal{N}\\left(\\mathbf{w}|\\mathbf{0},\\alpha&#94;{-1}\\mathbf{I}\\right)\\qquad (3.52)$$ この時、上記の $\\mathbf{w}$ の事後分布 $(3.49)$ の形は変わらず、$\\mathbf{m}_N,\\mathbf{S}_N$ の値が $$ \\begin{cases} \\mathbf{m}_N &= \\beta\\mathbf{S}_N\\boldsymbol{\\Phi}&#94;T\\mathbf{t} & (3.53)\\\\ \\mathbf{S}_N&#94;{-1} &= \\alpha\\mathbf{I} + \\beta\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi} & (3.54) \\end{cases} $$ となる。この条件下で周辺化すると、以下の結果を得る。 （導出） $$ \\begin{aligned} p(t|\\mathbf{t},\\mathbf{X},\\mathbf{x},\\alpha,\\beta) &= \\int p(t|\\mathbf{w},\\mathbf{x},\\beta)p(\\mathbf{w}|\\mathbf{t},\\mathbf{X},\\alpha,\\beta)d\\mathbf{w}& (3.57)\\\\ &= \\mathcal{N}\\left(t|\\mathbf{m}_N&#94;T\\phi(\\mathbf{x}),\\sigma_N&#94;2(\\mathbf{x})\\right) & (3.58)\\\\ \\sigma_N&#94;2(\\mathbf{x}) &= \\frac{1}{\\beta} + \\phi(\\mathbf{x})&#94;T\\mathbf{S}\\phi(\\mathbf{x}) & (3.59) \\end{aligned} $$ ※ ここで、$(3.59)$ の第1項はデータに含まれるノイズを、第2項は $\\mathbf{w}$ に関する不確かさを反映している。 事後分布の計算の導出過程 $$ \\begin{aligned} \\text{likelihood function : } p(\\mathbf{t}|\\mathbf{X},\\mathbf{w},\\beta) &= \\prod_{n=1}&#94;N\\mathcal{N}\\left(t_n|\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n),\\beta&#94;{-1}\\right)& (3.10)\\\\ \\text{prior distribution : } p(\\mathbf{w}) &= \\mathcal{N}(\\mathbf{w}|\\mathbf{m}_0,\\mathbf{S}_0)& (3.48)\\\\ \\text{posterior distribution : } p(\\mathbf{w}|\\mathbf{t},\\mathbf{X},\\beta) &= \\mathcal{N}(\\mathbf{w}|\\mathbf{m}_N,\\mathbf{S}_N) & (3.49)\\\\ \\mathbf{m}_N &= \\mathbf{S}_N\\left(\\mathbf{S}_0&#94;{-1}\\mathbf{m}_0 + \\beta\\boldsymbol{\\Phi}&#94;T\\mathbf{t}\\right) & (3.50)\\\\ \\mathbf{S}_N&#94;{-1} &= \\mathbf{S}_0&#94;{-1} + \\beta\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi} & (3.51)\\\\ \\mathcal{N}(x|\\mu,\\sigma&#94;2) &= \\frac{1}{\\left(2\\pi\\sigma&#94;2\\right)&#94;{1/2}}\\exp\\left\\{-\\frac{1}{2\\sigma&#94;2}(x-\\mu)&#94;2\\right\\} & (2.42)\\\\ \\mathcal{N}(\\mathbf{x}|\\boldsymbol{\\mu},\\boldsymbol{\\Sigma}) &= \\frac{1}{(2\\pi)&#94;{D/2}}\\frac{1}{|\\boldsymbol{\\Sigma}|&#94;{1/2}}\\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{x}-\\boldsymbol{\\mu}\\right)&#94;T\\boldsymbol{\\Sigma}&#94;{-1}\\left(\\mathbf{x}-\\boldsymbol{\\mu}\\right)\\right\\} & (2.43) \\end{aligned} $$ $$ \\begin{aligned} p(\\mathbf{w}|\\mathbf{t},\\mathbf{X},\\beta) &\\propto p(\\mathbf{t}|\\mathbf{X},\\mathbf{w},\\beta) p(\\mathbf{w}) \\\\ &=\\prod_{n=1}&#94;N\\mathcal{N}\\left(t_n|\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n),\\beta&#94;{-1}\\right)\\mathcal{N}(\\mathbf{w}|\\mathbf{m}_0,\\mathbf{S}_0)\\\\ &\\propto\\prod_{n=1}&#94;N\\exp\\left\\{-\\frac{\\beta}{2}\\left(t_n-\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n)\\right)&#94;2\\right\\}\\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)&#94;T\\mathbf{S}_0&#94;{-1}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)\\right\\} \\\\ &=\\exp\\left\\{-\\frac{\\beta}{2}\\sum_{n=1}&#94;N\\left(t_n-\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n)\\right)&#94;2\\right\\}\\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)&#94;T\\mathbf{S}_0&#94;{-1}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)\\right\\} \\\\ &= \\exp\\left\\{-\\frac{\\beta}{2}\\left( \\begin{array}{c}t_1 - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_1)\\\\ t_2 - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_2) \\\\ \\vdots \\\\ t_N - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_N) \\end{array} \\right)&#94;T\\left( \\begin{array}{c}t_1 - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_1)\\\\ t_2 - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_2) \\\\ \\vdots \\\\ t_N - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_N) \\end{array} \\right) \\right\\}\\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)&#94;T\\mathbf{S}_0&#94;{-1}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)\\right\\} \\\\ &= \\exp\\left\\{-\\frac{\\beta}{2}\\left(\\mathbf{t}-\\boldsymbol{\\Phi}\\mathbf{w}\\right)&#94;T\\left(\\mathbf{t}-\\boldsymbol{\\Phi}\\mathbf{w}\\right)\\right\\}\\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)&#94;T\\mathbf{S}_0&#94;{-1}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)\\right\\}\\\\ &= \\exp\\left\\{ -\\frac{1}{2} \\left(\\beta\\mathbf{t}&#94;T\\mathbf{t} - \\beta\\mathbf{t}&#94;T\\boldsymbol{\\Phi}\\mathbf{w} - \\beta\\mathbf{w}&#94;T\\boldsymbol{\\Phi}&#94;T\\mathbf{t} + \\beta\\mathbf{w}&#94;T\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi}\\mathbf{w} + \\mathbf{w}&#94;T\\mathbf{S}_0&#94;{-1}\\mathbf{w} - \\mathbf{w}&#94;T\\mathbf{S}&#94;{-1}_0\\mathbf{m}_0 - \\mathbf{m}_0&#94;T\\mathbf{S}&#94;{-1}_0\\mathbf{w} + \\mathbf{m}_0&#94;T\\mathbf{S}&#94;{-1}_0\\mathbf{m}_0\\right)\\right\\}\\\\ &= \\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{w}&#94;T\\left(\\beta\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi} + \\mathbf{S}&#94;{-1}_0\\right)\\mathbf{w} - \\mathbf{w}&#94;T\\left(\\beta\\boldsymbol{\\Phi}&#94;T\\mathbf{t} + \\mathbf{S}&#94;{-1}_0\\mathbf{m}_0\\right) - \\left(\\beta\\mathbf{t}&#94;T\\boldsymbol{\\Phi} + \\mathbf{m}_0\\mathbf{S}&#94;{-1}_0\\right)\\mathbf{w} + \\left(\\beta\\mathbf{t}&#94;T\\mathbf{t} + \\mathbf{m_0}&#94;T\\mathbf{S}&#94;{-1}_0\\mathbf{m}_0\\right)\\right)\\right\\} \\\\ &=\\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{w} - \\mathbf{S}_N\\left(\\mathbf{S}_0&#94;{-1}\\mathbf{m}_0 + \\beta\\boldsymbol{\\Phi}&#94;T\\mathbf{t}\\right)\\right)&#94;T\\mathbf{S}_N&#94;{-1}\\left(\\mathbf{w} - \\mathbf{S}_N\\left(\\mathbf{S}_0&#94;{-1}\\mathbf{m}_0 + \\beta\\boldsymbol{\\Phi}&#94;T\\mathbf{t}\\right)\\right) + \\mathrm{C} \\right\\}\\\\ &\\propto\\mathcal{N}(\\mathbf{w}|\\mathbf{m}_N,\\mathbf{S}_N)\\\\ &\\begin{cases} \\mathbf{m}_N &= \\mathbf{S}_N\\left(\\mathbf{S}_0&#94;{-1}\\mathbf{m}_0 + \\beta\\boldsymbol{\\Phi}&#94;T\\mathbf{t}\\right) & (3.50)\\\\ \\mathbf{S}_N&#94;{-1} &= \\mathbf{S}_0&#94;{-1} + \\beta\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi} & (3.51)\\\\\\end{cases} \\end{aligned}\\\\ $$ 周辺化計算の導出過程 以下の「ガウス分布の周辺分布と条件付き分布の関係」の $(2.115)$ の結果を用いる。 $\\mathbf{x}$ の周辺ガウス分布と、$\\mathbf{x}$ が与えられた時の $\\mathbf{y}$ の条件付きガウス分布が次式で与えられたとする。 $$ \\begin{aligned} p(\\mathbf{x}) &=\\mathcal{N}\\left(\\mathbf{x} | \\boldsymbol{\\mu}, \\mathbf{\\Lambda}&#94;{-1}\\right) & (2.113)\\\\ p(\\mathbf{y} | \\mathbf{x}) &=\\mathcal{N}\\left(\\mathbf{y} | \\mathbf{A} \\mathbf{x}+\\mathbf{b}, \\mathbf{L}&#94;{-1}\\right) & (2.114)\\end{aligned} $$ この時、$\\mathbf{y}$ の周辺分布と、$\\mathbf{y}$ が与えられた時の $\\mathbf{x}$ の条件付き分布は $$ \\begin{aligned} p(\\mathbf{y}) &=\\mathcal{N}\\left(\\mathbf{y} | \\mathbf{A} \\boldsymbol{\\mu}+\\mathbf{b}, \\mathbf{L}&#94;{-1}+\\mathbf{A} \\mathbf{\\Lambda}&#94;{-1} \\mathbf{A}&#94;{\\mathrm{T}}\\right) & (2.115)\\\\ p(\\mathbf{x} | \\mathbf{y}) &=\\mathcal{N}\\left(\\mathbf{x} | \\mathbf{\\Sigma}\\left\\{\\mathbf{A}&#94;{\\mathrm{T}} \\mathbf{L}(\\mathbf{y}-\\mathbf{b})+\\mathbf{\\Lambda} \\boldsymbol{\\mu}\\right\\}, \\mathbf{\\Sigma}\\right) & (2.116) \\end{aligned} $$ で与えられる。ただし、 $$\\mathbf{\\Sigma} = \\left(\\mathbf{\\Lambda} + \\mathbf{A}&#94;T\\mathbf{LA}\\right)&#94;{-1}\\qquad (2.117)$$ である。 実装 In [2]: from kerasy.ML.linear import BayesianLinearRegression from kerasy.utils.preprocessing import GaussianBaseTransformer from kerasy.utils.data_generator import generateSin , generateGausian In [3]: N = 25 ; D = 1 ; M = 25 xmin = 0 ; xmax = 1 seed = 10 In [4]: alpha = 1 beta = 25 In [5]: x_test = np . linspace ( xmin , xmax , 1000 ) y_test = np . sin ( 2 * np . pi * x_test ) x_train , y_train = generateSin ( size = N , xmin = xmin , xmax = xmax , seed = seed ) _ , y_noise = generateGausian ( size = N , x = x_train , loc = 0 , scale = 1 / beta , seed = seed ) y_train += y_noise In [6]: # transform mu = np . linspace ( xmin , xmax , M ); sigma = 0.1 phi = GaussianBaseTransformer ( mu = mu , sigma = sigma ) x_train_features = phi . transform ( x_train ) x_test_features = phi . transform ( x_test ) In [7]: random_idx = np . random . RandomState ( seed ) . choice ( N , N ) In [8]: fig = plt . figure ( figsize = ( 16 , 8 )) for i , n in enumerate ([ 1 , 2 , 4 , 25 ]): ax = fig . add_subplot ( 2 , 2 , i + 1 ) model = BayesianLinearRegression ( alpha = alpha , beta = beta ) model . fit ( x_train_features [ random_idx [: n ]], y_train [ random_idx [: n ]]) y_pred , y_std = model . predict ( x_test_features ) ax . plot ( x_test , y_test , color = \"black\" , label = \"$\\sin(2\\pi x)$\" ) ax . plot ( x_test , y_pred , color = \"red\" , label = \"predict($\\mu$)\" ) ax . fill_between ( x_test , y_pred - y_std , y_pred + y_std , color = \"pink\" , alpha = 0.5 ) ax . scatter ( x_train [ random_idx [: n ]], y_train [ random_idx [: n ]], s = 150 , edgecolors = 'black' , facecolor = \"white\" , label = \"train data\" ) ax . set_ylim ( - 1.5 , 1.5 ), ax . legend (), ax . set_title ( f \"Bayesian Linear Regression (N= {n} )\" ) plt . tight_layout () plt . show () ガウシアンプロセス 回帰分析のための カーネル法 テストサンプルに対して、 予測値だけでなく、予測分散も与えることができる。 線形回帰のモデルは、以下で表されていた。 $$y(\\mathbf{x},\\mathbf{w}) = \\mathbf{w}&#94;T\\phi(\\mathbf{x})\\qquad (3.3)$$ この結果に、ベイズ線形回帰の結果 $(3.53)$ を代入すると、 $$ \\begin{aligned} y(\\mathbf{x},\\mathbf{m}_N) &= \\mathbf{m}_N\\phi(\\mathbf{x}) = \\beta\\phi(\\mathbf{x})&#94;T\\mathbf{S}_N\\boldsymbol{\\Phi}&#94;T\\mathbf{t} \\\\ &= \\sum_{n=1}&#94;N\\beta\\phi(\\mathbf{x})&#94;T\\mathbf{S}_N\\phi(\\mathbf{x}_n)t_n & (3.60)\\\\ \\mathbf{S}_N&#94;{-1} &= \\mathbf{S}_0&#94;{-1} + \\beta\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi} & (3.51) \\end{aligned} $$ したがって、点 $\\mathbf{x}$ での予測分布の平均は訓練データの目標変数 $t_n$ の線型結合で与えられるので、 $$ \\begin{aligned} y(\\mathbf{x},\\mathbf{m}_N) &= \\sum_{n=1}&#94;Nk(\\mathbf{x}, \\mathbf{x}_n)t_n & (3.61)\\\\ k(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}) &= \\beta\\phi(\\mathbf{x})&#94;T\\mathbf{S}_N\\phi(\\mathbf{x}&#94;{\\prime}) & (3.62)\\\\ &= \\left(\\beta&#94;{1/2}\\mathbf{S}_N&#94;{1/2}\\phi(\\mathbf{x})\\right)&#94;T\\left(\\beta&#94;{1/2}\\mathbf{S}_N&#94;{1/2}\\phi(\\mathbf{x})\\right) & (3.65) \\end{aligned} $$ とかける。なお、$k(\\mathbf{x}, \\mathbf{x}&#94;{\\prime})$ を 平滑化行列(smoother matrix) 、または 等価カーネル(equivalent kernel) と呼ぶ。（$(3.65)$ から、等価カーネルが通常のカーネル関数が満たすべき性質を満たしていることがわかる。） また、訓練データの目標値の線型結合を取ることで予測を行う上記のような回帰関数を 線形平滑器(linear smoother) と呼ぶ。 In [9]: from kerasy.utils.preprocessing import GaussianBaseTransformer , SigmoidBaseTransformer , PolynomialBaseTransformer In [10]: X = np . linspace ( - 1 , 1 , 200 ) M = 15 mu = np . linspace ( - 0.9 , 0.9 , M ); sigma = 0.1 gausian_phi = GaussianBaseTransformer ( mu = mu , sigma = sigma ) In [11]: def mkSmootherMatrix ( X , phi , alpha = 1 , beta = 25 ): X_feature = phi . transform ( X ) N , M = X_feature . shape SN = np . linalg . inv ( alpha * np . eye ( M ) + beta * X_feature . T . dot ( X_feature )) K = beta * np . dot ( X_feature , np . dot ( SN , X_feature . T )) return K In [12]: K = mkSmootherMatrix ( X , gausian_phi ) In [13]: SP = [ 30 , 120 , 150 ] colors = [ \"red\" , \"salmon\" , \"pink\" ] In [14]: fig = plt . figure ( figsize = ( 12 , 6 )) axKernel = plt . subplot2grid (( 3 , 2 ), ( 0 , 1 ), rowspan = 3 ) axKernel = sns . heatmap ( K , vmin = np . min ( K ), vmax = np . max ( K ), cmap = \"jet\" , cbar = False , square = True , ax = axKernel ) axKernel . set_xticks ([]), axKernel . set_yticks ([]) axKernel . set_xlabel ( \"$x$\" , fontsize = 18 ), axKernel . set_ylabel ( \"$x&#94;{\\prime}$\" , fontsize = 18 ) for i in range ( 3 ): axL = plt . subplot2grid (( 3 , 2 ), ( i , 0 )) axL . set_facecolor ( 'lightcyan' ) axL . plot ( K [ SP [ i ]], color = colors [ i ], linewidth = 4 ) axL . set_xticks ([]), axL . set_yticks ([]) axKernel . axhline ( SP [ i ], color = colors [ i ], linewidth = 10 , alpha = 0.7 ) plt . tight_layout () plt . show () In [15]: Transformers = [ ( GaussianBaseTransformer , mu ), ( SigmoidBaseTransformer , mu ), ( PolynomialBaseTransformer , 10 ), ] In [16]: fig = plt . figure ( figsize = ( 12 , 4 )) for i ,( phi_func , param ) in enumerate ( Transformers ): ax = fig . add_subplot ( 1 , 3 , i + 1 ) phi = phi_func ( param ) K = mkSmootherMatrix ( X , phi ) ax . plot ( K [ 100 ], color = \"blue\" ) ax . scatter ( 100 , 0 , color = \"red\" , marker = \"x\" , s = 150 , label = \"$x&#94;{\\prime}$\" ) ax . set_xticks ([]), ax . set_yticks ([]), ax . set_title ( f \"$k(x,x')$: {phi.__name__} \" , fontsize = 16 ) ax . set_xlabel ( \"$x$\" , fontsize = 18 ), ax . legend () plt . tight_layout () plt . show () カーネル関数の例 を見ればわかるよう、 対応する基底関数が局所的でないにも関わらず、等価カーネルは $x&#94;{\\prime}$ に関して局所的な関数となっていることがわかる！！ また、$y(\\mathbf{x})$ と $y(\\mathbf{x}&#94;{\\prime})$ の共分散を考えると、 $$ \\begin{aligned} \\mathrm{cov}\\left[y(\\mathbf{x}),y(\\mathbf{x}&#94;{\\prime})\\right] &= \\mathrm{cov}\\left[\\phi(\\mathbf{x})&#94;T\\mathbf{w}, \\mathbf{w}&#94;T\\phi(\\mathbf{x})\\right]\\\\ &= \\phi(\\mathbf{x})&#94;T\\mathbf{S}_N\\phi(\\mathbf{x}&#94;{\\prime}) = \\beta&#94;{-1}k(\\mathbf{x},\\mathbf{x}&#94;{\\prime})\\quad(3.63) \\end{aligned} $$ となる。ここで、上述の等価カーネルの形状を考えると、 近接での予測平均は互いに強い相関を持っている一方で、より離れた点の組では相関は小さくなることがわかる。 ベイズ線形回帰 のように基底関数の集合を明示的に定義するのではなく、局所的なカーネルを直接定義し、観測された訓練集合が与えられた時、この局所的なカーネルを用いて新たな入力ベクトル $\\mathbf{x}$ に対する予測値を求めることができる。 この定式化から、回帰（と分類）に対する実用的な枠組みである ガウス過程(Gaussian process) が得られる。 ベイズ最適化 $M$ 個の候補点があり、この中から最大の観測値を持つものを探したい。 できるだけ実験数を少なくしたい。 $N$ 個の候補点に対する実験が終わった。$M-N$ 個の候補点が残っている。 次の $N+1$ 個目の候補点を最適に選びたい。 $N$ 個の化合物から予測モデルを学習し、それを用いて、残りの候補点を スコアリング し決定。 Maximum Probability of Improvement: Current Maxを超える確率。 Maximum Expected Improvement: (観測値-Current Max)の期待値。 Thompson Sampling: 残りのM-N個候補点に対して、条件つき結合確率からサンプリングを行い、そのサンプリング値をスコアとする。 In [17]: xmin = 0 ; xmax = 1 N = 1000 ; M = 25 seed = 1 In [18]: alpha = 1 beta = 25 In [19]: X = np . linspace ( xmin , xmax , N ) Y = 5e1 * X * ( X - 0.2 ) * ( X - 0.3 ) * ( X - 0.7 ) * ( X - 1 ) _ , noise = generateGausian ( size = 1000 , x = X , loc = 0 , scale = 1 / beta , seed = seed ) Y_ob = Y + noise In [20]: mu = np . linspace ( xmin , xmax , M ) sigma = 0.1 phi = GaussianBaseTransformer ( mu = mu , sigma = sigma ) In [21]: X_features = phi . transform ( X ) In [22]: fig = plt . figure ( figsize = ( 18 , 8 )) idx = np . random . RandomState ( seed ) . choice ( N , 2 ) # Initialization. next_idx = idx for i , _ in enumerate ( range ( 12 )): ax = fig . add_subplot ( 3 , 4 , i + 1 ) model = BayesianLinearRegression ( alpha = alpha , beta = beta ) model . fit ( X_features [ idx ], Y_ob [ idx ]) y_pred , y_std = model . predict ( X_features ) current_max = np . max ( Y_ob [ idx ]) max_improve_id = np . argmax ( y_pred ) ax . plot ( X , Y , color = \"black\" , label = \"True distribution\" ) ax . plot ( X , y_pred , color = \"red\" , label = \"predict($\\mu$)\" ) ax . fill_between ( X , y_pred - y_std , y_pred + y_std , color = \"pink\" , alpha = 0.5 ) ax . scatter ( X [ idx ], Y_ob [ idx ], s = 50 , edgecolors = 'black' , facecolor = \"white\" , label = \"Observation\" ) ax . scatter ( X [ next_idx ], Y_ob [ next_idx ], s = 150 , edgecolors = 'black' , facecolor = \"black\" , label = \"New Obsevation\" ) ax . set_xlabel ( \"Explanatory Variable\" ), ax . set_ylabel ( \"Measured Value\" ), ax . set_title ( f \"N={len(idx)}, Max= {current_max:.3f} \" ) ax . set_ylim ( - 0.5 , 0.3 ), ax . set_xticks ([]), ax . set_yticks ([]) ax . axhline ( current_max , color = \"green\" , label = \"Current Maximum\" ) ax . axvline ( np . max ( X [ max_improve_id ]), color = \"blue\" , label = \"Maximum Probability of Improvement\" ) next_idx = max_improve_id if np . random . uniform () > 0.5 else np . random . choice ( N , 1 ) idx = np . r_ [ idx , next_idx ] ax . legend () plt . tight_layout () plt . show () おわりに（データ駆動科学） データ駆動科学では、データに基づいて、新たな知見・事柄を発見することが求められる。 単に予測を行うだけでなく、それに基づいて次の「行動」を設計することが必要 これらは、ベイズ最適化の枠組みに乗ることが多い。 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-4.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-4.html"},{"title":"特徴選択","text":"講師： 山崎俊彦 参考書： CG-ARTS協会発行「ディジタル画像処理」 参考書： R. Szeliski, Computer Vision Algorithms and Applications, Springer (PDF版はインターネット上で無料公開) In [1]: import numpy as np import matplotlib.pyplot as plt 主成分分析(PCA) In [2]: N = 20 seed = 0 In [3]: X = np . linspace ( 0 , 1 , N ) Y = X + np . random . RandomState ( N ) . normal ( loc = 0 , scale = 5e-2 , size = N ) data = np . vstack (( X , Y )) In [4]: def Rotate ( x , radian ): A = np . array ([ [ np . cos ( radian ), - np . sin ( radian )], [ np . sin ( radian ), np . cos ( radian )] ]) return np . dot ( A , data ) In [5]: fig = plt . figure ( figsize = ( 10 , 4 )) ax = fig . add_subplot ( 1 , 2 , 1 ) ax . scatter ( X , Y , color = \"black\" ), ax . set_title ( \"Original\" ) X_tra , Y_tra = Rotate ( data , radian =- 1 / 4 * np . pi ) ax = fig . add_subplot ( 1 , 2 , 2 ) ax . scatter ( X_tra , Y_tra , color = \"red\" ), ax . set_title ( \"Rotated\" ), ax . set_ylim ( - 1 / 2 * np . sqrt ( 2 ), 1 / 2 * np . sqrt ( 2 )) plt . tight_layout () plt . show () $2$ 次元空間で左上図のようなデータがあったとする。この時、このデータを表現するのに $(x,y)$ の二次元が必要だろうか？ データ全体を右に $1/4\\pi$ 回転させると、右上図のようなデータれるとなる。この場合、$y&#94;{\\prime}$ 軸方向はノイズとみなせ、$x&#94;{\\prime}$ 軸のみでデータを表現していると言える。 この例のように、$K$ 次元のデータであっても、で０他の偏りによって $M( こういった場合に、 「$M$ 方向の軸をどのように決めるか？」 、 「$M$ をどうやって決めるか？」 などが問題となる。 ※ 詳しくは 主成分分析(PCA) に記載。 線形判別分析(LDA) 入力ベクトル $\\mathbf{x}$ を $K$ クラスの一つ $C_k$ に割り当てる関数である識別（決定面が超平面となるとき、 線形識別(linear discriminant) ）を、 「次元の削減」 という観点から捉えることができる。 2クラス分類 $D$ 次元入力ベクトルを得て、それを以下の式で $1$ 次元に射影するとする。 $$y = \\mathbf{w}&#94;T\\mathbf{x}\\qquad (4.20)$$ ある閾値を設定し、$y\\geq-w_0$ の場合クラス $C_1$、そうでない場合クラス $C_2$ であるとすると、 標準的な線形分類器が得られる。 一般に、$D$ 次元から $1$ 次元へ射影することによって相当量の情報量の損失を発生させる。 重みベクトル $\\mathbf{w}$ の要素を調整することで、 クラスの分離を最大にする射影を選択したい。 $\\mathbf{w}$ 上へ射影された際のクラス分離度の最も簡単な測定法は、 射影されたクラスの平均の分離度（以下の式） を見ることである。 $$m_2-m_1 = \\mathbf{w}&#94;T\\left(\\mathbf{m}_2-\\mathbf{m}_1\\right) = \\mathbf{w}&#94;T\\left(\\frac{1}{N_2}\\sum_{n\\in C_2}\\mathbf{x}_n -\\frac{1}{N_1}\\sum_{n\\in C_1}\\mathbf{x}_n\\right)\\qquad (4.21)\\ \\&\\ (4.22)$$ 上の式は $\\mathbf{w}$ の値を大きくすればいくらでも大きな値にすることができるので、 $\\mathbf{w}$ が単位長である（$\\sum_i w_i&#94;2 = 1$）という制約を加える。 ラグランジュ乗数を用いてこれを解くと、$\\mathbf{w}\\propto(\\mathbf{m}_2-\\mathbf{m}_1)$ が得られる。 クラス分布の非対角な共分散が強い場合など、一般に、 各クラスの平均値だけを見ていても上手く判別する事ができない。 そこでフィッシャーが提案した方法が、 「射影されたクラス平均間の分離度を大きくすると同時に、各クラス内では小さな分散を与える関数を最大化する」 クラス $C_k$ から射影されたデータのクラス内分散は以下で与えられる。 $$s_k&#94;2 = \\sum_{n\\in C_k}(y_n-m_k)&#94;2\\qquad (4.2)$$ 全データ集合に対する総クラス内分散が $s_1&#94;2+s_2&#94;2$ であると定義する。 フィッシャーの判別基準は、 クラス間分離度 と クラス内分散 の比率で表される。 $$ \\begin{aligned} J(\\mathbf{w}) &= \\frac{(m_2-m_1)&#94;2}{s_1&#94;2 + s_2&#94;2} & (4.25)\\\\ &= \\frac{\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}}{\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}} & (4.27)\\\\ \\mathbf{S}_{\\mathrm{B}} &= (\\mathbf{m}_2-\\mathbf{m}_1)(\\mathbf{m}_2-\\mathbf{m}_1)&#94;T & (4.27)\\\\ \\mathbf{S}_{\\mathrm{W}} &= \\sum_{n\\in C_1}(\\mathbf{x}_n-\\mathbf{m}_1)(\\mathbf{x}_n-\\mathbf{m}_1)&#94;T + \\sum_{n\\in C_2}(\\mathbf{x}_n-\\mathbf{m}_2)(\\mathbf{x}_n-\\mathbf{m}_2)&#94;T& (4.27)\\\\ \\end{aligned} $$ $\\mathbf{S}_{\\mathrm{B}}$ を クラス間共分散行列(between-class covariance matrix) と呼ぶ。 $\\mathbf{S}_{\\mathrm{W}}$ を (総)クラス内共分散行列(within-class covariance matrix) と呼ぶ。 $J(\\mathbf{w})$ を $\\mathbf{w}$ に関して微分すると、以下の式が満たされる場合に $J(\\mathbf{w})$ が最大となる事がわかる。 $$ \\begin{aligned} \\frac{dJ(\\mathbf{w})}{d\\mathbf{w}} &= \\frac{\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}} + \\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\right)\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right) - \\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\right)\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}} + \\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right)}{\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right)&#94;2}\\\\ \\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\right)\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}} + \\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right) &= \\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}} + \\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\right)\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right)\\\\ \\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\right)\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}&= \\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right)\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\qquad (4.29) \\end{aligned} $$ $(4.27)$ から、 $\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}$ は常に $(\\mathbf{m}_2-\\mathbf{m}_1)$ と同じ方向を持つ。 $\\mathbf{w}$ の方向だけが重要で、 大きさは考慮する必要がないので、スカラーファクタ $\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right)$ と $\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\right)$ を無視できる。 $(4.29)$ の両辺に $\\mathbf{S}_{\\mathrm{W}}&#94;{-1}$ を左からかけて、 フィッシャーの線形判別(Fisher's linear discriminant) が得られる。 $$\\mathbf{w}\\propto\\mathbf{S}_{\\mathrm{W}}&#94;{-1}(\\mathbf{m}_2-\\mathbf{m}_1)\\qquad (4.30)$$ フィッシャーの線形判別(Fisher's linear discriminant) は、厳密には識別子ではなく、 むしろ $1$ 次元へ削減する際のデータの射影方向の選択を行なっている。 In [6]: from kerasy.ML.decomposition import LDA In [7]: N1 = 100 ; N2 = 100 cov = [[ 10 , 1 ],[ 1 , 3 ]] In [8]: x1 = np . random . RandomState ( seed ) . multivariate_normal ([ 0 , 7 ], cov , N1 ) x2 = np . random . RandomState ( seed + 1 ) . multivariate_normal ([ 8 , 6 ], cov , N2 ) x1min = np . min ( x1 ); x1max = np . max ( x1 ) x2min = np . min ( x2 ); x2max = np . max ( x2 ) m1 = np . mean ( x1 , axis = 0 ); m2 = np . mean ( x2 , axis = 0 ) m = ( m1 + m2 ) / 2 data = np . r_ [ x1 , x2 ] In [9]: X = np . linspace ( - 100 , 100 , 1000 ) In [10]: fig = plt . figure ( figsize = ( 12 , 6 )) for i , tf in enumerate ([ True , False ]): model = LDA () model . fit ( x1 , x2 , mean_only = tf ) w1 , w2 = model . w alpha = - w2 / w1 beta = m [ 1 ] - alpha * m [ 0 ] x_features = model . transform ( data ) axT = fig . add_subplot ( 2 , 2 , i + 1 ) axT . plot ( X , X * ( - w2 / w1 ) + beta , color = \"black\" , label = \"linear discriminant\" ) axT . scatter ( x1 [:, 0 ], x1 [:, 1 ], color = \"blue\" , label = \"class1\" ) axT . scatter ( x2 [:, 0 ], x2 [:, 1 ], color = \"red\" , label = \"class2\" ) axT . scatter ( m1 [ 0 ], m1 [ 1 ], color = \"green\" , marker = \"*\" , s = 200 ), axT . scatter ( m2 [ 0 ], m2 [ 1 ], color = \"green\" , marker = \"*\" , s = 200 , label = \"mean\" ) axT . set_xlim ( x1min , x1max ), axT . set_ylim ( x2min , x2max ) axT . set_xticks ([]), axT . set_yticks ([]), axT . legend (), axT . set_title ( \"Only Mean\" if tf else \"Fisher's linear discriminant\" ) axB = fig . add_subplot ( 2 , 2 , 3 + i ) axB . hist ( x_features [: N1 ], alpha = 0.3 , color = \"blue\" , label = \"class1\" ) axB . hist ( x_features [ N1 :], alpha = 0.3 , color = \"red\" , label = \"class2\" ) axB . set_xticks ([]), axB . set_yticks ([]), axB . legend () plt . tight_layout () plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"映像メディア工学","url":"https://iwasakishuto.github.io/University/3A/映像メディア工学-3.html","loc":"https://iwasakishuto.github.io/University/3A/映像メディア工学-3.html"},{"title":"生物統計論 第4回","text":"In [1]: import numpy as np import matplotlib.pyplot as plt Section4.1 Expectation Maximization Algorithm The expectation maximization algorithm, or EM algorithm, is a general technique for finding maximum likelihood solutions for probabilistic models having latent variable. Consider a probabilistic model in which we collectively denote all of the observed variables by $\\mathbf{X}$ all of the hidden variables by $\\mathbf{Z}$ (assuming discrete, but discussion is identical if continuous) joint distribution by $p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)$ Goal is to maximize the likelihood function that is given by $$p\\left(\\mathbf{X}|\\boldsymbol{\\theta}\\right) = \\sum_{\\mathbf{Z}}p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)\\qquad (9.69)$$ Properties Guaranteed to terminate Likelihood always increases Solving M-step is often easy No need to traverse the data Separation of parameter dependency $\\log(pq)=\\log(p)+\\log(q)$ Sometimes solved exactly Often a few times faster than gradient descent (if stopping condition is not too stringent) Expectation values characterize the optimized model Lower Bound of Likelihood $\\mathcal{L}\\left(q,\\boldsymbol{\\theta}\\right)$ and $\\mathrm{KL}\\left(q\\|p\\right)$ We shall suppose that direct optimization of $p(\\mathbf{X}|\\boldsymbol{\\theta})$ is difficult the optimization of the complete-data likelihood function $p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)$ is significantly easier We introduce a distribution $q\\left(\\mathbf{Z}\\right)$ defined over the latent variables. For any choice of $q\\left(\\mathbf{Z}\\right)$, the following decomposition holds $$ \\begin{aligned} \\ln p\\left(\\mathbf{X}|\\boldsymbol{\\theta}\\right) &= \\mathcal{L}\\left(q,\\boldsymbol{\\theta}\\right) + \\mathrm{KL}\\left(q\\|p\\right) &(9.70)\\\\ \\mathcal{L}\\left(q,\\boldsymbol{\\theta}\\right) &= \\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln\\left\\{\\frac{p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)}{q(\\mathbf{Z})}\\right\\} & (9.71)\\\\ \\mathrm{KL}\\left(q\\|p\\right) &= -\\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln\\left\\{\\frac{p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}\\right)}{q(\\mathbf{Z})}\\right\\} & (9.72) \\end{aligned} $$ NOTE : $\\mathcal{L}(q,\\boldsymbol{\\theta})$ is a functional of the distribution $q(\\mathbf{Z})$, and a function of the parameters $\\boldsymbol{\\theta}$ $$ \\begin{aligned} \\mathcal{L}\\left(q,\\boldsymbol{\\theta}\\right) + \\mathrm{KL}\\left(q\\|p\\right) &=\\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln\\left\\{\\frac{p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)}{q(\\mathbf{Z})}\\right\\} -\\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln\\left\\{\\frac{p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}\\right)}{q(\\mathbf{Z})}\\right\\}\\\\ &= \\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln\\left\\{\\frac{p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)}{p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}\\right)}\\right\\}\\\\ &= \\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln p\\left(\\mathbf{X}|\\boldsymbol{\\theta}\\right)\\\\ &= \\ln p\\left(\\mathbf{X}|\\boldsymbol{\\theta}\\right) \\end{aligned}$$ From $(9.72)$, we see that $\\mathrm{KL}(q\\|p)$ is the Kullback-Leibler divergence between $q(\\mathbf{Z})$ and the posterior distribution $p(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta})$ Kullback-Leibler divergence satisfies $\\mathrm{KL}(q\\|p)\\geq0$ with eqyality if, and only if, $q(\\mathbf{Z})=p(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta})$. Therefore, $\\mathcal{L}(q,\\boldsymbol{\\theta})\\leq\\ln p(\\mathbf{X}|\\boldsymbol{\\theta})$, in other words that $\\mathcal{L}(q,\\boldsymbol{\\theta})$ is a lower bound on $\\ln p(\\mathbf{X}|\\boldsymbol{\\theta})$ E step In the E step, the lower bound $\\mathcal{L}(q,\\boldsymbol{\\theta}&#94;{\\text{old}})$ is maximized with respect to $q(\\mathbf{Z})$ while holding $\\boldsymbol{\\theta}&#94;{\\text{old}}$ fixed. $\\ln p(\\mathbf{X}|\\boldsymbol{\\theta}&#94;{\\text{old}})$ does not depend on $q(\\mathbf{Z})$ the largest value of $\\mathcal{L}(q,\\boldsymbol{\\theta}&#94;{\\text{old}})$ will occur when the Kullback-Leibler divergence vanishes. ∴ When $q(\\mathbf{Z})$ is equal to the posterior distribution $p(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}})$, $\\mathrm{KL}(q\\|p)=0$ and the lower bound $\\mathcal{L}(q,\\boldsymbol{\\theta}&#94;{\\text{old}})$ will be maximized. M step In the M step, the lower bound $\\mathcal{L}(q,\\boldsymbol{\\theta}&#94;{\\text{old}})$ is maximized with respect to $\\boldsymbol{\\theta}$ to give some new value $\\boldsymbol{\\theta}&#94;{\\text{new}}$ while holding $q(\\mathbf{Z})$ fixed. This will cause the lower bound $\\mathcal{L}$ to increase This will necessarily cause the corrresponding log likelihood function to increase. Because $q$ is held fixed during the M step, it will not equal the new posterior distribution $p(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}})$ $\\left(\\mathrm{KL}(q\\|p)\\neq0\\right)$ $\\mathcal{Q}(\\boldsymbol{\\theta},\\boldsymbol{\\theta}&#94;{\\text{old}})$ $$ \\mathcal{Q}\\left(\\boldsymbol{\\theta},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)=\\sum_{\\mathbf{Z}}p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)\\ln p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right) \\qquad (9.33)\\\\ $$ If we substitute $q(\\mathbf{Z}) = p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)$ into $(9.71)$, $$ \\begin{aligned} \\mathcal{L}\\left(q,\\boldsymbol{\\theta}\\right) &= \\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln\\left\\{\\frac{p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)}{q(\\mathbf{Z})}\\right\\} & (9.71)\\\\ &= \\sum_{\\mathbf{Z}}p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)\\ln p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right) - \\sum_{\\mathbf{Z}}p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)\\ln p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)\\\\ &= \\mathcal{Q}\\left(\\boldsymbol{\\theta},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right) + \\text{const.} \\end{aligned} $$ ∴ \"Maximizing $\\mathcal{L}(q,\\boldsymbol{\\theta})$\" is equal to \"Maximizing $\\mathcal{Q}\\left(\\boldsymbol{\\theta},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)$\". In [2]: from kerasy.ML.MixedDistribution import MixedGaussian In [3]: # Train Data. data = np . concatenate ([ np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 0 , 0 ], cov = np . eye ( 2 ), size = 50 ), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 0 , 5 ], cov = np . eye ( 2 ), size = 50 ), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 3 , 2 ], cov = np . eye ( 2 ), size = 50 ), ]) X , Y = data . T K = 3 In [4]: # Back Ground Color xmin , ymin = np . min ( data , axis = 0 ) - 0.3 xmax , ymax = np . max ( data , axis = 0 ) + 0.3 Xs , Ys = np . meshgrid ( np . linspace ( xmin , xmax , 100 ), np . linspace ( ymin , ymax , 100 )) XYs = np . c_ [ Xs . ravel (), Ys . ravel ()] In [5]: model = MixedGaussian ( K = 3 , random_state = 1234 ) model . fit ( data , memo_span = 1 ) ll_hist = [ ll for _ , _ , _ , ll in model . history ] mu_hist = [ mu for _ , _ ,( mu , _ , _ ), _ in model . history ] In [6]: plt_model = MixedGaussian ( K = 3 ) plt_model . N , plt_model . M = data . shape L_old = min ( ll_hist ) - 300 for epoch , idx ,( mu , S , pi ), ll in model . history [: - 1 ]: fig = plt . figure ( figsize = ( 12 , 8 )) ll_old = ll_hist [ epoch ]; ll_new = ll_hist [ epoch + 1 ] mu_old = mu_hist [ epoch ]; mu_new = mu_hist [ epoch + 1 ] L_new = np . random . uniform ( low = 0.3 , high = 0.5 ) * ( ll_new - ll_old ) + ll_old # 真面目に計算していない。 dL_old = ll_old - L_old ; dL_new = L_new - ll_old ; dll_old = ll_new - ll_old ax1 = fig . add_subplot ( 2 , 2 , 1 ) plt_model . mu = mu ; plt_model . S = S ; plt_model . pi = pi gammas = plt_model . predict ( XYs ) Zs = np . sum ( gammas , axis = 1 ) . reshape ( Xs . shape ) # Likelihood. ax1 . pcolor ( Xs , Ys , Zs , alpha =. 5 , cmap = \"jet\" ) ax1 . scatter ( X , Y , c = idx , cmap = \"prism\" ) ax1 . set_xlim ( xmin , xmax ), ax1 . set_ylim ( ymin , ymax ), ax1 . set_title ( f \"epochs: {epoch:>02}\" , fontsize = 18 ) ax2 = fig . add_subplot ( 2 , 2 , 2 ) ax2 . axhline ( ll_old , color = \"black\" , label = \"$\\ln p(\\mathbf{X},θold)$\" , linewidth = 3 ) ax2 . axhline ( L_old , color = \"black\" , label = \"$L(q,θold)$\" , linestyle = \":\" ) ax2 . arrow ( x = 0.3 , y = L_old , dx = 0 , dy = dL_old , head_width = dL_old / 6000 , head_length = dL_old * 0.1 , fc = 'red' , ec = 'red' , length_includes_head = True ) ax2 . set_title ( f \"E step (Epoch={epoch})\" , fontsize = 18 ), ax2 . legend (), ax2 . set_xticks ([]), ax2 . set_ylim ( - 600 , - 570 ) ax3 = fig . add_subplot ( 2 , 2 , 3 ) for k in range ( K ): xb , yb = mu_old [ k ]; xa , ya = mu_new [ k ] ax3 . plot (( xb , xa ),( yb , ya ), color = \"black\" ) ax3 . scatter ( xb , yb , color = \"black\" , s = 50 ) ax3 . scatter ( xa , ya , color = \"red\" , marker = \"*\" , s = 150 ) ax3 . set_xlim ( xmin , xmax ), ax3 . set_ylim ( ymin , ymax ), ax3 . set_title ( \"θ → θnew\" ) ax3 . grid () ax4 = fig . add_subplot ( 2 , 2 , 4 ) L_new = np . random . uniform ( low = 0.3 , high = 0.5 ) * ( ll_new - ll_old ) + ll_old # 真面目に計算していない。 ax4 . axhline ( ll_old , color = \"black\" , label = \"$\\ln p(\\mathbf{X},θold)$\" , linestyle = \"--\" ) ax4 . axhline ( ll_new , color = \"black\" , label = \"$\\ln p(\\mathbf{X},θnew)$\" , linewidth = 3 ) ax4 . axhline ( L_new , color = \"black\" , label = \"$L(q,θnew)$\" , linestyle = \":\" ) ax4 . arrow ( x = 0.7 , y = ll_old , dx = 0 , dy = dll_old , head_width = dll_old / 6000 , head_length = dll_old * 0.1 , fc = 'k' , ec = 'k' , length_includes_head = True ) ax4 . arrow ( x = 0.3 , y = ll_old , dx = 0 , dy = dL_new , head_width = dL_new / 6000 , head_length = dL_new * 0.1 , fc = 'red' , ec = 'red' , length_includes_head = True ) ax4 . set_title ( f \"M step (Epoch={epoch})\" , fontsize = 18 ), ax4 . legend (), ax4 . set_xticks ([]), ax4 . set_ylim ( - 600 , - 570 ) plt . tight_layout () plt . savefig ( f \"img/img{epoch:>02}\" ) L_old = L_new fig_no = 0 L_old = min ( ll_hist ) - 300 for epoch in range ( len ( model . history ) - 1 ): ll_old = ll_hist [ epoch ]; ll_new = ll_hist [ epoch + 1 ] L_new = np . random . uniform ( low = 0.3 , high = 0.5 ) * ( ll_new - ll_old ) + ll_old # 真面目に計算していない。 dL_old = ll_old - L_old ; dL_new = L_new - ll_old ; dll_old = ll_new - ll_old # Estep fig = plt . figure ( figsize = ( 3 , 10 )) ax = fig . add_subplot ( 1 , 1 , 1 ) ax . axhline ( ll_old , color = \"black\" , label = \"$\\ln p(\\mathbf{X},θold)$\" , linewidth = 3 ) ax . axhline ( L_old , color = \"black\" , label = \"$L(q,θold)$\" , linestyle = \":\" ) ax . arrow ( x = 0.3 , y = L_old , dx = 0 , dy = dL_old , head_width = dL_old / 60 , head_length = dL_old * 2e-1 , fc = 'red' , ec = 'red' , length_includes_head = True ) ax . set_title ( f \"E step (Epoch={epoch})\" , fontsize = 18 ), ax . legend (), ax . set_xticks ([]), ax . set_ylim ( - 600 , - 570 ) plt . savefig ( f \"img/img{fig_no:>02}\" ); fig_no += 1 plt . clf () # Mstep fig = plt . figure ( figsize = ( 3 , 10 )) ax = fig . add_subplot ( 1 , 1 , 1 ) L_new = np . random . uniform ( low = 0.3 , high = 0.5 ) * ( ll_new - ll_old ) + ll_old # 真面目に計算していない。 ax . axhline ( ll_old , color = \"black\" , label = \"$\\ln p(\\mathbf{X},θold)$\" , linestyle = \"--\" ) ax . axhline ( ll_new , color = \"black\" , label = \"$\\ln p(\\mathbf{X},θnew)$\" , linewidth = 3 ) ax . axhline ( L_new , color = \"black\" , label = \"$L(q,θnew)$\" , linestyle = \":\" ) ax . arrow ( x = 0.7 , y = ll_old , dx = 0 , dy = dll_old , head_width = dll_old / 60 , head_length = dll_old * 2e-1 , fc = 'k' , ec = 'k' , length_includes_head = True ) ax . arrow ( x = 0.3 , y = ll_old , dx = 0 , dy = dL_new , head_width = dL_new / 60 , head_length = dL_new * 2e-1 , fc = 'red' , ec = 'red' , length_includes_head = True ) ax . set_title ( f \"M step (Epoch={epoch})\" , fontsize = 18 ), ax . legend (), ax . set_xticks ([]), ax . set_ylim ( - 600 , - 570 ) plt . savefig ( f \"img/img{fig_no:>02}\" ); fig_no += 1 plt . clf () L_old = L_new Section4.2 Mixture Model Implementation Gaussian Mixture Distribution k-means clustering Section4.3 Linear Regression Least Squares polynomial function we observe a real-value input variable $x$ and we wish to use this observation to predict the value of a real-valued target variable $t$. In the most simplest approach based on curve fitting, we shall fit the data using a polynomial function of the form : $$y(x,\\mathbf{w}) = w_0+w_1x+w_2x&#94;2+\\cdots+w_Mx&#94;M=\\sum_{j=0}&#94;Mw_jx&#94;j\\qquad (1.1)$$ data we are given a training set comprising $N$ observation of $x$, written $\\mathbf{X}\\equiv(\\mathbf{x_1},\\ldots,\\mathbf{x}_N)&#94;T$ with corresponding observation of the values of $t$, denoted $\\mathbf{t}\\equiv(t_1\\ldots,t_N)&#94;T$ we can difine $M$, which is the order of the polynomial. The values of the coefficients($w_j$) will be determined by fitting the polynomial to the training data. This can be done by minimizing an error function that measures the misfit between the function $y(x,\\mathbf{w})$ and the training set data points. One simple choice of error function, which is widely used, is given by the sum of the squares of the errors $$E(\\mathbf{w}) = \\frac{1}{2}\\mathrm{RSS} = \\frac{1}{2}\\sum_{n=1}&#94;N\\left\\{y(\\mathbf{x}_n,\\mathbf{w}) - t_n\\right\\}&#94;2\\qquad (1.2)$$ (the factor of $1/2$ is included for later convenience.) Trainig Aim: find the best $\\mathbf{w}&#94;{\\star}=\\underset{w\\in\\mathbb{R}}{\\mathrm{argmin}}\\left\\{\\mathrm{RSS}(\\mathbf{w})\\right\\}$ $\\mathbf{t} = \\left(\\begin{matrix}t_1\\\\\\vdots\\\\t_N\\end{matrix}\\right),\\quad\\mathbf{X} = \\left(\\begin{matrix}x_1&#94;0&x;_1&#94;1&\\cdots&x;_1&#94;M\\\\x_2&#94;0&x;_2&#94;1&\\cdots&x;_2&#94;M\\\\\\vdots&\\vdots&\\ddots&\\vdots\\\\x_N&#94;0&x;_N&#94;1&\\cdots&x;_N&#94;M\\end{matrix}\\right),\\quad\\mathbf{w}=\\left(\\begin{matrix}w_1\\\\\\vdots\\\\w_M\\end{matrix}\\right)$ $\\mathrm{RSS}(\\mathbf{w}) = \\left(\\mathbf{t} - \\mathbf{Xw}\\right)&#94;T\\left(\\mathbf{t} - \\mathbf{Xw}\\right)$ Solution: $$ \\begin{aligned} \\frac{\\partial E(\\mathbf{w})}{\\partial\\mathbf{w}} &=\\frac{1}{2}\\frac{\\partial}{\\partial\\mathbf{w}}\\|\\mathbf{t}-\\mathbf{Xw}\\|&#94;2\\\\ &=\\frac{1}{2}\\frac{\\partial}{\\partial\\mathbf{w}}\\left(\\|\\mathbf{t}\\|&#94;2 - 2\\mathbf{w}&#94;T\\mathbf{X}&#94;T\\mathbf{t} + \\|\\mathbf{Xw}\\|&#94;2\\right)\\\\ &=\\frac{1}{2}\\frac{\\partial}{\\partial\\mathbf{w}}\\left(\\|\\mathbf{t}\\|&#94;2 - 2\\mathbf{w}&#94;T\\mathbf{X}&#94;T\\mathbf{t} + \\mathbf{w}&#94;T\\mathbf{X}&#94;T\\mathbf{Xw}\\right)\\\\ &=\\frac{1}{2} \\left(-2\\mathbf{X}&#94;T\\mathbf{t} + \\left(\\mathbf{X}&#94;T\\mathbf{X} + \\left(\\mathbf{X}&#94;T\\mathbf{X}\\right)&#94;T\\right)\\mathbf{w}\\right)\\\\ &= -\\mathbf{X}&#94;T\\mathbf{t}+\\mathbf{X}&#94;T\\mathbf{Xw}=\\mathbf{0}\\\\ \\therefore\\mathbf{w}&#94;{\\star} &= \\left(\\mathbf{X}&#94;T\\mathbf{X}\\right)&#94;{-1}\\mathbf{X}&#94;T\\mathbf{t} \\end{aligned}$$ ※ In the following programs, I use np.linalg.solve to calcurate $\\mathbf{w}&#94;{\\ast}$ equation program $$\\left(\\mathbf{X}&#94;T\\mathbf{X}\\right)\\mathbf{w}&#94;{\\star} = \\mathbf{X}&#94;T\\mathbf{t}$$ w = np.linalg.solve(X.T.dot(X), X.T.dot(t)) In [7]: N = 15 Ms = [ 2 , 4 , 8 , 16 ] seed = 0 In [8]: # Training data. x = np . random . RandomState ( seed ) . uniform ( low = 0 , high = 1 , size = N ) Noise = np . random . RandomState ( seed ) . normal ( loc = 0 , scale = 0.1 , size = N ) t = np . sin ( 2 * np . pi * x ) + Noise In [9]: fig = plt . figure ( figsize = ( 12 , 8 )) for i , M in enumerate ( Ms ): ax = fig . add_subplot ( 2 , 2 , i + 1 ) # Training. X = np . array ([ x ** m for m in range ( M + 1 )]) . T w = np . linalg . solve ( X . T . dot ( X ), X . T . dot ( t )) # For Validation plot. Xs = np . linspace ( 0 , 1 , 1000 ) t_true = np . sin ( 2 * np . pi * Xs ) t_pred = w . dot ( np . array ([ Xs ** m for m in range ( M + 1 )])) # RSS(Residual Sum of Squares) residual = t - w . dot ( np . array ([ x ** m for m in range ( M + 1 )])) RSS = residual . T . dot ( residual ) # Plot. ax . plot ( Xs , t_true , color = \"black\" , label = \"$t=\\sin(2\\pi x)$\" ) ax . plot ( Xs , t_pred , color = \"red\" , label = f \"prediction ($M= {M} $)\" ) ax . scatter ( x , t , edgecolors = 'blue' , facecolor = \"white\" , label = \"train data\" ) ax . set_title ( f \"Results (RSS=$ {RSS:.3f} $,M=$ {M} $)\" ), ax . set_xlabel ( \"$x$\" ), ax . set_ylabel ( \"$t$\" ) ax . set_xlim ( 0 , 1 ), ax . set_ylim ( - 1.2 , 1.2 ) ax . legend () plt . tight_layout () plt . show () Regularized Least Square $$ \\begin{aligned} E(\\mathbf{w}) &= E_{D}(\\mathbf{w}) + \\lambda E_W(\\mathbf{w}) & (3.24)\\\\ &= \\frac{1}{2}\\mathrm{RSS} + \\lambda\\frac{1}{2}\\mathbf{w}&#94;T\\mathbf{w}\\\\ &= \\frac{1}{2}\\sum_{n=1}&#94;N\\left\\{y(\\mathbf{x}_n,\\mathbf{w}) - t_n\\right\\}&#94;2+\\frac{1}{2}\\mathbf{w}&#94;T\\mathbf{w} & (3.27)\\\\ \\therefore\\mathbf{w}&#94;{\\star} &= \\left(\\lambda\\mathbf{I} + \\mathbf{X}&#94;T\\mathbf{X}\\right)&#94;{-1}\\mathbf{X}&#94;T\\mathbf{t} & (3.28) \\end{aligned} $$ In [10]: lambda_ = 1e-4 In [11]: fig = plt . figure ( figsize = ( 12 , 8 )) for i , M in enumerate ( Ms ): ax = fig . add_subplot ( 2 , 2 , i + 1 ) # Training. X = np . array ([ x ** m for m in range ( M + 1 )]) . T w = np . linalg . solve ( lambda_ * np . identity ( M + 1 ) + X . T . dot ( X ), X . T . dot ( t )) # For Validation plot. Xs = np . linspace ( 0 , 1 , 1000 ) t_true = np . sin ( 2 * np . pi * Xs ) t_pred = w . dot ( np . array ([ Xs ** m for m in range ( M + 1 )])) # RSS(Residual Sum of Squares) residual = t - w . dot ( np . array ([ x ** m for m in range ( M + 1 )])) RSS = residual . T . dot ( residual ) # Plot. ax . plot ( Xs , t_true , color = \"black\" , label = \"$t=\\sin(2\\pi x)$\" ) ax . plot ( Xs , t_pred , color = \"red\" , label = f \"prediction ($M= {M} $)\" ) ax . scatter ( x , t , edgecolors = 'blue' , facecolor = \"white\" , label = \"train data\" ) ax . set_title ( f \"Results (RSS=$ {RSS:.3f} $,M=$ {M} $,$\\lambda= {lambda_} $)\" ), ax . set_xlabel ( \"$x$\" ), ax . set_ylabel ( \"$t$\" ) ax . set_xlim ( 0 , 1 ), ax . set_ylim ( - 1.2 , 1.2 ) ax . legend () plt . tight_layout () plt . show () Section4.4 Bayesian Inference Maximal Likelihood Estimate $$ l(\\boldsymbol{\\theta}|D) = \\log L(\\boldsymbol{\\theta}|D) = \\log\\mathbb{P}(D|\\boldsymbol{\\theta})\\\\ \\hat{\\boldsymbol{\\theta}}_{\\text{ML}} = \\underset{\\boldsymbol{\\theta}}{\\text{argmax}}l(\\boldsymbol{\\theta}|D) $$ ※ $l$: large → High probability of observing $D$ from the model $\\boldsymbol{\\theta}$ Maximum a Posteriori Estimate Maximum a posteriori estimate $$ \\begin{aligned} \\hat{\\boldsymbol{\\theta}_{\\text{MAP}}} &= \\underset{\\boldsymbol{\\theta}}{\\text{argmax}}f(\\boldsymbol{\\theta}|D)\\\\ &= \\underset{\\boldsymbol{\\theta}}{\\text{argmax}}f(D|\\boldsymbol{\\theta})f(\\boldsymbol{\\theta})\\\\ &= \\underset{\\boldsymbol{\\theta}}{\\text{argmax}}\\left\\{l(\\boldsymbol{\\theta}|D) L \\log f(\\boldsymbol{\\theta})\\right\\}\\\\ \\end{aligned} $$ Posterior mean estimate $$ \\hat{\\boldsymbol{\\theta}_{\\text{PME}}} = \\int\\boldsymbol{\\theta}f(\\boldsymbol{\\theta}|D)d\\boldsymbol{\\theta} $$ Implementation of Gaussian Prior for Regression. In [12]: seed = 123 In [13]: from kerasy.ML.linear import BayesianLinearRegression from kerasy.utils.preprocessing import GaussianBaseTransformer from kerasy.utils.data_generator import generateSin , generateGausian In [14]: N = 25 ; D = 1 ; M = 25 xmin = 0 ; xmax = 1 In [15]: alpha = 1 beta = 25 In [16]: x_test = np . linspace ( xmin , xmax , 1000 ) y_test = np . sin ( 2 * np . pi * x_test ) x_train , y_train = generateSin ( size = N , xmin = xmin , xmax = xmax , seed = seed ) _ , y_noise = generateGausian ( size = N , x = x_train , loc = 0 , scale = 1 / beta , seed = seed ) y_train += y_noise In [17]: # transform mu = np . linspace ( xmin , xmax , M ); sigma = 0.1 phi = GaussianBaseTransformer ( mu = mu , sigma = sigma ) x_train_features = phi . transform ( x_train ) x_test_features = phi . transform ( x_test ) In [18]: random_idx = np . random . RandomState ( seed ) . choice ( N , N ) In [19]: fig = plt . figure ( figsize = ( 16 , 8 )) for i , n in enumerate ([ 1 , 2 , 4 , 25 ]): ax = fig . add_subplot ( 2 , 2 , i + 1 ) model = BayesianLinearRegression ( alpha = alpha , beta = beta ) model . fit ( x_train_features [ random_idx [: n ]], y_train [ random_idx [: n ]]) y_pred , y_std = model . predict ( x_test_features ) ax . plot ( x_test , y_test , color = \"black\" , label = \"$\\sin(2\\pi x)$\" ) ax . plot ( x_test , y_pred , color = \"red\" , label = \"predict($\\mu$)\" ) ax . fill_between ( x_test , y_pred - y_std , y_pred + y_std , color = \"pink\" , alpha = 0.5 ) ax . scatter ( x_train [ random_idx [: n ]], y_train [ random_idx [: n ]], s = 150 , edgecolors = 'black' , facecolor = \"white\" , label = \"train data\" ) ax . set_ylim ( - 1.5 , 1.5 ), ax . legend (), ax . set_title ( f \"Bayesian Linear Regression (N= {n} )\" ) plt . tight_layout () plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物統計論","url":"https://iwasakishuto.github.io/University/3A/生物統計論-4.html","loc":"https://iwasakishuto.github.io/University/3A/生物統計論-4.html"},{"title":"レポート課題3(10/17出題)","text":"NuX9WVnZhfEEUuS64NUd5Q==;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;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-report3.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-report3.html"},{"title":"連続最適化(2)制約付き最適化","text":"講師： 佐藤一誠 参考書： 最適化手法 参考書： 機械学習のための連続最適化 講義概要 等式制約付き最適化問題 ラグランジュ未定乗数法 ラグランジュ双対問題 双対変数の最適化 不等式制約付き最適化問題 制約なし最適化問題への変換 双対問題 まとめ 制約付き最適化問題(constrained optimization problem) \\(\\mathcal{X}\\subset\\mathbb{R}&#94;d\\) 上に定義される関数 \\(f:\\mathcal{X}\\rightarrow\\mathbb{R}\\) の最小値を求める。 $$ \\begin{aligned} \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{minimization : }}&f(\\mathbf{x})\\\\ \\text{subject to : }&g(\\mathbf{x})=\\mathbf{0}\\\\ &h(\\mathbf{x})\\leq\\mathbf{0} \\end{aligned} $$ \"subject to\"は、 「…を条件として」 という意味。 \\(g_i,h_i\\) は互いに 一次独立(linearly independent) であると仮定。 実行可能解(feasible solution) ：全ての制約条件を満たす \\(\\mathbf{x}\\) 凸最適化問題(convex optimization problem) ：関数 \\(f\\) が凸、集合 \\(\\mathcal{X}\\) が凸、制約条件 \\(\\mathbf{g},\\mathbf{h}\\) が凸であれば、最適値が一意に定まる。 ※ 以下、凸最適化問題を考える。 等式制約付き最適化問題 等式制約付き最適化問題 $$ \\begin{aligned} \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{minimization : }}&f(\\mathbf{x})\\\\ \\text{subject to : }&g(\\mathbf{x})=\\mathbf{0}\\\\ \\end{aligned} $$ \\(\\mathbf{x}_k\\) に設定して、勾配法や準ニュートン法などで以下の $$\\mathbf{x}_{k+1} = \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{argmin}}f(\\mathbf{x}) + c_k\\|\\mathbf{g}(x)\\|&#94;2$$ \\(c_k\\) の値を徐々に増やしていく。 $$0 < c_1 < c_2 < \\cdots$$ ラグランジュ未定乗数法 詳しくは ラグランジュ未定乗数法 に記載されているので、ここでは具体例を紹介する。 問題 $$ \\begin{aligned} \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{min : }}&3x&#94;2 + 2y&#94;2\\\\ \\text{subject to : }&x+y=1\\\\ \\end{aligned} $$ 解答 ラグランジュ関数は、 $$L(x,y,\\lambda) = 3x&#94;2 + 2y&#94;2 + \\lambda(x+y-1)$$ となるから、 $$ \\begin{aligned} \\frac{\\partial L}{\\partial x} &= 6x+\\lambda=0 &\\therefore x = -\\frac{1}{6}\\lambda\\\\ \\frac{\\partial L}{\\partial y} &= 4y+\\lambda=0 &\\therefore y = -\\frac{1}{4}\\lambda\\\\ \\frac{\\partial L}{\\partial \\lambda} &= x+y-1=0 &\\therefore \\lambda = -\\frac{12}{5}\\\\ \\end{aligned} $$ よって、 \\((x,y) = (0.4,0.6)\\) ラグランジュ双対問題 これも、詳しくは ラグランジュ双対問題 に記載されているので、ここでは具体例を紹介する。 問題 $$ \\begin{aligned} \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{min : }}&3x&#94;2 + 2y&#94;2\\\\ \\text{subject to : }&x+y=1\\\\ \\end{aligned} $$ 解答 ラグランジュ関数は、 $$L(x,y,\\lambda) = 3x&#94;2 + 2y&#94;2 + \\lambda(x+y-1)$$ となるから、 $$ \\begin{aligned} \\frac{\\partial L}{\\partial x} &= 6x+\\lambda=0 &\\therefore x = -\\frac{1}{6}\\lambda\\\\ \\frac{\\partial L}{\\partial y} &= 4y+\\lambda=0 &\\therefore y = -\\frac{1}{4}\\lambda \\end{aligned} $$ よって、これらを \\(L(x,y,\\lambda)\\) に代入して、 $$\\omega(\\lambda) = \\underset{x,y\\in\\mathbb{R}}{\\inf}L(x,y,\\lambda) = -\\frac{5}{24}\\lambda&#94;2-\\lambda$$ したがって、 \\(\\underset{\\lambda\\in\\mathbb{R}}{\\text{argmax}}\\omega(\\lambda) = -\\frac{12}{5}\\Longrightarrow(x,y) = (0.4,0.6)\\) 双対変数の最適化 上の問題では、双対変数 \\(\\lambda\\) の最適化問題を解析的に解けたが、解析的に解くことができない問題もある。その場合に使うのが 双対上昇法 や 乗数法 と呼ばれる 双対変数の勾配上昇 を行う手法である。 手法 数式 解説 双対上昇法 $$\\begin{aligned}\\mathbf{x}_{k+1} &= \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{argmin}}L(\\mathbf{x},\\boldsymbol{\\lambda}_{k})\\\\\\boldsymbol{\\lambda}_{k+1} &= \\boldsymbol{\\lambda}_k + \\varepsilon_k\\nabla\\omega(\\mathbf{\\boldsymbol{\\lambda}}_k) \\\\&= \\boldsymbol{\\lambda}_k + \\varepsilon_k\\mathbf{g}(\\mathbf{x}_{k+1})\\end{aligned}$$ 適当な初期値から，ラグランジュ関数の最小化と双対変数の勾配上昇を交互に実行 乗数法 $$\\begin{aligned}\\mathbf{x}_{k+1} &= \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{argmin}}L_c(\\mathbf{x},\\boldsymbol{\\lambda}_{k})\\\\\\boldsymbol{\\lambda}_{k+1} &= \\boldsymbol{\\lambda}_k + c\\nabla\\omega(\\mathbf{\\boldsymbol{\\lambda}}_k) \\\\&= \\boldsymbol{\\lambda}_k + c\\mathbf{g}(\\mathbf{x}_{k+1})\\end{aligned}$$ 適当な初期値から， 拡張ラグランジュ関数 の最小化と双対変数の勾配上昇を交互に実行 なお、 拡張ラグランジュ関数(augmented Lagrangian) は、以下で表される関数で、二次の項を加えることで凸性を増している。 $$L_c(\\mathbf{x},\\boldsymbol{\\lambda}) = f(\\mathbf{x}) + \\boldsymbol{\\lambda}&#94;T\\mathbf{g}(\\mathbf{x}) + \\frac{c}{2}\\|\\mathbf{g}(\\mathbf{x})\\|&#94;2$$ ※実装は レポート課題3 に記載。 不等式制約付き最適化問題 $$ \\begin{aligned} \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{minimization : }}&f(\\mathbf{x})\\\\ \\text{subject to : }&h(\\mathbf{x})\\leq\\mathbf{0}\\\\ \\end{aligned} $$ 実行可能解 \\(\\mathbf{x}\\) において \\(h_i(\\mathbf{x}) = 0\\) の時、この制約を 有効制約(active constraint) と呼ぶ。 実行可能解 \\(\\mathbf{x}\\) においてそれ以外の時、この制約を 無効制約(inactive constraint) と呼ぶ。 制約なし最適化問題への変換 障壁法(barrier method) 初期値を \\(\\mathbf{x}_k\\) に設定して、勾配法や準ニュートン法などで以下の制約なし最適化問題を解く。 $$\\mathbf{x}_{k+1} = \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{argmin}}f(\\mathbf{x}) - c_k\\log(-h(\\mathbf{x}))$$ \\(c_k\\) の値を徐々に減らしていく。 途中の解 \\(\\mathbf{x}_{k+1}\\) が常に \\(h(\\mathbf{x}_{k+1})\\leq0\\) を満たす （つまり、実行可能領域の内側にある） ことから、 内点法(interior-point method) ともよばれる。 \\(c_k\\) の決め方が難しい。 罰則法(penalty method) 初期値を \\(\\mathbf{x}_k\\) に設定して、勾配法や準ニュートン法などで以下の制約なし最適化問題を解く。 $$\\mathbf{x}_{k+1} = \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{argmin}}f(\\mathbf{x}) + c_k\\max(0,h(\\mathbf{x}))&#94;2$$ \\(c_k\\) の値を徐々に増やしていく。 途中の解 \\(\\mathbf{x}_{k+1}\\) が一般に \\(h(\\mathbf{x}_{k+1})>0\\) を満たす （つまり、実行可能領域の外側にある） ことから、 外点法(exterior-point method) ともよばれる。 \\(c_k\\) の決め方が難しい。 射影勾配法(projected gradient method) 勾配降下（ \\(\\tilde{\\mathbf{x}}_{k+1} = \\mathbf{x}_k-\\varepsilon_k\\nabla f(\\mathbf{x}_k)\\) ）と実行可能領域への射影（ \\(\\mathbf{x}_{k+1} = \\mathbf{P}_k\\tilde{\\mathbf{x}}_{k+1}\\) ）を繰り返す。 まとめると $$\\mathbf{x}_{k+1} = \\mathbf{P}_k\\left(\\mathbf{x}_k - \\varepsilon_k\\nabla f(\\mathbf{x}_k)\\right)$$ 射影が簡単に計算できる時、効率が良い。 双対問題 詳しくは ラグランジュ未定乗数法 に記載。 まとめ 制約付き最適化問題： $$ \\begin{aligned} \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{minimization : }}&f(\\mathbf{x})\\\\ \\text{subject to : }&g(\\mathbf{x})=\\mathbf{0}\\\\ &h(\\mathbf{x})\\leq\\mathbf{0} \\end{aligned} $$ ラグランジュ関数： $$L\\left(\\mathbf{x},\\boldsymbol{\\lambda},\\boldsymbol{\\mu}\\right) = f(\\mathbf{x}) + \\boldsymbol{\\lambda}&#94;Tg(\\mathbf{x}) + \\boldsymbol{\\mu}&#94;Th(\\mathbf{x})$$ 双対問題： $$ \\begin{aligned} \\underset{\\boldsymbol{\\lambda,\\mu},\\ \\mathbf{x}\\in\\mathcal{X}}{\\text{maximization : }}&L\\left(\\mathbf{x},\\boldsymbol{\\lambda},\\boldsymbol{\\mu}\\right)\\\\ \\text{subject to : }&\\boldsymbol{\\mu}\\geq\\mathbf{0}\\\\ \\end{aligned} $$ KKT条件： $$ \\begin{aligned} \\begin{cases} \\nabla_{\\mathbf{x}}L\\left(\\mathbf{x}&#94;{\\ast},\\boldsymbol{\\lambda}&#94;{\\ast},\\boldsymbol{\\mu}&#94;{\\ast}\\right) = \\mathbf{0}\\\\ \\nabla_{\\boldsymbol{\\lambda}}L\\left(\\mathbf{x}&#94;{\\ast},\\boldsymbol{\\lambda}&#94;{\\ast},\\boldsymbol{\\mu}&#94;{\\ast}\\right) = \\mathbf{0} & \\boldsymbol{\\mu}&#94;{\\ast}\\geq\\mathbf{0}\\\\ \\nabla_{\\boldsymbol{\\mu}}L\\left(\\mathbf{x}&#94;{\\ast},\\boldsymbol{\\lambda}&#94;{\\ast},\\boldsymbol{\\mu}&#94;{\\ast}\\right) \\leq \\mathbf{0} & \\mu_i&#94;{\\ast}h_i(\\mathbf{x}&#94;{\\ast}) = 0,\\ \\forall i \\end{cases} \\end{aligned} $$ .prompt { /* This is for jupyter blog.*/ min-width: 0; /* This padding is tuned to match the padding on the CodeMirror editor. */ padding: 0em 0.4em 0em 0em; margin: 0px; font-family: monaco; } /*蛍光ペン(pink)*/ .marker-pink { color: #c45a5a; background: linear-gradient(transparent 70%, #ff66ff 60%); font-weight: bold; } /*蛍光ペン(blue) & hover info*/ .marker-info { color: #5C7DC4; background: linear-gradient(transparent 70%, #66FFCC 60%); font-weight: bold; position: relative; cursor: pointer; } .marker-info:hover:before { opacity: 1; z-index: 2; } .marker-info:before { content: attr(aria-label); opacity: 0; position: absolute; top: 30px; right: -90px; font-size: 14px; width: 300px; padding: 10px; color: #fff; background-color: #555; border-radius: 3px; pointer-events: none; } /* 枠囲み */ .frame { border: solid 1.0px #000000; padding: 0.5em 1em; margin: 2em 0; } /* 暗記用 question box */ span .qbox{ display: none; } span.qbox-wrapper:hover .qbox-default{ display: none; } span.qbox-wrapper:hover .qbox{ display: inline; } .qbox-wrapper{ font-weight: bold; padding: 5px 10px; border-radius: 5px; border: solid 2px #000000; margin: 5px } .qbox-wrapper:hover{ text-shadow: 0px 0px 6px rgba(255, 255, 255, 1); -webkit-box-shadow: 0px 5px 40px -10px rgba(0,0,0,0.57); -moz-box-shadow: 0px 5px 40px -10px rgba(0,0,0,0.57); transition: all 0.4s ease 0s; } /* 画像吹き出し */ .balloon { display: table; width: 100%; } .balloon_img { display: table-cell; vertical-align: middle; width: 50%; padding-right: 10px; } .balloon_comment { border: #83274e solid 4px; position: relative; background: #fff; padding: 12px; border-radius: 13px; display: block } .balloon_comment::before { content: \"\"; position: absolute; border-right: 23px solid #83274e; border-bottom: 20px solid transparent; border-top: 20px solid transparent; top: 30%; left: -23px; } .balloon_comment::after { content: \"\"; position: absolute; border-right: 24px solid #fff; border-bottom: 20px solid transparent; border-top: 20px solid transparent; top: 30%; left: -17px; } if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-3.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-3.html"},{"title":"RNA-seqデータ解析（バッチスクリプト版）","text":"8A+hwf0piZOwZDOuIqBDvQ==;;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"情報基礎実験","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験-12.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験-12.html"},{"title":"RNA-seqデータ解析（対話モード版）","text":"TJ9ffnn25+BwtiZZOEv1Pg==;;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"情報基礎実験","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験-11.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験-11.html"},{"title":"ゲノム解析ツールの環境構築","text":"8eY3hEtJBqN5jpyPwr7gFg==;;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"情報基礎実験","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験-10.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験-10.html"},{"title":"逐次最小問題最適化法(SMO)","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) In [1]: import numpy as np import matplotlib.pyplot as plt 二次計画問題を解くアルゴリズム概観 アルゴリズム 説明 伝統的な二次計画法のアルゴリズム 計算コスト及びメモリ使用量の面で現実的には厳しい。 チャンキング(chunking) カーネル行列からラグランジュ乗数が $0$ となるデータに対応する行および列を取り除いても、ラグランジュ関数が不変であることを利用し、元々の二次計画問題は、より次元数の小さな問題を順番に解くことで、最終的には $0$ とならないラグランジュ乗数だけを残す、という問題に帰着する。 射影共役勾配法(projected conjugate gradient method) チャンキングを実装する手法 分解法(decomposition method) チャンキングと同様 サイズの小さな二次計画問題を繰り返し解く という手法だが、ここの部分問題の大きさが一定であるため、任意の大きさのデータに対応できる。 逐次最小問題最適化法(SMO;sequential minimal optimization) 分解法の計算コストを削減した手法。たった２つのラグランジュ乗数を含む部分問題を逐次解いていくことで最終的な解を得る。 逐次最小問題最適化法(SMO;sequential minimal optimization) ラグランジュ双対問題 を以下のように定義する。 $$ \\begin{aligned} \\tilde{L}(\\mathbf{a}) &=\\sum_n&#94;Na_n - \\frac{1}{2}\\sum_{n=1}&#94;{N}\\sum_{m=1}&#94;Na_na_mt_nt_mk(\\mathbf{x}_n,\\mathbf{x}_m)& (7.10)\\\\ a_n & \\geq 0,\\quad n=1,\\ldots,N & (7.11)\\\\ \\sum_{n=1}&#94;Na_nt_n &= 0 & (7.12) \\end{aligned} $$ 逐次最小問題最適化法(SMO;sequential minimal optimization) は反復法である。 適当な初期値 $\\mathbf{a}&#94;{(0)}$ から出発して、更新 $\\mathbf{a}&#94;{(k)} \\rightarrow \\mathbf{a}&#94;{(k+1)}$ を繰り返す。 この際、 １度には2つの成分しか動かさない。 ここで、$a_p$ と $a_q$ だけ動かすことを考える。 （他の $a_n$ は定数とみなす） この時、制約条件より $$ a_pt_p + a_qt_q = 0-\\sum_{n\\neq p,q} a_nt_n = \\mathrm{const.}$$ が成立する。したがって、 $$ \\frac{\\partial a_q}{\\partial a_p} = -\\frac{t_p}{t_q} =-t_pt_q \\cdots (\\ast)$$ と解析的に偏微分を求めることが可能である。 目的関数 $\\tilde{L}$ の変化量 以下、$K_{ij} = k\\left(\\mathrm{x}_i,\\mathrm{x}_j\\right)$ とおく。ここで、 $$a_p\\mapsto a_p+\\Delta_p, \\quad a_q\\mapsto a_q+\\Delta_q$$ と更新した時、目的関数 $\\tilde{L}$ の変化量 $\\Delta\\tilde{L}$ は、 $$ \\begin{aligned} \\Delta\\tilde{L} &= \\Delta_p + \\Delta_q - \\Delta_pt_p\\sum_{n=1}&#94;Na_nt_nk(\\mathbf{x}_p,\\mathbf{x}_n) - \\Delta_qt_q\\sum_{n=1}&#94;Na_nt_nk(\\mathbf{x}_q,\\mathbf{x}_n)\\\\ &-\\frac{1}{2}\\left[\\Delta_p&#94;2k(\\mathbf{x}_p,\\mathbf{x}_p) + 2\\Delta_p\\Delta_qt_pt_qk(\\mathbf{x}_p,\\mathbf{x}_q) + \\Delta_q&#94;2k(\\mathbf{x}_q,\\mathbf{x}_q)\\right] \\end{aligned} $$ となる。 $(\\ast)$ より $\\Delta_q = -t_pt_q\\Delta_p$ である。 $t_p=t_q(\\Longleftrightarrow\\Delta_q=-\\Delta_p)$ の時と $t_p\\neq t_q$ の時に場合分けをし、それぞれ $\\Delta_p$ で変化量を偏微分して $0$ とおく。 結果は共に等しく、以下で表される。 $$ \\begin{aligned} \\Delta_p &= \\frac{1-t_pt_q + t_p\\left(\\sum_{n=1}&#94;Na_nt_nK_{qn} - \\sum_{n=1}&#94;Na_nt_nK_{pn}\\right)}{K_{pp} - 2K_{pq} + K_{qq}}\\\\ &= \\frac{1-t_pt_q + t_p\\left(y(\\mathbf{x_q}) - y(\\mathbf{x}_q)\\right)}{K_{pp} - 2K_{pq} + K_{qq}}\\\\ \\end{aligned} $$ クリッピング この時、 $t_pa_p+t_qa_q=c$ $a_p\\geq0$ $a_q\\geq0$ が成立していなければならないので、以下を満たすように $\\Delta_p$ の クリッピング を行う必要がある。 $t_p=t_q$ のときは $ 0 \\leq a_p + \\Delta_p \\leq c/t_p$ $t_p=-t_q$ のときは $ \\mathrm{max}\\{0,c/t_p\\}\\leq a_p+\\Delta_p$ 変数の選択方法 最後に、動かす $\\mu_p,\\mu_q$ の選択基準であるが、SMO法の発見者である $John C. Platt$ の論文に従うならば以下の様になる。 $KTT$条件を破る$a_p$を$1$つ目に選ぶ。 続いて、$\\left|y\\left(\\mathbf{x_q}\\right)-y\\left(\\mathbf{x_p}\\right)\\right|$ が最大となる$a_p$を次に選ぶ。 これは、$\\left|y\\left(\\mathbf{x_q}\\right)-y\\left(\\mathbf{x_p}\\right)\\right|$ が大きければそれだけステップ幅も大きくなるため収束が早くなるというヒューリスティックス（直感）である。 これを繰り返して、$\\tilde{L}$ が収束するまで反復を繰り返せば学習完了である。 実装例 kerasy.ML.svm.BaseSVM に記載。 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-5.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-5.html"},{"title":"ラグランジュ双対問題","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) はじめに このノートは、 Qiita記事『ラグランジュ双対問題について解説』 を引用しています。 ラグランジュ双対関数 ラグランジアン 次の最小化問題を考える. $$ \\begin{aligned} \\min_{x\\in\\mathbb{R}&#94;n} &~ f_0(x)\\\\ \\mathrm{s.t.} &~ f_i(x)\\le 0,~ i=1,\\ldots,m\\\\ &~ h_i(x)=0, ~i=1,\\ldots, p \\end{aligned} $$ 実行可能領域は 空でない とする この最適化問題の 最適値 を \\(p&#94;\\star\\) と書く 凸性は特に仮定しない 主問題 という ラグランジアンは次のように定義される。 $$L(x, \\lambda, \\nu):=f_0(x)+\\sum_{i=1}&#94;m\\lambda_i f_i(x)+\\sum_{i=1}&#94;p\\nu_i h_i(x)$$ \\(\\lambda_i, \\nu_i\\) はラグランジュ未定乗数 ラグランジュ双対関数 ラグランジュ双対関数は次のように定義される. $$ \\begin{aligned} g(\\lambda,\\nu)&:=\\inf_{x\\in D} L(x, \\lambda, \\nu)\\\\ &=\\inf_{x\\in D} \\left(f_0(x)+\\sum_{i=1}&#94;m\\lambda_i f_i(x)+\\sum_{i=1}&#94;p\\nu_i h_i(x)\\right) \\end{aligned} $$ \\(D:=\\bigcap_{i=0}&#94;m \\mathrm{dom}(f_i) \\cap \\bigcap_{i=1}&#94;p \\mathrm{dom}(h_i)\\) 双対関数は, \\((\\lambda,\\nu)\\) のアフィン関数の各点でのinfになっているため, 必ずconcave(上に凸)となる (もとの問題が凸でなくても) 証明してみた: $$ \\begin{aligned} & g(t\\lambda_a+(1-t)\\lambda_b, t\\nu_a+(1-t)\\nu_b)\\\\ =&\\inf_{x\\in\\mathcal{D}}\\left(tL(x,\\lambda_a,\\nu_a)+(1-t)L(x,\\lambda_b,\\nu_b)\\right)\\\\ \\ge& t\\inf_{x\\in\\mathcal{D}}L(x,\\lambda_a,\\nu_a)+(1-t)L(x,\\lambda_b,\\nu_b)\\\\ =& tg(\\lambda_a,\\nu_a)+(1-t)g(\\lambda_b,\\nu_b) \\end{aligned} $$ 最適値の下限 任意の \\(\\lambda\\ge0, \\nu\\) に対して, 次が成り立つ. \\($g(\\lambda,\\nu)\\le p&#94;\\star\\) 証明: \\(\\tilde{x}\\) を実行可能解とする: \\(f_i(\\tilde{x})\\le 0, h_i(\\tilde{x}) = 0\\) \\(\\lambda\\ge 0\\) を仮定 このとき, \\(L(\\tilde{x},\\lambda,\\nu)\\) の値は, \\(f_0(\\tilde{x})\\) でおさえられる: $$ L(\\tilde{x},\\lambda,\\nu)=f_0(\\tilde{x})+\\underbrace{\\sum_{i=1}&#94;{m}\\lambda_if_i(\\tilde{x})}_{\\le0}+\\underbrace{\\sum_{i=1}&#94;{p}\\nu_ih_i(\\tilde{x})}_{=0}\\le f_0(\\tilde{x}) $$ ゆえに, \\(g(\\lambda, \\nu)\\) は \\(f_0(\\tilde{x})\\) でおさえられる: $$ \\therefore~g(\\lambda, \\nu)=\\inf_{x\\in\\mathcal{D}}L(x,\\lambda,\\nu)\\le L(\\tilde{x},\\lambda,\\nu)\\le f_0(\\tilde{x}) $$ 任意の \\(\\tilde{x}\\) に対して, \\(g(\\lambda, \\nu)\\le f_0(\\tilde{x})\\) が成り立つため, \\(g(\\lambda, \\nu)\\le p&#94;\\star\\) が成り立つ. 結論: 双対関数の値は, 主問題の最適値を超えない 線形近似による解釈 元の主問題と等価な次の最小化問題を考える. $$ \\min_{x}~f_0(x)+\\sum_{i=1}&#94;{m}I_-(f_i(x))+\\sum_{i=1}&#94;{p}I_0(h_i(x)) $$ ただし, \\(I_{-},I_{0}\\) は 指示関数 : $$ I_-(u):=\\begin{cases} 0&u\\le 0\\\\ \\infty& u>0 \\end{cases},~~~ I_0(u):=\\begin{cases} 0&u = 0\\\\ \\infty& u\\ne 0 \\end{cases} $$ 最小化するのが目的であるが, 指示関数は制約を満たさないと無限大になってしまう. この指示関数は, 制約違反に対する不満度 を表していると解釈できる. ここで, \\(I_-(u)\\) を \\(\\lambda_i u (\\lambda_i\\ge 0)\\) \\(I_0(u)\\) を \\(\\nu_iu\\) というように指示関数を近似する. $$ \\min_{x}~L(x,\\lambda,\\nu)=f_0(x)+\\sum_{i=1}&#94;{m}\\lambda_i f_i(x)+\\sum_{i=1}&#94;{p}\\nu_i h_i(x) $$ これは制約違反をソフトに近似したものと考えられる もちろん, 制約を違反するほど不満度は上昇するようになっている 不等式制約に関して, 違反しているとき \\(f_i(x)>0\\) であり, \\(\\lambda_if_i(x)\\ge0\\) 任意の \\(u\\) に関して, \\(\\lambda_iu \\le I_-(u)\\) と \\(\\nu_iu \\le I_0(u)\\) が成り立つため, 双対関数が元の主問題の下限を与えることがわかる 共役関数 \\(f\\) の共役関数 \\(f&#94;\\ast\\) は次で定義される. $$ f&#94;*(y)=\\sup_{x\\in\\mathrm{dom} f}(y&#94;\\top x-f(x)). $$ 共役関数と双対問題には密接な関係がある. ( フェンシェル双対定理 ) たとえば, 機械学習のよくある形 $$ \\min_{w\\in\\mathbb{R}&#94;d} f(Xw)+g(w) $$ の双対問題は, $$ \\max_{\\alpha\\in\\mathbb{R}&#94;n} -f&#94;\\ast(-\\alpha)-g&#94;\\ast(X&#94;\\top\\alpha) $$ というように共役関数を使って表現できる. そのため, 凸共役 を覚えておけば, 形式的に双対問題を導出できる. 証明は簡単で, ラグランジアン \\(L(w,z,\\alpha)=f(z)+g(w)+\\alpha&#94;\\top(z-Xw)\\) を考えて, 双対関数の定義にしたがって \\(w\\in\\mathbb{R}&#94;d,z\\in\\mathbb{R}&#94;n\\) に関して最小化するだけだ. ちなみに, このとき最適解 \\(w&#94;\\star,\\alpha&#94;\\star\\) に関して $$ w&#94;\\star \\in \\partial g&#94;\\ast(X&#94;\\top \\alpha&#94;\\star), \\quad \\alpha&#94;\\star \\in -\\partial f(Xw&#94;\\star) $$ が成立する (KKT条件). ラグランジュ双対問題 双対関数から双対問題へ. ラグランジュ双対問題 ここまでで, 双対関数が主問題の下限を与えることを示した. 自然な疑問は, 「ラグランジュ双対関数から得られる最も良い下限はどれくらいなのか?」ということだ. 最も良い下限は次の最大化問題を解くことで得られる. $$ \\begin{aligned} \\max_{\\lambda,\\nu}~&g(\\lambda,\\nu)\\\\ \\mathrm{s.t.} ~&\\lambda\\ge0 \\end{aligned} $$ $ これは, ラグランジュ双対問題 と呼ばれる 双対実行可能領域: \\((\\lambda,\\nu)\\) に関して, \\(\\lambda\\ge0\\) かつ \\(g(\\lambda,\\nu)>-\\infty\\) \\((\\lambda&#94;\\star,\\nu&#94;\\star)\\) : 双対問題の最適解 \\(d&#94;\\star\\) : 双対問題の最適値 双対問題は必ず凸最適化問題 目的関数が必ずconcaveで, 制約が凸であるため これは, 主問題が凸最適化でなくても成り立つ 弱双対性 $$ d&#94;\\star\\le p&#94;\\star $$ 主問題の凸性にかかわらず, 成り立つ この不等式は, \\(p&#94;\\star, d&#94;\\star\\) が発散しないときに成り立つ \\(p&#94;\\star - d&#94;\\star\\) を 双対ギャップ という よく最適化アルゴリズムの停止条件に使われる \\(p&#94;\\star\\) を求めるのことが難しいときに \\(d&#94;\\star\\) を求めることで, \\(p&#94;\\star\\) の下限を知ることができる 双対問題は必ず凸であるため, 多くの場合効率的に解ける 強双対性 $$ d&#94;\\star=p&#94;\\star $$ 主問題の最適値が双対問題の最適値と一致するという性質 強双対性は常には成り立たない もし主問題が凸, すなわち: $$ \\begin{aligned} \\min_{x\\in\\mathbb{R}&#94;n} &~ f_0(x)\\\\ \\mathrm{s.t.} &~ f_i(x)\\le 0, ~i=1,\\ldots,m\\\\ &~ Ax=b \\end{aligned} $$ で \\(f_0,\\ldots,f_m\\) が 凸なら, たいていは(いつもではない)強双対性が成り立つ. たとえば, SVMの最適化問題は凸であり, 強双対性が成り立つため, 主問題/双対問題のどちらを解いてもよい. スレーター条件 次を満たすような \\(x\\in\\mathrm{relint}(D)\\) が存在することをいう. $$ f_i(x)<0,~i=1,\\ldots,m,~~~Ax=b $$ $ 主問題が凸でスレーター条件を満たすとき, 強双対性が成り立つ スレーター条件は強双対性の十分条件である (必要十分ではない) もし, \\(f_1,\\ldots,f_k\\) がアフィンなら, より弱い条件が成り立てばよい: $$ f_i(x)\\le 0,~i=1,\\ldots,k,~~~f_i(x)<0,~i=k+1,\\ldots,m,~~~Ax=b $$ 言い換えれば, アフィンの不等式制約は等号を含んでもよい 補足: int(内部)とrelint(相対的内部) \\(\\mathrm{int}(S)\\) : Sに含まれる最大開集合 Sから境界上の点を取り除いたもの \\(\\mathrm{relint}(S)\\) : Sによって拘束される線形空間上で, Sから境界上の点を取り除いたもの. intとrelintの違いのイメージとしては, まっすぐな下敷きのような平面を考えたとき, intは下敷きの平面ごと取り除いてしまい空集合になるのに対して, relintは下敷きの縁を削って残った部分. Example1 \\(S=\\lbrace(x_1,x_2)\\mid 0\\le x_1\\le 1,x_2=0\\rbrace\\) $$ \\mathrm{int}(S)=\\emptyset, \\mathrm{relint}(S)=\\{(x_1,x_2)\\mid 0 < x_1 < 1,x_2=0\\}, (\\mathrm{aff}(S)=\\{(x_1,x_2)\\in\\mathbb{R}&#94;2\\mid x_2=0\\}) $$ Example2 \\(S= \\lbrace (x_1,x_2)\\mid 0\\le x_1\\le 1,0\\le x_2\\le 1\\rbrace\\) $$ \\mathrm{int}(S)=\\mathrm{relint}(S)=\\{(x_1,x_2)\\mid 0 < x_1 < 1,0<x_2<1\\}, (\\mathrm{aff}(S)=\\{(x_1,x_2)\\in\\mathbb{R}&#94;2\\}) $$ 最適性条件 特に主問題の凸性を仮定しない. 相補性条件 特に, 強双対性条件を満たすと仮定すると, $$ \\begin{aligned} f_0(x&#94;\\star)&=g(\\lambda&#94;\\star,\\nu&#94;\\star)\\\\ &=\\inf_{x\\in D} \\left(f_0(x)+\\sum_{i=1}&#94;m\\lambda_i&#94;\\star f_i(x)+\\sum_{i=1}&#94;p\\nu_i&#94;\\star h_i(x)\\right)\\\\ &\\le f_0(x&#94;\\star)+\\sum_{i=1}&#94;m\\lambda_i&#94;\\star f_i(x&#94;\\star)+\\sum_{i=1}&#94;p\\nu_i&#94;\\star h_i(x&#94;\\star)\\\\ &\\le f_0(x&#94;\\star) \\end{aligned} $$ 1行目: 強双対性 2行目: 双対関数の定義 3行目: \\(\\inf\\) の定義 4行目: \\(\\lambda_i&#94;\\star\\ge0, f_i(x&#94;\\star)\\le0, ~i=1,\\ldots,m\\) と \\(h_i(x&#94;\\star)=0, ~i=1,\\ldots,p\\) 1,3行目と3,4行目を考慮すると, $$ \\sum_{i=1}&#94;m\\lambda_i&#94;\\star f_i(x&#94;\\star)=0. $$ 和の各項は非負であるため, $$ \\lambda_i&#94;\\star f_i(x&#94;\\star)=0,~~~i=1,\\ldots,m. $$ これを相補性条件という もし \\(\\lambda_i&#94;\\star>0\\) なら, \\(f_i(x&#94;\\star)=0\\) もし \\(f_i(x&#94;\\star)<0\\) なら, \\(\\lambda_i&#94;\\star=0\\) KKT条件 (Karush-Kuhn-Tucker条件) 強双対性を仮定すると, \\(x&#94;\\star\\) は \\(L(x,\\lambda&#94;\\star,\\nu&#94;\\star)\\) を最小化するため, \\(x&#94;\\star\\) における勾配は0である: $$ \\nabla f_0(x&#94;\\star)+\\sum_{i=1}&#94;m\\lambda_i&#94;\\star \\nabla f_i(x&#94;\\star)+\\sum_{i=1}&#94;p\\nu_i&#94;\\star\\nabla h_i(x&#94;\\star)=0 $$ ゆえに, 最適解で成り立つ式を列挙すると: \\(f_i(x&#94;\\star)\\le 0,~i=1,\\ldots,m\\) \\(h_i(x&#94;\\star)= 0,~i=1,\\ldots,p\\) \\(\\lambda_i\\ge0,~i=1,\\ldots,m\\) \\(\\lambda_i f_i(x&#94;\\star)= 0,~i=1,\\ldots,m\\) \\(\\nabla f_0(x&#94;\\star)+\\sum_{i=1}&#94;m\\lambda_i&#94;\\star \\nabla f_i(x&#94;\\star)+\\sum_{i=1}&#94;p\\nu_i&#94;\\star\\nabla h_i(x&#94;\\star)=0\\) これがいわゆる KKT条件 である. (必要条件) まとめると, 強双対性を満たすなら, 最適解において主変数と双対変数はKKT条件を満たさなければならない. 主問題が凸であるとき, KKT条件は十分条件にもなる. つまり, ある点 \\(\\tilde{x},\\tilde{\\lambda}, \\tilde{\\nu}\\) がKKT条件を満たすなら, \\(\\tilde{x}=x&#94;\\star, \\tilde{\\lambda}=\\lambda&#94;\\star, \\tilde{\\nu}=\\nu&#94;\\star\\) . 十分条件の証明: $$ \\begin{aligned} g(\\tilde{\\lambda},\\tilde{\\nu})&=L(\\tilde{x},\\tilde{\\lambda},\\tilde{\\nu})\\\\ &= f_0(\\tilde{x})+\\sum_{i=1}&#94;m\\tilde{\\lambda}_i f_i(\\tilde{x})+\\sum_{i=1}&#94;p\\tilde{\\nu}_i h_i(\\tilde{x})\\\\ &= f_0(\\tilde{x}) \\end{aligned} $$ 1行目: \\(\\tilde{x}\\) がKKT条件の最後の条件を満たすため 主問題が凸であるため, \\(L(x,\\tilde{\\lambda},\\tilde{\\nu})\\) は \\(x\\) に関して凸である ( \\(\\because\\tilde{\\lambda}_i\\ge0\\) ) \\(\\therefore~L\\) を最小化する \\(x\\) は, 勾配が0である 2行目: ラグランジアンの定義 3行目: \\(\\tilde{x}\\) がKKT条件の2つ目と4つ目を満たすため この式は, 双対ギャップが0であることを意味するため, \\(\\tilde{x},\\tilde{\\lambda}, \\tilde{\\nu}\\) は最適解である. 結論: スレーター条件を満たすとき, KKT条件は最適性の必要十分条件となる if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-4.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-4.html"},{"title":"サポートベクターマシーン(SVM)","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) In [1]: import numpy as np import matplotlib.pyplot as plt In [2]: seed = 0 サポートベクターマシーン(SVM) マージン最大化 に基づく線形識別器 カーネル関数と組み合わせることによって非線形な識別も可能 サンプル間の類似度にしか依存しない （→非ベクトルデータの分類にも適用可能 ） まとめ マージン最大化 という方針で誤差関数を定義する。 汎化性能を高めるために、 スラック変数 を導入して ソフトなマージン最大化に緩和 する ラグランジュ未定乗数法 を用いてラグランジュ関数を得る。 各パラメータについて微分する。 ラグランジュ関数に代入して 双対問題 を得る。 SMO法 などを用いて二次計画問題である双対問題を解く。 無効制約のデータ点は識別関数に影響しなくなる。 （SVMが疎になる。） マージン最大化 「個々のデータに関して確率計算をし、何らかの識別面を求める」 のではなく、 「汎化性能の最も高い識別面を直接考える」 そこで、 「マージン最大化」 という方針で識別面を最適化する。（正則化理論・VC理論により正当化されている。） 最も近いデータ $\\phi(\\mathbf{x}_n)$ までの距離（ マージン ）が最大となるような識別面を選ぶ。（ここでは、距離＝ユークリッド距離とする。） 識別面からちょうどマージンの分だけ離れた面上に乗る特徴ベクトル（一般に複数）を、(広義の) サポートベクトル (support vector) と呼ぶ。 学習法の定式化（2クラス分類） ※ 二クラスが線形分離可能であると仮定する。 線形識別関数が $y(\\mathbf{x}) = \\mathbf{w}&#94;T\\phi(\\mathbf{x})+b$ で表され、$y(\\mathbf{x})$ の正負でクラスを識別するとする。 $y(\\mathbf{x})>0$ の時 $t=1$ $y(\\mathbf{x})<0$ の時 $t=-1$ したがって、 $t_ny(\\mathbf{x}_n)>0$ が全てのデータ $(\\mathbf{x}_n,t_n)$ に対して成り立つ （∵特徴空間で線形分離可能） 学習の目的は「パラメータ $\\mathbf{w}$ と $b$ を決定すること」。 データと識別面の最小距離は $1 / \\|\\mathbf{w}\\|$ で表される。（理由は以下） ※ 記述を簡単にするために線形識別問題の場合で考えるが、非線形写像 $\\phi$ を通しても同様の議論が成り立つ。 点 $\\mathbf{x}_n$ から識別面に下ろした垂線の足を $\\mathbf{x}_{n\\perp}$ 点 $\\mathbf{x}_n$ から識別面までの符号付き距離を $d_n$ と定義すると、 $\\mathbf{w}$ が識別面の法ベクトルであるから、 $\\mathbf{x}_{n\\perp} = \\mathbf{x}_n - d_n\\frac{\\mathbf{w}}{\\|\\mathbf{w}\\|}$ と表せる。 $\\mathbf{x}_{n\\perp}$ は識別面上にあるので、$\\mathbf{w}&#94;T\\mathbf{x}_{n\\perp} + b = 0$ が成り立つ。 したがって、 $$\\mathbf{w}&#94;T\\left(\\mathbf{x}_n - d_n\\frac{\\mathbf{w}}{\\|\\mathbf{w}\\|}\\right) + b = 0\\qquad \\therefore d_n = \\frac{\\mathbf{w}&#94;T\\mathbf{x}_n + b}{\\|\\mathbf{w}\\|}$$ として距離 $d_n$ が定義できる。ここで、$(\\mathbf{w},b)\\rightarrow(k\\mathbf{w},kb)$ としても $d_n$ の値は不変なので、 $$t_n\\left(\\mathbf{w}&#94;T\\mathbf{x}_n + b \\right)= 1\\qquad (7.4)$$ とスケーリングしても一般性を失わない。 なお、 このスケーリング下では、全てのデータ $\\mathbf{x}_n$ に対して $$t_n\\left(\\mathbf{w}&#94;T\\mathbf{x}_n + b \\right) \\geq 1\\qquad (7.5)$$ が成り立つ。 ここまでをまとめると、 マージン最大 は、 『$t_n\\left(\\mathbf{w}&#94;T\\mathbf{x}_n+b\\right)\\geq1\\quad(i=1,\\ldots,n)$ という条件下で、$\\frac{1}{2}||\\mathbf{w}||&#94;2$ を最小化する問題』 であると言える。 この制約付き最適化問題を解くために、$(7.5)$ の各制約式ごとにラグランジュ乗数 $a_n\\geq0$ を導入すると、次のラグランジュ関数が得られる。 $$L(\\mathbf{w},b,\\mathbf{a}) = \\frac{1}{2}\\|\\mathbf{w}\\|&#94;2 - \\sum_{n=1}&#94;{N}a_n\\left\\{t_n\\left(\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n) + b\\right) - 1\\right\\}\\qquad (7.7)$$ よって、$\\mathbf{w},b$ について微分して、 $$ \\begin{aligned} \\frac{\\partial L}{\\partial \\mathbf{w}} &= \\mathbf{w}-\\sum_{n=1}&#94;N a_nt_n\\phi(\\mathbf{x}_n) =0 \\quad \\therefore \\mathbf{w}&#94;{\\ast}=\\sum_{n=1}&#94;N a_nt_n\\phi(\\mathbf{x}_n) & (7.8)\\\\ \\frac{\\partial L}{\\partial b} &= -\\sum_{n=1}&#94;N a_nt_n = 0 \\quad\\therefore\\sum_{n=1}&#94;Na_n&#94;{\\ast}t_n = 0 & (7.9)\\\\ \\end{aligned} $$ が得られる。これらの結果を $(7.7)$ に代入して $\\mathbf{w},b$ を消去すると、元の問題は以下の 双対問題 に変換される。 $$ \\tilde{L}(\\mathbf{a}) =\\sum_n&#94;Na_n - \\frac{1}{2}\\sum_{n=1}&#94;{N}\\sum_{m=1}&#94;Na_na_mt_nt_mk(\\mathbf{x}_n,\\mathbf{x}_m)\\qquad (7.10)$$ なお、$\\mathbf{a}$ は以下の制約を満たす。 $$ \\begin{aligned} a_n & \\geq 0,\\quad n=1,\\ldots,N & (7.11)\\\\ \\sum_{n=1}&#94;Na_nt_n &= 0 & (7.12) \\end{aligned} $$ また、カーネル関数 $k(\\mathbf{x},\\mathbf{x}&#94;{\\prime})$ は、$k(\\mathbf{x},\\mathbf{x}&#94;{\\prime}) = \\phi(\\mathbf{x})&#94;T\\phi(\\mathbf{x})$ と定義される。 この双対問題は二次計画問題であり、 逐次最小問題最適化法(SMO;sequential minimal optimization) などで解くことができる。 なお、今回の場合、 制約条件が全て線形 であることから 実行可能域が凸領域 であることがわかるので、 任意の局所解が大局解になる。 一旦最適な $\\mathbf{a}$ が求まると、識別関数 $y(\\mathbf{x})$ は、 $$y(\\mathbf{x}) = \\mathbf{w}&#94;{\\ast T}\\phi(\\mathbf{x})+b = \\sum_{n=1}&#94;N a_nt_nk(\\mathbf{x},\\mathbf{x}_n) + b \\qquad (7.13)$$ として表すことができる。ここで、 KKT条件より $a_n=0\\Leftrightarrow t_ny(\\mathbf{x}_n)-1>0$ のデータは識別関数に影響しないので、計算から除外することができる。（SVMが疎になる理由） なお、バイアスパタメータ $b$ は、任意のサポートベクトル $\\mathbf{x}_n$ が $t_ny(\\mathbf{x}_n) = 1$ を満たすことから、 $$ \\begin{aligned} &t;_n\\left(\\sum_{m\\in\\mathcal{S}}a_mt_mk(\\mathbf{x}_n,\\mathbf{x}_m) + b\\right) = 1 & (7.17)\\\\ &\\therefore b&#94;{\\ast}= \\frac{1}{N_{\\mathcal{S}}}\\sum_{n\\in\\mathcal{S}}\\left(t_n-\\sum_{n\\in\\mathcal{S}}a_mt_mk(\\mathbf{x}_n,\\mathbf{x}_m)\\right)&(7.18) \\end{aligned} $$ として求めることができる。（数値計算の誤差の影響を小さくするため、$(7.17)$ の両辺に $t_n$ をかけ、全てのサポートベクトルで平均をとった。 In [3]: from kerasy.ML.svm import hardSVC In [4]: n_cls1 = 20 ; n_cls2 = 20 N = n_cls1 + n_cls2 In [5]: train_x = np . concatenate ([ np . random . RandomState ( seed ) . normal ( loc = [ 0.5 , 0 ], scale = [ 0.2 , 0.4 ], size = ( n_cls1 , 2 )), np . random . RandomState ( seed ) . normal ( loc = [ - 0.5 , 0 ], scale = [ 0.2 , 0.4 ], size = ( n_cls2 , 2 )) ]) train_y = np . concatenate ([ np . ones ( shape = n_cls1 ), - np . ones ( shape = n_cls2 ) ]) In [6]: X , Y = np . meshgrid ( np . linspace ( - 1 , 1 , 100 ), np . linspace ( - 1 , 1 , 100 )) In [7]: kernels = [ \"linear\" , \"polynomial\" , \"gaussian\" , \"sigmoid\" , \"laplacian\" , \"inverse_multiquadric\" ] In [8]: n_fig = len ( kernels ) n_col = 3 n_row = n_fig // n_col if n_fig % n_col ==0 else n_fig//n_col+1 fig = plt . figure ( figsize = ( 4 * n_col , 4 * n_row )) for i , kernel in enumerate ( kernels ): ax = fig . add_subplot ( n_row , n_col , i + 1 ) model = hardSVC ( kernel = kernel ) model . fit ( train_x , train_y , max_iter = 1500 , sparse_memorize = False ) Z = np . vectorize ( lambda x , y : model . predict ( np . array ([ x , y ]) . reshape ( 1 , - 1 )))( X , Y ) == 1 ax . pcolor ( X , Y , Z , alpha = 0.3 ) for i in range ( N ): alpha = 1 if i in model . isSV () else 0.3 color = \"red\" if train_y [ i ] == 1 else \"blue\" ax . plot ( train_x [ i , 0 ], train_x [ i , 1 ], marker = \"o\" , color = color , markersize = 10 , alpha = alpha ) ax . set_title ( f \" {kernel} kernel\" ) ax . set_xlim ( - 1 , 1 ), ax . set_ylim ( - 1 , 1 ) plt . tight_layout () plt . show () ソフトマージン ここまで、 「二クラスが線形分離可能である」 という仮定を置いていたが、実際の問題では クラスの分布が重なる場合 があり、そのような場合訓練データを完全に分離する解が汎化能力に優れるとは限らない（というより、過学習する。） そこで、各学習データ $(\\mathbf{x}_n,t_n)$ に対して、 スラック変数 (slack variable) $\\xi_n\\geq 0$ を導入して、 $$ t_ny(\\mathbf{x}_n) \\geq 1 \\Longrightarrow t_ny(\\mathbf{x}_n) \\geq 1 - \\xi_n \\qquad (7.20)$$ と条件を緩める。 （ハードマージンの制約のソフトマージンへの緩和） つまり、 $\\xi_n > 1$ となるデータは誤識別している事になる。 ここでの目標は 『マージンよりも内側（$\\xi_n>0$）のデータ $n$ に対してソフトにペナルティを与えつつマージンを最大化する』 ことである。したがって、次の目的関数を最小化する。 $$C\\sum_{n=1}&#94;N\\xi_n + \\frac{1}{2}\\|\\mathbf{x}_n\\| \\qquad (7.21)$$ なお、$C>0$ は スラック変数を用いて表されるペナルティとマージンの大きさの間の トレードオフを制御するパラメータ である。 したがって、この最小化問題のラグランジュ関数は、新たにラグランジュ乗数 $\\{\\mu_n\\}$ を導入して以下のようになる。 $$L(\\mathbf{w},b,\\boldsymbol{\\xi},\\mathbf{a},\\boldsymbol{\\mu}) = \\frac{1}{2}\\|\\mathbf{w}\\|&#94;2 + C\\sum_{n=1}&#94;N\\xi_n - \\sum_{n=1}&#94;{N}a_n\\left\\{t_n\\left(\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n) + b\\right) - 1 + \\xi_n\\right\\} - \\sum_{n=1}&#94;N\\mu_n\\xi_n\\qquad (7.22)$$ 先程同様 $\\mathbf{w},b,\\xi_n$ について微分して、 $$ \\begin{aligned} \\frac{\\partial L}{\\partial \\mathbf{w}} &= \\mathbf{w}-\\sum_{n=1}&#94;N a_nt_n\\phi(\\mathbf{x}_n) =0 \\quad \\therefore \\mathbf{w}&#94;{\\ast}=\\sum_{n=1}&#94;N a_nt_n\\phi(\\mathbf{x}_n) & (7.29)\\\\ \\frac{\\partial L}{\\partial b} &= -\\sum_{n=1}&#94;N a_nt_n = 0 \\quad\\therefore\\sum_{n=1}&#94;Na_n&#94;{\\ast}t_n = 0 & (7.30)\\\\ \\frac{\\partial L}{\\partial \\xi_n} &= C-a_n-\\mu_n \\quad\\therefore a_n = C-\\mu_n & (7.31) \\end{aligned} $$ が得られる。これらの結果を $(7.22)$ に代入すると、以下の 双対形のラグランジュ関数 が得られる。 $$ \\tilde{L}(\\mathbf{a}) =\\sum_n&#94;Na_n - \\frac{1}{2}\\sum_{n=1}&#94;{N}\\sum_{m=1}&#94;Na_na_mt_nt_mk(\\mathbf{x}_n,\\mathbf{x}_m)\\qquad (7.32)$$ これは、先程の $(7.10)$ と同様の形である。なお、制約式は $$ \\begin{aligned} &a;_n \\geq 0,\\mu_n\\geq 0 \\quad n=1,\\ldots,N\\\\ &\\therefore 0\\leq a_n \\leq C & (7.33)\\\\ &\\sum_{n=1}&#94;Na_nt_n = 0 & (7.34) \\end{aligned} $$ である。 なお、バイアスパタメータ $b$ は、サポートベクトルは $a_n>0$ を満たすが、KKT条件より $a_n$ $\\mu_n$ $\\xi_n$ 説明 $a_n=0$ 識別関数に影響を及ぼさない。 $a_n $\\mu_n>0$ $\\xi_n=0$ ちょうどマージン境界上ある。 $a_n=C$ $\\mu_n=0$ $\\xi_n>0$ マージン内に侵入している。 となることから、$0 $$ \\begin{aligned} &t;_n\\left(\\sum_{m\\in\\mathcal{S}}a_mt_mk(\\mathbf{x}_n,\\mathbf{x}_m) + b\\right) = 1 & (7.36)\\\\ &\\therefore b&#94;{\\ast}= \\frac{1}{N_{\\mathcal{M}}}\\sum_{n\\in\\mathcal{M}}\\left(t_n-\\sum_{n\\in\\mathcal{S}}a_mt_mk(\\mathbf{x}_n,\\mathbf{x}_m)\\right)&(7.37) \\end{aligned} $$ として求めることができる。 In [9]: from kerasy.ML.svm import SVC In [10]: train_x = np . concatenate ([ np . random . RandomState ( seed ) . normal ( loc = [ 0.2 , 0.2 ], scale = [ 0.2 , 0.4 ], size = ( n_cls1 , 2 )), np . random . RandomState ( seed ) . normal ( loc = [ - 0.2 , - 0.2 ], scale = [ 0.3 , 0.2 ], size = ( n_cls2 , 2 )) ]) train_y = np . concatenate ([ np . ones ( shape = n_cls1 ), - np . ones ( shape = n_cls2 ) ]) In [11]: params = [ ( 1e-2 , 1e-2 ),( 1e-2 , 1e0 ),( 1e-2 , 1e2 ), ( 1e1 , 1e-2 ),( 1e1 , 1e0 ),( 1e1 , 1e2 ), ( 1e4 , 1e-2 ),( 1e4 , 1e0 ),( 1e4 , 1e2 ), ] In [12]: n_fig = len ( params ) n_col = 3 n_row = n_fig // n_col if n_fig % n_col ==0 else n_fig//n_col+1 fig = plt . figure ( figsize = ( 4 * n_col , 4 * n_row )) for i ,( C , sigma ) in enumerate ( params ): ax = fig . add_subplot ( n_row , n_col , i + 1 ) model = SVC ( kernel = \"gaussian\" , C = C , sigma = sigma ) model . fit ( train_x , train_y , max_iter = 1500 , sparse_memorize = False ) Z = np . vectorize ( lambda x , y : model . predict ( np . array ([ x , y ]) . reshape ( 1 , - 1 )))( X , Y ) == 1 ax . pcolor ( X , Y , Z , alpha = 0.3 ) for i in range ( N ): alpha = 1 if i in model . isSV () else 0.3 color = \"red\" if train_y [ i ] == 1 else \"blue\" ax . plot ( train_x [ i , 0 ], train_x [ i , 1 ], marker = \"o\" , color = color , markersize = 10 , alpha = alpha ) ax . set_title ( f \"gaussian kernel (C= {C} , $\\sigma= {sigma} $)\" ) ax . set_xlim ( - 1 , 1 ), ax . set_ylim ( - 1 , 1 ) plt . tight_layout () plt . show () 多クラスSVM SVMは本来2クラス識別の為の分類器であるが、これを複数組み合わせるなどの方法によって $K>2$クラスの識別に利用する事が出来る。最もよく用いられる方法は、 one-versus-the-rest方式 と呼ばれる方法であり、「データ $\\mathbf{x}$ が クラス $k$ かそれ以外であるか を識別するSVM $y_k(\\mathbf{x})$ を $K$ クラスそれぞれについて構築し、$ y(\\mathbf{x}) = \\mathop{\\rm arg~max}\\limits_{k}y_k(\\mathbf{x})$ によって $\\mathbf{x}$ のクラスを決定する」 SVM回帰 単純な線形回帰問題においては、次の式で定義される正則化された誤差関数を最小化する。 $$\\frac{1}{2}\\sum_{n=1}&#94;N\\{y_n-t_n\\}&#94;2 + \\frac{\\lambda}{2}\\|\\mathbf{w}\\|&#94;2\\qquad (7.50)$$ 疎な解を得るために、二条誤差関数を $\\epsilon$ 許容誤差関数($\\epsilon$-insentive error function) で置き換える。つまり、予測値 $y(\\mathbf{x})$ と観測値 $t$ の差が $\\epsilon(>0)$ 未満のときは、$\\epsilon$ 許容誤差関数の値は $0$ となる。$\\epsilon$ 許容誤差関数の簡単な例は、 「許容範囲外の値に関しては線形のコストを生じさせる」 ものである。 $$ \\begin{aligned} E_{\\epsilon}\\left(y(\\mathbf{x})-t\\right) = \\begin{cases} 0 & (\\text{ when }|y(\\mathbf{x} - t)| < \\epsilon)\\\\ |y(\\mathbf{x} - t)| - \\epsilon & (\\text{ otherwise }) \\end{cases}\\qquad (7.51) \\end{aligned} $$ In [13]: squareError = lambda x , y_true : 1 / 2 * ( x - y_true ) ** 2 # Sum of Squares Error function epsilonError = lambda x , y_true , epsilon = 1 : 0 if abs ( x - y_true ) < epsilon else abs ( x - y_true ) - epsilon In [14]: X = np . linspace ( - 2 , 2 , 1000 ) plt . plot ( X ,[ squareError ( x , y_true = 0 ) for x in X ], color = \"black\" , label = \"sum of squares error function\" , linestyle = \"--\" ) plt . plot ( X ,[ epsilonError ( x , y_true = 0 ) for x in X ], color = \"black\" , label = \"$\\epsilon$-insentive error function\" ) plt . scatter ( 0 , 0 , marker = \"x\" , color = \"red\" , label = \"y_true\" ) plt . title ( \"Error function comparison\" , fontsize = 16 ), plt . xlim ( - 2 , 2 ), plt . ylim ( -. 1 , 2 ) plt . xlabel ( \"$x$\" , fontsize = 16 ), plt . ylabel ( \"$E(x)$\" , fontsize = 16 ) plt . legend () plt . show () この $\\epsilon$ 許容誤差関数を用いると、結局次の正則化された誤差関数を最小化することになる。 $$C\\sum_{n=1}&#94;NE_{\\epsilon}\\left(y(\\mathbf{x}_n)-t_n\\right) + \\frac{1}{2}\\|\\mathbf{w}\\|&#94;2\\qquad (7.52)$$ 分類問題と同様、この最適化問題をスラック変数 $\\xi_n,\\hat{\\xi}_n$ を導入して表現する。 $\\epsilon$ チューブの中に位置するという条件は $y_n-\\epsilon\\leq t_n \\leq y_n+\\epsilon$ と表せるので、チューブの外側にデータ点が存在することを許すような制約条件は以下のようにかける。 $$ \\begin{aligned} t_n&\\leq y(\\mathbf{x}_n) + \\epsilon + \\xi_n & (7.53)\\\\ t_n&\\geq y(\\mathbf{x}_n) - \\epsilon - \\xi_n & (7.54)\\\\ \\end{aligned} $$ よって、スラック変数を用いると、SVM回帰の誤差関数は次のようにかける。 $$C\\sum_{n=1}&#94;N\\left(\\xi_n + \\hat{\\xi}_n\\right) + \\frac{1}{2}\\|\\mathbf{w}\\|&#94;2\\qquad (7.55)$$ したがって、この最小化問題のラグランジュ関数は、ラグランジュ乗数 $a_n,\\hat{a}_n,\\mu_n,\\hat{\\mu}_n$ を導入して以下のようになる。（$y(\\mathbf{x}_n)= \\mathbf{w}&#94;T\\phi(\\mathbf{x}_n)+b$） $$ \\begin{aligned} L &=C\\sum_{n=1}&#94;N\\left(\\xi_n+\\hat{\\xi}_n\\right)+\\frac{1}{2}\\|\\mathbf{w}\\|&#94;2-\\sum_{n=1}&#94;N\\left(\\mu_n\\xi_n+\\hat{\\mu}_n\\hat{\\xi}_n\\right)\\\\ &-\\sum_{n=1}&#94;Na_n\\left(\\epsilon + \\xi_n + y_n - t_n \\right)-\\sum_{n=1}&#94;N\\hat{a}_n\\left(\\epsilon + \\hat{\\xi}_n - y_n + t_n\\right) \\qquad (7.56)\\\\ \\end{aligned} $$ これまで同様 $\\mathbf{w},b,\\xi_n,\\hat{\\xi}_n$ について微分して、 $$ \\begin{aligned} \\frac{\\partial L}{\\partial \\mathbf{w}} &= \\mathbf{w}-\\sum_{n=1}&#94;Na_n\\phi(\\mathbf{x}_n)-\\sum_{n=1}&#94;N\\hat{a}_n\\phi(\\mathbf{x}_n)=0 \\quad \\therefore \\mathbf{w}&#94;{\\ast}=\\sum_{n=1}&#94;N \\left(a_n-\\hat{a}_n\\right)\\phi(\\mathbf{x}_n) & (7.57)\\\\ \\frac{\\partial L}{\\partial b} &= -\\sum_{n=1}&#94;N a_n + \\sum_{n=1}&#94;N\\hat{a}_n = 0 \\quad\\therefore\\sum_{n=1}&#94;N\\left(a_n-\\hat{a}_n\\right) = 0 & (7.58)\\\\ \\frac{\\partial L}{\\partial \\xi_n} &= C-a_n-\\mu_n \\quad\\therefore a_n + \\mu_n = C & (7.59)\\\\ \\frac{\\partial L}{\\partial \\hat{\\xi}_n} &= C-\\hat{a}_n-\\hat{\\mu}_n \\quad\\therefore \\hat{a}_n + \\hat{\\mu}_n = C & (7.60)\\\\ \\end{aligned} $$ が得られる。これらの結果を $(7.56)$ に代入すると、以下の 双対形のラグランジュ関数 が得られる。 $$ \\begin{aligned} \\tilde{L}(\\mathbf{a},\\hat{\\mathbf{a}}) &= -\\frac{1}{2}\\sum_{n=1}&#94;N\\sum_{m=1}&#94;N\\left(a_n-\\hat{a}_n\\right)\\left(a_m-\\hat{a}_m\\right)k(\\mathbf{x}_n,\\mathbf{x}_m)\\\\ &- \\epsilon\\sum_{n=1}&#94;N\\left(a_n + \\hat{a}_n\\right) + \\sum_{n=1}&#94;N\\left(a_n-\\hat{a}_n\\right)t_n \\end{aligned} \\qquad (7.61) $$ なお、制約式は $$ \\begin{aligned} 0 \\leq a_n &\\leq C & (7.62)\\\\ 0 \\leq \\hat{a}_n &\\leq C & (7.63) \\end{aligned} $$ である。したがって、新しい入力に対する予測値は $$y(\\mathbf{x}) = \\sum_{n=1}&#94;N\\left(a_n-\\hat{a}_n\\right)k(\\mathbf{x},\\mathbf{x}_n) + b\\qquad (7.64)$$ とカーネル関数のみを用いて計算できることがわかる。 なお、バイアスパタメータ $b$ は次のように計算できる。 $C>a_n>0$ が成り立つデータ点についてはKKT条件より $\\xi_n = 0 \\quad \\therefore \\epsilon+y_n-t_n=0$ が成り立つ。よって、 $$ \\begin{aligned} b &= t_n - \\epsilon - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_n)\\\\ &= t_n - \\epsilon - \\sum_{m=1}&#94;N\\left(a_m-\\hat{a}_m\\right)k(\\mathbf{x}_n,\\mathbf{x}_m)\\qquad (7.69) \\end{aligned} $$ $C>\\hat{a}_n>0$ が成り立つデータ点についてはKKT条件より $\\hat{\\xi}_n = 0 \\quad \\therefore \\epsilon+y_n-t_n=0$ が成り立つ。よって、 $$ \\begin{aligned} b &= t_n - \\epsilon - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_n)\\\\ &= t_n - \\epsilon - \\sum_{m=1}&#94;N\\left(a_m-\\hat{a}_m\\right)k(\\mathbf{x}_n,\\mathbf{x}_m)\\qquad (7.69) \\end{aligned} $$ なお、このようにして得られた $b$ の値を全て平均した結果を用いると数値誤差の影響を小さくできる。 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-3.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-3.html"},{"title":"ラグランジュ未定乗数法","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) 条件なし最適化 ある関数 \\(f\\) が与えられた時、それが最小値を取る点を見つけ出す。 $$\\text{min : } f(\\mathbf{x})$$ したがって、微分をとって \\(0\\) になる点を見つければ良い。 $$\\frac{\\partial}{\\partial x}f(x) = 0\\Longrightarrow x&#94;{\\ast}$$ 等式制約付き最適化 $$ \\begin{aligned} \\text{min : } & f(\\mathbf{x})\\\\ \\text{subject to : } & g(\\mathbf{x})=0\\\\ \\end{aligned} $$ ラグランジュ乗数(Lagrangian multiplier) と呼ばれるパラメータ \\(\\lambda\\) を導入した ラグランジュ関数(Lagrangian function) $$L(\\mathbf{x},\\lambda) \\equiv f(\\mathbf{x})+\\lambda g(\\mathbf{x})\\qquad (E.4)$$ の \\(\\mathbf{x}\\) と \\(\\lambda\\) の両方に対する停留点（鞍点）を見つければ、制約付き問題の最適解が得られる。 理由 以下２つの理由より、 \\(\\nabla f\\) と \\(\\nabla g\\) は、 向きが逆の場合も含めて 平行なベクトルとなる。したがって、 あるパラメータ \\(\\lambda\\neq0\\) が存在して、 $$\\nabla f + \\lambda\\nabla g = 0\\qquad (E.3)$$ が成立しなければならない。これは、 \\(\\nabla_{\\mathbf{x}}L=0\\) と表されることがわかる。また、 \\(\\partial L/\\partial\\lambda = 0\\) より、制約式 \\(g(\\mathbf{x})=0\\) も導かれる。 1) \\(\\nabla g(\\mathbf{x})\\) が制約面 \\(g(\\mathbf{x})=0\\) に対して常に垂直 制約面 \\(g(\\mathbf{x})\\) 上の点 \\(\\mathbf{x}\\) と \\(\\mathbf{x}+\\boldsymbol{\\varepsilon}\\) を考える。 すると、 \\(\\mathbf{x}\\) の周りでの \\(g(\\mathbf{x})\\) のテイラー展開より、 $$g(\\mathbf{x} + \\boldsymbol{\\varepsilon}) \\sim g(\\mathbf{x}) + \\boldsymbol{\\varepsilon}&#94;T\\nabla g(\\mathbf{x})\\qquad (E.2)$$ いま、 \\(\\mathbf{x}\\) と \\(\\mathbf{x}+\\boldsymbol{\\varepsilon}\\) は共に制約面上に存在するので $$g(\\mathbf{x})=g(\\mathbf{x}+\\boldsymbol{\\varepsilon})=0$$ が成り立つ。ゆえに、 \\(\\|\\boldsymbol{\\varepsilon}\\|\\rightarrow0\\) の極限では \\(\\boldsymbol{\\varepsilon}&#94;T\\nabla g(\\mathbf{x})\\sim0\\) が成り立つ。 \\(\\boldsymbol{\\varepsilon}&#94;T\\) は制約面上の接線である。 より、ベクトル \\(\\nabla g(\\mathbf{x})\\) は制約面 \\(g(\\mathbf{x})=0\\) に対して垂直である。 2) \\(\\nabla f(\\mathbf{x}&#94;{\\ast})\\) も制約面に対して垂直 もし \\(\\nabla f(\\mathbf{x}&#94;{\\ast})\\) が制約面に対して垂直でないとすると、制約面にそって \\(f(\\mathbf{x})\\) の値がさらに大きくなるように点を動かすことができるはずである。 したがって、制約面上の点で \\(f(\\mathbf{x})\\) を最大化する点 \\(\\mathbf{x}&#94;{\\ast}\\) においては、ベクトル \\(\\nabla f(\\mathbf{x})\\) も制約面に対して垂直でなければならない。 不等式制約付き最適化 $$ \\begin{aligned} \\text{min : } & f(\\mathbf{x})\\\\ \\text{subject to : } & g(\\mathbf{x})\\leq0\\\\ \\end{aligned} $$ ここで、解 \\(\\mathbf{x}&#94;{\\ast}\\in\\Omega\\) には、 無効制約(inactive constraint) \\(\\overset{\\text{def}}{\\Longleftrightarrow}g(\\mathbf{x}&#94;{\\ast}) < 0\\) 有効制約(active constraint) \\(\\overset{\\text{def}}{\\Longleftrightarrow}g(\\mathbf{x}&#94;{\\ast}) = 0\\) の2つの可能性がある。 $$ \\Omega:= \\left\\{\\mathbf{x}\\in\\mathbb{R}&#94;D: g(\\mathbf{x})<0 \\right\\} $$ 無効制約の場合 無効制約 \\(\\left(g(\\mathbf{x})<0\\right)\\) の場合、関数 \\(g(\\mathbf{x})\\) は何も制約を課していないのと同様なので、停留条件は単に \\(\\nabla f(\\mathbf{x}) = 0\\) となる。 なお、これは上記の 等式制約におけるラグランジュ関数 \\((E.4)\\) において \\(\\lambda=0\\) とした場合の停留条件に等しい。 有効制約の場合 有効制約 \\(\\left(g(\\mathbf{x})=0\\right)\\) の場合、 等式制約におけるラグランジュ関数 \\((E.4)\\) において \\(\\lambda\\neq0\\) とした場合の停留条件に等しい。 ただし、 \\(-\\nabla f(\\mathbf{x}&#94;{\\ast})\\) は \\(g(\\mathbf{x})<0\\) の外側へと向かうはず だから、 あるパラメータ \\(\\lambda>0\\) が存在して、 $$\\nabla f(\\mathbf{x}) = -\\lambda\\nabla g (\\mathbf{x})$$ が成立しなければならない。 勾配 意味 最適化問題における問題における意味 \\(\\nabla f(\\mathbf{x})\\) \\(f\\) が大きくなる方向 目的とは別の方向 \\(\\nabla g(\\mathbf{x})\\) \\(g\\) が大きくなる方向 \\(g(\\mathbf{x})<0\\) の外側へと向かう方向 KKT条件 上記の無効制約・有効制約のどちらの場合にせよ、 \\(\\lambda g(\\mathbf{x})=0\\) が成立することがわかる。 したがって、 \\(g(\\mathbf{x})\\leq0\\) という制約の下で \\(f(\\mathbf{x})\\) を最小化するには、以下の Karush-Kuhn-Tucker(KKT)条件 のもとで、 \\(\\mathbf{x},\\lambda\\) に関して ラグランジュ関数 \\((E.4)\\) の停留点を求めれば良い。 $$ \\begin{aligned} \\begin{cases} \\text{Primal feasibility} &g(\\mathbf{x})\\leq0 & (E.9)\\\\ \\text{Dual feasibility} &\\lambda \\geq 0 & (E.10)\\\\ \\text{Complementary slackness} &\\lambda g(\\mathbf{x}) = 0 & (E.11) \\end{cases} \\end{aligned} $$ なお、当然ではあるが、「制約条件の符号の向き」と「目的関数の最大化・最小化」には以下の関係がある。（ \\(\\lambda\\geq0\\) ） 目的関数 \\(f(\\mathbf{x})\\) 制約条件 \\(g(\\mathbf{x})\\) ラグランジュ関数 \\(L(\\mathbf{x},\\lambda)\\) \\(\\min f(\\mathbf{x})\\) \\(g(\\mathbf{x})\\leq0\\) \\(L(\\mathbf{x},\\lambda) = f(\\mathbf{x}) + \\lambda g(\\mathbf{x})\\) \\(\\min f(\\mathbf{x})\\) \\(g(\\mathbf{x})\\geq0\\) \\(L(\\mathbf{x},\\lambda) = f(\\mathbf{x}) - \\lambda g(\\mathbf{x})\\) \\(\\max f(\\mathbf{x})\\) \\(g(\\mathbf{x})\\leq0\\) \\(L(\\mathbf{x},\\lambda) = f(\\mathbf{x}) - \\lambda g(\\mathbf{x})\\) \\(\\max f(\\mathbf{x})\\) \\(g(\\mathbf{x})\\geq0\\) \\(L(\\mathbf{x},\\lambda) = f(\\mathbf{x}) + \\lambda g(\\mathbf{x})\\) 一般化 $$ \\begin{aligned} \\text{min : } & f(\\mathbf{x})\\\\ \\text{subject to : } & g_j(\\mathbf{x})=0 & (j=1,\\ldots,J)\\\\ & h_k(\\mathbf{x})\\leq0 & (k=1,\\ldots,K)\\\\ \\end{aligned} $$ 以下のラグランジュ関数を最適化する。 $$L\\left(\\mathbf{x},\\{\\lambda_j\\},\\{\\mu_k\\}\\right) = f(\\mathbf{x}) + \\sum_{j=1}&#94;J\\lambda_jg_j(\\mathbf{x}) + \\sum_{k=1}&#94;K\\mu_kh_k(\\mathbf{x})\\qquad (E.12)$$ ここで、KKT条件は、以下となる。 $$ \\begin{aligned} \\begin{cases} \\text{Primal feasibility} &g_j(\\mathbf{x})=0,h_k(\\mathbf{x})\\leq0 \\\\ \\text{Dual feasibility} &\\mu_k \\geq 0\\\\ \\text{Complementary slackness} &\\mu_kh_k(\\mathbf{x}) = 0 \\end{cases} \\end{aligned} $$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-2.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-2.html"},{"title":"カーネル法","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) In [1]: import numpy as np import matplotlib.pyplot as plt 講義の構成 パターン認識 カーネル法の紹介 最適化理論の復習 サポートベクターマシーン パターン認識 対象を識別するルールを訓練データより、自動的に取得する。 各対象を全データ共通次元のベクトルで表現すれば、識別関数 $f(\\mathbf{x})$ は、特徴空間上に定義される。 元の空間 （入力空間） を非線形に写像すれば、写像先 （特徴空間） で線形識別することで非線形識別が達成される。 $$\\phi:\\mathbf{X}\\rightarrow\\mathbb{R}&#94;m$$ どのように写像を定めるかは難しい問題。 カーネル法の紹介 上で紹介した写像を、 類似度関数（カーネル関数） に基づいて決める手法。（例：ガウシアンカーネル $K(\\mathbf{x},\\mathbf{x}&#94;{\\prime}) = \\exp\\left(-\\frac{\\|\\mathbf{x}-\\mathbf{x}&#94;{\\prime}\\|}{\\sigma}\\right)$） 類似度さえ定義できればどのような対象（例：生物学的ネットワーク上のタンパク質の分類）にでも適用できる。 複雑な問題になると非常に高い次元に写像する必要があるが、カーネル関数さえ求められれば写像 $\\phi$ を陽に求める必要はない （カーネルトリック） 。 $k(\\mathbf{x},\\mathbf{x}&#94;{\\prime})$ が有効なカーネル関数であるための必要十分条件は、任意の $\\{\\mathbf{x}_n\\}$ に対して、要素が $k(\\mathbf{x}_n,\\mathbf{x}_m)$ で与えられるグラム行列 $\\mathbf{K}$ が半正定値であること。 新しいカーネル関数を定義してそれが有効な関数かを確認するのは大変なので、次の性質を用いて新たな関数を定義することが多い。 新たなカーネル関数を構築するための方法 有効なカーネルとして $k_1(\\mathbf{x},\\mathbf{x}&#94;{\\prime})$ と $k_2(\\mathbf{x},\\mathbf{x}&#94;{\\prime})$ が与えられた時、次の関数もやはりカーネル関数として有効である。 $$\\begin{aligned} k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=c k_{1}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) & (6.13)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=f(\\mathbf{x}) k_{1}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) f\\left(\\mathbf{x}&#94;{\\prime}\\right) & (6.14)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=q\\left(k_{1}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right)\\right) & (6.15)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=\\exp \\left(k_{1}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right)\\right) & (6.16)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=k_{1}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right)+k_{2}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right)& (6.17)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=k_{1}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) k_{2}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) & (6.18)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=k_{3}\\left(\\phi(\\mathbf{x}), \\phi\\left(\\mathbf{x}&#94;{\\prime}\\right)\\right) & (6.19)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=\\mathbf{x}&#94;{\\mathrm{T}} \\mathbf{A} \\mathbf{x}&#94;{\\prime}& (6.20) \\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=k_{a}\\left(\\mathbf{x}_{a}, \\mathbf{x}_{a}&#94;{\\prime}\\right)+k_{b}\\left(\\mathbf{x}_{b}, \\mathbf{x}_{b}&#94;{\\prime}\\right) & (6.21)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=k_{a}\\left(\\mathbf{x}_{a}, \\mathbf{x}_{a}&#94;{\\prime}\\right) k_{b}\\left(\\mathbf{x}_{b}, \\mathbf{x}_{b}&#94;{\\prime}\\right) & (6.22) \\end{aligned}$$ ※ ここで、それぞれの変数は以下の意味を持つ。 変数 説明 $c>0$ 定数 $f(\\cdot)$ 任意の関数 $q(\\cdot)$ 非負の係数を持つ多項式 $\\phi(\\mathbf{x})$ $\\mathbf{x}$ から $\\mathbb{R}&#94;{M}$ への関数 $k_3(\\cdot,\\cdot)$ $\\mathbb{R}&#94;{M}$ で定義された有効なカーネル $\\mathbf{A}$ 対象な半正定値行列 $\\mathbf{x}_a,\\mathbf{x}_b$ $\\mathbf{x}=(\\mathbf{x}_a,\\mathbf{x}_b)$ であるような変数（必ずしも互いに素である必要はない） $k_a,k_b$ それぞれの特徴空間において有効なカーネル関数 カーネル関数の例 $$k(x,x&#94;{\\prime}) = \\boldsymbol{\\phi}(x)&#94;T\\boldsymbol{\\phi}(x&#94;{\\prime}) = \\sum_{i=1}&#94;M\\phi_i(x)\\phi_i(x&#94;{\\prime})\\qquad (6.10)$$ # 多項式 ガウス シグモイド 基底関数 $$\\phi_j(x) = cx&#94;j$$ $$\\phi_j(x) = \\exp\\left\\{-\\frac{(x-\\mu_j)&#94;2}{2s&#94;2}\\right\\}\\qquad(3.4)$$ $$\\begin{aligned}\\phi_j(x) &= \\sigma\\left(\\frac{x-\\mu_j}{s}\\right) & (3.5)\\\\\\sigma(a) &=\\frac{1}{1+\\exp(-a)} & (3.6)\\end{aligned}$$ In [2]: # mapping function def polynomial ( x , d , c = 1 ): return c * x ** d def gaussian ( x , mu , s = 0.1 ): return np . exp ( - (( x - mu ) ** 2 ) / ( 2 * s ** 2 ) ) def logistic ( x , mu , s = 0.1 ): return 1 / ( 1 + np . exp ( - ( x - mu ) / s )) In [3]: # mapping function kernel = lambda phi , x_prime , X , key = None , ** params : np . array ([ sum ([ phi ( x_prime , ** { key : val }) * phi ( x , ** { key : val }) for val in params [ key ]]) for x in X ]) In [4]: params = [ ( polynomial , - 0.5 , \"d\" , np . linspace ( 1 , 11 , 11 )), ( gaussian , 0 , \"mu\" , np . linspace ( - 1 , 1 , 11 )), ( logistic , 0 , \"mu\" , np . linspace ( - 1 , 1 , 11 )), ] In [5]: X = np . linspace ( - 1 , 1 , 1000 ) In [6]: ncol = len ( params ) fig = plt . figure ( figsize = ( 12 , 6 )) for i , param in enumerate ( params ): phi , x_prime , key , vals = param ax_base = plt . subplot2grid (( 5 , ncol ),( 0 , i ), rowspan = 3 ) for val in vals : Y = phi ( X , ** { key : val }) ax_base . plot ( X , Y ) ax_base . set_title ( phi . __name__ ) ax_kernel = plt . subplot2grid (( 5 , ncol ),( 3 , i ), rowspan = 2 ) ax_kernel . plot ( X , kernel ( phi , x_prime , X , key , ** { key : vals })) ax_kernel . scatter ( x_prime , min ( ax_kernel . get_ylim ()), marker = \"x\" , color = \"black\" , label = \"$x&#94;{\\prime}$\" ) ax_kernel . set_xlabel ( \"$x$\" ), ax_kernel . set_title ( \"$k(x,x&#94;{\\prime})$\" ), ax_kernel . legend () plt . tight_layout () plt . show () 様々なカーネル 生物学的配列のカーネル Spectrum kernel (Leslie et al., 2002) Marginalized kernel (Tsuda et al., 2002) Profile kernel (Kuang et al., 2004) Local alignment kernel (Saigo et al., 2004) 木構造に関するカーネル Kernel for phylogenetic profiles (Vert, 2002) Kernel for natural language (Suzuki et al., 2003) Kernel for RNA sequences (Kin et al., 2002) ※ 詳しくは、 Kernel Methods in Computational Biology, MIT Press, 2004 を参照 最適化理論の復習 ラグランジュ未定乗数法 に記載。 サポートベクターマシーン マージン最大化 に基づく線形識別器 カーネル関数と組み合わせることによって非線形な識別も可能 サンプル間の類似度にしか依存しない （→非ベクトルデータの分類にも適用可能） 詳しくは サポートベクターマシン(SVM) に記載。 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-1.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-1.html"},{"title":"生物統計論 第3回","text":"In [1]: import numpy as np import matplotlib.pyplot as plt Section3.1 Multiple Test Correction \"The more inferences are made, the more likely erroneous inferences are to occur.\" (ex. Even if the type1 error rate is 1% for each data, 10 out of 1000 sample will be rejected on average.) Terminology FWER(Family-wise error rate) : the probability of making at least one type I error (FP) in the family. FDR(False discovery rate) : the expected type I error (FP) rate in rejected data. FDR(False discovery rate) Null hypotheses: $H_1,\\ldots,H_{g_j}$ Alternative hypotheses: $H_{g_j+1},\\ldots,H_g$ Procedure to reject hypotheses : $d_{\\alpha}: \\left(P_1,P_2,\\ldots,P_g\\right)\\rightarrow\\left\\{H_{i_1},\\ldots,H_{i_K}\\right\\}$ Expected ratio of FP in rejected hypotheses: $\\mathrm{FP}=\\sum_{k=1}&#94;K\\mathbb{I}(1\\leq i_k\\leq g_j),\\quad \\mathrm{TP}=K-\\mathrm{FP}$ $\\mathcal{Q} = \\begin{cases}0 & \\text{if }K=(\\mathrm{FP+TP})=0\\\\\\frac{\\mathrm{FP}}{\\mathrm{FP}+\\mathrm{TP}} & \\text{if }K>0\\end{cases}$ $$\\mathrm{FDR}(d_{\\alpha})=\\mathbb{E}\\left(\\mathcal{Q}|H_1,\\ldots,H_g\\right)$$ Methods to counteract this problem Bonferroni Correction Set $\\alpha\\left(=s_{\\alpha}\\leq S_h|H_0\\right)\\leftarrow 1/g\\cdot\\alpha_{\\mathrm{FWER}}$ ($g$: sample size) Therefore, we have: $$\\mathbb{P}\\left(\\{s_{\\alpha}\\leq S_1\\}\\cup\\cdots\\cup\\{s_{\\alpha}\\leq S_g\\}|H_0\\right)\\leq\\sum_{h=1}&#94;g\\mathbb{P}\\left(s_{\\alpha}\\leq S_h|H_0\\right) = g\\cdot\\left(\\frac{1}{g}\\alpha_{\\mathrm{FWER}}\\right) = \\alpha_{\\mathrm{FWER}}$$ Benjamini-Hochberg Procedure (B-H Procedure) If we assume data are distributed independently, we have: $$\\left(P_1,\\ldots,P_g\\right)\\sim\\mathrm{Unif}\\left(0,1\\right)&#94;{\\times g_j}\\times\\mathbb{P}\\left(P|H_{\\text{alternative}}\\right)&#94;{\\times\\left(g-g_j\\right)}$$ We sort the p-value as $p_1\\leq\\cdots\\leq p_g$ Then, $$ \\begin{aligned} d_{\\alpha_{\\mathrm{FDR}}}&#94;{\\mathrm{B-H}}(p_1,\\cdots,p_g) &:=\\mathrm{Reject}\\left\\{H_i|1\\leq i\\max\\left\\{n|p_n\\leq\\left(\\frac{n}{g}\\alpha_{\\mathrm{FDR}}\\right)\\right\\}\\right\\}\\\\ &\\Rightarrow \\mathrm{FDR}\\left(d_{\\alpha_{\\mathrm{FDR}}&#94;{\\mathrm{B-H}}}\\right)\\leq\\alpha_{\\mathrm{FDR}} \\end{aligned} $$ Example. $H_i$ $G_1$ $G_2$ $G_3$ $G_4$ $G_5$ $G_6$ $G_7$ $G_8$ $G_9$ $G_{10}$ $p_i$ $0.1$ $0.4$ $0.8$ $0.035$ $0.9$ $0.04$ $0.001$ $0.002$ $0.6$ $0.7$ In [2]: alpha_FDR = 0.1 g = 10 In [3]: idx = np . array ([ i + 1 for i in range ( g )]) p_value = data = np . array ([ 0.1 , 0.4 , 0.8 , 0.035 , 0.9 , 0.04 , 0.001 , 0.002 , 0.6 , 0.7 ]) q = np . array ([( i + 1 ) / g * alpha_FDR for i in range ( g )]) In [4]: p_value_rank = np . argsort ( p_value ) In [5]: for i in reversed ( range ( g )): if q [ i ] >= p_value [ p_value_rank [ i ]]: break In [6]: print ( f \"Reject: {[f'G {idx} ' for idx in idx[p_value_rank[:i+1]]]}\" ) Reject: ['G7', 'G8', 'G4', 'G6'] Quantile-Quantile plot In [7]: x = - np . log10 ( np . array ([( i + 1 ) / g for i in range ( g )])) y = - np . log10 ( p_value [ p_value_rank ]) In [8]: plt . plot ( x , y , color = \"red\" , label = \"observed\" ) plt . plot (( 0 , min ( x [ 0 ], y [ 0 ])),( 0 , min ( x [ 0 ], y [ 0 ])), color = \"black\" , label = \"$y=x$\" ) plt . title ( \"Quantile-Quantile plot\" ) plt . xlabel ( \"$-\\log_ {10} $ expected P-value\" ) plt . ylabel ( \"$-\\log_ {10} $ observed P-value\" ) plt . legend () plt . grid () plt . show () Section3.2 Probabilistic Models Hypothesis Testing Probabilistic Modeling Models data generation processes in uninteresting scenarios $H_0$ Models data generation processes under interesting biological scenario $H_1$ (possibly as well as $H_0$) Show inconsistency with $H_0$ Check fit of the model to the data Problems of Hypothesis Testing Approaches Difficult to model satisfactory, uninteresting scenarios Does not model interesting biological scenarios A rejected hypothesis does not necessarily tell anything interesting Still useful for many small parts of a full analysis probabilistic Modeling Strong regularity from the probability condition Can include various biological knowledge Adjustable to the quality, amount, randomness of the data Conditional probability makes it easy to integrate multiple models Once a satisfactory model is obtained, we can extract various information from expectation values Powerful general tools are available Maximal Likelihood EM algorithms Bayesian inference MCMC sampling etc... Section3.3 Likelihood Q. How to adjust parameters?? A. Maximize the Likelihood likelihood observed data: $\\mathbf{D} = \\left\\{x&#94;{(h)}|h=1,\\cdots,n\\right\\}$ parametrized model distribution: $\\mathbb{P}(x|\\theta)$ Likelihood: $L(\\theta|D) = \\mathbb{P}(D|\\theta) = \\prod_{h=1}&#94;n\\mathbb{P}\\left(x&#94;{(h)}|\\theta\\right)$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物統計論","url":"https://iwasakishuto.github.io/University/3A/生物統計論-3.html","loc":"https://iwasakishuto.github.io/University/3A/生物統計論-3.html"},{"title":"レポート課題2(10/10出題)","text":"1P6GPIskOQEUs05PpdxJZQ==;;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-report2.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-report2.html"},{"title":"連続最適化(1)制約なし最適化","text":"講師： 佐藤一誠 参考書： 最適化手法 参考書： 機械学習のための連続最適化 In [1]: import numpy as np import matplotlib.pyplot as plt 講義概要 凸最適化問題 最急降下法 ニュートン法 準ニュートン法 凸最適化問題 凸関数 任意の $x,x&#94;{\\prime}\\in\\mathcal{X}$、任意の $\\theta\\in[0,1]$ に対して、以下が成り立つような関数を 凸関数(convex function) と呼ぶ。 $$f\\left(\\left(1-\\theta\\right)x + \\theta x&#94;{\\prime}\\right)\\leq\\left(1-\\theta\\right)f(x) + \\theta f\\left(x&#94;{\\prime}\\right)$$ $f$ が一階微分可能の時、$f$ が凸関数になるための必要十分条件は、感覚的には接戦が常に関数の下に来ることで、 $$\\forall x,x&#94;{\\prime}\\in\\mathcal{X},\\quad f\\left(x&#94;{\\prime}\\right)\\geq f(x) + \\nabla f(x)&#94;T\\left(x&#94;{\\prime}-x\\right)$$ $f$ が二階微分可能の時、$f$ が凸関数になるための必要十分条件は、 ヘッセ行列(Hessian matrix) $\\nabla&#94;2f(x)$ が 半正定値(positive semi-definite) ↔︎$\\nabla&#94;2f(x)$ の 固有値(eigenvalue) が全て非負 任意の $x,x&#94;{\\prime}\\in\\mathcal{X}$、任意の $\\theta\\in[0,1]$ に対して、$(1-\\theta)x+\\theta x&#94;{\\prime}$ も $\\mathcal{X}$ に属するとき、$\\mathcal{X}$ を 凸集合(convex set) と呼ぶ。$x$ と $x&#94;{\\prime}$ を結ぶ線分上の全ての点が $\\mathcal{X}$ に属するということ。 最適化 最適化問題(optimization problem)： $\\mathcal{X}\\subset\\mathbb{R}&#94;d$ 上に定義される関数 $f:\\mathcal{X}\\rightarrow\\mathbb{R}$ の最小値 $\\underset{\\mathbf{x}\\in\\mathcal{X}}{\\min}f(\\mathbf{x})$ を求めよ。 最適化アルゴリズム(optimization algorithm)： 収束する点列の生成アルゴリズム 最適性条件：最適化問題の最適解であるための必要条件 制約なし最適化問題(unconstrained optimization problem)： $\\mathcal{X}\\subset\\mathbb{R}&#94;d$ 上に定義される関数 $f:\\mathcal{X}\\rightarrow\\mathbb{R}$ の最小値 $\\underset{\\mathbf{x}\\in\\mathcal{X}}{\\min}f(\\mathbf{x})$ を求めよ。 $f$ を 目的関数(objective function) と呼ぶ。 目的関数は 微分可能(differentiable) と仮定する。 最適性条件：$\\mathbf{x}&#94;{\\star}$ が最適解のとき $$\\nabla f(\\mathbf{x}&#94;{\\star}) = 0$$ 凸最適化問題(convex optimization problem)： 関数 $f$ が凸で集合 $\\mathcal{X}$ も凸 最適解（の集合）が 一意に定まる。 最適解の必要十分条件： 勾配(gradient) がゼロ（凸でない場合は 必要条件 ） 最急降下法 最急降下法(steepest descent method) ※ 勾配法(gradient method)とも。 適当に初期値 $\\mathbf{x}_0$ を定める。 $k=0,1,2,\\ldots$ に対して、収束するまで以下を繰り返す。 $$\\mathbf{x}_{k+1} = \\mathbf{x}_k - \\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)\\quad (\\varepsilon_k>0\\text{ : step size})$$ 凸最適化問題の場合、 大域的最適解(global optimization solution) が求まる 非凸最適化問題の場合、 局所最適解(local optimization solution) しか求められず、様々な初期値から何回か学習して最適解を採用する、ことしかできない。 ステップ幅(step size)の選択 焼きなまし(annealing) ：「最初は大きく、徐々に小さく」。しかし、適切に実装することは容易でない。 正規化(normalization) ：$\\varepsilon_k = \\varepsilon_k&#94;{\\prime}/\\|\\nabla f(\\mathbf{x}_k)\\|$ 勾配が大きいとき安定するが、勾配が小さいときは不安定 厳密直線探索(exact line search) 目的関数の値を最小にするステップ幅を求める。 $$\\underset{\\varepsilon_k>0}{\\min}f\\left(\\mathbf{x}_k-\\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)\\right)$$ $f$ が 単峰関数(unimodal function) の場合は、 二分探索法(binary search) や 黄金分割探索(golden section search) などの探索によって最小値を探す。 一般に、一次元の非線形最小化問題を解く必要があるため、最適なステップ幅の探索に時間がかかる。 厳密直線探索を用いた最急降下法は、 一次収束(linear convergence) する。 $$\\text{Q-linear convergence: }\\|\\mathbf{x}_{k+1}-\\mathbf{x}&#94;{\\star}\\| c\\leq \\|\\mathbf{x}_k-\\mathbf{x}&#94;{\\star}\\|&#94;q,\\quad 0 In [2]: ITERATION = 10 N = 100 fsize = 4 In [3]: a = 10 ; b = 1 A = 2 * np . diag ([ a , b ]) func = lambda x , y : a * x ** 2 + b * y ** 2 In [4]: x1min =- 5 ; x1max = 5 ; x2min =- 5 ; x2max = 5 initialX = np . array ([ x1min + 1 , x2max - 2 ]) x1 = np . linspace ( x1min , x1max , N ) x2 = np . linspace ( x2min , x2max , N ) X1 , X2 = np . meshgrid ( x1 , x2 ) Z = func ( X1 , X2 ) In [5]: def find_step_size ( method , f , X , A , ** kwargs ): df = A . dot ( X ) if method == \"fixed\" : epsilon = 1e-1 elif method == \"exact line search\" : epsilon = np . sum ( np . square ( df )) / np . sum ( np . square ( df ) * A . diagonal ()) elif method == \"backtracking line search\" : epsilon = 1 alpha = kwargs [ \"alpha\" ]; beta = kwargs [ \"beta\" ] while True : newX = X - epsilon * df if f ( newX [ 0 ], newX [ 1 ]) - f ( X [ 0 ], X [ 1 ]) <= - alpha * epsilon * np . sum ( np . square ( df )): break epsilon = beta * epsilon return epsilon In [6]: methods = [ \"fixed\" , \"exact line search\" ] n_methods = len ( methods ) In [7]: fig = plt . figure ( figsize = ( fsize * n_methods , fsize * 2 )) for i , method in enumerate ( methods ): X = initialX ; pX = initialX objective_functions = [] ax_t = fig . add_subplot ( 2 , n_methods , i + 1 ) ax_t . contour ( X1 , X2 , Z , 30 ) ax_t . scatter ( X [ 0 ], X [ 1 ], color = \"red\" , s = 100 , marker = \"*\" , label = \"initial\" ) objective_functions . append ( func ( X [ 0 ], X [ 1 ])) for it in range ( ITERATION ): epsilon = find_step_size ( method , func , X , A , alpha = 0.5 , beta = 0.8 ) df = A . dot ( X ) X = X - epsilon * df ax_t . plot (( X [ 0 ], pX [ 0 ]), ( X [ 1 ], pX [ 1 ]), color = \"black\" , linestyle = \":\" ) ax_t . scatter ( X [ 0 ], X [ 1 ], color = \"black\" , s = 100 , marker = \"*\" ) objective_functions . append ( func ( X [ 0 ], X [ 1 ])) pX = X ax_t . set_title ( method , fontsize = 18 ), ax_t . set_xlabel ( \"x1\" ), ax_t . set_ylabel ( \"x2\" ) ax_t . legend () sharey = ax_b if i != 0 else None ax_b = fig . add_subplot ( 2 , n_methods , n_methods + i + 1 , sharey = sharey ) ax_b . plot ( objective_functions , color = \"black\" ) ax_b . set_xlabel ( \"iteration\" ), ax_b . set_ylabel ( \"objective function\" ) plt . tight_layout () plt . show () 例：$f(x) = 1/2\\mathbf{x}&#94;T\\mathbf{Ax}$ $$ \\begin{aligned} \\frac{\\partial f\\left(\\mathbf{x}_k-\\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)\\right)}{\\partial\\varepsilon_k} &= \\frac{\\partial}{\\partial\\varepsilon_k}\\frac{1}{2}\\left(\\mathbf{x}_k-\\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)\\right)&#94;T\\mathbf{A}\\left(\\mathbf{x}_k - \\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)\\right)\\\\ &= \\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)&#94;T\\mathbf{A}\\nabla f\\left(\\mathbf{x}_k\\right) - \\nabla f\\left(\\mathbf{x}_k\\right)&#94;T\\mathbf{Ax}_k\\\\ &=0\\\\ \\therefore \\varepsilon_k&#94;{\\star} &= \\frac{\\|\\nabla f\\left(\\mathbf{x}_k\\right)\\|&#94;2}{\\nabla f\\left(\\mathbf{x}_k\\right)&#94;T\\mathbf{A}\\nabla f\\left(\\mathbf{x}_k\\right)}\\qquad (\\nabla f\\left(\\mathbf{x}_k\\right) = \\mathbf{Ax}) \\end{aligned} $$ バックトラック直線探索(backtracking line search) $\\varepsilon_k=1$ に初期化 アルミホ基準(Armijo rule) ： $$f\\left(\\mathbf{x}_k-\\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right) - f\\left(\\mathbf{x}_k\\right)\\right) \\leq\\alpha\\|\\nabla f\\left(\\mathbf{x}_k\\right)\\|&#94;2$$ が成り立つまで $\\varepsilon_k$ を $\\varepsilon_k\\leftarrow\\beta\\varepsilon_k$ と減衰させる。（$0<\\alpha, \\beta<1$） 目的関数の減少量の線形予測値の $\\alpha$ 倍の減少を保証している。 $f$ の真の減少量： $$g\\left(\\varepsilon_k\\right) = f\\left(\\mathbf{x}_k-\\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)\\right) - f\\left(\\mathbf{x}_k\\right)$$ $f$ の減少量の 線形予測値 $$\\begin{aligned}\\varepsilon_kg&#94;{\\prime}(0) &=\\varepsilon_k\\cdot\\left( -\\nabla f\\left(\\mathbf{x}_k\\right)&#94;T\\nabla f\\left(\\mathbf{x}_k-0\\cdot\\nabla f\\left(\\mathbf{x}_k\\right)\\right)\\right)\\\\&=-\\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)&#94;T\\nabla f\\left(\\mathbf{x}_k\\right)\\\\&=-\\varepsilon_k\\|\\nabla f\\left(\\mathbf{x}_k\\right)\\|&#94;2 \\end{aligned}$$ In [8]: methods = [ \"fixed\" , \"exact line search\" ] n_methods = len ( methods ) In [9]: fig = plt . figure ( figsize = ( fsize * n_methods , fsize * 2 )) for i , method in enumerate ( methods ): X = initialX ; pX = initialX objective_functions = [] ax_t = fig . add_subplot ( 2 , n_methods , i + 1 ) ax_t . contour ( X1 , X2 , Z , 30 ) ax_t . scatter ( X [ 0 ], X [ 1 ], color = \"red\" , s = 100 , marker = \"*\" , label = \"initial\" ) objective_functions . append ( func ( X [ 0 ], X [ 1 ])) for it in range ( ITERATION ): epsilon = find_step_size ( method , func , X , A , alpha = 0.5 , beta = 0.8 ) df = A . dot ( X ) X = X - epsilon * df ax_t . plot (( X [ 0 ], pX [ 0 ]), ( X [ 1 ], pX [ 1 ]), color = \"black\" , linestyle = \":\" ) ax_t . scatter ( X [ 0 ], X [ 1 ], color = \"black\" , s = 100 , marker = \"*\" ) objective_functions . append ( func ( X [ 0 ], X [ 1 ])) pX = X ax_t . set_title ( method , fontsize = 18 ), ax_t . set_xlabel ( \"x1\" ), ax_t . set_ylabel ( \"x2\" ) ax_t . legend () sharey = ax_b if i != 0 else None ax_b = fig . add_subplot ( 2 , n_methods , n_methods + i + 1 , sharey = sharey ) ax_b . plot ( objective_functions , color = \"black\" ) ax_b . set_xlabel ( \"iteration\" ), ax_b . set_ylabel ( \"objective function\" ) plt . tight_layout () plt . show () 微分不可能な場合 目的関数 $f$ が 微分不可能(non-differentiable) の場合は、微分の概念を一般化した 劣微分 を用いる。 凸関数 $f$ の $\\mathbf{x}&#94;{\\prime}$ での 劣勾配(sub-gradient) とは、全ての $\\mathbf{x}\\in\\mathcal{X}$ に対して次式を満たす $\\mathbf{\\xi}$ $$f(\\mathbf{x})\\geq f\\left(\\mathbf{x}&#94;{\\prime}\\right) + \\mathbf{\\xi}&#94;T\\left(\\mathbf{x}-\\mathbf{x}&#94;{\\prime}\\right)$$ $f$ が微分可能な時、$\\mathbf{\\xi} = \\nabla f\\left(\\mathbf{x}&#94;{\\prime}\\right)$ 上式を満たす $\\mathbf{\\xi}$ 全体を $\\partial f\\left(\\mathbf{x}&#94;{\\prime}\\right)$ で表し、 劣微分(sub-differential) と呼ぶ。 微分不可能な点では、劣微分のどれかの値を用いる。 ニュートン法 一般にニュートン法という名称は、方程式の解を求めるアルゴリズムを指すが、以下を表すことが多い。 適当に初期値 $\\mathbf{x}_0$ を定める。 $k=0,1,2,\\ldots$ に対して、収束するまで以下を繰り返す。 $$\\mathbf{x}_{k+1} = \\mathbf{x}_k - \\varepsilon_k\\left(\\nabla&#94;2f\\left(\\mathbf{x}_k\\right)\\right)&#94;{-1}\\nabla f\\left(\\mathbf{x}_k\\right)$$ 勾配法では一階微分しか用いていないので、二階微分も用いることで反復回数を減らすことが狙い。実際 $k$ が十分大きい時、最適解 $\\mathbf{x}&#94;{\\star}$ の近傍で 二次収束(quadratic convergence) するが、逆行列を求める計算コストが大きい。 二次の テーラー展開(Taylor expansion) を用いて $f$ を現在の解 $\\mathbf{x}_k$ の周りで近似 $\\left(f(\\mathbf{x})\\approx f_k(\\mathbf{x})\\right)$ し、その二次近似を最小にする $\\mathbf{x}_k$ に更新する。 $$f_k(\\mathbf{x}) = f(\\mathbf{x}_k) + \\nabla f(\\mathbf{x}_k)&#94;T\\left(\\mathbf{x}-\\mathbf{x}_k\\right) + \\frac{1}{2}\\left(\\mathbf{x}-\\mathbf{x}_k\\right)&#94;T\\nabla&#94;2f(\\mathbf{x}_k)(\\mathbf{x}-\\mathbf{x}_k)$$ $f_k$ の勾配をゼロと置いた方程式 $$\\nabla f_k(\\mathbf{x}) = \\frac{\\partial f_k(\\mathbf{x})}{\\partial \\mathbf{x}}= \\nabla f(\\mathbf{x}_k) + \\nabla&#94;2f(\\mathbf{x}_k)\\left(\\mathbf{x}-\\mathbf{x}_k\\right) = \\mathbf{0}$$ を解けば、$f_k$ の最小解が以下のように求まる $$\\mathbf{x}&#94;{\\star} = \\mathbf{x}_k - \\left(\\nabla&#94;2 f\\left(\\mathbf{x}_k\\right)\\right)&#94;{-1}\\nabla f\\left(\\mathbf{x}_k\\right)$$ なお、ヘッセ行列が逆行列を持たない時は、 単位行列の定数倍を加えて対処する（正則化, regularization） らしい。 $$\\left(\\nabla&#94;2f\\left(\\mathbf{x}_k\\right) + \\mu\\mathbf{I}\\right)&#94;{-1},\\quad\\mu>0$$ 準ニュートン法 ニュートン法の近似。ニュートン法ではヘッセ行列の逆行列を求めるのに計算コストがかかるので、勾配ベクトル $\\nabla f(\\mathbf{x})$ を用いて近似計算する。 BFGSアルゴリズムを用いたヘッセ行列の更新式が有名 なお、 レポート課題 で詳しく記述しているが、BFGSアルゴリズムのヘッセ行列の更新式は以下で表される。 $$ \\mathbf{H}_{k+1} =\\mathbf{H}_k+\\frac{\\mathbf{t}_k\\mathbf{t}_k&#94;T}{\\mathbf{s}_k&#94;T\\mathbf{t}_k}-\\frac{\\mathbf{H}_k\\mathbf{s}_k\\mathbf{s}_k&#94;T\\mathbf{H}_k}{\\mathbf{s}_k&#94;T\\mathbf{H}_k\\mathbf{s}_k} $$ なお、この時 $$ \\begin{aligned} \\begin{cases} \\mathbf{s}_k &= \\mathbf{x}_{k+1} - \\mathbf{x}_k\\\\ \\mathbf{t}_k &= \\nabla f(\\mathbf{x}_{k+1}) - \\nabla f(\\mathbf{x}_k) \\end{cases} \\end{aligned} $$ まとめ 凸最適化問題 目的関数が凸関数で定義域が凸集合 最適解が一意に定まる 最急降下法 勾配を降下するように値を更新 ステップ幅の選択が重要 目的関数が微分不可能な場合は、劣勾配法や近接勾配法を用いる ニュートン法 二階微分の情報を利用する ヘッセ行列の近似を用いる準ニュートン法が実用的 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-2.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-2.html"},{"title":"生物物理学 第3回","text":"タンパク質の構造と安定性 タンパク質の定義 特定のアミノ酸（20種類）が重合した重合体である。 特定の立体構造をとる。 （これがないと ポリペプチド ） 機能 説明 分子認識 ミオグロビンは酸素を結合。抗体は抗原と結合。 触媒（酵素） 化学反応の反応速度は \\(10&#94;8\\) ~ \\(10&#94;{17}\\) 倍にも加速される。 制御 基質の結合や環境の変化に伴い構造を変化し、タンパク質の反応を制御する。 エネルギー変換 光を電位に換え、ATP分解を力に換える。 構造形成・維持 タンパク質重合体は細胞や細胞内器官の構造を支える。 タンパク質を構成するアミノ酸 d-グリセルアルデヒドの立体配置を基準として、この立体配置を崩さずにできる化合物をD-体、その鏡像異性体がL-体。 ※ タンパク質はL体 構造 名前 略（三文字） 略（一文字） アラニン Ala A アルギニン Arg R アスパラギン Asn N アスパラギン酸 Asp D システイン Cys C グルタミン酸 Glu E グルタミン Gln Q グリシン Gly G ヒスチジン His H イソロイシン Ile I ロイシン Leu L リシン Lys K メチオニン Met M フェニルアラニン Phe F プロリン Pro P セリン Ser S トレオニン Thr T トリプトファン Trp W チロシン Tyr Y バリン Val V # 上記の表は以下のコードを応用して作成した。 url = \"https://ja.wikipedia.org/wiki/タンパク質を構成するアミノ酸\" soup = BeautifulSoup ( requests . get ( url ) . content , 'lxml' ) for li in soup . findAll ( \"li\" , { \"class\" : \"gallerybox\" }): text = str ( li ) . replace ( ' \\n ' , '' ) src = re . findall ( r '<img.*src=\"(.+?)\".*>' , text )[ 0 ] name , l3 , l1 = re . findall ( r '<p>.*title=\"(.+?)\".*<br/>\\((.+?)\\xa0\\/\\xa0(.+?)\\)</p>' , text )[ 0 ] 理論的構造決定法 アミノ酸配列→量子力学→タンパク質の構造とエネルギー状態を決定 シュレディンガー方程式は水素原子のみ解析的に解くことができ、それ以外は近似を行う必要がある。 現在、高精度に計算（第一原理分子動力学法）できるのは1つの構造に対して100原子程度である。 水分子を考慮しなければ、タンパク質の構造や電子軌道を精度よく求めることはできない。 アミノ酸がポリペプチド結合した重合体から機能を持つ立体構造を創り構造を維持するためには、 立体構造が熱力学的に安定でなければならない。 → Gibbs自由エネルギー \\(G\\) を見る。 準安定なのは、 \\(G\\) が極小の時。 最も安定なのは、 \\(G\\) が最小の時。 まとめ 生体の機能を主に担っているのは、タンパク質である。（RNAも機能に重要である。） タンパク質は分子認識・触媒・制御・エネルギー変換・構造形成維持などの機能を有している。 アミノ酸配列から計算によってタンパク質構造を決定することに成功していない。（部分構造はできている。） 酵素機能を行うとき、酵素の多くの場所が構造変化を行う。 第6回目の講義(11/6)の小テスト 指定課題： 第1,2,3回の講義の中で、最も興味のある事柄について300~500字でまとめる。 この事柄と関連する内容を調べるなどして、自分の意見を300~500字で述べる。 図や式を使いわかりやすく説明すること。図や式は文字数に含めない。 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物物理学","url":"https://iwasakishuto.github.io/University/3A/生物物理学-3.html","loc":"https://iwasakishuto.github.io/University/3A/生物物理学-3.html"},{"title":"領域分割","text":"講師： 山崎俊彦 参考書： CG-ARTS協会発行「ディジタル画像処理」 参考書： R. Szeliski, Computer Vision Algorithms and Applications, Springer (PDF版はインターネット上で無料公開) In [1]: import cv2 import numpy as np import matplotlib.pyplot as plt import matplotlib.patches as patches # 円を描画 領域分割 色によるクラス分け（画像のみ） k-means法 mean-shift法 色によるクラス分け（画像のみ） 例えば、画素(RGB)や位置(x,y)の似たものをグループ分けする。 二値分類(FG/BG分類)で有名なのが クロマキー （ 青色・緑色 背景） k-means法 予めクラス数 $k$ を指定してクラスタリング。 $k$ 個の代表点をランダムにサンプリング（$k$ 個をデータの中からとってきても良いし、完全にランダムでばらまいても良い。） 全てのデータ点から一番近い代表点を $1$ つ探す。 $k$ 個のグループの重心を計算し、それを新たな代表点とする。 2,3を繰り返す。 In [2]: from kerasy.ML.KMeans import KMeans In [3]: def decomposeImg ( path , K ): imgsize = 4 fig = plt . figure ( figsize = ( imgsize * 2 , imgsize * 1 )) bgr_img = cv2 . imread ( path ) rgb_img = cv2 . cvtColor ( bgr_img , cv2 . COLOR_BGR2RGB ) img_shape = rgb_img . shape # Original Image. ax_org = fig . add_subplot ( 1 , 2 , 1 ) ax_org . imshow ( rgb_img ) ax_org . set_title ( f \"Original\" ), ax_org . set_xticks ([]), ax_org . set_yticks ([]) #=== KMeans === x = rgb_img . reshape ( - 1 , 3 ) model = KMeans ( K = K , random_state = 0 ) model . fit ( x ) cls , mu = model . predict ( x ) mu = mu . astype ( int ) for k in range ( K ): x [ cls == k ] = mu [ k ] # KMeansed Image. ax_K = fig . add_subplot ( 1 , 2 , 2 ) ax_K . imshow ( x . reshape ( img_shape )) ax_K . set_title ( f \"K= {K} \" ), ax_K . set_xticks ([]), ax_K . set_yticks ([]) n_col = 4 n_row = K // n_col if K % n_col ==0 else K//n_col+1 fig = plt . figure ( figsize = ( imgsize * n_col , imgsize * n_row )) for i , k in enumerate ( range ( K )): ax = fig . add_subplot ( n_row , n_col , i + 1 ) data = np . zeros ( shape = x . shape ) data [ cls == k ] = mu [ k ] ax . imshow ( data . astype ( int ) . reshape ( img_shape )) ax . set_title ( f \"Color No.{i+1:<0{len(str(K))}}, rgb=({','.join(mu[k].astype(int).astype(str))})\" ) ax . set_xticks ([]), ax . set_yticks ([]) plt . tight_layout () plt . show () In [4]: decomposeImg ( path = \"lenna.png\" , K = 8 ) mean-shift法 画像領域の分割や対象画像の追跡に用いられる手法。 $d$ 次元の特徴量（ex. $\\mathrm{R,G,B},x,y$）を持った $N$ 個のデータ点 $\\mathbf{x}_i$ が分布しているときに、この点群 $\\mathbf{x}_i$ を標本点として得られるような確率密度関数 $f(\\mathbf{x})$ を考え、その標本点から確率密度関数 $f(\\mathbf{x})$ の極大点を探索する手法。 点群が集中している場所は確率密度関数 $f(\\mathbf{x})$ の値が高く、まばらな場所は低くなる。 ある任意の観測点 $\\mathbf{y}_j$ から半径 $h$ の超球を考え、その範囲にある点群 $\\mathbf{x}_i$ の平均 $\\mathbf{x}_c$ を計算し、その位置に観測点 $\\mathbf{y}_{j+1}$ を移動する。 この操作を繰り返すと観測点は最大勾配の方向に移動し、やがて極大点に収束する。 このように、 「近傍の点群の平均(mean)位置に移動(shift)を繰り返し、極大点を求める方法」 から ミーンシフト法(mean-shift) と呼ばれる。 In [5]: fig , ax = plt . subplots ( figsize = ( 6 , 6 )) # Circle r = 0.7 c = patches . Circle ( xy = ( 0 , 0 ), radius = r , ec = 'black' , fill = False ) ax . add_patch ( c ) # Sample Data X , Y = np . random . RandomState ( 123 ) . uniform ( low =- 0.3 , high = 1 , size = ( 2 , 50 )) cls = np . sqrt ( X ** 2 + Y ** 2 ) < r ax . scatter ( X , Y , c = cls , cmap = \"Set1_r\" , alpha = 0.7 ) # Center ax . scatter ( 0 , 0 , color = \"black\" , s = 100 ) ax . text ( 0.05 , - 0.05 , \"$\\mathbf {y} _ {j} $\" , fontsize = 12 ) # Mean mux , muy = np . mean ( X [ cls ]), np . mean ( Y [ cls ]) ax . scatter ( mux , muy , color = \"black\" , marker = '*' , s = 100 ) ax . text ( mux + 0.05 , muy , \"$\\mathbf {x} _c(=\\mathbf {y} _{j+1})$\" , fontsize = 12 ) # Arrow ax . annotate ( '' , xy = ( mux , muy ), xytext = ( 0 , 0 ), arrowprops = dict ( width = 2 , headwidth = 8 , headlength = 10 , connectionstyle = 'arc3' , facecolor = 'blue' , edgecolor = 'blue' ) ) # Radius ax . plot (( 0 , 0 ),( 0 , - r ), color = \"black\" ) ax . text ( 0.05 , - r / 2 , \"r\" , fontsize = 12 ) ax . set_xlim ( - 1 , 1 ) ax . set_ylim ( - 1 , 1 ) plt . show () カーネル密度関数を用いた確率密度関数の推定 $d$ 次元空間内の $N$ 個の点群 $\\mathbf{x}_i$ を考える。この点群をある確率分布に従う標本と考えたとき、$d$ 次元空間内の任意の点 $\\mathbf{x}$ における確率密度関数 $f(\\mathbf{x})$ は、以下の方法で推定される。 $$f(\\mathbf{x}) = \\frac{c_{kd}}{Nh&#94;{d}}\\sum_{i=1}&#94;Nk\\left(\\left|\\frac{\\mathbf{x}-\\mathbf{x}_i}{h}\\right|&#94;2\\right)$$ $c_{hd}$ は、確率密度関数 $f(\\mathbf{x})$ 全体の積分を $1$ にするための正規化係数。 $k(t)$ は、カーネル関数 $K(t)$ の プロファイル で、$K(t)=k(|t|&#94;2)$ 以下の２つのカーネルが代表的である。 ガウシアンカーネル(Gaussian) エパネックニコフカーネル(Epanechnikov) $$K(t) = \\exp\\left(-\\frac{\\mid t\\mid&#94;2}{2}\\right)$$ $$K(t) = \\begin{cases}1- \\mid t\\mid&#94;2 & (\\mid t\\mid\\leq1)\\\\0 & (\\text{otherwise})\\end{cases}$$ 確率密度関数の勾配 勾配法(gradient method) を用いて極大点を逐次的に求めるために、確率密度関数の勾配 $\\nabla f(\\mathbf{x})$ を求める。 $$ \\begin{aligned} \\nabla f(\\mathbf{x}) &= \\frac{2c_{kd}}{Nh&#94;{d+2}}\\sum_{i=1}&#94;Nk'\\left(\\left|\\frac{\\mathbf{x}-\\mathbf{x}_i}{h}\\right|&#94;2\\right)\\left(\\mathbf{x}-\\mathbf{x}_i\\right)\\\\ &= \\frac{2c_{kd}}{Nh&#94;{d+2}}\\sum_{i=1}&#94;N\\left(g_i\\mathbf{x}_i-g_i\\mathbf{x}\\right), \\quad g(t) = -k'(t),g'(t)=g\\left(\\left|\\frac{\\mathbf{x}-\\mathbf{x}_i}{h}\\right|\\right)&#94;2\\\\ &= \\frac{2c_{kd}}{Nh&#94;{d+2}}\\left\\{\\sum_{i=1}&#94;Ng_i\\right\\}\\left\\{\\frac{\\sum_{i=1}&#94;Ng_i\\mathbf{x}_i}{\\sum_{i=1}&#94;Ng_i}-\\mathbf{x}\\right\\} \\end{aligned} $$ 項 説明 $$\\frac{2c_{kd}}{Nh&#94;{d+2}}\\left\\{\\sum_{i=1}&#94;Ng_i\\right\\}$$ ガウシアンカーネルやエパネックニコフカーネルを用いた場合、正になる。 $$\\left\\{\\frac{\\sum_{i=1}&#94;Ng_i\\mathbf{x}_i}{\\sum_{i=1}&#94;Ng_i}-\\mathbf{x}\\right\\}$$ ミーンシフト と呼ばれる項で、観測点 $\\mathbf{x}$ の近傍のデータ点群 $\\mathbf{x}_i$ の加重平均位置と $\\mathbf{x}$ 自身の差分ベクトルを示す。 勾配法を用いた極大点探索（ミーンシフト法） 初期化：$\\mathbf{y}_0\\leftarrow\\mathbf{x}$ 更新（ミーンシフト） $$\\mathbf{y}_{j+1}\\leftarrow \\mathbf{y}_j + \\left(\\frac{\\sum_{i=1}&#94;Ng_i\\mathbf{x}_i}{\\sum_{i=1}&#94;Ng_i}-\\mathbf{y}_j\\right) = \\frac{\\sum_{i=1}&#94;Ng_i\\mathbf{x}_i}{\\sum_{i=1}&#94;Ng_i}$$ $|\\mathbf{y}_{j+1}-\\mathbf{y}_j|<\\text{threshold}$ となるまで2を繰り返す。 収束した $\\mathbf{y}_{j+1}$ を極大点として出力する。 ※ 一般的な勾配法では、更新式 $\\mathbf{y}_{j+1}\\rightarrow\\mathbf{y}_i + \\alpha\\nabla f$ のステップ数 $\\alpha$ を与える必要があるが、ミーンシフト法では ベクトルの大きさは自動的に計算される ので、$\\alpha$ を与える必要がない（らしい…）。 ミーンシフト法を用いたクラスタリングへの応用 $d$ 次元空間中の $N$ 個の点群 $\\mathbf{x}_i$ が与えられた時に、密に分布する点群をクラスタとして分割する。 各点にミーンシフト法を適用し、収束位置 $\\mathbf{x}_i&#94;c$ を計算する。 任意の2個の点 $\\mathbf{x}_i,\\mathbf{x}_j$ について、その収束位置が閾値以下なら（$|\\mathbf{x}_i-\\mathbf{x}_j|<\\text{threshold}$）、この2点を同じ極大点として同じクラスタに入れる。 1,2より、全ての点群 $\\mathbf{x}_i$ を 同じ収束位置（極大点）に属するものごとにクラスタに識別する。 全ての点 $\\mathbf{x}_i$ でこの処理を行わなければならないが、並行化できる。 k-means手法とは異なり、クラスタの数を予め指定する必要がない。 ミーンシフト法を用いたカラー画像の領域分割 カラー画像の $N$ 個の各画素の位置 $\\mathbf{x}_i$ とその画素値 $\\mathbf{v}_i=\\left(R_i,G_i,B_i\\right)$ とし、画素位置-画素値を結合した5次元空間内の点 $\\mathbf{z}_i=(\\mathbf{x}_i,\\mathbf{v}_i)$ を考える。 「距離および色が近い画素が5次元空間内でクラスタを形成している」 とみて、ミーンシフト法で各画素をクラスタリングする。 画素位置に関するバンド幅 $h_s$、画素値に関するバンド幅 $h_r$ を与え、全ての $z_i$ にミーンシフトを行い、収束位置 $\\mathbf{z}&#94;c=(\\mathbf{x}&#94;c,\\mathbf{v}&#94;c)$ を計算する。 $\\mathbf{x}_i$ の画素値を、収束位置の画素の値 $(R&#94;c,G&#94;c,B&#94;c)$ に置き換えることによって、画像の平滑化ができる。 ミーンシフトは、以下の通り計算する。 $$f(\\mathbf{x}) = \\frac{c}{Nh_s&#94;2h_r&#94;3}\\sum_{i=1}&#94;Nk\\left(\\left|\\frac{\\mathbf{x}&#94;s-\\mathbf{x}&#94;s_i}{h_s}\\right|&#94;2\\right)k\\left(\\left|\\frac{\\mathbf{x}&#94;r-\\mathbf{x}&#94;r_i}{h_r}\\right|&#94;2\\right)$$ したがって、以下のとおりに位置を更新する。 $$\\mathbf{y}&#94;{s}_{j+1} = \\frac{\\sum_{i=1}&#94;Ng_{i}&#94;s\\mathbf{x}_i&#94;s}{\\sum_{i=1}&#94;Ng_i&#94;s},\\quad\\mathbf{y}&#94;{r}_{j+1} = \\frac{\\sum_{i=1}&#94;Ng_{i}&#94;r\\mathbf{x}_i&#94;r}{\\sum_{i=1}&#94;Ng_i&#94;r}$$ $(h_s,h_r)$ のパラメータを大きくすると、より大きな領域に同色が統合され、大まかに分割される。 In [6]: from sklearn.cluster import MeanShift In [7]: import time s = time . time () imgsize = 4 fig = plt . figure ( figsize = ( imgsize * 2 , imgsize * 1 )) path = \"lenna.png\" bgr_img = cv2 . imread ( path ) rgb_img = cv2 . cvtColor ( bgr_img , cv2 . COLOR_BGR2RGB ) img_shape = rgb_img . shape # Original Image. ax_org = fig . add_subplot ( 1 , 2 , 1 ) ax_org . imshow ( rgb_img ) ax_org . set_title ( f \"Original\" ), ax_org . set_xticks ([]), ax_org . set_yticks ([]) #=== MeanShift === x = rgb_img . reshape ( - 1 , 3 ) model = MeanShift () model . fit ( x ) cls = model . predict ( x ) mu = model . cluster_centers_ . astype ( int ) K = max ( cls ) + 1 for k in range ( K ): x [ cls == k ] = mu [ k ] # MeanShifted Image. ax_Mean = fig . add_subplot ( 1 , 2 , 2 ) ax_Mean . imshow ( x . reshape ( img_shape )) ax_Mean . set_title ( f \"n_cluster= {K} \" ), ax_Mean . set_xticks ([]), ax_Mean . set_yticks ([]) n_col = 4 n_row = K // n_col if K % n_col ==0 else K//n_col+1 fig = plt . figure ( figsize = ( imgsize * n_col , imgsize * n_row )) for i , k in enumerate ( range ( K )): ax = fig . add_subplot ( n_row , n_col , i + 1 ) data = np . zeros ( shape = x . shape ) data [ cls == k ] = mu [ k ] ax . imshow ( data . astype ( int ) . reshape ( img_shape )) ax . set_title ( f \"Color No.{i+1:<0{len(str(K))}}, rgb=({','.join(mu[k].astype(int).astype(str))})\" ) ax . set_xticks ([]), ax . set_yticks ([]) plt . tight_layout () e = time . time () print ( f \"Processing time: {int((e-s)//60):>02}m {(e-s)%60:.3f}s\" ) plt . show () Processing time: 31m 13.287s In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"映像メディア工学","url":"https://iwasakishuto.github.io/University/3A/映像メディア工学-2-2.html","loc":"https://iwasakishuto.github.io/University/3A/映像メディア工学-2-2.html"},{"title":"領域処理のための特徴量","text":"講師： 山崎俊彦 参考書： CG-ARTS協会発行「ディジタル画像処理」 参考書： R. Szeliski, Computer Vision Algorithms and Applications, Springer (PDF版はインターネット上で無料公開) 領域の特徴量 フーリエ変換 ガボールフィルタ(Gabor Filter) 同時生起確率 In [1]: import cv2 import numpy as np import matplotlib.pyplot as plt （２次元）フーリエ変換 画像は、フーリエ変換によって周波数領域における別の形で表現される。 フーリエ変換の結果は、画像に含まれるそれぞれの周波数成分を表している。 フーリエ変換後の各周波数成分の大きさを成分ごとに変えることにより、元の画像の性質を変えることができる。 （周波数フィルタリング(frequency filtering)） ローパスフィルタ(lowpass fileter) ：画像に含まれる空間周波数成分のうち、低周波数成分は残し、高周波数成分は除去するようなフィルタ。 ハイパスフィルタ(highpass filter) ：上の逆。高周波数成分は残し、低周波数成分を除去するようなフィルタ。 バンドパスフィルタ(bandpass filter) ：ある中間的な周波数の範囲を残すようなフィルタ。 高域強調フィルタ(high-emphasis filter) ：画像の低周波数成分はそのまま保ちつつ、高周波数成分を強調するフィルタ。 $1$ 次元フーリエ変換 簡単のため、まずは一次元フーリエ変換をみる。 名前 数式 説明 フーリエ変換 $$F(\\omega) = \\int_{-\\infty}&#94;{\\infty}f(t)e&#94;{-i\\omega t}dt$$ 数直線上の表現 （空間領域） から周波数による表現 （周波数領域） への変換 逆フーリエ変換 $$f(x) = \\int_{-\\infty}&#94;{\\infty}F(\\omega)e&#94;{i\\omega x}d\\omega$$ 周波数領域にある関数を元の空間領域に戻す変換 実装 二つの正弦波を重ねた波から、それぞれの成分を取り出すことができるか確かめる。なお、ここでは numpy.fft.fft を利用しています。 これは、 高速フーリエ変換(Fast Fourier Transform) と呼ばれる、 高速に「離散フーリエ変換」を行うアルゴリズム を実装したものです。 In [2]: N = 10000 dt = 0.01 time = np . arange ( 0 , N * dt , dt ) freq = np . linspace ( 0 , 1.0 / dt , N ) In [3]: def sin ( A , f , p ): \"\"\" @param A: Amplitude @param f: Frequency[Hz] @param p: phase \"\"\" func = lambda t : A * np . sin ( 2 * np . pi * f * t + p1 ) return func In [4]: # parameters f1 , f2 = 5 , 8 # frequency[Hz] A1 , A2 = 5 , 3 # Amplitude p1 , p2 = 0 , 1 / 2 * np . pi # phase In [5]: y1 = sin ( A1 , f1 , p1 )( time ) y2 = sin ( A2 , f2 , p2 )( time ) y = y1 + y2 # superposition In [6]: # Computes the discrete Fourier transform (DFT) of a sequence yf = np . fft . fft ( y ) / ( N / 2 ) # Fast Fourier transform. In [7]: fig = plt . figure ( figsize = ( 8 , 4 )) ax1 = fig . add_subplot ( 2 , 1 , 1 ) ax1 . set_ylabel ( \"amplitude\" ) ax1 . set_xlabel ( \"time\" ) ax1 . set_xlim ( 0 , 1 ) ax1 . plot ( time , y , label = \"y(y1+y2)\" , color = \"blue\" ) ax1 . plot ( time , y1 , label = f \"y1(A= {A1} ,f= {f1} )\" , alpha = 0.3 , color = \"green\" ) ax1 . plot ( time , y2 , label = f \"y2(A= {A2} ,f= {f2} )\" , alpha = 0.3 , color = \"red\" ) ax1 . axhline ( 0 , alpha = 0.3 , color = \"black\" ) ax1 . legend () ax2 = fig . add_subplot ( 2 , 1 , 2 ) ax2 . set_ylabel ( \"amplitude\" ) ax2 . set_xlabel ( \"frequency\" ) ax2 . set_xlim ( 0 , 10 ) ax2 . plot ( freq , abs ( yf ), color = \"blue\" ) plt . tight_layout () plt . show () 見事に、二つの周波数成分を取り出すことができました。 $2$ 次元フーリエ変換 ※ 一般に画像は2次元空間で定義されたある関数 $f(x,y)$ として表現することができる！ 名前 数式 フーリエ変換 $$F(u,v) = \\int_{-\\infty}&#94;{\\infty}\\int_{-\\infty}&#94;{\\infty}f(x,y)\\exp\\left\\{-j2\\pi\\left(ux+vy\\right)\\right\\}dxdy$$ 逆フーリエ変換 $$f(x,y) = \\int_{-\\infty}&#94;{\\infty}\\int_{-\\infty}&#94;{\\infty}F(u,v)\\exp\\left\\{j2\\pi\\left(ux+vy\\right)\\right\\}dudv$$ ここで、以下の値に注目することがよくある。 名前 数式 説明 振幅スペクトル(amplitude spectrum) $$\\mid F(u,v)\\mid = \\sqrt{\\mathrm{Re}\\left\\{F(u,v)\\right\\}&#94;2 + \\mathrm{Im}\\left\\{F(u,v)\\right\\}&#94;2}$$ 絶対値 位相スペクトル(phase spectrum) $$\\arg\\left\\{F(u,v)\\right\\} = \\tan&#94;{-1}\\frac{\\mathrm{Im}\\left\\{F(u,v)\\right\\}}{\\mathrm{Re}\\left\\{F(u,v)\\right\\}}$$ 偏角 パワースペクトル(power spectrum) $$\\mid F(u,v)\\mid&#94;2$$ In [8]: img = cv2 . imread ( 'lenna.png' , 0 ) f = np . fft . fft2 ( img ) fshift = np . fft . fftshift ( f ) magnitude_spectrum = 20 * np . log ( np . abs ( fshift )) plt . subplot ( 121 ), plt . imshow ( img , cmap = 'gray' ) plt . title ( 'Input Image' ), plt . xticks ([]), plt . yticks ([]) plt . xlabel ( 'x' ), plt . ylabel ( 'y' ) plt . subplot ( 122 ), plt . imshow ( magnitude_spectrum , cmap = 'gray' ) plt . title ( 'Magnitude Spectrum' ), plt . xticks ([]), plt . yticks ([]) plt . xlabel ( 'u' ), plt . ylabel ( 'v' ) plt . show () ガボールフィルタ(Gabor Filter) 正弦波とガウス関数の積で表される。（例：2次元ガボールフィルタ） $$g(x,y,\\lambda,\\phi) = \\exp\\left(-\\frac{x&#94;2+y&#94;2}{2\\sigma&#94;2}\\right)\\exp\\left(2\\pi\\lambda i\\left(x\\cos\\phi + y\\sin\\phi\\right)\\right)$$ 実数部： $$\\mathrm{Re}\\left\\{g(x,y,\\lambda,\\phi)\\right\\} = \\exp\\left(-\\frac{x&#94;2+y&#94;2}{2\\sigma&#94;2}\\right)\\cos\\left(2\\pi\\lambda i\\left(x\\cos\\phi + y\\sin\\phi\\right)\\right)$$ 虚数部： $$\\mathrm{Im}\\left\\{g(x,y,\\lambda,\\phi)\\right\\} = \\exp\\left(-\\frac{x&#94;2+y&#94;2}{2\\sigma&#94;2}\\right)\\sin\\left(2\\pi\\lambda i\\left(x\\cos\\phi + y\\sin\\phi\\right)\\right)$$ フーリエ変換では、所望の周波数成分が領域のどこにあるのかわからないのに対し、ガボールフィルタは、 「領域のどの位置にどの方向の周波数が、どの強度であるか」 を知ることができる。 パラメータを操作して様々な方向と強度を持つフィルタ （フィルタバンク(filter bank)） を多数準備 し、特徴抽出を行う。また、ここで抽出された特徴量群は texton と呼ばれる。 入力された画像に対してガボールフィルタを畳み込んで（たたみ込み＝二次元の内積＝類似度を反映）、特徴量 $G(x,y,\\lambda,\\phi)$ を求める式は以下となる。 $$G(x,y,\\lambda,\\phi) = \\sum_u\\sum_vI(x,y)\\ast g(x-u, y-v, \\lambda, \\phi)$$ OpenCVの cv2.getGaborKerne を用いることで簡単にガボールフィルタを生成することができる、 引数 説明 ksize Size of the filter returned. sigma Standard deviation of the gaussian envelope. theta Orientation of the normal to the parallel stripes of a Gabor function. lambd Wavelength of the sinusoidal factor. gamma Spatial aspect ratio. psi Phase offset. In [9]: default_gabor = { \"ksize\" : ( 50 , 50 ), \"sigma\" : 4 , \"theta\" : 0 , \"lambd\" : 10 , \"gamma\" : 0.5 , \"psi\" : 0 , } In [10]: gabor = cv2 . getGaborKernel ( ** default_gabor ) plt . imshow ( gabor , cmap = \"gray\" ) plt . title ( \"default\" ) plt . show () In [11]: def argsGaborRelation ( key , vals ): global default_gabor defaul_val = default_gabor [ key ] N = len ( vals ) n_col = 4 n_row = N // n_col if N % n_col ==0 else N//n_col+1 fig = plt . figure ( figsize = ( 4 * n_col , 4 * n_row )) for i , val in enumerate ( vals ): ax = fig . add_subplot ( n_row , n_col , i + 1 ) default_gabor [ key ] = val gabor = cv2 . getGaborKernel ( ** default_gabor ) ax . imshow ( gabor , cmap = \"gray\" ) ax . set_title ( f \" {key} = {val} \" ) ax . set_xticks ([]), ax . set_yticks ([]) plt . show () default_gabor [ key ] = defaul_val In [12]: argsGaborRelation ( key = \"ksize\" , vals = [( 30 , 30 ),( 20 , 40 ),( 40 , 20 ),( 50 , 50 )]) In [13]: argsGaborRelation ( key = \"sigma\" , vals = [ x for x in range ( 8 )]) In [14]: argsGaborRelation ( key = \"theta\" , vals = [ np . radians ( x ) for x in range ( 0 , 180 , 45 )]) In [15]: argsGaborRelation ( key = \"gamma\" , vals = [ x for x in range ( 4 )]) In [16]: argsGaborRelation ( key = \"psi\" , vals = [ np . radians ( x ) for x in range ( 0 , 360 , 45 )]) In [17]: img = cv2 . imread ( 'lenna.png' , 0 ) color_img = cv2 . imread ( 'lenna.png' ) In [18]: def argsGaborSuperposition ( key , vals ): global default_gabor , img defaul_val = default_gabor [ key ] N = len ( vals ) * 2 n_col = 8 n_row = N // n_col if N % n_col ==0 else N//n_col+1 fig = plt . figure ( figsize = ( 4 * n_col , 4 * n_row )) dests = 0 for i , val in enumerate ( vals ): default_gabor [ key ] = val gabor = cv2 . getGaborKernel ( ** default_gabor ) dest = cv2 . filter2D ( img , cv2 . CV_32F , gabor ) dests += dest ax_dst = fig . add_subplot ( n_row , n_col , 2 * i + 1 ) ax_dst . imshow ( np . power ( dest , 2 ), cmap = \"gray\" ), ax_dst . set_xticks ([]), ax_dst . set_yticks ([]) ax_gab = fig . add_subplot ( n_row , n_col , 2 * i + 2 ) ax_gab . imshow ( gabor , cmap = \"gray\" ), ax_gab . set_xticks ([]), ax_gab . set_yticks ([]) # Superposition fig = plt . figure ( figsize = ( 8 , 16 )) ax_org = fig . add_subplot ( 1 , 2 , 1 ) ax_org . imshow ( cv2 . cvtColor ( color_img , cv2 . COLOR_BGR2RGB )) ax_org . set_title ( \"original image\" ), ax_org . set_xticks ([]), ax_org . set_yticks ([]) ax_dst = fig . add_subplot ( 1 , 2 , 2 ) ax_dst . imshow ( dests , cmap = \"gray\" ) ax_dst . set_title ( f \"Superposition of dst (key= {key} )\" ), ax_dst . set_xticks ([]), ax_dst . set_yticks ([]) plt . show () default_gabor [ key ] = defaul_val In [19]: argsGaborSuperposition ( key = \"theta\" , vals = [ np . radians ( x ) for x in np . linspace ( 0 , 180 , 8 )]) ※ 入力画像の８分割した全ての方向のエッジを重ね合わせると、元の画像をかなり高い精度で復元していることがわかる。 同時生起確率 テクスチャの統計的特徴量を求める。 離れた２つの場所にある画素対の値から、画素値の 一様性 ・ 方向性 ・ コントラスト などの性質を表す特徴量を求める。 ある画素 $i$ と、$i$ から離れた位置にある画素 $j$ の画素対を考え、画素 $i$ と画素 $j$ の相対的な位置を $\\delta=\\langle d,\\theta\\rangle$ とする。 それぞれの画素値を $L_i,L_j$ とし、画素値の対 $(L_i,L_j)$ が生じる出現頻度で、ある同時生起行列 $\\mathbf{H}_{\\delta}(L_i,L_j)$ を考える。ここで、出現頻度の総数で $\\mathbf{H}_{\\delta}(L_1,L_2)$ を正規化し、確率に変換した同時生起行列を $\\mathbf{P}_{\\delta}(L_i,L_j)$ とする。 確率に変換した同時生起行列を用いて計算する主な特徴量には次の $7$ 種類がある。（ここで、画素値のレベル数は $L$ である。）他にも様々な統計量を計算できるが、テクスチャの物理的な意味と直接には結びつかない数値もある。 $$ \\begin{aligned} \\mathrm{ENR} &= \\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}\\left\\{P_{\\delta}(L_i,L_j)\\right\\}&#94;2 & (\\text{energy})\\\\ \\mathrm{CNT} &= \\sum_{k=0}&#94;{L-1}k&#94;2P_{x-y}(k) & (\\text{contrast})\\\\ \\mathrm{CRR} &= \\frac{\\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}L_iL_jP_{\\delta}(L_i,L_j) - \\mu_x\\mu_y}{\\delta_x\\delta_y} & (\\text{correlation})\\\\ \\mathrm{VAR} &= \\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}\\left(L_i-\\mu_x\\right)&#94;2P_{\\delta}(L_i,L_j) & (\\text{variance})\\\\ \\mathrm{EPY} &= -\\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}P_{\\delta}(L_i,L_j)\\log\\left\\{P_{\\delta}(L_i,L_j)\\right\\} & (\\text{entropy})\\\\ \\mathrm{SEP} &= -\\sum_{k=0}&#94;{2L-2}P_{x+y}(k)\\log\\left\\{P_{x+y}(k)\\right\\} & (\\text{sum entropy})\\\\ \\mathrm{IDM} &= \\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}\\frac{1}{1+(L_i-L_j)&#94;2}P_{\\delta}(L_i,L_j) & (\\text{inverse difference moment})\\\\ \\end{aligned} $$ ただし、 $$ \\mu_x = \\sum_{L_i=0}&#94;{L-1}L_iP_x(L_i), \\quad \\mu_y = \\sum_{L_j=0}&#94;{L-1}L_jP_y(L_j)\\\\ \\delta_x&#94;2 = \\sum_{L_i=0}&#94;{L-1}(L_i-\\mu_x)&#94;2P_x(L_i), \\quad \\delta_y&#94;2 = \\sum_{L_j=0}&#94;{L-1}(L_j-\\mu_y)&#94;2P_y(L_j)\\\\ P_x(L_i) = \\sum_{L_j=0}&#94;{L-1}P_{\\delta}(L_i,L_j), \\quad P_y(L_j) = \\sum_{L_i=0}&#94;{L-1}P_{\\delta}(L_i,L_j)\\\\ P_{x-y}(k) = \\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}P_{\\delta}(L_i,L_j)\\quad |L_i-L_j|= k\\\\ P_{x+y}(k) = \\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}P_{\\delta}(L_i,L_j)\\quad |L_i+L_j|= k\\\\ $$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"映像メディア工学","url":"https://iwasakishuto.github.io/University/3A/映像メディア工学-2-1.html","loc":"https://iwasakishuto.github.io/University/3A/映像メディア工学-2-1.html"},{"title":"主成分分析(PCA)","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) 主成分分析(PCA) 次元削減・非可逆データ圧縮・特徴抽出・データの可視化などに使われる。 主部分空間(principal subspace) と呼ばれる低次元の線形空間の上への、データ点の直交射影として、以下の2つの定義方法がある。 「射影されたデータの分散が最大化されるような直交射影」 として定義。→ 分散最大化による定式化 「データ点と射影した点の間の2乗距離の平均値で定義される 射影コスト関数 の期待値を最小化するような線形射影」 として定義。（要はデータ点からの距離を最小化）→ 誤差最小化による定式化 Pythonによる実装 分散最大化による定式化 次元 $D$ のユークリッド空間内のデータ集合 $\\{\\mathbf{x}_n\\}(n=1,\\ldots,N)$ を考える。ここで、 「射影されたデータ点の分散を最大化しながら、データを次元 $M ことを考える。 1次元空間の上への射影（$M=1$） この空間の方向を $D$ 次元ベクトル $\\mathbf{u}_1$ として表す。ここで、興味があるのは $\\mathbf{u}_1$ の方向だけであるので、$\\mathbf{u}_1&#94;T\\mathbf{u}_1 = 1$ としても一般性を失わない。 したがって、各データ点 $\\mathbf{x}_n$ は スカラー値 $\\mathbf{u}_1&#94;T\\mathbf{x}_n$ の上に射影される。ここで、射影されたデータの平均・分散は以下のようになる。 統計量 平均値 $$\\mathbf{u}_1&#94;T\\bar{\\mathbf{x}}\\qquad\\bar{\\mathbf{x}} = \\frac{1}{N}\\sum_{n=1}&#94;N\\mathbf{x}_n\\qquad (12.1)$$ 分散 $$\\mathbf{u}_1&#94;T\\mathbf{Su}_1\\qquad\\mathbf{S} = \\frac{1}{N}\\sum_{n=1}&#94;N\\left(\\mathbf{x}_n-\\bar{\\mathbf{x}}\\right)\\left(\\mathbf{x}_n-\\bar{\\mathbf{x}}\\right)&#94;T\\qquad (12.3)$$ ここで、 射影されたデータの分散を、$\\mathbf{u}_1$ に関して最大化 することを考える。 制約条件 $\\mathbf{u}_1&#94;T\\mathbf{u}_1 = 1$ をラグランジュ乗数 $\\lambda_1$ を利用して導入して $$\\mathbf{u}_1&#94;T\\mathbf{Su}_1 + \\lambda_1\\left(1-\\mathbf{u}&#94;T_1\\mathbf{u}_1\\right)\\qquad (12.4)$$ を最大化すれば良い。$\\mathbf{u}_1$ に関する微分を $0$ とおくことにより、停留条件は $$\\mathbf{Su}_1 = \\lambda_1\\mathbf{u}_1\\qquad (12.5)$$ となることがわかる。これは、 $\\mathbf{u}_1$ が $\\mathbf{S}$ の固有ベクトルであること を示している。左から $\\mathbf{u}&#94;T_1$ をかけると、 $$\\text{Variance} = \\mathbf{u}&#94;T_1\\mathbf{Su}_1 = \\lambda_1 \\qquad (12.6)$$ となる。よって、 分散は $\\mathbf{u}_1$ を、最大固有値 $\\lambda_1$ に属する固有ベクトルに選んだ時に最大になる ことがわかる。 $M$ 次元空間の上への射影（一般解） 演習12.1 帰納法を用いて、 射影されたデータの分散を最大化するようなM次元部分空間の上への線形写像が、データ共分散行列Sの上位M個の固有値に属するM本の固有ベクトルによって定義される ことを示す。 仮定 $M$ に対して上記が成り立つ。 データ空間に対する新しい方向ベクトル $\\mathbf{u}_{M+1}$ は、次を満たす。 $\\mathbf{u}_{M+1}$ は、$\\mathbf{u}_1,\\ldots,\\mathbf{u}_M$ と直交する。（$\\mathbf{u}_{M+1}&#94;T\\mathbf{u}_{j}=0$） 単位長に規格化されている。（$\\mathbf{u}_{M+1}&#94;T\\mathbf{u}_{M+1}=1$） 制約条件を踏まえると、 $$L = \\sum_{i=1}&#94;{M+1}\\mathbf{u}&#94;T_i\\mathbf{Su}_i + \\lambda_{M+1}\\left(1-\\mathbf{u}&#94;T_{M+1}\\mathbf{u}_{M+1}\\right) + \\sum_{j=1}&#94;M\\lambda&#94;{\\prime}_j\\mathbf{u}_{M+1}&#94;T\\mathbf{u}_j$$ 両辺を $\\mathbf{u}_{M+1}$ で微分すると、 $$0 = \\frac{\\partial L}{\\partial \\mathbf{u}_{M+1}} = 2\\left(\\mathbf{Su}_{M+1} - \\lambda_{M+1}\\mathbf{u}_{M+1}\\right) + \\sum_{j=1}&#94;M\\lambda&#94;{\\prime}_j\\mathbf{u}_j\\cdots(\\ast)$$ これに左から $\\mathbf{u}&#94;T_{j}$ をかけると、 $$0 = \\lambda&#94;{\\prime}_j\\quad(\\because \\mathbf{u}_{M+1}&#94;T\\mathbf{u}_{j}=0)$$ となるので、これを $(\\ast)$ に代入して、 $$\\mathbf{Su}_{M+1} = \\lambda_{M+1}\\mathbf{u}_{M+1}$$ また、この時分散は $$\\begin{aligned} \\sum_{i=1}&#94;{M+1}\\mathbf{u}&#94;T_i\\mathbf{Su}_i &= \\sum_{i=1}&#94;{M}\\mathbf{u}&#94;T_i\\mathbf{Su}_i + \\mathbf{u}&#94;T_{M+1}\\mathbf{Su}_{M+1}\\\\ &= \\sum_{i=1}&#94;{M}\\lambda_i + \\lambda_{M+1} \\end{aligned}$$ ここで、仮定より $\\lambda_i$ は、データ共分散行列 $\\mathbf{S}$ の上位 $M$ 個の固有値なので、この分散を最大する $\\lambda_{M+1}$ は、$M+1$ 番目に大きい固有値となる。 誤差最小化による定式化 続いて、射影誤差の最小化に基づいた主成分分析の定式化を考える。 まず、$D$ 次元の基底ベクトル $\\{\\mathbf{u}_i\\}$ から成る完全正規直交系を導入する。（$\\mathbf{u}_i&#94;T\\mathbf{u}_i = \\delta_{ij}$） すると、各データ点はこれらの基底ベクトルの線形結合なので、以下の形で表すことができる。 $$\\mathbf{x}_n = \\sum_{i=1}&#94;D\\alpha_{ni}\\mathbf{u}_i\\qquad (12.8)$$ なお、ここで式 $(12.8)$ は、各データ点 $\\{\\mathbf{x}_n\\}$ を、もともとの座標系から $\\{\\mathbf{u}_i\\}$ で表される新しい座標系への回転を表していると解釈できる （もともと $D$ 個の成分 $\\{x_{n1},\\ldots,x_{nD}\\}$ が、等価な集合 $\\{a_{n1},\\ldots,a_{nD}\\}$ に置き換えられている） 。 上式と $\\mathbf{u}_j$ との内積を取り、正規直交性を使うと、$\\alpha_{nj} = \\mathbf{x}_n&#94;T\\mathbf{u}_j$ を得るので、 $$\\mathbf{x}_n = \\sum_{i=1}&#94;D\\left(\\mathbf{x}_n&#94;T\\mathbf{u}_i\\right)\\mathbf{u}_i\\qquad (12.9)$$ $D$ 次元から $M$ 次元への近似 ここで、$M （$M$ 次元空間で完全に $\\mathbf{x}_n$ を表現するのは一般に不可能なので、近似する。） したがって、各データ点を $$\\tilde{\\mathbf{x}}_n = \\sum_{i=1}&#94;Mz_{ni}\\mathbf{u}_i+\\sum_{i=M+1}&#94;Db_i\\mathbf{u}_i\\qquad (12.10)$$ $\\{z_{ni}\\}$ は特定のデータ点に依存。 $\\{b_i\\}$ は全てのデータ点に共通な定数。 と近似して表す。つまり、 $\\{\\mathbf{u}_i\\}$ と $\\{z_{ni}\\}$ と $\\{b_i\\}$ を調整することで、次元が減ることによってもたらされる歪みを最小化すること がここでの目的となる。 近似による歪み尺度 $J$ 近似による歪みの尺度として、元々のデータ点 $\\mathbf{x}_n$ とその近似 $\\tilde{\\mathbf{x}}_n$ の間の2乗距離をデータ集合に渡って平均したものを採用する。 $$\\begin{aligned} J &= \\frac{1}{N}\\sum_{n=1}&#94;N\\|\\mathbf{x}_n-\\tilde{\\mathbf{x}}_n\\|&#94;2\\qquad (12.11)\\\\ &= \\frac{1}{N}\\sum_{n=1}&#94;N\\left\\|\\mathbf{x}_n-\\left(\\sum_{i=1}&#94;Mz_{ni}\\mathbf{u}_i+\\sum_{i=M+1}&#94;Db_i\\mathbf{u}_i\\right)\\right\\|&#94;2 \\end{aligned}$$ そこで、各変数についての微分を $0$ としてこれを最小化する変数を求める。 $\\{z_{ni}\\}$ に対する最小化 $$ \\begin{aligned} \\frac{\\partial J}{\\partial z_{ni}} &= \\frac{1}{N}\\sum_{n=1}&#94;N\\frac{\\partial}{\\partial z_{ni}}\\left\\{\\left\\|\\sum_{i=1}&#94;Mz_{ni}\\mathbf{u}_i\\right\\|&#94;2 -2\\left(\\mathbf{x}_n-\\sum_{i=M+1}&#94;Db_i\\mathbf{u}_i\\right)&#94;T\\left(\\sum_{i=1}&#94;Mz_{ni}\\mathbf{u}_i\\right) + C \\right\\}\\\\ &= \\frac{1}{N}\\sum_{n=1}&#94;N\\frac{\\partial}{\\partial z_{ni}}\\left\\{\\sum_{i=1}&#94;Mz_{ni}&#94;2-2\\sum_{i=1}&#94;Mz_{ni}\\mathbf{x}_n&#94;T\\mathbf{u}_i\\right\\}\\\\ &= \\frac{1}{N}\\sum_{n=1}&#94;N\\sum_{i=1}&#94;M2\\left\\{z_{ni}-\\mathbf{x}_n&#94;T\\mathbf{u}_i\\right\\} = 0\\\\ \\therefore z_{ni}&#94;{\\star} &= \\mathbf{x}_n&#94;T\\mathbf{u}_i \\qquad (12.12) \\end{aligned} $$ $b_i$ に対する最小化 $$ \\begin{aligned} \\frac{\\partial J}{\\partial b_{i}} &= \\frac{1}{N}\\sum_{n=1}&#94;N\\frac{\\partial}{\\partial b_{i}}\\left\\{\\left\\|\\sum_{i=M+1}&#94;Db_{i}\\mathbf{u}_i\\right\\|&#94;2 -2\\left(\\mathbf{x}_n-\\sum_{i=1}&#94;Mz_{ni}\\mathbf{u}_i\\right)&#94;T\\left(\\sum_{i=M+1}&#94;Db_{i}\\mathbf{u}_i\\right) + C \\right\\}\\\\ &= \\frac{1}{N}\\sum_{n=1}&#94;N\\frac{\\partial}{\\partial b_{i}}\\left\\{\\sum_{i=M+1}&#94;Db_{i}&#94;2-2\\sum_{i=M+1}&#94;Db_{i}\\mathbf{x}_n&#94;T\\mathbf{u}_i\\right\\}\\\\ &= \\frac{1}{N}\\sum_{n=1}&#94;N\\sum_{i=M+1}&#94;D2\\left\\{b_{i}-\\mathbf{x}_n&#94;T\\mathbf{u}_i\\right\\} = 0\\\\ \\therefore b_{i}&#94;{\\star} &= \\bar{\\mathbf{x}}_n&#94;T\\mathbf{u}_i \\qquad (12.13) \\end{aligned} $$ $J$ の整頓 ここで、$(12.10)$ の $z_{ni},b_i$ を置き換えると、 $$ \\begin{aligned} \\mathbf{x}_n-\\tilde{\\mathbf{x}}_n &= \\mathbf{x}_n-\\left(\\sum_{i=1}&#94;M\\mathbf{x}_n&#94;T\\mathbf{u}_i\\mathbf{u}_i + \\sum_{i=M+1}&#94;D\\bar{\\mathbf{x}}&#94;T\\mathbf{u}_i\\mathbf{u}_i\\right)\\\\ &= \\sum_{i=1}&#94;D\\mathbf{x}_n&#94;T\\mathbf{u}_i\\mathbf{u}_i - \\left(\\sum_{i=1}&#94;M\\mathbf{x}_n&#94;T\\mathbf{u}_i\\mathbf{u}_i + \\sum_{i=M+1}&#94;D\\bar{\\mathbf{x}}&#94;T\\mathbf{u}_i\\mathbf{u}_i\\right)\\\\ &= \\sum_{i=M+1}&#94;D\\left\\{\\left(\\mathbf{x}_n-\\bar{\\mathbf{x}}\\right)&#94;T\\mathbf{u}_i\\right\\}\\mathbf{u}_i\\qquad (12.14) \\end{aligned} $$ と表すことができる。この式から、 $\\tilde{\\mathbf{x}}_n$ から $\\mathbf{x}_n$ への変位を表すベクトルは、主部分空間に直交する空間にあることがわかる。 以上より、歪み尺度 $J$ に対する表現を、純粋に $\\{\\mathbf{u}_i\\}$ の関数として、以下のような形で得られることがわかる。 $$J = \\frac{1}{N}\\sum_{n=1}&#94;N\\sum_{i=M+1}&#94;D\\left(\\mathbf{x}_n&#94;T\\mathbf{u}_i-\\bar{\\mathbf{x}}&#94;T\\mathbf{u}_i\\right)&#94;2 = \\sum_{i=M+1}&#94;D\\mathbf{u}&#94;T_i\\mathbf{Su}_i\\qquad (12.15)$$ したがって、あとは$J$ を $\\{\\mathbf{u}_i\\}$ に対して最小化すれば良い。 $M=1,D=2$ の場合 $M=1,D=2$ の場合、 「規格化条件 $\\mathbf{u}&#94;T_2\\mathbf{u}_2 = 1$ の下で、方向 $\\mathbf{u}_2$ を、$J=\\mathbf{u}&#94;T_2\\mathbf{Su}_2$ が最小化されるように選ぶ」 問題となる。 つまり、ラグランジュ乗数を用いて、 $$\\tilde{J} =\\mathbf{u}&#94;T_2\\mathbf{Su}_2 + \\lambda_2\\left(1-\\mathbf{u}&#94;T_2\\mathbf{u}_2\\right)\\qquad (12.16)$$ を最小化する問題となる。 $\\mathbf{u}_i$ についての微分を $0$ とおくと、$\\mathbf{Su}_2 = \\lambda_2\\mathbf{u}_2$ を得る。つまり、$\\mathbf{u}_2$ は固有値 $\\lambda_2$ に属する $\\mathbf{S}$ の固有ベクトルであるので、 任意の固有ベクトルは、この歪み尺度の停留点を定義することとなる。 $(12.16)$ に $\\mathbf{Su}_2 = \\lambda_2\\mathbf{u}_2$ を代入すると、$J=\\lambda_2$ となる。ゆえに、 「$\\mathbf{u}_2$ を、2つある固有値のうち小さい方に対応した固有ベクトルを選ぶことにより、$J$ の最小値を得ることができる」 （↔︎ 主部分空間では大きい方 ） 任意の $D$ と任意の $M 任意の $D$ と任意の $M $$\\mathbf{Su}_i = \\lambda_i\\mathbf{u}_i\\qquad (12.17)$$ で与えられる共分散行列の固有ベクトルに選ぶことによって得られる。ここで $i=1,\\ldots,D$ であり、固有ベクトル $\\{\\mathbf{u}_i\\}$ は正規直交するように選ばれる。 また、対応する歪み尺度の値は、 $$J = \\sum_{i=M+1}&#94;D\\lambda_i\\qquad (12.18)$$ のように、 主部分空間に直交する固有ベクトルの固有値についての単なる和 で与えられる。したがって、$J$ の最小値は、小さい順から $D-M$ 個の固有値に対応する固有ベクトルを選ぶことによって得られ、つまり主部分空間を定義する固有ベクトルは大きい順から $M$ 個の固有値に対応する固有ベクトルになる。 実装 Wine Data Set (UCI Machine Learning Repository) のデータを利用し、13次元、178データ、3種類のワインの属性データから、2つの主成分を取って可視化を行います。 また、PCAは自作のモジュール （ kerasy.ML.decomposition.PCA ） を用います。 In [1]: # データ取得。 ! wget https://raw.githubusercontent.com/maskot1977/ipython_notebook/master/toydata/wine.txt --2019-10-07 13:20:45-- https://raw.githubusercontent.com/maskot1977/ipython_notebook/master/toydata/wine.txt Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.228.133 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.228.133|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 12173 (12K) [text/plain] Saving to: `wine.txt' wine.txt 100%[===================>] 11.89K --.-KB/s in 0s 2019-10-07 13:20:45 (40.4 MB/s) - `wine.txt' saved [12173/12173] In [2]: from kerasy.ML.decomposition import PCA In [3]: import numpy as np import pandas as pd import matplotlib.pyplot as plt from matplotlib.colors import LinearSegmentedColormap In [4]: colors = [( 1 , 0 , 0 ), ( 0 , 0 , 1 ), ( 0 , 1 , 0 )] n_bin = len ( colors ) cmap_name = 'my_list' cm = LinearSegmentedColormap . from_list ( cmap_name , colors , N = n_bin ) In [5]: df = pd . read_csv ( \"wine.txt\" , sep = \" \\t \" , index_col = 0 ) In [6]: df . head ( 3 ) Out[6]: .dataframe thead tr:only-child th { text-align: right; } .dataframe thead th { text-align: left; } .dataframe tbody tr th { vertical-align: top; } class Alcohol Malic acid Ash Alcalinity of ash Magnesium Total phenols Flavanoids Nonflavanoid phenols Proanthocyanins Color intensity Hue OD280/OD315 of diluted wines Proline 0 1 14.23 1.71 2.43 15.6 127 2.80 3.06 0.28 2.29 5.64 1.04 3.92 1065 1 1 13.20 1.78 2.14 11.2 100 2.65 2.76 0.26 1.28 4.38 1.05 3.40 1050 2 1 13.16 2.36 2.67 18.6 101 2.80 3.24 0.30 2.81 5.68 1.03 3.17 1185 class カラムがワインの種類を表しているので、この列は主成分分析から取り除きます。 In [7]: cls = df . iloc [:, 0 ] . values In [8]: df_use = df . iloc [:, 1 :] また、 データの標準化 を行います。 In [9]: df_std = df_use . apply ( lambda x : ( x - x . mean ()) / x . std (), axis = 0 ) In [10]: data = np . array ( df_std ) データの準備ができたので、主成分分析を行います。 In [11]: pca = PCA () pca . fit ( data ) features = pca . transform ( data ) In [12]: plt . figure ( figsize = ( 6 , 6 )) plt . scatter ( features [:, 0 ], features [:, 1 ], c = cls , cmap = cm , edgecolors = 'black' ) plt . title ( \"Same fig with slide :)\" ) plt . xlabel ( \"PC1\" ) plt . ylabel ( \"PC2\" ) plt . grid () plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-2.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-2.html"},{"title":"Nussinov Algorithm","text":"Nussinov Algorithmは、最もシンプルな二次構造予測アルゴリズムである。 「最大いくつの塩基対を作ることができるか」 を調べる。 動的計画法を用いて効率的に調べるために、以下のような Pseudoknot は無視している。様々な重要なRNAが、Pseudoknotの形をとることが確認されているが、相対的にこのような構造をとる確率は低いので、計算の効率を優先し、これらを無視する。 Algorithm ※「$i$ から $j$ までの部分塩基配列で最大幾つの塩基対が作れるか」 を $\\gamma(i,j)$ が保持している。 今回の実装では $j-i-1<3$ の時は、$i,j$ が塩基対を作れないものとしている。 ポイントはRecursionの最後の式で、 「$i$ から $k$ までの部分塩基配列」 と 「$k+1$ から $j$ までの部分塩基配列」 を足し合わせる操作を行う。 （Bifurcation） Initialization: $$\\begin{aligned} \\gamma(i,i)&=0&\\text{ for }i=1\\text{ to }L\\\\ \\gamma(i,i-1)&=0&\\text{ for }i=2\\text{ to }L \\end{aligned}$$ Recursion: $$ \\gamma(i,j) = \\max \\begin{cases} \\gamma(i+1,j)\\\\ \\gamma(i,j-1)\\\\ \\gamma(i+1,j-1)+\\delta(i,j)\\\\ \\max_{i\\leq k\\verb|<|j}\\left[\\gamma(i,k) + \\gamma(k+1,j)\\right] \\end{cases} $$ TraceBack 基本的なアルゴリズムは同じですが、 Bifurcationが起きた際にトレースバックポインターを複数用意する必要があることには注意が必要です。 bp = [] stack = [( 0 , N - 1 )] while ( stack ): i , j = stack . pop ( 0 ) delta = 1 if self . _is_bp ( sequence [ i ], sequence [ j ]) and ( j - i > 3 ) else 0 if ( i >= j ): continue elif gamma [ i + 1 ][ j ] == gamma [ i ][ j ]: stack . append (( i + 1 , j )) elif gamma [ i ][ j - 1 ] == gamma [ i ][ j ]: stack . append (( i , j - 1 )) elif gamma [ i + 1 ][ j - 1 ] + delta == gamma [ i ][ j ]: bp . append (( i , j )); stack . append (( i + 1 , j - 1 )) else : # Bifurcation for k in range ( i , j ): if gamma [ i ][ k ] + gamma [ k + 1 ][ j ] == gamma [ i ][ j ]: stack . append (( k + 1 , j )) stack . append (( i , k )) break 自作のモジュール （kerasy.Bio.structure.Nussinov） を使って実装します。 In [1]: from kerasy.Bio.structure import Nussinov In [2]: model = Nussinov () In [3]: # 以下の形のパラメタファイルを受け取ります。 ! cat params.json { \"type\": \"DNA\", \"Watson_Crick\": true, \"Wobble\": true } In [4]: model . load_params ( \"params.json\" ) In [5]: model . params () | parameter |value| -------------------- |type | DNA| |Watson_Crick| 1| |Wobble | 1| In [6]: # サンプル配列 sequence = \"GCGGAAACGGGGTCA\" In [7]: # 最大ペアの配列 model . predict ( sequence , memorize = True , traceback = True ) Nussinov Algorithm Score: 3 ================================================================= seq: GCGGAAACGGGGTCA : ( (( ))) ================================================================= In [8]: gamma = model . gamma In [9]: # DP行列は以下のようになっています。 model . _printAsTerai ( gamma , sequence ) \\ G C G G A A A C G G G G T C A G 0 0 0 0 0 0 0 1 2 2 2 2 2 3 3 C - 0 0 0 0 0 0 1 2 2 2 2 2 3 3 G - - 0 0 0 0 0 1 1 1 1 1 2 3 3 G - - - 0 0 0 0 1 1 1 1 1 2 3 3 A - - - - 0 0 0 0 0 0 0 1 2 2 2 A - - - - - 0 0 0 0 0 0 1 2 2 2 A - - - - - - 0 0 0 0 0 1 2 2 2 C - - - - - - - 0 0 0 0 1 1 1 1 G - - - - - - - - 0 0 0 0 0 1 1 G - - - - - - - - - 0 0 0 0 1 1 G - - - - - - - - - - 0 0 0 0 0 G - - - - - - - - - - - 0 0 0 0 T - - - - - - - - - - - - 0 0 0 C - - - - - - - - - - - - - 0 0 A - - - - - - - - - - - - - - 0 $i,j$ が塩基対を組むときの塩基対最大化 塩基 $i,j$ が塩基対を組むという制約がある場合を考えます。これは、「$i$ から $j$ までの部分塩基配列を除いた残りで最大幾つの塩基対が作れるか」 を保持した $\\omega(i,j)$ と $\\gamma(i,j)$ を組み合わせることで効率的に求めることができます。 Algorithm 「$i$ から $j$ までの部分塩基配列で最大幾つの塩基対が作れるか」 を $\\gamma(i,j)$ が保持している。 「$i$ から $j$ までの部分塩基配列を除いた残りで最大幾つの塩基対が作れるか」 を $\\omega(i,j)$ が保持している。 Initialization: $$\\omega(i,L) = 0$$ Recursion: $$ \\omega(i,j) = \\max \\begin{cases} \\omega(i-1,j)\\\\ \\omega(i,j+1)\\\\ \\omega(i-1,j+1)+\\delta(i-1,j+1)\\\\ \\max_{1\\leq k\\verb|<|i}\\left[\\omega(k,j) + \\gamma(k,i-1)\\right]\\\\ \\max_{j\\verb|<| k\\leq L}\\left[\\omega(j+1,k) + \\gamma(i,k)\\right] \\end{cases} $$ In [10]: model . outside ( sequence , memorize = True ) In [11]: omega = model . omega In [12]: # DP行列は以下のようになっています。 model . _printAsTerai ( omega , sequence ) \\ G C G G A A A C G G G G T C A G 3 3 3 2 2 2 1 1 1 0 0 0 0 0 0 C - 3 3 3 3 3 2 1 1 1 1 1 1 0 0 G - - 3 3 3 3 2 2 2 2 2 1 1 0 0 G - - - 3 3 3 2 2 2 2 2 1 1 0 0 A - - - - 3 3 2 2 2 2 2 1 1 0 0 A - - - - - 3 3 2 2 2 2 2 1 0 0 A - - - - - - 3 2 2 2 2 2 1 0 0 C - - - - - - - 2 2 2 2 2 1 0 0 G - - - - - - - - 3 3 3 2 2 1 1 G - - - - - - - - - 3 3 3 3 2 2 G - - - - - - - - - - 3 3 3 2 2 G - - - - - - - - - - - 3 3 2 2 T - - - - - - - - - - - - 3 2 2 C - - - - - - - - - - - - - 2 2 A - - - - - - - - - - - - - - 3 $Z(i,j)$ の計算 variable definition $\\gamma\\left(i,j\\right)$ the maximum number of base-pairs for subsequence from $i$ to $j$. $\\omega\\left(i,j\\right)$ the maximum number of base-pairs excluding subsequence from $i$ to $j$. 上記の定義より、$\\gamma,\\omega$ を用いて $Z(i,j)$ が以下のように求まることがわかります。 $$Z(i,j) = \\begin{cases} \\gamma\\left(i+1,j-1\\right) + 1 + \\omega\\left(i,j\\right) & (\\text{if }i\\text{ and }j\\text{-th nucleotides can form a base-pair})\\\\ 0 & (\\text{otherwise}) \\end{cases}$$ In [13]: model . ConstrainedMaximize ( sequence , memorize = False ) \\ G C G G A A A C G G G G T C A G 0 0 0 0 0 0 0 2 0 0 0 0 0 3 0 C - 0 0 0 0 0 0 0 3 3 3 3 0 0 0 G - - 0 0 0 0 0 3 0 0 0 0 0 3 0 G - - - 0 0 0 0 3 0 0 0 0 0 3 0 A - - - - 0 0 0 0 0 0 0 0 3 0 0 A - - - - - 0 0 0 0 0 0 0 3 0 0 A - - - - - - 0 0 0 0 0 0 3 0 0 C - - - - - - - 0 0 0 0 3 0 0 0 G - - - - - - - - 0 0 0 0 0 2 0 G - - - - - - - - - 0 0 0 0 3 0 G - - - - - - - - - - 0 0 0 0 0 G - - - - - - - - - - - 0 0 0 0 T - - - - - - - - - - - - 0 0 0 C - - - - - - - - - - - - - 0 0 A - - - - - - - - - - - - - - 0 備忘録 Nussinov Algorithmでは、これまでの動的計画法とは異なり、 $i,j$ を斜め方向に舐める必要がありました。 そこで、その際に使用したコードを備忘録として残しておきます。 In [14]: import numpy as np In [15]: N = 4 In [16]: # Nussinov Algorithm (γ) idx = 1 arr = np . zeros ( shape = ( N , N ), dtype = int ) for ini_i in reversed ( range ( N )): diff = N - ini_i for i in reversed ( range ( ini_i )): arr [ i ][ i + diff ] = idx idx += 1 print ( arr ) [[0 3 5 6] [0 0 2 4] [0 0 0 1] [0 0 0 0]] In [17]: # Nussinov outsie (ω) idx = 1 arr = np . zeros ( shape = ( N , N ), dtype = int ) for j in reversed ( range ( N )): for i in range ( N - j ): arr [ i ][ j + i ] = idx idx += 1 print ( arr ) [[ 7 4 2 1] [ 0 8 5 3] [ 0 0 9 6] [ 0 0 0 10]] In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験-8.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験-8.html"},{"title":"Pair HMM の最尤推定","text":"Baum-Welch Pair HMMとは、二本の配列を受け取ってペアワイズアラインメントを出力するHMMで、 「アラインメントの確率的な解釈が可能になる」 （アラインメントのどの部分が信頼できるかを確率的に評価できる） という利点があります。 このPair HMMは、一般的なHMMと同様にBaum-Welchアルゴリズムによってパラメータを最尤推定していきます。 \\(\\xi\\) HMM 一般的なHMMでは、例えば 遷移確率 \\(A_{jk}\\) （状態 \\(j\\) から状態 \\(k\\) に遷移する確率） を最尤推定する際は、 直感的には 「状態 \\(j\\) から状態 \\(k\\) に遷移する回数」 を、 「状態 \\(j\\) から遷移する回数」 で割れば最尤解が求まる。 実際の隠れ状態の遷移が確定していないので、 「 期待される 状態 \\(j\\) から状態 \\(k\\) に遷移する回数」 を、 「 期待される 状態 \\(j\\) から遷移する回数」 で割れば良い。 \\(\\mathbf{z}_{n-1}\\) で状態 \\(j\\) におり、 \\(\\mathbf{z}_n\\) で状態 \\(k\\) にいる確率 \\(\\xi\\left(z_{n-1,j},z_{nk}\\right)\\) は、forward-backward algorithmの \\(\\alpha,\\beta\\) を用いれば以下のように求めることができる。 $$\\xi_n\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right)=\\frac{\\alpha\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})}\\qquad (13.43)$$ \\(\\xi\\) を用いて、最尤推定を行う。 $$A_{j k}= \\frac{\\sum_{n=2}&#94;{N} \\xi\\left(z_{n-1, j}, z_{n k}\\right)}{\\sum_{l=1}&#94;{K} \\sum_{n=2}&#94;{N} \\xi\\left(z_{n-1, j}, z_{n l}\\right)} \\qquad (13.19)$$ という様に行いますが、Pair HMMは、 挿入・欠失を考えるため、 \\(n\\) で配列 \\(\\mathbf{X,Y}\\) のどの要素（ \\(\\mathbf{x}_u,\\mathbf{y}_v\\) ）を考えているのか一意に定まらない という点で普通のHMMとは異なります。 Pair HMM そこで、 「 \\(n\\) ではなく \\(u,v\\) に注目する」 ことで、 \\((13.43)\\) の式を以下のように書き換えます。 $$\\xi_{u,v}\\left(i,j\\right)=\\frac{f_i\\left(u,v\\right)A_{ij}\\phi_j\\left(\\diamond_1\\right)b_j\\left(\\diamond_2,\\diamond_3\\right)}{\\sum_{k=1}&#94;Kf_k\\left(u,v\\right)b_k\\left(u,v\\right)}$$ ここで、分子に注目すると、各変数の意味が variable meaning \\(f_i\\left(u,v\\right)\\) The probability of ending up in state \\(i\\) after aligning the two sequences \\(\\mathbf{X,Y}\\) up to observation \\(u\\) and \\(v\\) respectively. \\(A_{ij}\\) the transition probability from state \\(i\\) to state \\(j\\) . \\(\\phi_j\\left(\\diamond_1\\right)\\) the emission probability of emitting \\(\\diamond_1\\) in state \\(j\\) . \\(b_j\\left(\\diamond_2,\\diamond_3\\right)\\) the probability of being in state \\(j\\) , given the sequences \\(\\mathbf{X,Y}\\) are aligned from observation \\(\\diamond_2+1\\) and \\(\\diamond_3+1\\) to the end of the sequences respectively. であるので、 \\(\\diamond\\) は状態によって異なり、具体的に書き下すと以下のようになります。 state\\variable \\(\\phi_j\\left(\\diamond_1\\right)\\) \\(b_j\\left(\\diamond_2,\\diamond_3\\right)\\) \\(M\\) \\(e\\left(x_{u+1},y_{v+1}\\right)\\) \\(b_j\\left(u+1,v+1\\right)\\) \\(X\\) \\(e\\left(x_{u+1}\\right)\\) \\(b_j\\left(u+1,v\\right)\\) \\(Y\\) \\(e\\left(y_{v+1}\\right)\\) \\(b_j\\left(u,v+1\\right)\\) \\(\\gamma\\) 同様に \\(\\gamma\\) も考えると、 $$ \\gamma_n\\left(\\mathbf{z}_{n}\\right)= \\frac{\\alpha\\left(\\mathbf{z}_{n}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} \\qquad(13.33)$$ から、 $$\\gamma_i\\left(u,v\\right)=\\frac{f_i\\left(u,v\\right)b_j\\left(u,v\\right)}{\\sum_{k=1}&#94;Kf_k\\left(u,v\\right)b_k\\left(u,v\\right)}$$ のように書き換えることになります。 Maximization step ここまでで \\(\\gamma,\\xi\\) が求まったので、M stepで各パラメータを更新します。なお、以下で \\(w\\) は全ての記号の組を表します。 $$w\\in\\left\\{(k_x,k_y)|k_x,k_y\\in\\left\\{A,T,G,C,\\epsilon \\right\\}\\right\\}\\setminus(\\epsilon,\\epsilon)$$ \\(\\pi_k\\) $$\\pi&#94;{\\star}_i = \\sum_w\\gamma_i&#94;w(0,0)$$ \\(A_{ij}\\) $$A&#94;{\\star}_{ij} = \\frac{\\sum_w\\sum_{u=0}&#94;{\\tilde{U}}\\sum_{v=0}&#94;{\\tilde{V}}\\xi_{u,v}&#94;{w}\\left(i,j\\right)}{\\sum_w\\sum_{u=0}&#94;{\\tilde{U}}\\sum_{v=0}&#94;{\\tilde{V}}\\sum_{j}&#94;{K}\\xi_{u,v}&#94;{w}\\left(i,j\\right)}$$ final emitting state \\(\\tilde{U}\\) \\(\\tilde{V}\\) \\(M\\) \\(U-1\\) \\(V-1\\) \\(X\\) \\(U-1\\) \\(V\\) \\(Y\\) \\(U\\) \\(V-1\\) \\(\\phi_{i}(k)\\) $$\\phi_i\\left(k\\right) = \\frac{\\sum_w\\sum_{u=0}&#94;{U\\ast1}\\sum_{v=0}&#94;{V\\ast2}\\gamma_i&#94;w\\left(u,v\\right)}{\\sum_w\\sum_{u=0}&#94;U\\sum_{v=0}&#94;V\\gamma_i&#94;w\\left(u,v\\right)}$$ \\(\\ast1\\) ： \\(x_u=k_x\\) and state \\(i\\) equals the state \\(M\\) or \\(X\\) . (in the state \\(Y\\) , a gap is present in observation stream \\(x\\) therefore \\(k_x\\) is not present.) \\(\\ast2\\) ： \\(y_v=k_y\\) and state \\(j\\) equals the state \\(M\\) or \\(Y\\) . Reference Wahle, Johannes and Armin Buch. \"Alignment and word comparison with Pair Hidden Markov Models.\" (2013). pp.22-31 Martijn B. Wieling. \"Comparison of Dutch Dialects\" (2007) pp.36-50 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験-7.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験-7.html"},{"title":"生物統計論 第2回","text":"In [1]: import numpy as np import matplotlib.pyplot as plt Section2.1 Central Limit Theorem Law of Large Numbers Estimation is accurate with many samples. Foundation of repeated measurement. Regardless of true distribution. Assuming independence. Theorem Let $\\mathbf{X}_1,\\mathbf{X}_2,\\ldots,\\mathbf{X}_n$ be an independent trials process, with finite expected value $\\mu = \\mathbb{E}\\left(\\mathbf{X}_i\\right)$ Let $\\bar{\\mathbf{X}}_n = \\frac{1}{n}\\left(\\mathbf{X}_1,\\mathbf{X}_2+\\cdots+\\mathbf{X}_n\\right)$ be a sample mean. Weak law : $$\\lim_{n\\rightarrow\\infty}P\\left(|\\bar{\\mathbf{X}}_n-\\mu|>\\varepsilon\\right) = 0 \\quad\\left(\\forall\\varepsilon>0\\right)$$ Strong law $$P\\left(\\lim_{n\\rightarrow\\infty}\\bar{\\mathbf{X}}_n = \\mu\\right) = 1$$ Proof. We assume that $\\bar{\\mathbf{X}}_n$ have the \"finite\" variance $\\sigma&#94;2$ Since $\\mathbf{X}_1,\\mathbf{X}_2,\\ldots,\\mathbf{X}_n$ are independent and have the same distributions, we can apply Chebyshev Inequality . We obtain $$0\\leq P\\left(|\\bar{\\mathbf{X}}_n - \\mu|>\\varepsilon\\right)\\leq\\frac{1}{\\varepsilon&#94;2}\\mathbb{V}(\\bar{\\mathbf{X}}_n) = \\frac{1}{\\varepsilon&#94;2}\\frac{\\sigma&#94;2}{n}\\rightarrow0\\quad(n\\rightarrow\\infty)$$ Chebyshev Inequality Let $\\mathbf{X}$ be a discrete random variable with expected value $\\mu=\\mathbb{E}\\left(\\mathbf{X}\\right)$ $$ P \\left(|\\mathbf{X}-\\mu|>\\varepsilon\\right)\\leq\\frac{\\mathbb{V}\\left(\\mathbf{X}\\right)}{\\varepsilon&#94;2}$$ Example In [2]: N = 1000 seed = 0 In [3]: trials = np . arange ( 1 , N + 1 ) In [4]: dices = np . random . RandomState ( seed ) . randint ( low = 1 , high = 6 + 1 , size = N ) ave_dices = np . cumsum ( dices ) / trials In [5]: plt . axhline ( 3.5 , color = \"blue\" , label = \"Theoretical mean\" ) plt . plot ( trials , ave_dices , label = \"Observed average\" , color = \"green\" ) plt . ylim ( 1 , 6 ) plt . title ( \"Average dice roll by number of rolls\" ) plt . ylabel ( \"Average\" ) plt . xlabel ( \"Number of trials\" ) plt . grid () plt . legend () plt . show () If we keep rolling the dice over and over again, the sample average of dice roll will converge to the true average. Exception The law of large numbers assumes the existance of expected values . Therefore, it will not hold when there is no expected value. (ex. Cauchy distribution ) Cauchy distribution $$ \\begin{aligned} f(x;x_0,\\gamma) &= \\frac{1}{\\pi\\gamma\\left[1 + \\left(\\frac{x-x_0}{\\gamma}\\right)&#94;2\\right]} = \\frac{1}{\\pi}\\frac{\\gamma}{\\left(x-x_0\\right)&#94;2 + \\gamma&#94;2} & \\begin{cases}x_0: \\text{Location paramete}\\\\\\gamma: \\text{Scale parameter}\\end{cases}\\\\ f(x;0,1) &= \\frac{1}{\\pi\\left(1+x&#94;2\\right)} & (\\text{standard cauchy distribution}) \\end{aligned} $$ In [6]: N = 5000 K = 3 seed = 1 In [7]: trials = np . arange ( 1 , N + 1 ) In [8]: samples = np . random . RandomState ( seed ) . standard_cauchy ( size = ( K * N )) . reshape (( K , N )) ave_samples = np . cumsum ( samples , axis = 1 ) / trials In [9]: for k in range ( K ): plt . plot ( trials , ave_samples [ k ], label = f \"Observation {k+1}\" ) plt . ylabel ( \"$(\\mathbf {X} _1+\\cdots+\\mathbf {X} _n)/n$\" ) plt . xlabel ( \"n\" ) plt . legend () plt . grid () Central Limit Theorem Sample mean follows normal distribution. Foundation of many statistical tests. Regardless of true distribution. Assuming independence. Theorem Let $\\{\\mathbf{X}_1,\\ldots,\\mathbf{X}_n\\}$ be a random sample of size $n$, which is a sequence of independent and identically distributed random variables drawn from a distribution. expected value given by $\\mu$. finite variance given by $\\sigma&#94;2$. Let $S_n:=\\sum_{k=1}&#94;n\\mathbf{X}_k$ $$P\\left(\\frac{S_n-n\\mu}{\\sqrt{n}\\sigma}\\leq\\alpha\\right)\\rightarrow\\frac{1}{\\sqrt{2\\pi}}\\int_{-\\infty}&#94;{\\alpha}e&#94;{-\\frac{x&#94;2}{2}}dx\\quad(n\\rightarrow\\infty)$$ Therefore: $$ \\begin{aligned} S_n&\\sim\\mathcal{N}\\left(n\\mu, n\\sigma&#94;2\\right) & (n\\rightarrow\\infty)\\\\ \\bar{\\mathbf{X}}_n = \\left(\\mathbf{X}_1+\\cdots+\\mathbf{X}_n\\right)/n&\\sim\\mathcal{N}\\left(\\mu,\\sigma&#94;2/n\\right) & (n\\rightarrow\\infty) \\end{aligned} $$ Proof. We assume that $\\bar{\\mathbf{X}}_n$ have the \"finite\" variance $\\sigma&#94;2$ Since $\\mathbf{X}_1,\\mathbf{X}_2,\\ldots,\\mathbf{X}_n$ are independent and have the same distributions, we can apply Chebyshev Inequality . We obtain $$0\\leq P\\left(|\\bar{\\mathbf{X}}_n - \\mu|>\\varepsilon\\right)\\leq\\frac{1}{\\varepsilon&#94;2}\\mathbb{V}(\\bar{\\mathbf{X}}_n) = \\frac{1}{\\varepsilon&#94;2}\\frac{\\sigma&#94;2}{n}\\rightarrow0\\quad(n\\rightarrow\\infty)$$ Example In [10]: N = 10000 ns = [ 10 , 100 , 1000 , 10000 ] roll = 4 seed = 0 In [11]: fig = plt . figure ( figsize = ( 12 , 6 )) ax_all = plt . subplot2grid (( 2 , len ( ns )), ( 0 , 0 ), colspan = len ( ns )) for i , n in enumerate ( ns ): ax = plt . subplot2grid (( 2 , len ( ns )), ( 1 , i )) dices = np . random . RandomState ( seed ) . randint ( low = 1 , high = 6 + 1 , size = ( n , N )) rate_dice_eq_4 = np . count_nonzero ( dices == roll , axis = 1 ) / N freqs , bins , patches = ax . hist ( rate_dice_eq_4 , bins = 20 , density = True ) cent_bins = [ np . mean ( bins [ i : i + 2 ]) for i in range ( len ( bins ) - 1 )] ax_all . plot ( cent_bins , freqs , label = f \"n= {n} \" ) ax . set_title ( f \"n= {n} \" ) ax . set_xlabel ( f \"Probability of {roll} roll.\" ) ax . set_ylabel ( \"freq\" ) ax_all . set_title ( \"Central Limit Theorem\" ) ax_all . legend () plt . tight_layout () plt . show () Section2.2 ChIP-seq Peak Detection ChIP-sequencing, also known as ChIP-seq, is a method used to analyze protein interactions with DNA. ChIP-seq combines chromatin immunoprecipitation (ChIP) with massively parallel DNA sequencing to identify the binding sites of DNA-associated proteins. It can be used to map global binding sites precisely for any protein of interest. Previously, ChIP-on-chip was the most common technique utilized to study these protein–DNA relations. Peak calling Problem: How to identify transcription factor binding sites and histone modification enriched regions? Random Read Model Assume that read appears with equal probability in any region. Calcurate the p-value (the Probability of obtaining more or equally extreme value than observed value under the random model.) → Smaller is more significant. Setting the threshold (p-value) manually. We could calcurate the threshold ($n_{obs}$) → If the $n_{obs}$ exceeds this threshold, it is determined as the peak region. In [12]: from scipy.special import comb In [13]: g = 10000 # total DNA length n = 1000 # total number of reads l = 100 # bin size q = l / g n_bins = g / l lambda_ = n * q # mean read count seed = 0 xmax = 30 In [14]: fig = plt . figure ( figsize = ( 12 , 4 )) axL = fig . add_subplot ( 1 , 2 , 1 ) read_points = np . random . RandomState ( seed ) . randint ( 0 , g , size = n ) axL . scatter ( read_points , np . zeros ( shape = n ), s = 3 , label = \"read\" , color = \"black\" ) ledge = 0 read_counts = [] for edge in range ( l , g + 1 , l ): middl = ( ledge + edge ) / 2 count = np . count_nonzero ([( ledge <= read_points ) & ( read_points < edge )]) read_counts . append ( count ) if edge <= l * 10 : axL . axvline ( edge , color = \"red\" ) axL . text ( x = middl , y = 1e-3 , s = count , horizontalalignment = 'center' ) ledge = edge axL . set_xlim ( 0 , l * 10 ) axL . set_ylim ( - 1e-3 , 2e-3 ) axL . set_yticks ([]) axL . legend () Poisson = [ comb ( n , i , exact = True ) * ( q ** i ) * (( 1 - q ) ** ( n - i )) for i in range ( n )] axR = fig . add_subplot ( 1 , 2 , 2 ) axR . plot ( Poisson , color = \"black\" , label = \"Pois($\\lambda$)\" ) axR . plot ([ read_counts . count ( i ) / n_bins for i in range ( n )], color = \"red\" , label = \"Observed\" ) axR . set_xlim ( 0 , xmax ) axR . set_xlabel ( \"Read count for each bin\" ) axR . set_ylabel ( \"Frequency\" ) axR . legend () plt . show () In [15]: n_obs = 15 p_values = np . cumsum ( Poisson [:: - 1 ])[:: - 1 ] # Calcurate p-value for each n_obs. thresh_p = 1e-2 bp = np . argmax ( p_values <= thresh_p ) In [16]: fig = plt . figure ( figsize = ( 12 , 4 )) axL = fig . add_subplot ( 1 , 2 , 1 ) axL . plot ( Poisson , color = \"black\" , label = \"Pois($\\lambda$)\" ) axL . fill_between ( np . arange ( n_obs , xmax ), y1 = Poisson [ n_obs : xmax ], y2 = 0 , facecolor = 'red' ) axL . annotate ( 'p-value \\n = $\\mathbb {P} (n_ {obs} \\leq N)$ \\n $=\\sum_{i=n_ {obs} }&#94;{\\infty}(\\lambda&#94;i/i!)\\cdot e&#94;{-\\lambda}$' , xy = ( 17 , 1e-2 ), xytext = ( 20 , 4e-2 ), fontsize = 12 , arrowprops = dict ( width = 1 , headwidth = 8 , headlength = 10 , connectionstyle = 'arc3' , facecolor = 'black' ) ) axL . set_xlim ( 0 , 30 ) axL . set_title ( \"Poisson distribution\" ) axL . set_xlabel ( \"N\" ) axL . set_ylabel ( \"Freq\" ) axR = fig . add_subplot ( 1 , 2 , 2 ) axR . plot ( p_values , color = \"black\" ) axR . scatter ( n_obs , p_values [ n_obs ], color = \"red\" , label = \"pvalue($n_ {obs} $=\" + f \" {n_obs} )\" ) axR . scatter ( bp , p_values [ bp ], color = \"blue\" , label = \"Boundary point\" ) axR . axhline ( thresh_p , color = \"blue\" , label = f \"threshold(p_value= {thresh_p} )\" ) axR . axvspan ( xmin = bp , xmax = xmax , color = \"blue\" , alpha = 0.3 ) axR . set_xlim ( 0 , xmax ) axR . set_title ( \"The relationship between p-value and $n_ {obs} $\" ) axR . set_xlabel ( \"$n_ {obs} $\" ) axR . set_ylabel ( \"p-value\" ) axR . legend () plt . show () In this case, we could say the threshold($n_{obs}$) = 19(=bp). ※ In ChIP-seq, we have to do \"Tag shift\" due to the DNA strand asymmetry. （→ more: MACS ） Section2.3 Hypothesis Testing Terminology In [17]: fig , ax = plt . subplots ( figsize = ( 6 , 4 )) X = np . arange ( 10 , 100 , 1 ) Y = 1 / X # Null distribution ax . plot ( X , Y , color = \"red\" ), ax . text ( x = 15 , y = 8e-2 , s = \"Null distribution \\n $f_S(s|H)$\" , fontsize = 15 ) # Thereshold: Sα ax . plot (( 50 , 50 ),( 0 , 7e-2 ), color = \"black\" ), ax . text ( x = 48 , y = 7.5e-2 , s = \"$S_ {α} $\" , fontsize = 12 ) # Reject & Accept ax . annotate ( '' , xy = ( 75 , 5e-2 ), xytext = ( 52 , 5e-2 ), arrowprops = dict ( arrowstyle = \"->\" , connectionstyle = 'arc3' )), ax . text ( x = 55 , y = 5.5e-2 , s = \"reject\" , fontsize = 12 ) # Reject ax . annotate ( '' , xy = ( 25 , 5e-2 ), xytext = ( 48 , 5e-2 ), arrowprops = dict ( arrowstyle = \"->\" , connectionstyle = 'arc3' )), ax . text ( x = 35 , y = 5.5e-2 , s = \"accept\" , fontsize = 12 ) # Accept # Observation sample. ax . plot (( 70 , 70 ),( 0 , 1 / 70 ), color = \"black\" ), ax . scatter ( 70 , 1 / 70 , color = \"black\" ), ax . text ( x = 68 , y = 2e-2 , s = \"$S_ {obs} $\" , fontsize = 12 ) ax . set_xticks ([]), ax . set_yticks ([]) ax . set_xlabel ( \"S\" ), ax . set_ylabel ( \"freq\" ) ax . set_xlim ( min ( X ), max ( X )), ax . set_ylim ( min ( Y ), max ( Y )) plt . show () Null Hypothesis $H_0$ Alternative Hypothesis $H_1$ Test Static $S$ Null distribution Significance threshold Reject/Accept $H_0$ Null hypothesis is True Null hypothesis is False Do not reject Null hypothesis ($H_0$) Correct Type2 error (False negative) Reject Null hypothesis ($H_0$) Type1 error (False positive) Correct P-value distribute uniformly under $H_0$ Proof. p-value is the probability of obtaining more or equally extreme value than observed value under the null distribution. $$p = \\mathbb{P}\\left(S\\geq s|H_0\\right) = 1-\\mathbb{P}\\left(S By noting $F_0$ the cumulative distribution function of $S$ under $H_0$, we obtain: $$p = 1-F_0(s)$$ Thanks to the fact that the cdf is monotonic, increasing and (left-)continuous: $$\\mathbb{P}\\left(S\\geq s|H_0\\right) = \\mathbb{P}\\left(F_0\\left(S\\right)\\geq F_0\\left(s\\right)\\right) = 1-\\mathbb{P}\\left(F_0\\left(S\\right)< F_0\\left(s\\right)\\right)$$ Therefore, we have: $$\\mathbb{P}\\left(F_0\\left(S\\right) Which means that $F_0\\left(S\\right)$ is following a uniform distribution. And, as this means also that $1-F_0\\left(S\\right)$ is following a uniform distributed, then we can conclude that p-value are uniformly distributed under the null hypothesis. In [18]: from scipy.stats import norm In [19]: N = 10000 loc = 0 scale = 1 seed = 0 In [20]: obs = np . random . RandomState ( seed ) . normal ( loc = loc , scale = scale , size = N ) # observation sample \"s\". p_value = 1 - norm . cdf ( x = obs , loc = loc , scale = scale ) # p-value = 1 - F(s) In [21]: fig = plt . figure ( figsize = ( 12 , 4 )) axL = fig . add_subplot ( 1 , 2 , 1 ) freqs , bins , patches = axL . hist ( obs , bins = 50 , density = True , color = \"blue\" , alpha = 0.7 ) cent_bins = [ np . mean ( bins [ i : i + 2 ]) for i in range ( len ( bins ) - 1 )] axL . plot ( cent_bins , freqs , color = \"blue\" ) axL . set_title ( \"Histogram of observation sample s \\n under the null distribution (This time: Normal distribution)\" ), axL . set_xlabel ( \"observation s\" ), axL . set_ylabel ( \"Frequency\" ) axR = fig . add_subplot ( 1 , 2 , 2 ) axR . hist ( p_value , bins = 20 , edgecolor = \"black\" ) axR . set_title ( \"Histogram of p-value\" ), axR . set_xlabel ( \"p-value\" ), axR . set_ylabel ( \"Frequency\" ) plt . tight_layout () plt . show () ※ We could argue about the p-value under the null hypothesis, but we could not confirm whether null hypothesis is true or not. Section2.4 Hypothesis Test Example $\\chi&#94;2$-test Any statistical hypothesis test where the sampling distribution of the test statistic is a chi-squared distribution when the null hypothesis is true. Used to determine whether there is a significant difference between the expected frequencies and the observed frequencies in one or more categories. $\\chi&#94;2$-distribution $Y_i\\sim\\mathcal{N}\\left(0,1\\right), i=1,\\ldots,\\nu$: i.i.d. $X=Y_1&#94;2+\\cdots+Y_{\\nu}$ $\\rightarrow X\\sim\\chi&#94;2(\\nu), X\\in \\mathbb{R}_{\\geq0}$ $$ \\begin{aligned} f_X(x) &= \\frac{1}{2&#94;{\\nu/2}\\Gamma(\\nu/2)}x&#94;{\\nu/2-1}e&#94;{-x/2}\\\\ \\Gamma(z) &= \\int_{0}&#94;{\\infty}t&#94;{z-1}e&#94;{-t}dt(\\mathrm{Re}(z)>0)\\\\ \\mathbb{E}(X) &= \\nu\\\\ \\mathbb{V}(X) &= 2\\nu \\end{aligned} $$ In [22]: from scipy.stats import chi2 In [23]: K = 5 In [24]: fig = plt . figure ( figsize = ( 6 , 4 )) X = np . linspace ( 0 , 8 , 1000 ) for k in range ( 1 , K + 1 ): plt . plot ( X , chi2 . pdf ( X , k ), label = f \"$k= {k} $\" ) plt . xlim ( 0 , 8 ), plt . ylim ( 0 , 1.0 ) plt . title ( \"$\\chi&#94;2$-distribution\" ), plt . xlabel ( \"X\" ), plt . ylabel ( \"P(X)\" ) plt . legend () plt . show () Pearson's chi-square test goodness of fit test # $C_1$ $C_2$ $\\cdots$ $C_k$ total Observation frequency $n_1$ $n_2$ $\\cdots$ $n_k$ $n$ Theoretical probability (under $H_0$) $p_1$ $p_2$ $\\cdots$ $p_k$ $1$ Theoretical frequency $m_1=np_1$ $m_2=np_2$ $\\cdots$ $m_k=np_k$ $n$ Null Hypothesis($H_0$): $P(C_i) = p_i\\quad(i=1,2,\\ldots,k)$ If null hypothesis is true, $U$ are distributed as $\\chi&#94;2(k-1)$. $$ U=\\sum_{i=1}&#94;k\\frac{(n_i-m_i)&#94;2}{m_i}\\\\ \\begin{cases} U&>\\chi_{\\alpha}&#94;2(k-1) &\\Rightarrow \\text{Reject }H_0\\\\ U&\\leq\\chi_{\\alpha}&#94;2(k-1) &\\Rightarrow \\text{Accept }H_0 \\end{cases} $$ test for independence A\\B $B_1$ $B_2$ $\\cdots$ $B_b$ total $A_1$ $n_{11}$ $n_{12}$ $\\cdots$ $n_{1b}$ $n_{1\\cdot}$ $A_2$ $n_{21}$ $n_{22}$ $\\cdots$ $n_{2b}$ $n_{2\\cdot}$ $\\vdots$ $\\vdots$ $\\vdots$ $\\cdots$ $\\ddots$ $\\vdots$ $A_a$ $n_{a1}$ $n_{a2}$ $\\cdots$ $n_{ab}$ $n_a$ total $n_{\\cdot1}$ $n_{\\cdot2}$ $\\cdots$ $n_{\\cdot b}$ $n_{a\\cdot}$ $P(A_i) = p_i,P(B_j)=q_j,\\quad (1\\leq i\\leq a,1\\leq j\\leq b)$ Null Hypothesis($H_0$): $A$ and $B$ are independence. $$P(A_i\\cap B_j) = p_iq_j$$ If null hypothesis is true, we could presume: $\\bar{p_i}=n_{i\\cdot}/n$, $\\bar{q_j}=n_{\\cdot j}/n$. $m_{ij} = n\\bar{p_i}\\bar{q_j}$ (Theoretical frequency) $$ U=\\sum_{i=1}&#94;a\\sum_{j=1}&#94;b\\frac{(n_{ij}-m_{ij})&#94;2}{m_{ij}}\\\\ \\begin{cases} U&>\\chi_{\\alpha}&#94;2\\left((a-1)(b-1)\\right) &\\Rightarrow \\text{Reject }H_0\\\\ U&\\leq\\chi_{\\alpha}&#94;2\\left((a-1)(b-1)\\right) &\\Rightarrow \\text{Accept }H_0 \\end{cases} $$ t-test One-sample test: Determine whether a sample of observations could have been generated by a process with a specific mean $\\mu$. Two-sample test: Compare the average values of the two data sets and determine if they came from the same population. t-distribution $$ \\begin{aligned} f_{t(\\nu)}(x) &= \\frac{\\Gamma\\left(\\frac{\\nu+1}{2}\\right)}{\\sqrt{\\nu\\pi}\\Gamma\\left(\\frac{\\nu}{2}\\right)}\\left(1+\\frac{x&#94;2}{\\nu}\\right)&#94;{-\\frac{\\nu+1}{2}}\\\\ \\mathbb{E}(X) &= 0(\\nu>1)\\\\ \\mathbb{V}(X) &= \\begin{cases}\\infty&(1<\\nu\\leq2)\\\\\\frac{\\nu}{\\nu-2}&(2<\\nu)\\end{cases} \\end{aligned} $$ In [25]: from scipy.stats import t as tdist In [26]: fig = plt . figure ( figsize = ( 6 , 4 )) X = np . linspace ( - 6 , 6 , 1000 ) nus = [ 1 , 2 , 5 , 1000 ] for nu in nus : plt . plot ( X , tdist . pdf ( X , nu ), label = f \"$ν= {nu} $\" ) plt . plot ( X , norm . pdf ( X , 0 , 1 ), linestyle = ':' , linewidth = 5 , label = \"Standard Normal Distribution\" ) plt . xlim ( - 6 , 6 ), plt . ylim ( 0 , 0.4 ) plt . title ( \"t-distribution\" ), plt . xlabel ( \"X\" ), plt . ylabel ( \"P(X)\" ) plt . legend () plt . show () Student's t-test One-sample test: $$ X_1,\\ldots,X_n\\sim\\mathcal{N}(\\mu,\\sigma)\\text{: i.i.d.}\\\\ \\bar{X} = \\frac{X_1,\\ldots,X_n}{n}, S = \\frac{\\left(X_1-\\bar{X}\\right)&#94;2 + \\cdots+\\left(X_n-\\bar{X}\\right)&#94;2}{n-1}\\\\ \\rightarrow T=\\frac{\\left(\\bar{X}-\\mu\\sqrt{n}\\right)}{S}\\sim t(n-1) $$ Two-sample test (when we know two groups have equal variance) : $$ X_{11},\\ldots,X_{1m}\\sim\\mathcal{N}(\\mu,\\sigma_1)\\text{: i.i.d.}, \\bar{X}_1 = \\frac{X_{11}+\\cdots+X_{1m}}{m}\\\\ X_{21},\\ldots,X_{2n}\\sim\\mathcal{N}(\\mu,\\sigma_2)\\text{: i.i.d.}, \\bar{X}_2 = \\frac{X_{21}+\\cdots+X_{2n}}{n}\\\\ S=\\frac{\\sum_{i=1}&#94;m\\left(X_{1i}-\\bar{X}_1\\right)&#94;2 + \\sum_{i=1}&#94;n\\left(X_{2i}-\\bar{X}_2\\right)&#94;2}{m+n-2}\\\\ \\rightarrow T=\\frac{\\left(\\bar{X}_1-\\bar{X}_2\\right)\\sqrt{mn}}{S\\sqrt{m+n}}\\sim t(m+n-2) $$ Two-sample test (when we know two groups have equal variance) : $$ X_{11},\\ldots,X_{1m}\\sim\\mathcal{N}(\\mu,\\sigma_1)\\text{: i.i.d.}, \\bar{X}_1 = \\frac{\\sum_{i=1}&#94;mX_{1i}}{m}, S_1 = \\frac{\\sum_{i=1}&#94;m\\left(X_{1i} - \\bar{X}_1\\right)&#94;2}{m-1}, A=S_1/m\\\\ X_{21},\\ldots,X_{2n}\\sim\\mathcal{N}(\\mu,\\sigma_2)\\text{: i.i.d.}, \\bar{X}_2 = \\frac{\\sum_{i=1}&#94;mX_{2i}}{n}, S_1 = \\frac{\\sum_{i=1}&#94;m\\left(X_{2i} - \\bar{X}_2\\right)&#94;2}{n-1}, B=S_2/n\\\\ \\rightarrow T=\\frac{\\left(\\bar{X}_1-\\bar{X}_2\\right)}{S\\sqrt{A+B}}\\approx t(\\nu), \\nu=\\frac{(A+B)&#94;2}{A&#94;2/(m-1)+B&#94;2/(n-1)} $$ In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物統計論","url":"https://iwasakishuto.github.io/University/3A/生物統計論-2.html","loc":"https://iwasakishuto.github.io/University/3A/生物統計論-2.html"},{"title":"レポート課題1(10/3出題)","text":"LF1z0tZJNQjbLIhSYzEY9g==;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;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-report1.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-report1.html"},{"title":"イントロダクション","text":"講義計画 確率と統計の基礎 ： 最先端の機械学習技術の数学的基盤 探索と最適化 ： 広大な探索空間から最適解を効率よく探索 機械学習 ： データの背後に潜む知識を発見 自然言語処理 ： 人工知能技術の応用例 # 日付 内容 担当 1 10/3 概要 杉山 2 10/10 最適化（連続1） 佐藤 3 10/17 最適化（連続2） 佐藤 4 10/24 最適化（探索） 本多 5 10/31 確率と統計 本多 6 11/14 確率と統計 本多 7 11/21 確率と統計 本多 8 11/28 機械学習（教師付き学習） 本多 9 12/5 機械学習（教師付き学習） 佐藤 10 12/12 自然言語処理 宮尾 11 12/19 自然言語処理 宮尾 12 12/26 自然言語処理 宮尾 13 1/9 機械学習（強化学習） 杉山 1 1/16 試験 佐藤 人工知能とは 1956年：\"The Dartmouth Summer Research Project on Artificial Intelligence\" にて Artificial Intelligence という言葉が提唱された。 Watoson Nature AlphaGo 人工知能関連分野の発展 人工知能研究 1960年頃(1次ブーム)：記号処理、論理推論 1980年頃(2次ブーム)：エキスパートシステム ニューラルネット研究 1960年頃(1次ブーム)：パーセプトロン（１層） 1990年頃(2次ブーム)：誤差逆伝播ほう（多層） 機械学習研究 1995年頃〜：統計・凸最適化 1995年頃〜：ベイズ推論 2010年頃〜：深層学習 3種類の機械学習 教師付き学習 ：人間が教師となり、コンピュータの学習を手伝う。 教師なし学習 ：コンピュータが人間の手を介さずに自発的に学習する。 強化学習 ：ロボットが人間の手を介さずに自発的に意思決定を行う。 まとめ 人工知能 ： 知的なコンピュータシステムを作る 数学・プログラミング・実世界応用をつなぐ架け橋 探索 ： 広大な探索空間を効率よく探索 機械学習 ： データの背後に潜む知識を発見","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-1.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-1.html"},{"title":"Pair HMM","text":"※実装時のパラメータ PairHMMによるアラインメントを実装していく。なお、 （ kerasy.Bio.alignment.PairHMM ） に定義してあります。 In [1]: from kerasy.Bio.alignment import PairHMM In [2]: # サンプル配列 seqX = \"CCAGAGCTGTGGCAGACAGTGGCT\" seqY = \"CCAGCTGTGCAGACACTGGCTT\" In [3]: model = PairHMM () In [4]: ! cat params.json { \"delta\": \"1/10\", \"epsilon\": \"1/5\", \"tau\": \"1/30\", \"px_e_y\": \"1/8\", \"px_ne_y\": \"1/24\", \"qx\": \"1/4\", \"qy\": \"1/4\" } In [5]: model . set_params ( path = \"params.json\" ) Pair HMM とその利点 HMMのために開発されたアルゴリズムを使える。（らしい←正解ラベルの無いアラインメントでBaum-Welchアルゴリズムをどのように使うのかは現在考察中です。） アラインメントの確率的な解釈が可能になる。 グローバルアラインメントを出力する Pair-HMM Mは $x$ と $y$ がマッチした状態。（$x_i$ と $y_j$ がアライン） Iは $x$ に挿入が起きている状態。（$x_i$ と $-$ がアライン） Dは $x$ に欠失が起きている状態。（$-$ と $y_j$ がアライン） （以下では上から $V&#94;M,V&#94;X,V&#94;Y$ と記述している。） Pair HMMのためのViterbiアルゴリズム 2本数の配列 $x,y$ を与えると確率最大のアラインメントを求めるアルゴリズム。 Initialization: $$ \\begin{cases} V&#94;M(0,0)=1, V&#94;M(i,0)=V&#94;M(0,j)=0\\text{ for }i\\neq0,j\\neq0\\\\ V&#94;X(0,0)=0, V&#94;X(1,0)=\\delta q_{x_1} V&#94;X(i,0)=\\varepsilon q_{x_i}V&#94;X(i-1,0) \\text{ for }i=2,\\ldots,n\\\\ V&#94;Y(0,0)=0, V&#94;Y(0,1)=\\delta q_{y_1} V&#94;Y(0,j)=\\varepsilon q_{y_j}V&#94;Y(0,j-1) \\text{ for }j=2,\\ldots,m\\\\ \\end{cases} $$ Recursion: $i=1,\\ldots,n,\\quad j=1,\\ldots,m$ $$ \\begin{aligned} V&#94;M(i,j) &= p_{x_iy_j}\\max\\begin{cases}(1-2\\delta-\\tau)V&#94;M(i-1,j-1)\\\\(1-\\varepsilon-\\tau)V&#94;X(i-1,j-1)\\\\(1-\\varepsilon-\\tau)V&#94;Y(i-1,j-1)\\end{cases}\\\\ V&#94;X(i,j) &= q_{x_i}\\max\\begin{cases}\\delta V&#94;M(i-1,j)\\\\\\varepsilon V&#94;X(i-1,j)\\end{cases}\\\\ V&#94;Y(i,j) &= q_{y_j}\\max\\begin{cases}\\delta V&#94;M(i,j-1)\\\\\\varepsilon V&#94;X(i,j-1)\\end{cases}\\\\ \\end{aligned} $$ Termination: $$v_e = \\tau\\max\\left(V&#94;M(n,m),V&#94;X(n,m),V&#94;Y(n,m)\\right)$$ In [6]: P_optimal = model . align ( seqX , seqY , return_score = True ) Pair HMM (Viterbi) Alignment score: 3.551370651291424e-30 |parameter| value | -------------------------------- |delta | 0.1| |epsilon | 0.2| |tau | 0.03333333333333333| |px_e_y | 0.125| |px_ne_y |0.041666666666666664| |qx | 0.25| |qy | 0.25| =============================================================== X: CCAGAGCTGTGGCAGACAGTGGC-T Y: CC--AGCTGT-GCAGACACTGGCTT =============================================================== In [7]: print ( f \"π*= {P_optimal} \" ) π*=3.551370651291424e-30 アラインメントの信頼性 配列 $x,y$ が与えられた時、アラインメント $\\pi$ が得られる条件付き確率を考えることができ、それが アラインメントの信頼度 を表していると考ることができる。 $$ P(\\pi|x,y) = \\frac{P(x,y,\\pi)}{P(x,y)}\\\\ P(x,y) = \\sum_{\\text{alignments }\\pi}P(x,y,\\pi) $$ ※ なお、ここで $P(x,y)$ は $x,y$ に関する全ての可能なアラインメントについて確率を足し合わせたもの であり、Forwardアルゴリズムで計算することができる。 Pair HMMのためのForwardアルゴリズム ※ Viterbiの $\\max$ を $\\text{sum}$ に変更しただけ。 Initialization: $$ \\begin{cases} F&#94;M(0,0)=1, F&#94;M(i,0)=F&#94;M(0,j)=0\\text{ for }i\\neq0,j\\neq0\\\\ F&#94;X(0,0)=0, F&#94;X(1,0)=\\delta q_{x_1} F&#94;X(i,0)=\\varepsilon q_{x_i}F&#94;X(i-1,0) \\text{ for }i=2,\\ldots,n\\\\ F&#94;Y(0,0)=0, F&#94;Y(0,1)=\\delta q_{y_1} F&#94;Y(0,j)=\\varepsilon q_{y_j}F&#94;Y(0,j-1) \\text{ for }j=2,\\ldots,m\\\\ \\end{cases} $$ Recursion: $i=1,\\ldots,n,\\quad j=1,\\ldots,m$ $$ \\begin{aligned} F&#94;M(i,j) &= p_{x_iy_j}\\text{sum}\\begin{cases}(1-2\\delta-\\tau)F&#94;M(i-1,j-1)\\\\(1-\\varepsilon-\\tau)F&#94;X(i-1,j-1)\\\\(1-\\varepsilon-\\tau)F&#94;Y(i-1,j-1)\\end{cases}\\\\ F&#94;X(i,j) &= q_{x_i}\\text{sum}\\begin{cases}\\delta F&#94;M(i-1,j)\\\\\\varepsilon F&#94;X(i-1,j)\\end{cases}\\\\ F&#94;Y(i,j) &= q_{y_j}\\text{sum}\\begin{cases}\\delta F&#94;M(i,j-1)\\\\\\varepsilon F&#94;X(i,j-1)\\end{cases}\\\\ \\end{aligned} $$ Termination: $$F_e = \\tau\\ \\text{sum}\\left(F&#94;M(n,m),F&#94;X(n,m),F&#94;Y(n,m)\\right)$$ In [8]: F , P_all = model . forward ( seqX , seqY ) In [9]: print ( f \"𝐹&#94;𝐸(𝑛,𝑚)=𝑃(𝑥,𝑦)=Σalignments𝜋𝑃(𝑥,𝑦,𝜋)= {P_all} \" ) 𝐹&#94;𝐸(𝑛,𝑚)=𝑃(𝑥,𝑦)=Σalignments𝜋𝑃(𝑥,𝑦,𝜋)=2.0457988072916236e-28 In [10]: print ( f \"P(π*|x, y)={P_optimal/P_all}\" ) P(π*|x, y)=0.017359334840912267 $x_i$ と $y_j$ がアラインされる確率 次の式で表される。 $$ \\begin{aligned} P(x_i\\diamondsuit y_i|x,y) &= \\frac{\\sum_{\\pi\\in\\Omega_{ij}}P(x,y,\\pi)}{P(x,y)}\\\\ &= \\frac{F&#94;M(i,j)\\cdot B&#94;M(i,j)}{P(x,y)} \\end{aligned}$$ ※ $\\Omega_{ij}$：$x_i$ と $y_j$ がアラインされるアラインメントの集合 Pair HMMのためのBackwardアルゴリズム Needleman-Wunsh-Gotoh のBackwardアルゴリズムとの類似性に注目！ Initialization: $$ \\begin{cases} B&#94;M(n,m)=B&#94;X(n,m)=B&#94;Y(n,m)=\\tau\\\\ B&#94;X(i,m)=\\varepsilon q_{x_{i+1}}B&#94;X(i+1,m)\\text{ for }i=n-1,\\ldots,1\\\\ B&#94;Y(i,m)=\\varepsilon q_{y_{j+1}}B&#94;X(n,j+1)\\text{ for }j=m-1,\\ldots,1\\\\ B&#94;M(i,m)=\\delta q_{x_{i+1}}B&#94;X(i+1,m)\\text{ for }i=n-1,\\ldots,1\\\\ B&#94;M(n,j)=\\delta q_{y_{j+1}}B&#94;Y(n,j+1)\\text{ for }j=m-1,\\ldots,1\\\\ \\end{cases} $$ Recursion: $i=n-1,\\ldots,1,\\quad j=m-1,\\ldots,1$ $$ \\begin{aligned} B&#94;M(i,j) &= \\text{sum}\\begin{cases}(1-2\\delta-\\tau)p_{x_iy_j}B&#94;M(i+1,j+1)\\\\\\delta q_{x_{i+1}}B(i+1,j)\\\\\\delta q_{y_{j+1}}B&#94;Y(i,j+1)\\end{cases}\\\\ B&#94;X(i,j) &= (1-\\varepsilon-\\tau)p_{x_{i+1},y_{j+1}}B&#94;M(i+1,j+1) + \\varepsilon q_{x_{i+1}}B&#94;X(i+1,j)\\\\ B&#94;Y(i,j) &= (1-\\varepsilon-\\tau)p_{x_{i+1},y_{j+1}}B&#94;M(i+1,j+1) + \\varepsilon q_{y_{j+1}}B&#94;Y(i,j+1)\\\\ \\end{aligned} $$ In [11]: B = model . backward ( seqX , seqY ) In [12]: Pij = ( F * B ) / P_all In [13]: import seaborn as sns import matplotlib.pyplot as plt In [14]: sns . heatmap ( Pij ) plt . show () In [15]: # 可視化のために pandas を使用。 import pandas as pd r , c = Pij . shape pd . set_option ( 'display.max_rows' , r ) pd . set_option ( 'display.max_columns' , c ) In [16]: df = pd . DataFrame ( Pij ) In [17]: df Out[17]: .dataframe thead tr:only-child th { text-align: right; } .dataframe thead th { text-align: left; } .dataframe tbody tr th { vertical-align: top; } 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 0 1.139605e+00 1.145169e-02 1.061625e-04 9.380071e-06 7.330898e-07 1.256616e-08 5.467340e-10 2.910714e-11 5.763005e-12 3.410212e-13 5.102192e-15 2.187247e-16 1.988821e-17 1.147484e-18 1.367416e-20 6.720910e-22 4.976161e-24 7.098501e-26 9.237930e-28 2.211060e-29 3.898762e-32 1.763484e-40 1 1.002452e-01 9.915333e-01 6.192125e-03 1.868999e-04 4.332564e-05 9.546525e-07 4.066396e-08 2.157028e-09 9.465879e-11 4.846141e-11 4.058759e-13 3.267685e-14 8.754145e-16 1.928520e-16 1.373420e-18 1.082830e-19 9.927246e-22 1.394016e-23 1.508549e-25 4.777080e-27 9.963503e-30 8.788027e-38 2 2.530997e-02 1.110298e-01 7.189425e-01 4.724160e-03 2.510915e-04 4.961792e-05 1.187062e-06 1.017255e-07 3.970235e-09 2.068131e-10 9.703401e-11 7.255597e-13 1.565563e-13 2.611280e-15 3.254769e-16 2.694314e-18 1.079695e-19 1.562036e-21 1.545424e-23 1.735256e-25 1.265060e-27 2.215960e-35 3 1.439692e-03 1.313691e-01 9.101842e-02 4.446381e-01 5.912097e-03 3.126913e-04 8.585244e-05 1.538885e-06 1.919091e-07 8.250641e-09 2.393023e-10 1.283784e-10 1.387610e-12 2.250638e-13 4.821068e-15 2.111543e-16 4.457287e-18 2.448800e-19 3.227733e-21 1.284984e-23 8.240296e-26 3.335362e-33 4 3.517101e-05 3.000139e-03 4.131934e-01 8.504087e-02 1.663724e-01 9.561056e-03 2.917045e-04 9.039141e-05 1.788740e-06 1.312414e-07 2.869640e-08 4.101759e-10 1.507867e-10 3.456004e-12 5.959996e-13 5.757530e-15 2.024716e-16 4.111221e-18 7.279991e-20 1.060049e-21 6.121304e-24 4.843531e-31 5 9.934762e-06 1.458875e-04 3.927027e-03 6.740773e-01 8.441291e-02 7.234362e-02 1.094905e-02 1.879103e-04 1.252776e-04 1.454564e-06 1.059818e-07 2.729047e-08 9.494833e-10 8.082013e-11 1.033243e-11 3.411004e-13 6.554134e-15 3.958672e-16 8.201302e-18 3.482706e-20 2.714352e-22 4.461969e-29 6 5.322130e-07 6.381400e-05 4.257593e-04 6.688387e-03 9.174344e-01 4.917686e-02 4.329939e-02 3.819221e-03 1.763480e-04 1.328334e-04 1.940120e-06 9.105133e-08 1.541103e-08 2.609538e-09 8.150731e-11 2.404569e-11 1.889654e-13 3.985572e-15 1.024288e-16 6.839760e-18 1.341414e-20 4.476503e-27 7 5.863612e-10 7.892422e-07 1.012986e-04 1.397365e-03 1.342858e-02 1.002812e+00 2.593641e-02 3.890025e-02 1.670263e-03 1.614886e-04 8.871868e-05 1.756325e-06 1.155298e-07 1.122902e-08 2.203971e-09 1.028948e-10 2.509711e-11 1.531285e-13 2.099939e-15 4.258022e-17 2.374690e-18 1.208869e-24 8 1.171184e-11 2.035729e-09 3.700419e-07 2.397639e-04 4.844063e-03 2.599346e-02 9.949710e-01 1.502418e-02 2.712144e-02 1.478651e-03 1.433184e-04 6.712671e-05 1.454730e-06 9.766789e-08 9.072910e-09 2.328874e-09 6.340026e-11 1.502027e-11 1.916941e-13 1.314758e-15 1.242412e-17 4.691715e-23 9 3.005919e-13 6.399055e-11 5.515662e-09 3.748097e-07 1.153167e-04 1.497122e-02 6.310820e-02 8.863944e-01 1.030851e-02 1.491223e-02 2.002265e-03 8.941933e-05 3.530505e-05 1.470719e-06 9.754840e-08 8.043302e-09 3.375435e-09 3.679377e-11 2.917845e-12 5.484419e-14 1.471719e-15 4.178025e-21 10 1.792807e-15 1.557812e-12 1.844985e-10 1.289502e-08 7.545128e-07 6.340240e-05 2.061627e-02 1.787166e-01 5.419262e-01 1.188051e-02 1.024380e-02 2.347055e-03 7.577232e-05 1.796622e-05 1.114937e-06 7.069534e-08 8.011504e-09 2.756012e-09 4.374664e-11 6.704524e-13 1.075503e-14 1.217530e-19 11 1.923711e-17 4.362099e-15 1.941124e-12 6.147024e-10 1.551641e-08 5.550653e-07 1.380449e-04 9.537258e-03 5.398937e-01 1.863598e-01 1.452105e-02 9.548898e-03 1.837989e-03 5.136835e-05 1.397535e-05 6.835406e-07 5.429499e-08 8.819330e-09 1.851138e-09 1.231506e-11 1.775772e-13 2.576473e-18 12 5.638842e-19 1.455168e-16 9.139939e-15 1.547158e-12 1.037887e-09 2.248539e-08 1.151600e-06 9.872926e-05 5.973776e-03 8.862574e-01 6.786997e-02 1.624026e-02 4.029496e-03 2.179139e-03 2.921118e-05 1.601828e-05 5.561847e-07 3.123249e-08 2.978327e-09 9.604760e-10 3.744283e-12 9.636167e-17 13 3.331427e-21 7.494769e-19 2.963338e-16 6.987305e-15 4.315679e-12 6.087761e-10 3.497465e-08 3.604967e-06 8.639915e-05 5.915526e-03 9.923696e-01 2.749764e-02 2.345296e-02 2.411435e-03 1.600356e-03 2.967960e-05 1.263876e-05 5.535990e-07 1.777340e-08 1.086922e-09 1.497803e-10 4.715717e-15 14 8.334075e-23 3.113616e-20 1.885485e-18 4.096232e-16 1.085250e-14 2.877122e-12 9.801182e-10 2.465783e-08 7.111413e-06 1.332057e-04 5.532024e-03 1.019408e+00 1.546140e-02 2.230611e-02 1.326417e-03 7.657518e-04 3.756285e-05 1.397395e-05 7.084890e-07 8.614586e-09 3.251784e-10 1.560898e-13 15 2.761536e-24 1.577325e-22 1.652226e-19 6.855680e-18 4.640406e-16 1.789313e-14 1.881340e-12 7.696555e-10 3.721167e-08 3.131924e-06 2.768933e-04 5.432195e-03 1.019385e+00 1.220031e-02 2.678270e-02 1.012065e-03 4.234835e-04 2.691482e-05 8.312535e-06 2.735984e-07 4.296980e-09 1.264609e-12 16 1.125679e-25 3.526855e-23 5.295754e-22 1.029758e-19 2.954167e-17 8.415539e-16 3.337555e-14 1.886064e-12 3.708635e-10 8.103999e-08 2.979865e-06 2.717052e-04 5.867388e-03 1.008690e+00 1.398136e-02 2.796359e-02 1.094449e-03 2.222028e-04 1.653854e-05 6.727102e-06 7.321521e-08 3.095212e-11 17 5.314132e-29 1.371847e-25 1.002377e-22 1.431441e-21 2.329882e-19 2.824449e-17 1.264033e-15 1.039492e-13 1.896385e-12 2.117496e-10 8.676212e-08 1.428983e-06 4.224040e-04 7.551663e-03 9.828098e-01 2.577489e-02 2.154489e-02 1.348560e-03 1.271999e-04 1.123527e-05 1.554246e-06 1.061734e-09 18 1.311292e-30 3.344026e-28 1.039987e-25 1.917693e-22 4.842995e-21 2.644625e-19 5.424283e-17 1.016892e-15 2.466777e-13 3.876336e-12 1.412328e-10 6.644843e-08 1.307534e-06 2.267450e-04 1.352321e-02 9.236001e-01 4.123399e-02 2.242045e-02 1.780378e-03 1.137684e-04 4.658387e-06 2.707169e-08 19 3.685034e-32 1.308860e-29 1.727006e-27 1.846830e-25 9.168694e-23 2.025241e-20 2.015727e-19 7.009128e-17 1.110761e-15 2.135974e-13 8.991483e-12 3.294862e-10 2.170110e-08 1.342768e-06 1.738901e-04 1.366663e-02 9.157034e-01 5.085192e-02 1.134612e-02 1.333942e-03 1.601513e-04 7.755075e-07 20 2.627187e-34 3.307561e-31 6.412082e-29 8.638204e-27 5.130913e-25 5.421429e-23 2.735844e-20 4.581117e-19 4.673008e-17 1.996269e-15 1.567873e-13 2.425635e-11 7.144030e-10 2.339911e-08 4.401237e-07 1.583398e-04 8.993801e-03 8.715290e-01 1.032744e-01 9.301698e-03 8.040002e-04 1.264439e-05 21 3.712503e-36 1.248259e-33 7.484327e-31 4.015876e-28 1.275117e-26 7.126689e-25 1.294296e-22 1.126902e-20 1.562753e-18 3.245370e-17 8.822502e-16 3.618329e-13 1.719160e-11 9.436607e-10 3.634534e-08 4.567520e-07 2.489897e-05 1.031566e-02 8.313752e-01 1.337435e-01 9.529909e-03 1.755113e-04 22 1.081603e-37 4.975375e-35 3.859345e-33 1.396911e-30 8.994506e-28 2.233130e-26 1.907603e-24 1.395483e-22 7.223861e-21 2.385762e-18 3.020013e-17 1.437842e-15 1.876938e-13 2.135337e-11 5.432165e-10 7.346489e-08 4.608162e-07 1.776497e-05 2.915009e-03 7.255898e-01 2.520881e-01 4.862597e-03 23 7.053935e-40 3.695478e-37 9.639089e-35 1.470014e-32 2.795455e-30 1.235666e-27 2.213410e-26 7.771768e-24 1.829949e-22 1.539068e-20 1.623359e-18 3.985091e-17 3.521057e-15 1.986472e-13 1.486597e-11 3.334896e-10 7.576041e-08 5.116867e-07 2.834710e-05 1.528768e-03 3.676275e-01 6.239253e-01 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験-6.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験-6.html"},{"title":"生物物理学 第2回","text":"講師： 樋口秀男 生命体（生物）の一般的定義 生物とは、以下の四つの条件を満たす物質システム 自己と外界との境界 エネルギーと物質の代謝 自己複製 恒常性 電子 分子 細胞数 整体の階層性 $10&#94;{28}$ $10&#94;{23}$ $10&#94;{13}$ ヒト 意識・運動・代謝 $10&#94;{24}$ $10&#94;{19}$ $10&#94;{9}$ 心臓 循環・拡散 $10&#94;{15}$ $10&#94;{10}$ $10&#94;{0}$ 心筋細胞 生理的なリズム単位 $10&#94;{5}$ $10&#94;{5}$ 筋節 ゆらぎを制した振動 $10&#94;{0}$ タンパク質 反応のゆらぎ $10&#94;{2}$ アミノ酸 タンパク質の性質の起源 $10&#94;{0}$ 電子 量子力学の支配領域 生命科学を覆う謎 生命誕生の謎（+生命の進化、分化の謎） タンパク質構造の決定と機能との関係の謎 細胞が超多種分子（タンパク質、脂質、小分子、イオン、…）の濃度・種類・機能の制御を行う謎 個体（臓器、器官等）の構造と機能構築の謎 生命誕生の謎 元素誕生は超新星の爆発→重金属ができる。 現宇宙の元素の割合と人体内の元素比が非常に似通っている。 RNAワールド プロテインワールド 原始地球上に存在したと仮定される、RNA からなる自己複製系のこと。また、これがかつて存在し、現生生物へと進化したという仮説。 まずアミノ酸ができ、重合してポリペプチド、さらにタンパク質が作り出され、これが触媒として働いて生命を作り出したという仮説。 生命誕生を示唆した実験事実 ミラーの放電によるアミノ酸合成(1953) $\\mathrm{CH_3,NH_3,H_2,H_2O}$ を含む気体に放電（落雷を模した）をする。 実験２週間後に以下の化合物 （アミノ酸） ができた。 グリシン アラニン グルタル酸 酢酸（脂肪酸） 塩基や糖（リボース）、核酸基、RNA、タンパク質なども化学合成可能。 生命基本物質の化学合成が成功した理由 地球には、エネルギーの高い（海底火山、紫外線、雷、高音）場所と低く安定な場所が共存していたので、分子は 高エネルギー環境で合成され、低エネルギー環境で安定化する ことができた。 $$A\\overset{k_1}{{\\longrightarrow}}B\\overset{k_2}{{\\longrightarrow}}C$$ In [1]: import numpy as np import matplotlib.pyplot as plt In [2]: def simulate ( ax , color , tp , A = 1 , B = 0 , C = 0 , dt = 1e-3 , k1 = 0.07 , k2 = 0.02 , K = 1 ): time = np . arange ( 0 , 100 , dt ) As = np . zeros ( shape = len ( time )) Bs = np . zeros ( shape = len ( time )) Cs = np . zeros ( shape = len ( time )) for i , t in enumerate ( time ): dA = ( - k1 * A ) * dt * K dB = ( k1 * A - k2 * B ) * dt * K dC = ( k2 * B ) * dt * K A += dA ; B += dB ; C += dC As [ i ] = A ; Bs [ i ] = B ; Cs [ i ] = C if t > tp : K = 1e-6 # 温度を下げ、反応速度が1e-6倍になったことをシミュレーション ax . plot ( time , As , color = color ) ax . plot ( time , Bs , color = color ) ax . plot ( time , Cs , color = color ) if tp < 100 : ax . vlines ( x = tp , ymin = 0 , ymax = 1 , linestyle = \":\" ) return ax In [3]: fig , ax = plt . subplots () ax = simulate ( ax = ax , color = \"red\" , tp = 20 ) ax = simulate ( ax = ax , color = \"black\" , tp = 100 ) ax . set_xlabel ( \"Time\" ) ax . set_ylabel ( \"RQ\" ) ax . set_title ( \"Simulation Result\" ) plt . show () 上記のシミュレーション結果から、$A,B$ 分子を得るためには、 途中で（温度が下がるなどの結果）反応速度が下がる必要がある ことがわかる。 生体分子が濃縮され、多次反応による分子合成速度が上がった。 地球は巨大で多様な反応槽であったため、合成確率が上がった。 考えられる生物 地球型炭素生物 地球環境のように水と二酸化炭素（あるいはメタン）が豊富な惑星であるなら、情報記憶（DNA）→伝令（mRNA）→機能（タンパク質、RNA）のような地球型の仕事を分担した炭素生物が生まれる可能性は高い。 炭素生物 vs ケイ素生物 常温常圧で安定な炭素ー炭素結合 とは違い、 ケイ素ーケイ素結合はパイ結合やシグマ結合による二重三重結合を作る傾向がほとんど無く、非常に不安定 である。 炭素ーケイ素結合は安定 なので、炭素生物の中にケイ素が含まれるだろう。したがって、ケイ素生物の存在する確率は非常に低い。 金属生物 常温において金属結合が安定であり、分子としての機能を持つことは困難であるため、生物の中心にはならないだろう。ただし、金属イオンや錯体として、炭素生物やケイ素生物に利用されることはありうる。 講義のまとめ 生命分子や細胞の種類は多く、構造や機能をどのように理解するかが、 生命科学全体の 課題である。 生命は 宇宙の元素を効率よく利用した。 地球上の 高↔︎低エネルギーを行き交い 、多様な環境や濃縮により高確率かつ安定的に生体分子が合成された。 これが生命の誕生の確率を大きくした。 初めにRNAが合成され、それを鋳型としてタンパク質が合成され、原子生命が誕生したと想像される。 系外惑星にも、炭素生命体が存在する可能性がある。 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物物理学","url":"https://iwasakishuto.github.io/University/3A/生物物理学-2.html","loc":"https://iwasakishuto.github.io/University/3A/生物物理学-2.html"},{"title":"ペアワイズアラインメント","text":"ペアワイズアラインメントとは 2本のDNAの塩基配列（タンパク質のアミノ酸配列）を比較する方法の一つ バイオインフォマティクスでは最も基本的な解析手法 なぜDNA配列の比較をするのか DNAの機能を知りたい （∵ DNAの配列が似ていると機能が似ている） DNAのどの部分が重要かを知りたい。 （∵ 「保存されている＝重要」だと考えられる） 生物の進化系統樹を知りたい 新型シーケンサーで読まれたDNAの由来を知りたい DNAの変異や新型シークエンサーの読み取りエラーでは 長さが異なる ことがあるので、 長さの変化を考慮し効率の良い動的計画法 を用いる アラインメントの種類 説明 例 グローバルアラインメント 2本の配列の 全体 をアラインメントする。 Needleman-Wunsch ローカルアラインメント 2本の配列の 似ている部分を検出 し、その部分をアランメントする Smith-Waterman 実装 各種アラインメントを実装していく。なお、全て Affine gap penalty を利用する。 In [1]: from kerasy.Bio.alignment import NeedlemanWunshGotoh , SmithWaterman , BackwardNeedlemanWunshGotoh In [2]: # サンプル配列 seqX = \"GGAGTGAGGGGAGCAGTTGGGCTGAAGATGGTCAACGCCGAGGGAACGGTAAAGGCGACGGAGCTGTGGCAGACCTGGCTTCCTAACCACGTCCCGTGTTTTGCGGCTCCGCGAGGACTG\" seqY = \"CGCATGCGGAGTGAGGGGAGCAGTTGGGAACAGATGGTCCCGCCGAGGGACCGGTGGGCAGACGGGGCCAGCTGTGGCAGACACTGGCTTCTAACCACCGAACGTTCTTTCCGCTCCGC\" Needleman-Wunsch-Gotoh 自作のモジュール （ kerasy.Bio.alignment.NeedlemanWunshGotoh ） を使ってアラインメントをします。 In [3]: model = NeedlemanWunshGotoh () In [4]: model . align ( seqX , seqY ) Needleman-Wunsh-Gotoh Alignment score: 14.0 |parameter |value| ----------------------------- |match | 1| |mimatch | -1| |gap opening penalty | 5| |gap extension penalty| 1| =============================================================== X: -------GGAGTGAGGGGAGCAGTTGGGCTGAAGATGGTCAACGCCGAGGGAACGGTAAA Y: CGCATGCGGAGTGAGGGGAGCAGTTGGG-AACAGATGGTC-CCGCCGAGGGACCGGT-GG X: GGCGACGG----AGCTGTGGCAGAC-CTGGCTTCCTAACCACGTCCCGTGTTTTGCGGCT Y: GCAGACGGGGCCAGCTGTGGCAGACACTGGCTT-CTAACCACCGAACGT-TCTTTCCGCT X: CCGCGAGGACTG Y: CCGC-------- =============================================================== Smith-Waterman 自作のモジュール （ kerasy.Bio.alignment.SmithWaterman ） を使ってアラインメントをします。 In [5]: model = SmithWaterman () In [6]: model . align ( seqX , seqY ) Smith-Waterman Alignment score: 37.0 |parameter |value| ----------------------------- |match | 1| |mimatch | -1| |gap opening penalty | 5| |gap extension penalty| 1| =============================================================== Aligned positions: X[0,111] Y[7,118] X: GGAGTGAGGGGAGCAGTTGGGCTGAAGATGGTCAACGCCGAGGGAACGGTAAAGGCGACG Y: GGAGTGAGGGGAGCAGTTGGG-AACAGATGGTC-CCGCCGAGGGACCGGT-GGGCAGACG X: G----AGCTGTGGCAGAC-CTGGCTTCCTAACCACGTCCCGTGTTTTGCGGCTCCGC Y: GGGCCAGCTGTGGCAGACACTGGCTT-CTAACCACCGAACGT-TCTTTCCGCTCCGC =============================================================== 制約付きアラインメント $x_i$ と $y_j$ がアラインされるという制約下で最大のアラインメントスコアを求める。 全てのパターンを列挙すると $\\mathcal{O}(n&#94;2m&#94;2)$ の時間がかかるが、 後ろ向きアラインメント と組み合わせることで全てのパターンを $\\mathcal{O}(nm)$ で計算可能。 前向き：xiとyjがアラインされる時の、iまでとjまでの配列の最大アラインメントスコアを保持。 後ろ向き：xiとyjがアラインされる時の、i+1以降とj+1以降の配列の最大アラインメントスコアを保持。 Needleman-Wunsch-Gotohの逆向きアラインメントは （ kerasy.Bio.alignment.BackwardNeedlemanWunshGotoh ） に定義してあります。 In [7]: model_forward = NeedlemanWunshGotoh () model_backward = BackwardNeedlemanWunshGotoh () In [8]: model_forward . align ( seqX , seqY , memorize = True ) Needleman-Wunsh-Gotoh Alignment score: 14.0 |parameter |value| ----------------------------- |match | 1| |mimatch | -1| |gap opening penalty | 5| |gap extension penalty| 1| =============================================================== X: -------GGAGTGAGGGGAGCAGTTGGGCTGAAGATGGTCAACGCCGAGGGAACGGTAAA Y: CGCATGCGGAGTGAGGGGAGCAGTTGGG-AACAGATGGTC-CCGCCGAGGGACCGGT-GG X: GGCGACGG----AGCTGTGGCAGAC-CTGGCTTCCTAACCACGTCCCGTGTTTTGCGGCT Y: GCAGACGGGGCCAGCTGTGGCAGACACTGGCTT-CTAACCACCGAACGT-TCTTTCCGCT X: CCGCGAGGACTG Y: CCGC-------- =============================================================== In [9]: model_backward . align ( seqX , seqY , memorize = True ) Backward Needleman-Wunsh-Gotoh Alignment score: 14.0 |parameter |value| ----------------------------- |match | 1| |mimatch | -1| |gap opening penalty | 5| |gap extension penalty| 1| =============================================================== X: -------GGAGTGAGGGGAGCAGTTGGGCTGAAGATGGTCAACGCCGAGGGAACGGTAAA Y: CGCATGCGGAGTGAGGGGAGCAGTTGGGAACA-GATGGTCC-CGCCGAGGGACCGGTGG- X: GGCGACGG----AGCTGTGGCAGAC-CTGGCTTCCTAACCACGTCCCGTGTTTTGCGGCT Y: GCAGACGGGGCCAGCTGTGGCAGACACTGGCTTC-TAACCACCGAACGTTCTTTCCG-CT X: CCGCGAGGACT Y: CCGC------- =============================================================== In [10]: k = 3 n = len ( seqX ) + 1 m = len ( seqY ) + 1 In [11]: M = model_forward . DP . reshape (( k , n , m ))[ 0 , 1 :, 1 :] bM = model_backward . DP . reshape (( k , n , m ))[ 0 , 1 :, 1 :] In [12]: A = M + bM In [13]: # 上の配列を見れば、seqX[0] と seqY[7] がアラインされている時に最大スコア14を取ることがわかるので、それを確かめる。 print ( A [ 0 , 7 ]) 14.0 In [14]: # 可視化のために pandas を使用。 import pandas as pd pd . set_option ( 'display.max_rows' , m ) pd . set_option ( 'display.max_columns' , n ) In [15]: df = pd . DataFrame ( A ) In [16]: df Out[16]: .dataframe thead tr:only-child th { text-align: right; } .dataframe thead th { text-align: left; } .dataframe tbody tr th { vertical-align: top; } 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 0 12.0 10.0 8.0 8.0 8.0 10.0 8.0 14.0 7.0 2.0 1.0 -4.0 -5.0 -10.0 -11.0 -14.0 -17.0 -20.0 -25.0 -26.0 -31.0 -34.0 -35.0 -38.0 -39.0 -40.0 -41.0 -44.0 -49.0 -50.0 -51.0 -54.0 -55.0 -60.0 -63.0 -64.0 -67.0 -70.0 -71.0 -72.0 -75.0 -76.0 -79.0 -76.0 -81.0 -80.0 -83.0 -84.0 -89.0 -92.0 -93.0 -94.0 -95.0 -98.0 -101.0 -100.0 -103.0 -106.0 -111.0 -112.0 -113.0 -118.0 -117.0 -118.0 -119.0 -122.0 -125.0 -128.0 -129.0 -132.0 -133.0 -138.0 -141.0 -142.0 -147.0 -148.0 -150.0 -156.0 -156.0 -159.0 -160.0 -163.0 -164.0 -167.0 -170.0 -171.0 -174.0 -177.0 -180.0 -181.0 -184.0 -187.0 -190.0 -193.0 -194.0 -197.0 -198.0 -201.0 -200.0 -203.0 -206.0 -209.0 -210.0 -211.0 -214.0 -217.0 -218.0 -221.0 -224.0 -225.0 -228.0 -229.0 -230.0 -235.0 -238.0 -241.0 -242.0 -243.0 -246.0 1 5.0 12.0 8.0 6.0 6.0 8.0 8.0 8.0 14.0 5.0 2.0 -1.0 -4.0 -7.0 -10.0 -11.0 -14.0 -17.0 -22.0 -25.0 -26.0 -33.0 -34.0 -35.0 -38.0 -39.0 -40.0 -41.0 -44.0 -49.0 -50.0 -53.0 -54.0 -57.0 -62.0 -63.0 -64.0 -67.0 -70.0 -71.0 -72.0 -75.0 -76.0 -79.0 -76.0 -81.0 -80.0 -83.0 -84.0 -89.0 -92.0 -93.0 -94.0 -95.0 -98.0 -101.0 -100.0 -103.0 -106.0 -111.0 -112.0 -113.0 -118.0 -117.0 -118.0 -119.0 -122.0 -125.0 -128.0 -131.0 -132.0 -135.0 -140.0 -141.0 -144.0 -147.0 -148.0 -150.0 -157.0 -156.0 -159.0 -160.0 -163.0 -166.0 -169.0 -170.0 -171.0 -174.0 -179.0 -180.0 -183.0 -186.0 -189.0 -192.0 -193.0 -194.0 -197.0 -200.0 -201.0 -200.0 -203.0 -206.0 -211.0 -210.0 -211.0 -216.0 -217.0 -220.0 -223.0 -224.0 -227.0 -228.0 -229.0 -232.0 -237.0 -240.0 -243.0 -242.0 -243.0 2 2.0 3.0 10.0 8.0 6.0 6.0 6.0 6.0 6.0 14.0 3.0 0.0 -3.0 -4.0 -9.0 -12.0 -13.0 -16.0 -17.0 -24.0 -27.0 -26.0 -31.0 -34.0 -35.0 -38.0 -41.0 -42.0 -41.0 -44.0 -47.0 -48.0 -53.0 -54.0 -59.0 -60.0 -65.0 -64.0 -67.0 -68.0 -69.0 -70.0 -75.0 -76.0 -79.0 -76.0 -83.0 -80.0 -85.0 -84.0 -89.0 -90.0 -91.0 -96.0 -95.0 -98.0 -101.0 -100.0 -105.0 -106.0 -111.0 -112.0 -113.0 -116.0 -117.0 -118.0 -121.0 -122.0 -125.0 -126.0 -131.0 -134.0 -137.0 -140.0 -143.0 -146.0 -149.0 -150.0 -150.0 -157.0 -156.0 -159.0 -158.0 -163.0 -166.0 -169.0 -172.0 -171.0 -176.0 -177.0 -180.0 -183.0 -184.0 -187.0 -190.0 -193.0 -192.0 -197.0 -198.0 -201.0 -200.0 -203.0 -204.0 -209.0 -210.0 -213.0 -214.0 -217.0 -220.0 -221.0 -224.0 -225.0 -228.0 -231.0 -234.0 -237.0 -238.0 -241.0 -242.0 3 -1.0 2.0 3.0 8.0 6.0 6.0 4.0 6.0 6.0 4.0 14.0 1.0 0.0 -5.0 -4.0 -9.0 -12.0 -13.0 -18.0 -17.0 -24.0 -29.0 -26.0 -31.0 -34.0 -35.0 -38.0 -41.0 -42.0 -41.0 -44.0 -49.0 -48.0 -55.0 -56.0 -59.0 -60.0 -65.0 -64.0 -67.0 -68.0 -69.0 -70.0 -75.0 -76.0 -79.0 -76.0 -83.0 -80.0 -85.0 -84.0 -89.0 -90.0 -91.0 -96.0 -95.0 -98.0 -101.0 -100.0 -105.0 -106.0 -111.0 -112.0 -113.0 -116.0 -117.0 -118.0 -121.0 -122.0 -127.0 -126.0 -133.0 -136.0 -137.0 -142.0 -143.0 -146.0 -150.0 -151.0 -150.0 -157.0 -156.0 -159.0 -160.0 -165.0 -166.0 -169.0 -172.0 -171.0 -176.0 -179.0 -182.0 -185.0 -186.0 -187.0 -192.0 -193.0 -192.0 -197.0 -198.0 -201.0 -202.0 -205.0 -204.0 -209.0 -212.0 -213.0 -216.0 -217.0 -220.0 -223.0 -224.0 -225.0 -230.0 -233.0 -236.0 -239.0 -238.0 -241.0 4 -4.0 -3.0 0.0 1.0 8.0 4.0 4.0 2.0 4.0 4.0 2.0 14.0 1.0 -2.0 -5.0 -6.0 -11.0 -14.0 -15.0 -20.0 -19.0 -22.0 -27.0 -26.0 -29.0 -34.0 -35.0 -38.0 -41.0 -42.0 -41.0 -46.0 -49.0 -50.0 -53.0 -58.0 -61.0 -60.0 -63.0 -64.0 -67.0 -66.0 -69.0 -68.0 -75.0 -76.0 -79.0 -76.0 -83.0 -80.0 -85.0 -84.0 -87.0 -92.0 -91.0 -94.0 -95.0 -100.0 -103.0 -100.0 -105.0 -106.0 -109.0 -112.0 -113.0 -116.0 -119.0 -118.0 -121.0 -124.0 -127.0 -128.0 -131.0 -136.0 -137.0 -142.0 -145.0 -148.0 -148.0 -153.0 -150.0 -155.0 -156.0 -159.0 -160.0 -165.0 -168.0 -169.0 -170.0 -171.0 -176.0 -177.0 -182.0 -185.0 -186.0 -189.0 -190.0 -193.0 -192.0 -197.0 -198.0 -201.0 -202.0 -205.0 -204.0 -207.0 -210.0 -211.0 -214.0 -215.0 -220.0 -221.0 -224.0 -227.0 -228.0 -233.0 -234.0 -237.0 -238.0 5 -7.0 -4.0 -3.0 -2.0 -1.0 8.0 2.0 4.0 4.0 2.0 4.0 2.0 14.0 1.0 0.0 -3.0 -6.0 -9.0 -14.0 -15.0 -20.0 -21.0 -20.0 -25.0 -26.0 -29.0 -32.0 -33.0 -36.0 -39.0 -40.0 -43.0 -44.0 -49.0 -52.0 -53.0 -56.0 -59.0 -60.0 -61.0 -64.0 -65.0 -64.0 -67.0 -66.0 -73.0 -74.0 -77.0 -76.0 -81.0 -78.0 -83.0 -84.0 -85.0 -90.0 -91.0 -92.0 -95.0 -98.0 -101.0 -98.0 -103.0 -106.0 -107.0 -110.0 -111.0 -114.0 -117.0 -118.0 -121.0 -122.0 -127.0 -130.0 -131.0 -136.0 -137.0 -140.0 -144.0 -147.0 -146.0 -151.0 -150.0 -153.0 -156.0 -159.0 -160.0 -163.0 -166.0 -169.0 -170.0 -173.0 -176.0 -179.0 -182.0 -183.0 -184.0 -187.0 -190.0 -191.0 -190.0 -195.0 -198.0 -201.0 -200.0 -203.0 -206.0 -207.0 -210.0 -213.0 -214.0 -217.0 -218.0 -219.0 -224.0 -227.0 -230.0 -233.0 -232.0 -235.0 6 -10.0 -9.0 -6.0 -3.0 -4.0 -1.0 6.0 2.0 2.0 4.0 2.0 2.0 2.0 14.0 1.0 -2.0 -5.0 -8.0 -9.0 -14.0 -17.0 -18.0 -23.0 -20.0 -23.0 -28.0 -31.0 -34.0 -33.0 -34.0 -37.0 -38.0 -43.0 -44.0 -49.0 -52.0 -55.0 -56.0 -57.0 -58.0 -61.0 -64.0 -66.0 -62.0 -65.0 -66.0 -71.0 -74.0 -77.0 -76.0 -79.0 -76.0 -81.0 -84.0 -85.0 -88.0 -91.0 -94.0 -97.0 -96.0 -99.0 -98.0 -101.0 -104.0 -107.0 -110.0 -113.0 -114.0 -115.0 -116.0 -121.0 -124.0 -127.0 -130.0 -133.0 -136.0 -139.0 -141.0 -142.0 -147.0 -146.0 -149.0 -148.0 -153.0 -156.0 -159.0 -162.0 -163.0 -166.0 -167.0 -170.0 -173.0 -174.0 -177.0 -180.0 -183.0 -182.0 -187.0 -188.0 -191.0 -190.0 -193.0 -196.0 -199.0 -200.0 -203.0 -204.0 -207.0 -210.0 -211.0 -214.0 -215.0 -218.0 -221.0 -224.0 -227.0 -228.0 -231.0 -232.0 7 -13.0 -10.0 -9.0 -8.0 -5.0 -2.0 -1.0 6.0 2.0 0.0 4.0 0.0 2.0 1.0 14.0 3.0 0.0 -3.0 -8.0 -9.0 -14.0 -17.0 -18.0 -22.0 -18.0 -21.0 -26.0 -29.0 -32.0 -33.0 -34.0 -37.0 -38.0 -43.0 -46.0 -47.0 -50.0 -53.0 -54.0 -55.0 -58.0 -59.0 -64.0 -64.0 -60.0 -63.0 -66.0 -69.0 -72.0 -75.0 -76.0 -77.0 -74.0 -79.0 -82.0 -83.0 -86.0 -89.0 -94.0 -95.0 -96.0 -97.0 -98.0 -99.0 -102.0 -105.0 -108.0 -111.0 -112.0 -115.0 -116.0 -121.0 -124.0 -125.0 -130.0 -131.0 -134.0 -139.0 -139.0 -142.0 -145.0 -146.0 -147.0 -150.0 -153.0 -154.0 -157.0 -160.0 -163.0 -164.0 -167.0 -170.0 -173.0 -176.0 -177.0 -180.0 -181.0 -184.0 -185.0 -186.0 -189.0 -192.0 -193.0 -194.0 -197.0 -200.0 -201.0 -204.0 -207.0 -208.0 -211.0 -212.0 -213.0 -218.0 -221.0 -224.0 -225.0 -226.0 -229.0 8 -16.0 -13.0 -12.0 -11.0 -10.0 -5.0 -4.0 -1.0 6.0 0.0 2.0 2.0 2.0 0.0 3.0 14.0 3.0 0.0 -5.0 -6.0 -11.0 -14.0 -15.0 -18.0 -21.0 -16.0 -21.0 -26.0 -29.0 -30.0 -31.0 -34.0 -35.0 -40.0 -41.0 -44.0 -47.0 -50.0 -51.0 -52.0 -55.0 -56.0 -59.0 -64.0 -62.0 -60.0 -61.0 -66.0 -69.0 -72.0 -75.0 -74.0 -75.0 -74.0 -79.0 -80.0 -83.0 -86.0 -91.0 -92.0 -93.0 -96.0 -95.0 -96.0 -99.0 -102.0 -105.0 -108.0 -109.0 -112.0 -113.0 -118.0 -121.0 -122.0 -127.0 -128.0 -131.0 -135.0 -138.0 -137.0 -142.0 -143.0 -144.0 -147.0 -150.0 -151.0 -154.0 -157.0 -160.0 -161.0 -164.0 -167.0 -170.0 -173.0 -174.0 -177.0 -178.0 -179.0 -182.0 -183.0 -186.0 -189.0 -190.0 -191.0 -194.0 -197.0 -198.0 -201.0 -204.0 -205.0 -208.0 -209.0 -210.0 -215.0 -218.0 -221.0 -222.0 -223.0 -226.0 9 -19.0 -16.0 -15.0 -14.0 -13.0 -8.0 -7.0 -4.0 -1.0 4.0 2.0 0.0 2.0 0.0 2.0 3.0 14.0 3.0 -2.0 -3.0 -8.0 -11.0 -12.0 -17.0 -16.0 -19.0 -16.0 -21.0 -26.0 -27.0 -28.0 -31.0 -32.0 -37.0 -40.0 -39.0 -44.0 -47.0 -48.0 -49.0 -52.0 -53.0 -58.0 -57.0 -62.0 -62.0 -58.0 -61.0 -66.0 -69.0 -72.0 -73.0 -72.0 -75.0 -74.0 -77.0 -80.0 -83.0 -88.0 -89.0 -90.0 -95.0 -94.0 -93.0 -96.0 -99.0 -102.0 -105.0 -106.0 -109.0 -110.0 -115.0 -118.0 -119.0 -124.0 -125.0 -128.0 -132.0 -133.0 -136.0 -137.0 -140.0 -141.0 -144.0 -147.0 -148.0 -151.0 -154.0 -157.0 -158.0 -161.0 -164.0 -167.0 -170.0 -171.0 -174.0 -175.0 -178.0 -177.0 -180.0 -183.0 -186.0 -187.0 -188.0 -191.0 -194.0 -195.0 -198.0 -201.0 -202.0 -205.0 -206.0 -207.0 -212.0 -215.0 -218.0 -219.0 -220.0 -223.0 10 -22.0 -19.0 -18.0 -17.0 -16.0 -11.0 -10.0 -7.0 -4.0 -3.0 4.0 0.0 0.0 0.0 0.0 2.0 3.0 14.0 1.0 0.0 -5.0 -8.0 -9.0 -14.0 -15.0 -14.0 -19.0 -16.0 -21.0 -24.0 -25.0 -28.0 -29.0 -34.0 -37.0 -38.0 -39.0 -44.0 -45.0 -46.0 -49.0 -50.0 -55.0 -58.0 -55.0 -62.0 -60.0 -58.0 -61.0 -66.0 -69.0 -70.0 -71.0 -72.0 -77.0 -72.0 -77.0 -80.0 -83.0 -88.0 -87.0 -90.0 -93.0 -92.0 -93.0 -96.0 -99.0 -102.0 -103.0 -106.0 -107.0 -112.0 -115.0 -116.0 -121.0 -122.0 -125.0 -129.0 -130.0 -131.0 -136.0 -135.0 -138.0 -141.0 -144.0 -145.0 -148.0 -151.0 -154.0 -155.0 -158.0 -161.0 -162.0 -167.0 -168.0 -169.0 -172.0 -175.0 -176.0 -175.0 -180.0 -183.0 -186.0 -185.0 -188.0 -191.0 -192.0 -195.0 -198.0 -199.0 -202.0 -203.0 -204.0 -209.0 -212.0 -213.0 -218.0 -217.0 -220.0 11 -22.0 -24.0 -21.0 -18.0 -19.0 -16.0 -12.0 -12.0 -9.0 -4.0 -5.0 2.0 -2.0 0.0 -2.0 -2.0 0.0 1.0 14.0 1.0 -2.0 -3.0 -8.0 -11.0 -12.0 -13.0 -14.0 -19.0 -16.0 -19.0 -22.0 -23.0 -28.0 -29.0 -34.0 -37.0 -38.0 -39.0 -42.0 -43.0 -46.0 -49.0 -52.0 -55.0 -58.0 -55.0 -60.0 -60.0 -58.0 -61.0 -66.0 -67.0 -68.0 -71.0 -74.0 -75.0 -72.0 -79.0 -82.0 -81.0 -86.0 -87.0 -88.0 -91.0 -92.0 -93.0 -96.0 -99.0 -100.0 -101.0 -106.0 -109.0 -112.0 -115.0 -118.0 -120.0 -124.0 -127.0 -127.0 -128.0 -131.0 -134.0 -133.0 -138.0 -141.0 -142.0 -147.0 -148.0 -151.0 -152.0 -155.0 -158.0 -159.0 -160.0 -165.0 -168.0 -167.0 -172.0 -173.0 -176.0 -175.0 -178.0 -181.0 -184.0 -185.0 -188.0 -189.0 -192.0 -195.0 -196.0 -199.0 -200.0 -203.0 -206.0 -209.0 -212.0 -211.0 -216.0 -217.0 12 -28.0 -22.0 -24.0 -23.0 -20.0 -17.0 -16.0 -12.0 -10.0 -9.0 -4.0 -4.0 2.0 -4.0 0.0 -2.0 -2.0 0.0 1.0 14.0 1.0 -2.0 -3.0 -8.0 -9.0 -10.0 -11.0 -12.0 -17.0 -16.0 -19.0 -22.0 -23.0 -28.0 -31.0 -32.0 -35.0 -36.0 -37.0 -40.0 -43.0 -44.0 -49.0 -52.0 -53.0 -56.0 -55.0 -58.0 -58.0 -56.0 -61.0 -64.0 -65.0 -66.0 -71.0 -72.0 -73.0 -70.0 -79.0 -80.0 -81.0 -84.0 -87.0 -86.0 -89.0 -90.0 -91.0 -94.0 -97.0 -100.0 -101.0 -106.0 -109.0 -110.0 -115.0 -116.0 -118.0 -124.0 -126.0 -127.0 -126.0 -131.0 -132.0 -135.0 -138.0 -139.0 -140.0 -145.0 -148.0 -149.0 -152.0 -155.0 -158.0 -159.0 -160.0 -165.0 -166.0 -167.0 -170.0 -171.0 -174.0 -177.0 -180.0 -179.0 -182.0 -183.0 -186.0 -189.0 -192.0 -193.0 -194.0 -197.0 -198.0 -203.0 -206.0 -209.0 -212.0 -209.0 -214.0 13 -29.0 -30.0 -22.0 -26.0 -25.0 -22.0 -17.0 -17.0 -12.0 -12.0 -10.0 -6.0 -4.0 0.0 -4.0 -2.0 -4.0 -3.0 -2.0 2.0 14.0 1.0 -2.0 -5.0 -6.0 -9.0 -12.0 -11.0 -12.0 -15.0 -14.0 -19.0 -22.0 -25.0 -28.0 -31.0 -34.0 -35.0 -34.0 -35.0 -38.0 -43.0 -44.0 -47.0 -50.0 -53.0 -54.0 -55.0 -58.0 -60.0 -54.0 -59.0 -64.0 -65.0 -68.0 -71.0 -72.0 -75.0 -70.0 -77.0 -78.0 -81.0 -82.0 -85.0 -88.0 -89.0 -92.0 -91.0 -92.0 -97.0 -100.0 -101.0 -106.0 -109.0 -112.0 -115.0 -118.0 -118.0 -123.0 -124.0 -127.0 -124.0 -129.0 -130.0 -135.0 -138.0 -141.0 -140.0 -145.0 -146.0 -147.0 -152.0 -155.0 -158.0 -157.0 -158.0 -163.0 -164.0 -165.0 -168.0 -171.0 -172.0 -175.0 -178.0 -179.0 -182.0 -181.0 -186.0 -189.0 -190.0 -191.0 -192.0 -197.0 -198.0 -203.0 -204.0 -207.0 -210.0 -209.0 14 -33.0 -30.0 -29.0 -22.0 -27.0 -25.0 -21.0 -18.0 -15.0 -10.0 -12.0 -8.0 -8.0 -2.0 -1.0 -5.0 -3.0 -6.0 -2.0 -2.0 4.0 14.0 1.0 -2.0 -3.0 -6.0 -7.0 -10.0 -9.0 -10.0 -13.0 -14.0 -19.0 -20.0 -25.0 -26.0 -31.0 -32.0 -33.0 -34.0 -37.0 -40.0 -43.0 -44.0 -49.0 -48.0 -51.0 -52.0 -53.0 -56.0 -58.0 -54.0 -59.0 -62.0 -65.0 -66.0 -69.0 -72.0 -73.0 -70.0 -75.0 -76.0 -79.0 -82.0 -83.0 -86.0 -89.0 -90.0 -91.0 -92.0 -97.0 -100.0 -103.0 -106.0 -109.0 -112.0 -115.0 -118.0 -118.0 -123.0 -122.0 -125.0 -124.0 -129.0 -132.0 -135.0 -136.0 -139.0 -142.0 -143.0 -146.0 -149.0 -150.0 -153.0 -156.0 -159.0 -158.0 -163.0 -164.0 -167.0 -166.0 -169.0 -170.0 -175.0 -176.0 -179.0 -180.0 -183.0 -186.0 -187.0 -190.0 -191.0 -194.0 -197.0 -200.0 -203.0 -204.0 -207.0 -208.0 15 -34.0 -33.0 -30.0 -29.0 -22.0 -25.0 -24.0 -21.0 -18.0 -13.0 -10.0 -10.0 -8.0 -9.0 -2.0 -1.0 -5.0 -3.0 -7.0 -2.0 -1.0 6.0 14.0 3.0 0.0 -1.0 -4.0 -5.0 -8.0 -9.0 -10.0 -13.0 -14.0 -19.0 -22.0 -23.0 -24.0 -29.0 -30.0 -31.0 -34.0 -35.0 -40.0 -41.0 -42.0 -47.0 -48.0 -49.0 -50.0 -51.0 -56.0 -57.0 -52.0 -57.0 -62.0 -63.0 -64.0 -67.0 -70.0 -73.0 -70.0 -73.0 -76.0 -77.0 -80.0 -81.0 -84.0 -87.0 -88.0 -91.0 -92.0 -97.0 -100.0 -101.0 -106.0 -107.0 -110.0 -115.0 -117.0 -118.0 -121.0 -122.0 -123.0 -126.0 -129.0 -130.0 -133.0 -134.0 -137.0 -140.0 -143.0 -146.0 -149.0 -152.0 -153.0 -156.0 -157.0 -160.0 -161.0 -162.0 -165.0 -168.0 -169.0 -168.0 -173.0 -176.0 -177.0 -178.0 -181.0 -184.0 -187.0 -188.0 -189.0 -194.0 -197.0 -200.0 -203.0 -202.0 -205.0 16 -37.0 -34.0 -33.0 -30.0 -29.0 -22.0 -25.0 -24.0 -21.0 -18.0 -13.0 -10.0 -10.0 -8.0 -9.0 -2.0 -1.0 -5.0 -3.0 -5.0 -2.0 1.0 8.0 14.0 5.0 2.0 -3.0 -4.0 -5.0 -6.0 -7.0 -10.0 -13.0 -14.0 -17.0 -22.0 -23.0 -24.0 -27.0 -28.0 -31.0 -34.0 -37.0 -40.0 -39.0 -42.0 -45.0 -48.0 -49.0 -50.0 -49.0 -54.0 -55.0 -52.0 -57.0 -62.0 -63.0 -66.0 -67.0 -70.0 -71.0 -70.0 -71.0 -74.0 -79.0 -80.0 -83.0 -84.0 -85.0 -88.0 -91.0 -94.0 -95.0 -100.0 -101.0 -106.0 -109.0 -112.0 -114.0 -117.0 -118.0 -119.0 -120.0 -123.0 -124.0 -129.0 -132.0 -133.0 -132.0 -135.0 -140.0 -141.0 -146.0 -149.0 -150.0 -153.0 -154.0 -157.0 -158.0 -161.0 -162.0 -165.0 -168.0 -167.0 -168.0 -171.0 -174.0 -175.0 -176.0 -179.0 -184.0 -185.0 -188.0 -191.0 -192.0 -197.0 -200.0 -201.0 -202.0 17 -38.0 -37.0 -32.0 -33.0 -30.0 -29.0 -22.0 -25.0 -23.0 -19.0 -19.0 -11.0 -11.0 -8.0 -8.0 -9.0 -2.0 -3.0 -5.0 -3.0 -5.0 0.0 1.0 10.0 14.0 5.0 4.0 -1.0 -2.0 -3.0 -4.0 -7.0 -10.0 -13.0 -12.0 -17.0 -22.0 -21.0 -24.0 -25.0 -28.0 -31.0 -34.0 -35.0 -38.0 -37.0 -40.0 -43.0 -46.0 -47.0 -48.0 -47.0 -52.0 -53.0 -50.0 -57.0 -60.0 -63.0 -64.0 -65.0 -68.0 -69.0 -68.0 -69.0 -72.0 -77.0 -80.0 -81.0 -82.0 -85.0 -88.0 -91.0 -92.0 -97.0 -98.0 -103.0 -106.0 -108.0 -111.0 -114.0 -115.0 -116.0 -117.0 -120.0 -121.0 -126.0 -129.0 -130.0 -131.0 -132.0 -137.0 -138.0 -143.0 -146.0 -147.0 -150.0 -151.0 -154.0 -155.0 -158.0 -159.0 -162.0 -163.0 -166.0 -165.0 -168.0 -171.0 -172.0 -175.0 -176.0 -181.0 -182.0 -185.0 -188.0 -189.0 -194.0 -195.0 -198.0 -199.0 18 -39.0 -38.0 -37.0 -32.0 -35.0 -30.0 -27.0 -22.0 -23.0 -22.0 -19.0 -18.0 -11.0 -12.0 -8.0 -8.0 -7.0 -2.0 -3.0 -5.0 -3.0 -3.0 2.0 3.0 10.0 14.0 7.0 6.0 1.0 0.0 -1.0 -4.0 -5.0 -10.0 -13.0 -12.0 -15.0 -20.0 -21.0 -22.0 -25.0 -26.0 -31.0 -34.0 -33.0 -36.0 -35.0 -38.0 -41.0 -46.0 -45.0 -46.0 -45.0 -50.0 -51.0 -50.0 -55.0 -58.0 -61.0 -62.0 -63.0 -68.0 -67.0 -66.0 -67.0 -70.0 -75.0 -78.0 -79.0 -82.0 -83.0 -88.0 -91.0 -92.0 -96.0 -98.0 -101.0 -106.0 -106.0 -109.0 -112.0 -113.0 -114.0 -117.0 -118.0 -121.0 -124.0 -127.0 -130.0 -131.0 -134.0 -137.0 -140.0 -143.0 -144.0 -147.0 -148.0 -151.0 -152.0 -153.0 -156.0 -159.0 -160.0 -161.0 -164.0 -167.0 -168.0 -171.0 -174.0 -175.0 -178.0 -179.0 -180.0 -185.0 -188.0 -189.0 -192.0 -193.0 -196.0 19 -40.0 -39.0 -38.0 -37.0 -32.0 -33.0 -30.0 -27.0 -22.0 -24.0 -22.0 -19.0 -18.0 -11.0 -12.0 -8.0 -8.0 -7.0 -2.0 -3.0 -7.0 -2.0 -1.0 2.0 5.0 12.0 14.0 7.0 6.0 3.0 2.0 -1.0 -2.0 -7.0 -10.0 -11.0 -12.0 -15.0 -18.0 -19.0 -22.0 -23.0 -28.0 -31.0 -32.0 -33.0 -34.0 -35.0 -38.0 -41.0 -44.0 -43.0 -44.0 -45.0 -50.0 -49.0 -50.0 -55.0 -58.0 -59.0 -60.0 -65.0 -66.0 -65.0 -66.0 -67.0 -70.0 -75.0 -76.0 -79.0 -80.0 -85.0 -88.0 -89.0 -94.0 -94.0 -98.0 -103.0 -105.0 -104.0 -109.0 -110.0 -111.0 -114.0 -117.0 -116.0 -121.0 -124.0 -127.0 -128.0 -131.0 -134.0 -137.0 -140.0 -141.0 -142.0 -145.0 -148.0 -149.0 -150.0 -153.0 -156.0 -157.0 -158.0 -161.0 -164.0 -165.0 -168.0 -171.0 -172.0 -175.0 -176.0 -177.0 -182.0 -185.0 -188.0 -187.0 -190.0 -193.0 20 -45.0 -40.0 -39.0 -40.0 -39.0 -30.0 -33.0 -30.0 -27.0 -22.0 -24.0 -22.0 -19.0 -18.0 -11.0 -12.0 -8.0 -8.0 -9.0 -2.0 -5.0 -7.0 0.0 -1.0 4.0 7.0 12.0 14.0 7.0 8.0 5.0 2.0 1.0 -4.0 -7.0 -8.0 -11.0 -12.0 -13.0 -16.0 -19.0 -20.0 -25.0 -28.0 -29.0 -32.0 -31.0 -34.0 -35.0 -38.0 -39.0 -42.0 -41.0 -44.0 -45.0 -48.0 -49.0 -50.0 -55.0 -58.0 -57.0 -60.0 -63.0 -64.0 -65.0 -66.0 -67.0 -70.0 -73.0 -76.0 -77.0 -82.0 -85.0 -86.0 -91.0 -92.0 -94.0 -100.0 -102.0 -103.0 -104.0 -107.0 -108.0 -111.0 -114.0 -115.0 -116.0 -121.0 -124.0 -125.0 -128.0 -131.0 -134.0 -135.0 -138.0 -141.0 -140.0 -143.0 -146.0 -147.0 -150.0 -153.0 -154.0 -155.0 -158.0 -159.0 -162.0 -165.0 -168.0 -169.0 -170.0 -173.0 -174.0 -179.0 -182.0 -185.0 -188.0 -185.0 -190.0 21 -44.0 -45.0 -40.0 -39.0 -40.0 -37.0 -30.0 -33.0 -30.0 -27.0 -22.0 -25.0 -22.0 -19.0 -18.0 -11.0 -12.0 -8.0 -8.0 -9.0 -2.0 -5.0 -5.0 0.0 1.0 6.0 7.0 12.0 14.0 9.0 10.0 5.0 2.0 -1.0 -4.0 -7.0 -8.0 -11.0 -10.0 -11.0 -14.0 -19.0 -20.0 -23.0 -28.0 -29.0 -30.0 -31.0 -34.0 -37.0 -36.0 -37.0 -42.0 -41.0 -44.0 -43.0 -48.0 -51.0 -50.0 -55.0 -56.0 -59.0 -58.0 -61.0 -64.0 -65.0 -68.0 -67.0 -68.0 -73.0 -76.0 -77.0 -82.0 -85.0 -88.0 -91.0 -94.0 -94.0 -99.0 -100.0 -103.0 -102.0 -105.0 -106.0 -111.0 -114.0 -117.0 -116.0 -119.0 -122.0 -123.0 -128.0 -131.0 -134.0 -133.0 -136.0 -139.0 -138.0 -141.0 -146.0 -147.0 -150.0 -151.0 -152.0 -155.0 -158.0 -157.0 -162.0 -163.0 -166.0 -167.0 -168.0 -173.0 -174.0 -179.0 -180.0 -183.0 -186.0 -185.0 22 -47.0 -44.0 -45.0 -42.0 -39.0 -40.0 -35.0 -30.0 -33.0 -28.0 -29.0 -20.0 -25.0 -20.0 -19.0 -18.0 -11.0 -12.0 -8.0 -8.0 -9.0 -2.0 -5.0 -3.0 2.0 3.0 8.0 9.0 14.0 14.0 9.0 8.0 3.0 0.0 -1.0 -6.0 -9.0 -8.0 -11.0 -10.0 -13.0 -16.0 -21.0 -20.0 -25.0 -28.0 -29.0 -30.0 -31.0 -36.0 -37.0 -36.0 -37.0 -42.0 -41.0 -44.0 -43.0 -50.0 -51.0 -50.0 -55.0 -58.0 -59.0 -58.0 -61.0 -64.0 -67.0 -68.0 -67.0 -70.0 -75.0 -78.0 -77.0 -84.0 -85.0 -89.0 -93.0 -95.0 -94.0 -99.0 -100.0 -103.0 -102.0 -107.0 -106.0 -113.0 -116.0 -117.0 -116.0 -119.0 -124.0 -123.0 -130.0 -133.0 -134.0 -135.0 -136.0 -141.0 -138.0 -143.0 -146.0 -149.0 -150.0 -151.0 -152.0 -155.0 -158.0 -157.0 -162.0 -163.0 -168.0 -167.0 -170.0 -175.0 -174.0 -181.0 -180.0 -183.0 -186.0 23 -50.0 -47.0 -44.0 -45.0 -42.0 -39.0 -38.0 -35.0 -30.0 -31.0 -28.0 -27.0 -20.0 -23.0 -20.0 -19.0 -16.0 -11.0 -12.0 -8.0 -8.0 -9.0 -2.0 -5.0 -3.0 2.0 5.0 10.0 11.0 14.0 14.0 7.0 8.0 1.0 -2.0 -1.0 -6.0 -9.0 -8.0 -11.0 -12.0 -13.0 -18.0 -23.0 -20.0 -25.0 -28.0 -29.0 -30.0 -31.0 -36.0 -37.0 -36.0 -37.0 -44.0 -41.0 -44.0 -43.0 -50.0 -51.0 -50.0 -57.0 -58.0 -59.0 -58.0 -61.0 -64.0 -67.0 -68.0 -69.0 -70.0 -77.0 -80.0 -77.0 -86.0 -85.0 -89.0 -94.0 -95.0 -94.0 -99.0 -100.0 -103.0 -104.0 -109.0 -106.0 -113.0 -116.0 -119.0 -116.0 -121.0 -126.0 -125.0 -132.0 -133.0 -134.0 -135.0 -138.0 -141.0 -138.0 -143.0 -148.0 -151.0 -150.0 -151.0 -154.0 -155.0 -160.0 -159.0 -162.0 -165.0 -168.0 -167.0 -172.0 -177.0 -176.0 -183.0 -180.0 -183.0 24 -51.0 -50.0 -47.0 -44.0 -45.0 -42.0 -39.0 -38.0 -35.0 -30.0 -31.0 -28.0 -27.0 -20.0 -23.0 -20.0 -19.0 -16.0 -11.0 -12.0 -8.0 -8.0 -9.0 -2.0 -4.0 -1.0 2.0 5.0 10.0 11.0 14.0 14.0 5.0 8.0 -1.0 -4.0 -3.0 -6.0 -9.0 -8.0 -13.0 -14.0 -13.0 -20.0 -23.0 -20.0 -25.0 -28.0 -29.0 -30.0 -31.0 -36.0 -39.0 -36.0 -37.0 -44.0 -41.0 -46.0 -43.0 -50.0 -51.0 -50.0 -57.0 -58.0 -59.0 -58.0 -63.0 -64.0 -67.0 -68.0 -71.0 -72.0 -79.0 -82.0 -79.0 -86.0 -87.0 -89.0 -92.0 -93.0 -94.0 -97.0 -98.0 -103.0 -106.0 -109.0 -108.0 -113.0 -116.0 -117.0 -118.0 -123.0 -124.0 -125.0 -130.0 -131.0 -132.0 -135.0 -138.0 -139.0 -138.0 -143.0 -148.0 -149.0 -150.0 -153.0 -154.0 -157.0 -160.0 -159.0 -164.0 -165.0 -168.0 -169.0 -174.0 -177.0 -178.0 -181.0 -180.0 25 -54.0 -53.0 -50.0 -47.0 -46.0 -45.0 -42.0 -41.0 -38.0 -33.0 -32.0 -31.0 -30.0 -25.0 -22.0 -25.0 -22.0 -21.0 -16.0 -13.0 -14.0 -8.0 -10.0 -9.0 -4.0 -4.0 -1.0 2.0 7.0 10.0 9.0 14.0 12.0 7.0 6.0 -1.0 -4.0 -3.0 -6.0 -7.0 -10.0 -13.0 -16.0 -13.0 -22.0 -21.0 -20.0 -25.0 -28.0 -29.0 -30.0 -29.0 -34.0 -37.0 -36.0 -37.0 -42.0 -43.0 -48.0 -43.0 -50.0 -49.0 -50.0 -55.0 -56.0 -59.0 -60.0 -63.0 -64.0 -65.0 -70.0 -73.0 -74.0 -79.0 -82.0 -81.0 -88.0 -89.0 -89.0 -94.0 -93.0 -94.0 -97.0 -100.0 -105.0 -108.0 -111.0 -108.0 -115.0 -116.0 -119.0 -120.0 -123.0 -124.0 -125.0 -132.0 -131.0 -134.0 -135.0 -138.0 -139.0 -138.0 -143.0 -148.0 -149.0 -152.0 -153.0 -156.0 -159.0 -160.0 -161.0 -164.0 -167.0 -170.0 -171.0 -176.0 -177.0 -178.0 -181.0 26 -57.0 -54.0 -52.0 -52.0 -49.0 -46.0 -45.0 -42.0 -39.0 -38.0 -33.0 -34.0 -31.0 -30.0 -25.0 -22.0 -23.0 -22.0 -23.0 -16.0 -15.0 -15.0 -8.0 -12.0 -10.0 -4.0 -2.0 1.0 2.0 5.0 8.0 7.0 14.0 10.0 5.0 6.0 -1.0 -4.0 -3.0 -6.0 -9.0 -10.0 -15.0 -18.0 -13.0 -22.0 -21.0 -20.0 -25.0 -28.0 -29.0 -32.0 -29.0 -34.0 -39.0 -36.0 -37.0 -42.0 -43.0 -48.0 -43.0 -50.0 -49.0 -50.0 -55.0 -56.0 -59.0 -60.0 -63.0 -66.0 -65.0 -72.0 -75.0 -74.0 -81.0 -82.0 -81.0 -89.0 -90.0 -89.0 -94.0 -93.0 -94.0 -99.0 -102.0 -105.0 -108.0 -111.0 -110.0 -115.0 -118.0 -121.0 -122.0 -125.0 -124.0 -125.0 -132.0 -133.0 -134.0 -135.0 -138.0 -141.0 -138.0 -143.0 -146.0 -149.0 -150.0 -153.0 -156.0 -157.0 -160.0 -161.0 -162.0 -167.0 -170.0 -173.0 -176.0 -175.0 -178.0 27 -60.0 -59.0 -56.0 -52.0 -54.0 -51.0 -48.0 -46.0 -44.0 -39.0 -39.0 -35.0 -35.0 -31.0 -31.0 -26.0 -24.0 -25.0 -22.0 -23.0 -18.0 -15.0 -15.0 -8.0 -12.0 -9.0 -6.0 -4.0 1.0 2.0 3.0 8.0 6.0 14.0 8.0 3.0 6.0 -1.0 -2.0 -3.0 -6.0 -9.0 -12.0 -13.0 -16.0 -13.0 -20.0 -21.0 -20.0 -25.0 -26.0 -31.0 -32.0 -29.0 -34.0 -37.0 -36.0 -37.0 -42.0 -43.0 -46.0 -43.0 -48.0 -49.0 -50.0 -55.0 -58.0 -59.0 -60.0 -61.0 -66.0 -67.0 -72.0 -75.0 -76.0 -81.0 -83.0 -83.0 -87.0 -92.0 -89.0 -94.0 -93.0 -96.0 -101.0 -104.0 -107.0 -108.0 -109.0 -110.0 -115.0 -118.0 -119.0 -122.0 -125.0 -126.0 -125.0 -132.0 -133.0 -136.0 -135.0 -136.0 -143.0 -138.0 -143.0 -148.0 -149.0 -152.0 -153.0 -156.0 -159.0 -160.0 -163.0 -164.0 -169.0 -172.0 -175.0 -176.0 -175.0 28 -62.0 -62.0 -59.0 -57.0 -52.0 -54.0 -50.0 -49.0 -44.0 -43.0 -41.0 -37.0 -36.0 -33.0 -32.0 -31.0 -26.0 -26.0 -26.0 -24.0 -24.0 -19.0 -17.0 -13.0 -8.0 -10.0 -7.0 -7.0 -4.0 -1.0 0.0 2.0 6.0 6.0 14.0 8.0 1.0 6.0 -1.0 -2.0 -5.0 -8.0 -11.0 -14.0 -13.0 -16.0 -13.0 -20.0 -21.0 -22.0 -25.0 -26.0 -31.0 -32.0 -29.0 -34.0 -37.0 -38.0 -37.0 -42.0 -43.0 -48.0 -43.0 -48.0 -49.0 -50.0 -57.0 -58.0 -59.0 -62.0 -63.0 -68.0 -67.0 -74.0 -75.0 -78.0 -83.0 -83.0 -84.0 -89.0 -92.0 -89.0 -94.0 -95.0 -96.0 -103.0 -106.0 -107.0 -108.0 -109.0 -112.0 -115.0 -120.0 -121.0 -122.0 -127.0 -126.0 -127.0 -132.0 -135.0 -136.0 -135.0 -136.0 -143.0 -138.0 -143.0 -148.0 -149.0 -152.0 -153.0 -158.0 -159.0 -162.0 -165.0 -164.0 -171.0 -172.0 -175.0 -176.0 29 -65.0 -62.0 -61.0 -60.0 -57.0 -52.0 -53.0 -50.0 -47.0 -42.0 -43.0 -42.0 -37.0 -36.0 -33.0 -32.0 -29.0 -26.0 -27.0 -26.0 -25.0 -22.0 -19.0 -18.0 -13.0 -8.0 -8.0 -5.0 -6.0 -5.0 -2.0 -1.0 2.0 5.0 6.0 14.0 8.0 1.0 6.0 1.0 -2.0 -3.0 -8.0 -11.0 -12.0 -11.0 -14.0 -13.0 -18.0 -23.0 -22.0 -25.0 -24.0 -29.0 -30.0 -29.0 -32.0 -35.0 -40.0 -37.0 -40.0 -45.0 -46.0 -43.0 -46.0 -47.0 -50.0 -55.0 -56.0 -59.0 -60.0 -65.0 -68.0 -67.0 -74.0 -75.0 -78.0 -83.0 -81.0 -84.0 -89.0 -90.0 -89.0 -94.0 -97.0 -96.0 -101.0 -104.0 -107.0 -108.0 -111.0 -114.0 -117.0 -120.0 -121.0 -124.0 -125.0 -128.0 -127.0 -130.0 -133.0 -136.0 -135.0 -136.0 -141.0 -140.0 -143.0 -148.0 -151.0 -152.0 -155.0 -156.0 -157.0 -162.0 -165.0 -166.0 -169.0 -170.0 -173.0 30 -64.0 -65.0 -64.0 -61.0 -60.0 -55.0 -52.0 -53.0 -50.0 -47.0 -42.0 -45.0 -42.0 -39.0 -36.0 -33.0 -32.0 -29.0 -26.0 -27.0 -28.0 -27.0 -22.0 -19.0 -18.0 -12.0 -8.0 -8.0 -5.0 -6.0 -5.0 -4.0 -1.0 2.0 3.0 8.0 14.0 8.0 2.0 6.0 -1.0 -2.0 -5.0 -10.0 -11.0 -12.0 -11.0 -14.0 -13.0 -20.0 -23.0 -22.0 -25.0 -24.0 -29.0 -30.0 -29.0 -32.0 -37.0 -40.0 -37.0 -42.0 -45.0 -46.0 -43.0 -46.0 -47.0 -50.0 -55.0 -58.0 -59.0 -62.0 -67.0 -68.0 -69.0 -74.0 -75.0 -80.0 -84.0 -81.0 -84.0 -89.0 -90.0 -91.0 -96.0 -97.0 -96.0 -101.0 -104.0 -107.0 -108.0 -113.0 -116.0 -117.0 -120.0 -123.0 -124.0 -125.0 -128.0 -127.0 -130.0 -135.0 -138.0 -135.0 -136.0 -143.0 -140.0 -145.0 -148.0 -151.0 -154.0 -155.0 -156.0 -159.0 -164.0 -167.0 -166.0 -169.0 -170.0 31 -67.0 -64.0 -65.0 -64.0 -61.0 -58.0 -55.0 -52.0 -53.0 -50.0 -47.0 -42.0 -45.0 -42.0 -39.0 -36.0 -33.0 -32.0 -29.0 -26.0 -27.0 -28.0 -27.0 -22.0 -19.0 -17.0 -12.0 -8.0 -8.0 -5.0 -6.0 -5.0 -4.0 -1.0 2.0 3.0 8.0 14.0 8.0 4.0 4.0 -2.0 -4.0 -7.0 -11.0 -11.0 -12.0 -11.0 -14.0 -13.0 -20.0 -23.0 -22.0 -27.0 -24.0 -29.0 -30.0 -29.0 -32.0 -37.0 -38.0 -37.0 -42.0 -45.0 -46.0 -43.0 -46.0 -47.0 -50.0 -55.0 -58.0 -61.0 -62.0 -67.0 -68.0 -71.0 -75.0 -76.0 -81.0 -82.0 -81.0 -84.0 -87.0 -90.0 -91.0 -96.0 -97.0 -96.0 -101.0 -102.0 -107.0 -106.0 -113.0 -114.0 -115.0 -120.0 -121.0 -122.0 -123.0 -128.0 -127.0 -132.0 -135.0 -136.0 -135.0 -136.0 -141.0 -140.0 -145.0 -146.0 -149.0 -152.0 -155.0 -158.0 -159.0 -164.0 -167.0 -166.0 -169.0 32 -68.0 -67.0 -62.0 -65.0 -64.0 -61.0 -56.0 -55.0 -52.0 -51.0 -50.0 -45.0 -42.0 -43.0 -42.0 -39.0 -36.0 -33.0 -32.0 -29.0 -26.0 -27.0 -28.0 -25.0 -22.0 -19.0 -15.0 -10.0 -8.0 -8.0 -5.0 -6.0 -3.0 -4.0 -1.0 2.0 3.0 10.0 14.0 9.0 6.0 2.0 0.0 -3.0 -6.0 -9.0 -10.0 -11.0 -10.0 -16.0 -13.0 -19.0 -22.0 -21.0 -26.0 -24.0 -28.0 -31.0 -29.0 -32.0 -36.0 -39.0 -36.0 -43.0 -44.0 -45.0 -45.0 -46.0 -47.0 -52.0 -56.0 -57.0 -62.0 -64.0 -68.0 -70.0 -73.0 -74.0 -76.0 -80.0 -81.0 -80.0 -84.0 -86.0 -91.0 -93.0 -97.0 -96.0 -98.0 -101.0 -102.0 -108.0 -106.0 -114.0 -113.0 -114.0 -119.0 -120.0 -121.0 -122.0 -127.0 -129.0 -131.0 -134.0 -135.0 -137.0 -136.0 -142.0 -142.0 -145.0 -146.0 -148.0 -153.0 -154.0 -159.0 -159.0 -163.0 -166.0 -165.0 33 -71.0 -68.0 -65.0 -62.0 -65.0 -62.0 -59.0 -56.0 -53.0 -50.0 -51.0 -48.0 -45.0 -42.0 -43.0 -42.0 -39.0 -36.0 -33.0 -32.0 -29.0 -26.0 -27.0 -26.0 -24.0 -21.0 -18.0 -13.0 -8.0 -8.0 -8.0 -5.0 -4.0 -3.0 -4.0 -1.0 2.0 5.0 12.0 14.0 7.0 4.0 1.0 -2.0 -3.0 -4.0 -7.0 -8.0 -9.0 -8.0 -15.0 -15.0 -19.0 -22.0 -19.0 -24.0 -24.0 -26.0 -29.0 -29.0 -31.0 -34.0 -37.0 -36.0 -41.0 -42.0 -43.0 -45.0 -46.0 -47.0 -53.0 -56.0 -59.0 -62.0 -65.0 -68.0 -71.0 -73.0 -74.0 -75.0 -78.0 -79.0 -80.0 -85.0 -88.0 -91.0 -94.0 -95.0 -98.0 -98.0 -102.0 -104.0 -106.0 -105.0 -112.0 -113.0 -114.0 -119.0 -120.0 -121.0 -120.0 -125.0 -130.0 -131.0 -132.0 -135.0 -136.0 -138.0 -142.0 -142.0 -146.0 -146.0 -150.0 -153.0 -154.0 -159.0 -159.0 -163.0 -164.0 34 -72.0 -71.0 -68.0 -65.0 -62.0 -63.0 -60.0 -59.0 -56.0 -51.0 -50.0 -49.0 -48.0 -43.0 -42.0 -43.0 -40.0 -39.0 -36.0 -33.0 -32.0 -29.0 -26.0 -27.0 -25.0 -22.0 -19.0 -16.0 -11.0 -8.0 -8.0 -8.0 -5.0 -4.0 -3.0 -2.0 1.0 4.0 7.0 14.0 12.0 5.0 2.0 -1.0 -4.0 -3.0 -4.0 -7.0 -8.0 -9.0 -8.0 -17.0 -15.0 -19.0 -22.0 -19.0 -24.0 -26.0 -26.0 -29.0 -29.0 -31.0 -34.0 -37.0 -36.0 -41.0 -42.0 -43.0 -45.0 -46.0 -49.0 -55.0 -58.0 -61.0 -64.0 -67.0 -70.0 -72.0 -73.0 -76.0 -75.0 -78.0 -79.0 -82.0 -87.0 -90.0 -91.0 -94.0 -97.0 -98.0 -100.0 -104.0 -104.0 -106.0 -105.0 -114.0 -113.0 -114.0 -119.0 -122.0 -121.0 -120.0 -127.0 -130.0 -131.0 -132.0 -135.0 -138.0 -140.0 -142.0 -142.0 -146.0 -148.0 -152.0 -155.0 -154.0 -161.0 -159.0 -163.0 35 -73.0 -74.0 -69.0 -70.0 -66.0 -64.0 -61.0 -62.0 -59.0 -56.0 -53.0 -52.0 -51.0 -48.0 -45.0 -44.0 -43.0 -42.0 -41.0 -38.0 -33.0 -34.0 -31.0 -28.0 -28.0 -25.0 -22.0 -19.0 -16.0 -13.0 -8.0 -10.0 -10.0 -7.0 -6.0 -5.0 -2.0 1.0 6.0 9.0 14.0 10.0 5.0 2.0 -1.0 -4.0 -3.0 -4.0 -7.0 -8.0 -9.0 -8.0 -17.0 -17.0 -19.0 -22.0 -19.0 -26.0 -26.0 -26.0 -29.0 -31.0 -31.0 -34.0 -37.0 -36.0 -41.0 -42.0 -43.0 -47.0 -48.0 -49.0 -57.0 -60.0 -63.0 -65.0 -69.0 -70.0 -72.0 -73.0 -76.0 -75.0 -78.0 -79.0 -84.0 -87.0 -92.0 -91.0 -96.0 -97.0 -98.0 -102.0 -106.0 -106.0 -106.0 -105.0 -114.0 -113.0 -114.0 -121.0 -122.0 -123.0 -120.0 -127.0 -130.0 -133.0 -132.0 -137.0 -138.0 -140.0 -142.0 -142.0 -148.0 -148.0 -154.0 -155.0 -154.0 -161.0 -159.0 36 -78.0 -73.0 -74.0 -71.0 -72.0 -66.0 -66.0 -61.0 -60.0 -59.0 -56.0 -55.0 -52.0 -51.0 -48.0 -45.0 -44.0 -43.0 -44.0 -39.0 -40.0 -35.0 -34.0 -33.0 -30.0 -26.0 -23.0 -20.0 -19.0 -18.0 -15.0 -10.0 -10.0 -12.0 -9.0 -6.0 -3.0 -2.0 1.0 4.0 7.0 14.0 8.0 3.0 2.0 -1.0 -4.0 -3.0 -4.0 -7.0 -8.0 -11.0 -8.0 -17.0 -17.0 -19.0 -22.0 -19.0 -26.0 -26.0 -26.0 -29.0 -31.0 -31.0 -34.0 -37.0 -36.0 -41.0 -42.0 -45.0 -47.0 -50.0 -51.0 -56.0 -61.0 -62.0 -64.0 -70.0 -71.0 -71.0 -73.0 -76.0 -75.0 -80.0 -81.0 -84.0 -86.0 -91.0 -93.0 -95.0 -98.0 -100.0 -102.0 -105.0 -106.0 -106.0 -105.0 -112.0 -113.0 -114.0 -119.0 -122.0 -125.0 -120.0 -127.0 -128.0 -131.0 -134.0 -137.0 -136.0 -139.0 -142.0 -142.0 -148.0 -148.0 -154.0 -155.0 -154.0 -159.0 37 -79.0 -80.0 -73.0 -76.0 -73.0 -71.0 -66.0 -68.0 -63.0 -62.0 -60.0 -58.0 -57.0 -54.0 -53.0 -49.0 -47.0 -46.0 -45.0 -44.0 -39.0 -39.0 -37.0 -36.0 -34.0 -31.0 -28.0 -25.0 -22.0 -21.0 -18.0 -17.0 -12.0 -12.0 -14.0 -11.0 -8.0 -5.0 0.0 3.0 4.0 5.0 14.0 8.0 1.0 0.0 -1.0 -4.0 -5.0 -4.0 -7.0 -8.0 -11.0 -8.0 -17.0 -17.0 -19.0 -22.0 -19.0 -24.0 -26.0 -26.0 -29.0 -33.0 -31.0 -36.0 -37.0 -36.0 -39.0 -44.0 -47.0 -47.0 -52.0 -53.0 -58.0 -62.0 -64.0 -64.0 -70.0 -71.0 -71.0 -73.0 -76.0 -75.0 -82.0 -83.0 -84.0 -86.0 -92.0 -93.0 -94.0 -99.0 -102.0 -101.0 -104.0 -106.0 -106.0 -105.0 -112.0 -115.0 -114.0 -119.0 -122.0 -125.0 -120.0 -125.0 -126.0 -131.0 -134.0 -135.0 -134.0 -137.0 -142.0 -142.0 -148.0 -147.0 -152.0 -153.0 -154.0 38 -81.0 -80.0 -78.0 -75.0 -77.0 -75.0 -69.0 -66.0 -68.0 -64.0 -64.0 -58.0 -59.0 -56.0 -55.0 -54.0 -49.0 -49.0 -47.0 -46.0 -44.0 -40.0 -39.0 -39.0 -37.0 -34.0 -30.0 -28.0 -25.0 -24.0 -21.0 -19.0 -19.0 -14.0 -14.0 -14.0 -11.0 -8.0 -3.0 0.0 3.0 2.0 5.0 14.0 6.0 -1.0 -1.0 1.0 -4.0 -5.0 -4.0 -7.0 -8.0 -11.0 -8.0 -17.0 -17.0 -19.0 -22.0 -19.0 -24.0 -26.0 -26.0 -29.0 -33.0 -31.0 -36.0 -37.0 -36.0 -41.0 -46.0 -47.0 -49.0 -54.0 -55.0 -60.0 -63.0 -64.0 -64.0 -72.0 -71.0 -71.0 -73.0 -76.0 -77.0 -84.0 -85.0 -84.0 -88.0 -92.0 -93.0 -96.0 -101.0 -104.0 -101.0 -104.0 -108.0 -106.0 -105.0 -114.0 -115.0 -116.0 -119.0 -122.0 -124.0 -122.0 -125.0 -128.0 -133.0 -134.0 -135.0 -134.0 -139.0 -142.0 -144.0 -148.0 -147.0 -152.0 -153.0 39 -86.0 -81.0 -80.0 -79.0 -76.0 -75.0 -74.0 -69.0 -66.0 -67.0 -64.0 -63.0 -58.0 -57.0 -56.0 -55.0 -52.0 -49.0 -50.0 -47.0 -46.0 -45.0 -40.0 -37.0 -39.0 -35.0 -32.0 -28.0 -28.0 -27.0 -25.0 -23.0 -19.0 -21.0 -16.0 -14.0 -12.0 -11.0 -8.0 -5.0 -2.0 3.0 0.0 4.0 14.0 4.0 0.0 -1.0 2.0 -3.0 -5.0 -4.0 -7.0 -7.0 -11.0 -8.0 -16.0 -17.0 -18.0 -22.0 -19.0 -23.0 -26.0 -26.0 -29.0 -33.0 -31.0 -36.0 -37.0 -38.0 -41.0 -47.0 -49.0 -49.0 -56.0 -55.0 -60.0 -62.0 -65.0 -64.0 -71.0 -70.0 -71.0 -75.0 -78.0 -77.0 -83.0 -85.0 -86.0 -88.0 -93.0 -95.0 -98.0 -102.0 -105.0 -101.0 -106.0 -108.0 -106.0 -105.0 -114.0 -117.0 -118.0 -119.0 -122.0 -125.0 -122.0 -127.0 -130.0 -133.0 -136.0 -135.0 -134.0 -141.0 -144.0 -146.0 -150.0 -147.0 -152.0 40 -87.0 -86.0 -81.0 -80.0 -79.0 -76.0 -75.0 -74.0 -69.0 -66.0 -67.0 -64.0 -63.0 -58.0 -57.0 -56.0 -55.0 -52.0 -49.0 -50.0 -47.0 -44.0 -45.0 -40.0 -36.0 -37.0 -36.0 -34.0 -28.0 -28.0 -29.0 -23.0 -25.0 -19.0 -22.0 -17.0 -16.0 -14.0 -11.0 -8.0 -6.0 -4.0 1.0 -1.0 4.0 14.0 2.0 -1.0 -2.0 2.0 -1.0 -4.0 -4.0 -7.0 -7.0 -10.0 -8.0 -16.0 -17.0 -16.0 -21.0 -19.0 -21.0 -24.0 -26.0 -29.0 -33.0 -31.0 -35.0 -36.0 -40.0 -43.0 -47.0 -50.0 -51.0 -56.0 -57.0 -61.0 -60.0 -67.0 -64.0 -69.0 -68.0 -73.0 -76.0 -79.0 -79.0 -83.0 -86.0 -86.0 -90.0 -93.0 -94.0 -97.0 -102.0 -103.0 -100.0 -106.0 -108.0 -108.0 -105.0 -112.0 -115.0 -118.0 -119.0 -122.0 -123.0 -124.0 -129.0 -130.0 -133.0 -134.0 -137.0 -136.0 -143.0 -146.0 -146.0 -150.0 -147.0 41 -90.0 -87.0 -86.0 -83.0 -82.0 -79.0 -76.0 -75.0 -72.0 -71.0 -66.0 -67.0 -64.0 -63.0 -58.0 -57.0 -56.0 -55.0 -54.0 -49.0 -52.0 -49.0 -44.0 -45.0 -42.0 -34.0 -35.0 -34.0 -33.0 -28.0 -29.0 -28.0 -23.0 -26.0 -19.0 -20.0 -17.0 -16.0 -13.0 -10.0 -9.0 -6.0 -5.0 0.0 1.0 6.0 14.0 3.0 1.0 -1.0 2.0 1.0 -2.0 -3.0 -6.0 -5.0 -8.0 -8.0 -14.0 -15.0 -16.0 -21.0 -19.0 -19.0 -22.0 -25.0 -28.0 -31.0 -31.0 -35.0 -36.0 -41.0 -44.0 -45.0 -50.0 -51.0 -54.0 -58.0 -59.0 -60.0 -65.0 -64.0 -67.0 -70.0 -73.0 -74.0 -77.0 -79.0 -83.0 -84.0 -87.0 -90.0 -93.0 -96.0 -99.0 -100.0 -103.0 -100.0 -105.0 -106.0 -108.0 -107.0 -112.0 -113.0 -116.0 -119.0 -120.0 -123.0 -126.0 -127.0 -130.0 -131.0 -132.0 -137.0 -138.0 -143.0 -144.0 -145.0 -148.0 42 -93.0 -90.0 -89.0 -88.0 -85.0 -82.0 -81.0 -76.0 -75.0 -74.0 -71.0 -66.0 -67.0 -66.0 -63.0 -58.0 -57.0 -56.0 -57.0 -54.0 -51.0 -52.0 -49.0 -46.0 -46.0 -41.0 -34.0 -35.0 -36.0 -33.0 -28.0 -29.0 -28.0 -25.0 -28.0 -19.0 -20.0 -19.0 -16.0 -13.0 -12.0 -9.0 -8.0 -5.0 0.0 -1.0 8.0 14.0 3.0 1.0 1.0 4.0 3.0 -2.0 -3.0 -4.0 -5.0 -8.0 -8.0 -12.0 -13.0 -18.0 -19.0 -18.0 -19.0 -22.0 -25.0 -28.0 -29.0 -32.0 -33.0 -38.0 -41.0 -42.0 -47.0 -48.0 -51.0 -55.0 -56.0 -57.0 -60.0 -63.0 -64.0 -67.0 -70.0 -71.0 -74.0 -77.0 -80.0 -81.0 -84.0 -87.0 -90.0 -93.0 -94.0 -97.0 -100.0 -101.0 -98.0 -103.0 -106.0 -109.0 -107.0 -111.0 -113.0 -117.0 -118.0 -121.0 -124.0 -125.0 -128.0 -129.0 -130.0 -134.0 -138.0 -140.0 -142.0 -143.0 -145.0 43 -96.0 -93.0 -90.0 -91.0 -90.0 -85.0 -84.0 -81.0 -76.0 -77.0 -74.0 -73.0 -66.0 -69.0 -66.0 -63.0 -58.0 -57.0 -58.0 -57.0 -54.0 -53.0 -52.0 -51.0 -48.0 -44.0 -41.0 -34.0 -35.0 -36.0 -33.0 -28.0 -29.0 -30.0 -27.0 -26.0 -19.0 -20.0 -19.0 -16.0 -15.0 -12.0 -9.0 -10.0 -3.0 -2.0 1.0 8.0 14.0 1.0 3.0 3.0 6.0 3.0 -2.0 -1.0 -4.0 -5.0 -8.0 -7.0 -10.0 -15.0 -16.0 -17.0 -18.0 -19.0 -22.0 -25.0 -26.0 -29.0 -30.0 -35.0 -38.0 -39.0 -44.0 -45.0 -48.0 -52.0 -53.0 -54.0 -57.0 -58.0 -61.0 -64.0 -67.0 -68.0 -71.0 -74.0 -77.0 -78.0 -81.0 -84.0 -87.0 -90.0 -91.0 -92.0 -97.0 -98.0 -99.0 -96.0 -103.0 -106.0 -109.0 -107.0 -111.0 -114.0 -115.0 -118.0 -121.0 -122.0 -125.0 -126.0 -127.0 -132.0 -135.0 -138.0 -141.0 -140.0 -143.0 44 -97.0 -96.0 -93.0 -90.0 -91.0 -88.0 -85.0 -84.0 -81.0 -76.0 -77.0 -74.0 -73.0 -66.0 -69.0 -66.0 -63.0 -58.0 -57.0 -58.0 -57.0 -54.0 -53.0 -52.0 -50.0 -47.0 -44.0 -41.0 -34.0 -35.0 -36.0 -31.0 -28.0 -29.0 -30.0 -27.0 -26.0 -19.0 -18.0 -17.0 -16.0 -15.0 -12.0 -9.0 -8.0 -3.0 -2.0 1.0 8.0 14.0 3.0 5.0 5.0 6.0 3.0 0.0 -1.0 -4.0 -5.0 -6.0 -5.0 -10.0 -13.0 -16.0 -17.0 -18.0 -19.0 -22.0 -23.0 -24.0 -29.0 -32.0 -35.0 -38.0 -41.0 -44.0 -47.0 -49.0 -50.0 -51.0 -54.0 -55.0 -56.0 -61.0 -64.0 -67.0 -70.0 -71.0 -74.0 -75.0 -78.0 -81.0 -82.0 -85.0 -90.0 -89.0 -90.0 -95.0 -98.0 -97.0 -96.0 -101.0 -106.0 -107.0 -107.0 -111.0 -112.0 -115.0 -118.0 -119.0 -122.0 -123.0 -126.0 -129.0 -132.0 -135.0 -136.0 -139.0 -140.0 45 -100.0 -97.0 -96.0 -93.0 -92.0 -89.0 -88.0 -85.0 -84.0 -79.0 -78.0 -77.0 -76.0 -71.0 -68.0 -71.0 -68.0 -65.0 -58.0 -57.0 -60.0 -57.0 -56.0 -53.0 -51.0 -50.0 -47.0 -44.0 -39.0 -34.0 -37.0 -34.0 -33.0 -28.0 -30.0 -32.0 -29.0 -24.0 -19.0 -16.0 -19.0 -16.0 -13.0 -14.0 -7.0 -6.0 -5.0 -2.0 1.0 10.0 14.0 5.0 7.0 7.0 8.0 5.0 0.0 1.0 -2.0 -3.0 -6.0 -3.0 -10.0 -11.0 -14.0 -17.0 -16.0 -17.0 -20.0 -21.0 -26.0 -29.0 -32.0 -35.0 -38.0 -41.0 -43.0 -46.0 -47.0 -52.0 -49.0 -54.0 -53.0 -58.0 -61.0 -64.0 -65.0 -68.0 -71.0 -72.0 -75.0 -78.0 -79.0 -82.0 -85.0 -88.0 -87.0 -90.0 -95.0 -96.0 -95.0 -96.0 -103.0 -104.0 -105.0 -106.0 -109.0 -112.0 -115.0 -116.0 -117.0 -120.0 -123.0 -126.0 -129.0 -130.0 -135.0 -134.0 -137.0 46 -99.0 -100.0 -95.0 -96.0 -93.0 -92.0 -87.0 -88.0 -83.0 -82.0 -79.0 -78.0 -77.0 -74.0 -71.0 -68.0 -69.0 -66.0 -65.0 -58.0 -57.0 -60.0 -57.0 -56.0 -52.0 -49.0 -48.0 -45.0 -42.0 -39.0 -34.0 -37.0 -34.0 -33.0 -28.0 -31.0 -30.0 -27.0 -22.0 -17.0 -16.0 -19.0 -14.0 -13.0 -12.0 -5.0 -6.0 -3.0 -2.0 3.0 10.0 14.0 5.0 7.0 7.0 8.0 5.0 -2.0 1.0 -2.0 -3.0 -8.0 -3.0 -10.0 -11.0 -14.0 -17.0 -16.0 -17.0 -22.0 -23.0 -26.0 -31.0 -34.0 -37.0 -40.0 -43.0 -43.0 -46.0 -49.0 -52.0 -49.0 -54.0 -53.0 -60.0 -63.0 -66.0 -65.0 -70.0 -71.0 -72.0 -77.0 -80.0 -81.0 -82.0 -85.0 -90.0 -87.0 -90.0 -95.0 -96.0 -95.0 -96.0 -103.0 -104.0 -107.0 -106.0 -111.0 -114.0 -115.0 -116.0 -117.0 -122.0 -123.0 -128.0 -129.0 -130.0 -135.0 -134.0 47 -104.0 -99.0 -100.0 -97.0 -98.0 -93.0 -92.0 -87.0 -86.0 -81.0 -82.0 -81.0 -78.0 -77.0 -74.0 -71.0 -68.0 -67.0 -68.0 -63.0 -60.0 -59.0 -60.0 -59.0 -55.0 -50.0 -47.0 -46.0 -45.0 -44.0 -41.0 -36.0 -37.0 -36.0 -35.0 -28.0 -31.0 -30.0 -27.0 -24.0 -17.0 -16.0 -17.0 -16.0 -13.0 -10.0 -3.0 -4.0 -1.0 0.0 5.0 10.0 14.0 7.0 9.0 9.0 10.0 7.0 0.0 1.0 0.0 -5.0 -6.0 -3.0 -8.0 -9.0 -12.0 -15.0 -16.0 -19.0 -20.0 -25.0 -28.0 -29.0 -34.0 -35.0 -38.0 -42.0 -43.0 -44.0 -49.0 -50.0 -49.0 -54.0 -55.0 -58.0 -61.0 -64.0 -67.0 -68.0 -71.0 -74.0 -77.0 -80.0 -83.0 -82.0 -87.0 -88.0 -87.0 -90.0 -93.0 -96.0 -95.0 -96.0 -101.0 -104.0 -105.0 -108.0 -111.0 -112.0 -115.0 -116.0 -117.0 -122.0 -125.0 -128.0 -129.0 -130.0 -133.0 48 -107.0 -104.0 -101.0 -102.0 -99.0 -96.0 -95.0 -92.0 -87.0 -86.0 -81.0 -82.0 -81.0 -80.0 -77.0 -74.0 -71.0 -68.0 -69.0 -66.0 -65.0 -62.0 -59.0 -62.0 -60.0 -53.0 -50.0 -47.0 -48.0 -45.0 -44.0 -41.0 -36.0 -39.0 -38.0 -35.0 -28.0 -33.0 -30.0 -27.0 -24.0 -17.0 -16.0 -17.0 -16.0 -13.0 -8.0 -3.0 -4.0 -3.0 2.0 5.0 10.0 14.0 5.0 11.0 9.0 10.0 7.0 2.0 3.0 -2.0 -3.0 -4.0 -3.0 -8.0 -9.0 -12.0 -13.0 -16.0 -17.0 -22.0 -25.0 -26.0 -31.0 -32.0 -35.0 -40.0 -40.0 -41.0 -44.0 -47.0 -48.0 -51.0 -54.0 -55.0 -58.0 -61.0 -62.0 -65.0 -68.0 -71.0 -74.0 -77.0 -80.0 -81.0 -84.0 -85.0 -86.0 -87.0 -90.0 -93.0 -96.0 -93.0 -96.0 -101.0 -102.0 -105.0 -106.0 -109.0 -112.0 -113.0 -114.0 -119.0 -122.0 -125.0 -128.0 -127.0 -130.0 49 -106.0 -107.0 -104.0 -101.0 -102.0 -99.0 -96.0 -95.0 -92.0 -89.0 -86.0 -81.0 -82.0 -83.0 -80.0 -77.0 -74.0 -71.0 -68.0 -69.0 -66.0 -65.0 -62.0 -59.0 -61.0 -58.0 -53.0 -50.0 -47.0 -48.0 -45.0 -42.0 -41.0 -38.0 -39.0 -40.0 -35.0 -28.0 -31.0 -28.0 -27.0 -24.0 -17.0 -16.0 -15.0 -16.0 -11.0 -8.0 -3.0 -4.0 -1.0 2.0 7.0 10.0 14.0 7.0 11.0 9.0 10.0 9.0 4.0 3.0 0.0 -3.0 -4.0 -5.0 -8.0 -9.0 -10.0 -13.0 -16.0 -19.0 -20.0 -25.0 -26.0 -31.0 -34.0 -36.0 -39.0 -38.0 -41.0 -42.0 -45.0 -48.0 -49.0 -54.0 -57.0 -58.0 -59.0 -60.0 -65.0 -66.0 -71.0 -74.0 -77.0 -78.0 -81.0 -82.0 -83.0 -84.0 -87.0 -90.0 -93.0 -94.0 -93.0 -96.0 -99.0 -100.0 -103.0 -104.0 -109.0 -110.0 -113.0 -116.0 -117.0 -122.0 -125.0 -126.0 -127.0 50 -111.0 -106.0 -105.0 -104.0 -101.0 -102.0 -97.0 -96.0 -93.0 -90.0 -89.0 -84.0 -81.0 -80.0 -83.0 -80.0 -77.0 -74.0 -71.0 -68.0 -69.0 -66.0 -65.0 -62.0 -59.0 -61.0 -56.0 -51.0 -48.0 -47.0 -48.0 -43.0 -42.0 -39.0 -38.0 -39.0 -38.0 -33.0 -28.0 -29.0 -28.0 -27.0 -22.0 -17.0 -16.0 -13.0 -14.0 -9.0 -6.0 -1.0 -2.0 -1.0 4.0 9.0 12.0 14.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 2.0 -1.0 -4.0 -5.0 -6.0 -7.0 -8.0 -13.0 -16.0 -19.0 -22.0 -25.0 -28.0 -30.0 -33.0 -34.0 -37.0 -36.0 -39.0 -40.0 -45.0 -48.0 -51.0 -54.0 -55.0 -58.0 -59.0 -62.0 -65.0 -66.0 -69.0 -74.0 -75.0 -76.0 -79.0 -80.0 -81.0 -82.0 -85.0 -90.0 -91.0 -92.0 -95.0 -96.0 -99.0 -102.0 -103.0 -106.0 -107.0 -110.0 -113.0 -116.0 -119.0 -122.0 -123.0 -124.0 51 -112.0 -111.0 -104.0 -105.0 -104.0 -101.0 -100.0 -97.0 -94.0 -91.0 -90.0 -89.0 -84.0 -81.0 -80.0 -83.0 -78.0 -75.0 -74.0 -71.0 -68.0 -69.0 -66.0 -65.0 -62.0 -59.0 -59.0 -54.0 -49.0 -48.0 -47.0 -46.0 -43.0 -40.0 -39.0 -38.0 -39.0 -36.0 -31.0 -26.0 -29.0 -28.0 -25.0 -22.0 -17.0 -14.0 -13.0 -12.0 -7.0 -4.0 -1.0 -2.0 1.0 6.0 11.0 14.0 14.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 2.0 -3.0 -4.0 -5.0 -6.0 -7.0 -10.0 -15.0 -18.0 -21.0 -24.0 -27.0 -30.0 -30.0 -33.0 -34.0 -37.0 -36.0 -39.0 -42.0 -47.0 -50.0 -53.0 -54.0 -57.0 -58.0 -61.0 -64.0 -65.0 -66.0 -69.0 -74.0 -75.0 -76.0 -81.0 -80.0 -81.0 -82.0 -87.0 -90.0 -91.0 -94.0 -95.0 -98.0 -101.0 -102.0 -105.0 -106.0 -109.0 -112.0 -115.0 -118.0 -121.0 -122.0 -123.0 52 -113.0 -112.0 -109.0 -104.0 -105.0 -104.0 -99.0 -100.0 -95.0 -92.0 -91.0 -90.0 -89.0 -82.0 -81.0 -80.0 -81.0 -76.0 -75.0 -74.0 -71.0 -68.0 -69.0 -66.0 -63.0 -61.0 -59.0 -57.0 -52.0 -49.0 -48.0 -47.0 -46.0 -43.0 -40.0 -39.0 -38.0 -37.0 -34.0 -29.0 -26.0 -29.0 -26.0 -25.0 -20.0 -15.0 -14.0 -11.0 -10.0 -5.0 -4.0 -1.0 0.0 3.0 8.0 13.0 14.0 12.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 2.0 -3.0 -4.0 -5.0 -6.0 -9.0 -12.0 -17.0 -20.0 -23.0 -25.0 -29.0 -31.0 -30.0 -35.0 -34.0 -37.0 -36.0 -41.0 -42.0 -49.0 -52.0 -53.0 -56.0 -57.0 -60.0 -63.0 -64.0 -65.0 -68.0 -69.0 -74.0 -75.0 -76.0 -81.0 -80.0 -81.0 -82.0 -87.0 -90.0 -93.0 -94.0 -97.0 -100.0 -101.0 -104.0 -105.0 -108.0 -111.0 -114.0 -115.0 -118.0 -121.0 -122.0 53 -112.0 -113.0 -112.0 -111.0 -104.0 -105.0 -102.0 -99.0 -98.0 -93.0 -92.0 -91.0 -90.0 -87.0 -82.0 -81.0 -80.0 -79.0 -76.0 -75.0 -76.0 -71.0 -68.0 -71.0 -66.0 -62.0 -59.0 -58.0 -55.0 -52.0 -51.0 -48.0 -47.0 -48.0 -43.0 -40.0 -39.0 -38.0 -35.0 -34.0 -29.0 -26.0 -29.0 -26.0 -23.0 -18.0 -15.0 -12.0 -9.0 -8.0 -7.0 -4.0 1.0 2.0 5.0 10.0 13.0 14.0 12.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 2.0 -3.0 -4.0 -7.0 -6.0 -11.0 -14.0 -17.0 -22.0 -23.0 -25.0 -31.0 -31.0 -30.0 -35.0 -34.0 -37.0 -38.0 -43.0 -42.0 -49.0 -52.0 -55.0 -56.0 -59.0 -62.0 -63.0 -66.0 -67.0 -68.0 -69.0 -74.0 -75.0 -76.0 -81.0 -82.0 -81.0 -82.0 -87.0 -92.0 -93.0 -96.0 -99.0 -100.0 -103.0 -104.0 -105.0 -110.0 -113.0 -116.0 -115.0 -118.0 -121.0 54 -117.0 -112.0 -113.0 -112.0 -111.0 -104.0 -105.0 -102.0 -99.0 -98.0 -93.0 -92.0 -91.0 -90.0 -87.0 -82.0 -81.0 -80.0 -79.0 -74.0 -75.0 -76.0 -71.0 -68.0 -69.0 -65.0 -62.0 -59.0 -58.0 -55.0 -52.0 -51.0 -48.0 -47.0 -48.0 -43.0 -40.0 -39.0 -36.0 -33.0 -34.0 -29.0 -26.0 -29.0 -24.0 -23.0 -16.0 -15.0 -12.0 -9.0 -6.0 -7.0 -2.0 1.0 2.0 7.0 10.0 13.0 14.0 12.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 2.0 -3.0 -6.0 -7.0 -8.0 -13.0 -14.0 -19.0 -22.0 -23.0 -25.0 -32.0 -31.0 -30.0 -35.0 -34.0 -39.0 -40.0 -43.0 -42.0 -49.0 -54.0 -55.0 -58.0 -61.0 -64.0 -63.0 -66.0 -67.0 -70.0 -69.0 -74.0 -75.0 -76.0 -81.0 -84.0 -81.0 -82.0 -87.0 -90.0 -93.0 -96.0 -97.0 -98.0 -101.0 -102.0 -107.0 -110.0 -111.0 -116.0 -113.0 -118.0 55 -116.0 -117.0 -112.0 -113.0 -112.0 -109.0 -104.0 -105.0 -102.0 -99.0 -98.0 -93.0 -92.0 -91.0 -90.0 -87.0 -82.0 -81.0 -80.0 -79.0 -74.0 -75.0 -76.0 -71.0 -68.0 -68.0 -65.0 -62.0 -59.0 -58.0 -55.0 -52.0 -51.0 -48.0 -47.0 -48.0 -43.0 -40.0 -37.0 -34.0 -33.0 -34.0 -29.0 -26.0 -27.0 -24.0 -21.0 -16.0 -15.0 -12.0 -7.0 -6.0 -5.0 -2.0 1.0 4.0 7.0 10.0 13.0 14.0 11.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 2.0 -3.0 -6.0 -7.0 -10.0 -15.0 -16.0 -21.0 -24.0 -23.0 -25.0 -32.0 -31.0 -30.0 -35.0 -34.0 -41.0 -42.0 -45.0 -42.0 -51.0 -52.0 -53.0 -58.0 -61.0 -64.0 -61.0 -66.0 -69.0 -70.0 -69.0 -74.0 -75.0 -78.0 -79.0 -84.0 -81.0 -84.0 -87.0 -92.0 -95.0 -96.0 -97.0 -98.0 -103.0 -102.0 -109.0 -110.0 -111.0 -116.0 -113.0 56 -121.0 -116.0 -117.0 -114.0 -113.0 -110.0 -109.0 -104.0 -103.0 -102.0 -99.0 -98.0 -93.0 -94.0 -91.0 -90.0 -87.0 -82.0 -83.0 -80.0 -81.0 -76.0 -75.0 -76.0 -73.0 -68.0 -66.0 -63.0 -60.0 -61.0 -60.0 -57.0 -52.0 -53.0 -50.0 -47.0 -46.0 -45.0 -42.0 -39.0 -36.0 -33.0 -34.0 -31.0 -26.0 -27.0 -22.0 -19.0 -14.0 -13.0 -12.0 -9.0 -6.0 -3.0 -2.0 3.0 4.0 7.0 8.0 11.0 14.0 11.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 0.0 -3.0 -8.0 -9.0 -10.0 -17.0 -16.0 -21.0 -25.0 -24.0 -25.0 -32.0 -31.0 -30.0 -37.0 -36.0 -41.0 -42.0 -45.0 -44.0 -49.0 -52.0 -55.0 -58.0 -61.0 -64.0 -61.0 -66.0 -71.0 -70.0 -69.0 -72.0 -77.0 -80.0 -79.0 -82.0 -83.0 -84.0 -89.0 -92.0 -93.0 -96.0 -97.0 -98.0 -103.0 -104.0 -109.0 -110.0 -111.0 -114.0 57 -124.0 -123.0 -118.0 -117.0 -116.0 -111.0 -112.0 -111.0 -106.0 -103.0 -104.0 -101.0 -98.0 -93.0 -94.0 -93.0 -92.0 -89.0 -82.0 -83.0 -82.0 -81.0 -78.0 -75.0 -74.0 -74.0 -70.0 -68.0 -63.0 -60.0 -63.0 -58.0 -59.0 -52.0 -55.0 -52.0 -49.0 -48.0 -43.0 -40.0 -41.0 -36.0 -33.0 -36.0 -31.0 -26.0 -27.0 -24.0 -21.0 -14.0 -11.0 -14.0 -11.0 -6.0 -3.0 -2.0 1.0 4.0 5.0 8.0 9.0 14.0 11.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 -2.0 -5.0 -8.0 -11.0 -12.0 -17.0 -17.0 -23.0 -23.0 -26.0 -25.0 -30.0 -29.0 -32.0 -37.0 -38.0 -41.0 -42.0 -47.0 -44.0 -51.0 -54.0 -55.0 -58.0 -63.0 -66.0 -61.0 -66.0 -71.0 -70.0 -69.0 -72.0 -79.0 -80.0 -79.0 -82.0 -83.0 -86.0 -91.0 -92.0 -93.0 -96.0 -99.0 -100.0 -105.0 -104.0 -111.0 -110.0 -111.0 58 -123.0 -126.0 -121.0 -118.0 -117.0 -116.0 -109.0 -112.0 -109.0 -106.0 -103.0 -102.0 -101.0 -96.0 -93.0 -94.0 -93.0 -90.0 -89.0 -84.0 -83.0 -82.0 -83.0 -78.0 -75.0 -73.0 -72.0 -71.0 -68.0 -65.0 -60.0 -61.0 -60.0 -57.0 -52.0 -55.0 -54.0 -51.0 -46.0 -41.0 -40.0 -43.0 -36.0 -33.0 -34.0 -29.0 -26.0 -25.0 -24.0 -21.0 -14.0 -11.0 -12.0 -9.0 -4.0 -1.0 -2.0 -1.0 4.0 5.0 6.0 9.0 14.0 11.0 10.0 13.0 11.0 12.0 11.0 4.0 3.0 -2.0 -7.0 -10.0 -13.0 -14.0 -19.0 -17.0 -24.0 -23.0 -26.0 -25.0 -30.0 -29.0 -34.0 -39.0 -40.0 -41.0 -44.0 -47.0 -44.0 -53.0 -56.0 -57.0 -58.0 -63.0 -66.0 -61.0 -66.0 -71.0 -70.0 -71.0 -72.0 -79.0 -80.0 -81.0 -82.0 -85.0 -88.0 -91.0 -92.0 -93.0 -98.0 -99.0 -102.0 -105.0 -104.0 -111.0 -110.0 59 -126.0 -123.0 -124.0 -121.0 -118.0 -117.0 -114.0 -109.0 -110.0 -107.0 -106.0 -103.0 -102.0 -99.0 -96.0 -93.0 -92.0 -91.0 -90.0 -87.0 -84.0 -83.0 -82.0 -83.0 -78.0 -74.0 -71.0 -70.0 -69.0 -68.0 -65.0 -60.0 -61.0 -60.0 -57.0 -52.0 -53.0 -52.0 -49.0 -46.0 -41.0 -40.0 -41.0 -36.0 -33.0 -32.0 -27.0 -24.0 -23.0 -22.0 -19.0 -14.0 -11.0 -10.0 -7.0 -2.0 -1.0 -2.0 -1.0 4.0 5.0 6.0 9.0 14.0 11.0 10.0 13.0 11.0 12.0 9.0 4.0 1.0 -4.0 -5.0 -10.0 -11.0 -14.0 -19.0 -17.0 -22.0 -23.0 -26.0 -25.0 -30.0 -31.0 -34.0 -37.0 -40.0 -43.0 -44.0 -47.0 -46.0 -53.0 -56.0 -59.0 -60.0 -63.0 -66.0 -61.0 -66.0 -69.0 -72.0 -71.0 -72.0 -77.0 -80.0 -81.0 -84.0 -87.0 -88.0 -91.0 -92.0 -93.0 -98.0 -101.0 -104.0 -105.0 -104.0 -109.0 60 -129.0 -126.0 -123.0 -124.0 -121.0 -118.0 -117.0 -114.0 -109.0 -110.0 -107.0 -106.0 -103.0 -102.0 -99.0 -96.0 -93.0 -92.0 -91.0 -88.0 -87.0 -84.0 -83.0 -82.0 -81.0 -77.0 -74.0 -71.0 -70.0 -69.0 -68.0 -65.0 -60.0 -61.0 -60.0 -57.0 -52.0 -53.0 -50.0 -47.0 -46.0 -41.0 -40.0 -41.0 -36.0 -33.0 -30.0 -27.0 -24.0 -23.0 -20.0 -19.0 -14.0 -11.0 -10.0 -5.0 -2.0 -1.0 -2.0 -1.0 4.0 5.0 6.0 9.0 14.0 11.0 10.0 13.0 13.0 10.0 9.0 2.0 -1.0 -4.0 -7.0 -10.0 -11.0 -15.0 -20.0 -17.0 -22.0 -23.0 -26.0 -27.0 -32.0 -31.0 -34.0 -37.0 -42.0 -43.0 -46.0 -49.0 -48.0 -55.0 -58.0 -59.0 -60.0 -63.0 -66.0 -61.0 -66.0 -71.0 -74.0 -71.0 -72.0 -79.0 -80.0 -83.0 -86.0 -87.0 -90.0 -91.0 -92.0 -95.0 -100.0 -101.0 -106.0 -105.0 -104.0 61 -132.0 -131.0 -128.0 -123.0 -126.0 -123.0 -120.0 -119.0 -116.0 -109.0 -112.0 -109.0 -108.0 -103.0 -104.0 -101.0 -98.0 -95.0 -92.0 -93.0 -90.0 -87.0 -86.0 -85.0 -84.0 -82.0 -79.0 -76.0 -71.0 -70.0 -71.0 -66.0 -67.0 -60.0 -63.0 -62.0 -59.0 -54.0 -53.0 -50.0 -49.0 -48.0 -43.0 -42.0 -41.0 -36.0 -35.0 -32.0 -29.0 -24.0 -23.0 -22.0 -19.0 -16.0 -13.0 -10.0 -7.0 -4.0 -3.0 -2.0 -3.0 4.0 3.0 4.0 7.0 12.0 9.0 8.0 11.0 14.0 8.0 7.0 0.0 -3.0 -6.0 -9.0 -12.0 -13.0 -15.0 -18.0 -17.0 -22.0 -21.0 -26.0 -29.0 -30.0 -33.0 -34.0 -39.0 -40.0 -43.0 -46.0 -47.0 -48.0 -55.0 -56.0 -57.0 -62.0 -61.0 -64.0 -61.0 -66.0 -69.0 -72.0 -71.0 -74.0 -77.0 -80.0 -83.0 -84.0 -87.0 -88.0 -91.0 -94.0 -97.0 -100.0 -99.0 -104.0 -105.0 62 -135.0 -132.0 -131.0 -130.0 -125.0 -124.0 -123.0 -120.0 -117.0 -116.0 -109.0 -112.0 -109.0 -108.0 -103.0 -104.0 -101.0 -98.0 -97.0 -92.0 -95.0 -92.0 -87.0 -88.0 -87.0 -83.0 -80.0 -77.0 -76.0 -73.0 -72.0 -71.0 -66.0 -67.0 -62.0 -63.0 -60.0 -59.0 -56.0 -53.0 -52.0 -49.0 -48.0 -45.0 -42.0 -41.0 -36.0 -33.0 -30.0 -29.0 -26.0 -25.0 -20.0 -17.0 -16.0 -11.0 -10.0 -7.0 -6.0 -5.0 -2.0 -5.0 2.0 3.0 4.0 7.0 12.0 7.0 6.0 9.0 14.0 6.0 5.0 0.0 -5.0 -6.0 -9.0 -14.0 -14.0 -15.0 -18.0 -17.0 -22.0 -23.0 -28.0 -29.0 -30.0 -33.0 -36.0 -39.0 -42.0 -45.0 -48.0 -49.0 -50.0 -57.0 -56.0 -57.0 -62.0 -61.0 -64.0 -63.0 -66.0 -69.0 -72.0 -71.0 -74.0 -79.0 -82.0 -83.0 -84.0 -87.0 -88.0 -93.0 -96.0 -99.0 -102.0 -99.0 -104.0 63 -136.0 -137.0 -132.0 -133.0 -132.0 -127.0 -124.0 -125.0 -122.0 -119.0 -118.0 -111.0 -114.0 -111.0 -110.0 -105.0 -106.0 -103.0 -100.0 -99.0 -92.0 -97.0 -94.0 -89.0 -90.0 -88.0 -85.0 -82.0 -79.0 -78.0 -73.0 -74.0 -73.0 -68.0 -69.0 -64.0 -65.0 -62.0 -57.0 -54.0 -53.0 -54.0 -49.0 -48.0 -47.0 -44.0 -41.0 -38.0 -35.0 -32.0 -27.0 -26.0 -25.0 -22.0 -19.0 -16.0 -13.0 -12.0 -7.0 -8.0 -7.0 -4.0 -3.0 0.0 1.0 2.0 5.0 12.0 8.0 6.0 7.0 14.0 4.0 3.0 -2.0 -6.0 -8.0 -9.0 -14.0 -16.0 -15.0 -17.0 -17.0 -21.0 -25.0 -29.0 -31.0 -30.0 -33.0 -36.0 -38.0 -43.0 -46.0 -49.0 -49.0 -50.0 -56.0 -55.0 -57.0 -61.0 -61.0 -63.0 -63.0 -66.0 -69.0 -73.0 -71.0 -76.0 -78.0 -81.0 -82.0 -83.0 -88.0 -88.0 -94.0 -95.0 -98.0 -101.0 -99.0 64 -141.0 -138.0 -137.0 -134.0 -133.0 -132.0 -129.0 -126.0 -125.0 -122.0 -121.0 -116.0 -113.0 -114.0 -113.0 -112.0 -107.0 -106.0 -105.0 -102.0 -101.0 -94.0 -98.0 -94.0 -89.0 -91.0 -88.0 -85.0 -82.0 -81.0 -80.0 -75.0 -76.0 -73.0 -68.0 -71.0 -66.0 -63.0 -62.0 -59.0 -56.0 -55.0 -54.0 -51.0 -50.0 -47.0 -44.0 -41.0 -38.0 -35.0 -32.0 -29.0 -28.0 -25.0 -20.0 -19.0 -18.0 -15.0 -14.0 -9.0 -10.0 -9.0 -6.0 -5.0 -2.0 -1.0 0.0 3.0 10.0 6.0 6.0 6.0 14.0 3.0 3.0 -3.0 -5.0 -9.0 -10.0 -14.0 -15.0 -15.0 -17.0 -19.0 -21.0 -26.0 -29.0 -30.0 -30.0 -32.0 -37.0 -38.0 -43.0 -46.0 -49.0 -51.0 -50.0 -56.0 -55.0 -57.0 -59.0 -62.0 -61.0 -63.0 -65.0 -68.0 -71.0 -71.0 -75.0 -76.0 -81.0 -82.0 -85.0 -88.0 -88.0 -94.0 -95.0 -98.0 -99.0 65 -144.0 -141.0 -140.0 -139.0 -136.0 -133.0 -132.0 -129.0 -126.0 -125.0 -122.0 -121.0 -116.0 -115.0 -114.0 -113.0 -110.0 -107.0 -108.0 -103.0 -104.0 -101.0 -94.0 -99.0 -96.0 -89.0 -89.0 -86.0 -85.0 -84.0 -83.0 -80.0 -75.0 -76.0 -75.0 -68.0 -69.0 -68.0 -65.0 -62.0 -61.0 -56.0 -57.0 -56.0 -51.0 -50.0 -45.0 -42.0 -39.0 -38.0 -35.0 -34.0 -29.0 -26.0 -23.0 -20.0 -19.0 -18.0 -17.0 -16.0 -9.0 -12.0 -11.0 -6.0 -5.0 -2.0 -1.0 0.0 3.0 8.0 6.0 4.0 4.0 14.0 1.0 3.0 -3.0 -5.0 -10.0 -10.0 -14.0 -15.0 -15.0 -17.0 -21.0 -21.0 -26.0 -29.0 -30.0 -30.0 -34.0 -39.0 -40.0 -45.0 -48.0 -51.0 -51.0 -50.0 -56.0 -55.0 -57.0 -61.0 -64.0 -61.0 -63.0 -67.0 -68.0 -73.0 -71.0 -75.0 -78.0 -81.0 -82.0 -87.0 -90.0 -90.0 -96.0 -95.0 -98.0 66 -147.0 -146.0 -143.0 -142.0 -139.0 -138.0 -135.0 -134.0 -131.0 -128.0 -127.0 -122.0 -123.0 -118.0 -117.0 -116.0 -115.0 -112.0 -109.0 -108.0 -105.0 -104.0 -103.0 -94.0 -97.0 -97.0 -91.0 -91.0 -88.0 -87.0 -86.0 -83.0 -82.0 -77.0 -76.0 -77.0 -70.0 -69.0 -68.0 -65.0 -64.0 -63.0 -58.0 -59.0 -56.0 -53.0 -50.0 -47.0 -44.0 -41.0 -38.0 -37.0 -34.0 -31.0 -26.0 -21.0 -22.0 -21.0 -20.0 -19.0 -18.0 -11.0 -14.0 -13.0 -8.0 -7.0 -4.0 -3.0 0.0 1.0 6.0 4.0 4.0 2.0 14.0 1.0 1.0 -5.0 -3.0 -10.0 -10.0 -12.0 -13.0 -16.0 -15.0 -22.0 -23.0 -26.0 -27.0 -28.0 -32.0 -34.0 -39.0 -42.0 -43.0 -46.0 -49.0 -50.0 -50.0 -54.0 -55.0 -58.0 -59.0 -62.0 -61.0 -63.0 -67.0 -68.0 -71.0 -71.0 -77.0 -78.0 -81.0 -84.0 -85.0 -88.0 -90.0 -94.0 -95.0 67 -150.0 -147.0 -146.0 -145.0 -144.0 -139.0 -138.0 -135.0 -132.0 -131.0 -128.0 -127.0 -122.0 -123.0 -118.0 -117.0 -116.0 -113.0 -114.0 -109.0 -110.0 -107.0 -104.0 -103.0 -96.0 -97.0 -95.0 -91.0 -91.0 -90.0 -89.0 -86.0 -83.0 -82.0 -79.0 -76.0 -75.0 -72.0 -71.0 -68.0 -67.0 -64.0 -63.0 -60.0 -57.0 -56.0 -51.0 -48.0 -45.0 -44.0 -41.0 -40.0 -35.0 -32.0 -31.0 -26.0 -21.0 -22.0 -23.0 -22.0 -19.0 -18.0 -13.0 -14.0 -11.0 -8.0 -7.0 -6.0 -3.0 -2.0 1.0 4.0 2.0 4.0 1.0 14.0 3.0 0.0 -4.0 -1.0 -8.0 -9.0 -10.0 -13.0 -16.0 -15.0 -20.0 -23.0 -26.0 -27.0 -30.0 -33.0 -36.0 -39.0 -42.0 -41.0 -44.0 -47.0 -48.0 -49.0 -52.0 -55.0 -56.0 -57.0 -60.0 -63.0 -63.0 -67.0 -70.0 -71.0 -73.0 -75.0 -76.0 -81.0 -84.0 -87.0 -86.0 -89.0 -92.0 68 -153.0 -150.0 -149.0 -148.0 -147.0 -142.0 -141.0 -138.0 -135.0 -134.0 -131.0 -130.0 -127.0 -124.0 -123.0 -118.0 -117.0 -116.0 -115.0 -112.0 -111.0 -110.0 -107.0 -106.0 -103.0 -96.0 -97.0 -95.0 -93.0 -91.0 -92.0 -89.0 -86.0 -85.0 -84.0 -79.0 -76.0 -77.0 -74.0 -71.0 -70.0 -67.0 -66.0 -65.0 -60.0 -59.0 -54.0 -51.0 -48.0 -47.0 -44.0 -43.0 -38.0 -35.0 -34.0 -29.0 -26.0 -21.0 -24.0 -25.0 -22.0 -21.0 -20.0 -13.0 -14.0 -11.0 -8.0 -8.0 -6.0 -5.0 -2.0 -1.0 2.0 2.0 2.0 3.0 14.0 2.0 1.0 -2.0 -1.0 -6.0 -7.0 -10.0 -13.0 -14.0 -15.0 -20.0 -23.0 -24.0 -27.0 -30.0 -33.0 -36.0 -37.0 -42.0 -39.0 -42.0 -45.0 -46.0 -49.0 -52.0 -55.0 -54.0 -57.0 -58.0 -61.0 -64.0 -67.0 -68.0 -69.0 -72.0 -73.0 -78.0 -81.0 -84.0 -87.0 -84.0 -89.0 69 -154.0 -155.0 -150.0 -151.0 -150.0 -147.0 -142.0 -143.0 -140.0 -137.0 -136.0 -133.0 -132.0 -129.0 -126.0 -125.0 -120.0 -119.0 -118.0 -117.0 -112.0 -113.0 -112.0 -109.0 -106.0 -105.0 -98.0 -99.0 -97.0 -95.0 -91.0 -92.0 -91.0 -88.0 -87.0 -86.0 -81.0 -78.0 -75.0 -72.0 -71.0 -72.0 -67.0 -66.0 -65.0 -62.0 -57.0 -56.0 -53.0 -50.0 -45.0 -44.0 -43.0 -40.0 -37.0 -34.0 -31.0 -28.0 -21.0 -26.0 -27.0 -24.0 -21.0 -22.0 -15.0 -16.0 -13.0 -8.0 -6.0 -8.0 -7.0 -2.0 -3.0 0.0 0.0 0.0 1.0 14.0 4.0 3.0 -2.0 1.0 -4.0 -5.0 -10.0 -13.0 -16.0 -15.0 -20.0 -21.0 -22.0 -27.0 -30.0 -33.0 -34.0 -35.0 -40.0 -37.0 -40.0 -43.0 -46.0 -49.0 -50.0 -53.0 -54.0 -57.0 -56.0 -61.0 -64.0 -65.0 -66.0 -67.0 -72.0 -73.0 -78.0 -79.0 -82.0 -85.0 -84.0 70 -159.0 -156.0 -155.0 -150.0 -153.0 -150.0 -147.0 -142.0 -143.0 -138.0 -139.0 -134.0 -135.0 -130.0 -131.0 -128.0 -125.0 -122.0 -119.0 -120.0 -119.0 -112.0 -115.0 -112.0 -109.0 -108.0 -103.0 -98.0 -98.0 -97.0 -97.0 -91.0 -94.0 -89.0 -90.0 -87.0 -86.0 -83.0 -80.0 -77.0 -72.0 -73.0 -72.0 -67.0 -68.0 -63.0 -62.0 -55.0 -56.0 -51.0 -50.0 -47.0 -46.0 -43.0 -40.0 -35.0 -36.0 -33.0 -30.0 -21.0 -28.0 -25.0 -26.0 -22.0 -20.0 -15.0 -18.0 -14.0 -10.0 -6.0 -10.0 -9.0 -4.0 -5.0 0.0 -2.0 -2.0 1.0 14.0 6.0 5.0 0.0 1.0 -4.0 -7.0 -10.0 -13.0 -14.0 -17.0 -18.0 -21.0 -24.0 -25.0 -28.0 -31.0 -36.0 -35.0 -40.0 -37.0 -40.0 -41.0 -44.0 -47.0 -50.0 -51.0 -54.0 -55.0 -58.0 -61.0 -62.0 -65.0 -66.0 -69.0 -72.0 -75.0 -78.0 -79.0 -82.0 -83.0 71 -160.0 -159.0 -156.0 -157.0 -150.0 -151.0 -150.0 -147.0 -142.0 -143.0 -138.0 -139.0 -134.0 -135.0 -130.0 -131.0 -128.0 -123.0 -122.0 -119.0 -120.0 -119.0 -112.0 -115.0 -112.0 -109.0 -106.0 -102.0 -98.0 -100.0 -97.0 -98.0 -91.0 -94.0 -91.0 -90.0 -85.0 -84.0 -81.0 -80.0 -77.0 -72.0 -75.0 -74.0 -67.0 -68.0 -63.0 -60.0 -53.0 -54.0 -53.0 -52.0 -47.0 -44.0 -43.0 -38.0 -35.0 -36.0 -33.0 -32.0 -21.0 -30.0 -27.0 -26.0 -22.0 -18.0 -15.0 -18.0 -12.0 -10.0 -6.0 -12.0 -11.0 -4.0 -7.0 0.0 -2.0 0.0 1.0 14.0 8.0 5.0 2.0 -1.0 -4.0 -5.0 -8.0 -11.0 -14.0 -15.0 -18.0 -21.0 -24.0 -27.0 -30.0 -29.0 -34.0 -37.0 -38.0 -35.0 -38.0 -43.0 -46.0 -45.0 -48.0 -51.0 -52.0 -55.0 -56.0 -59.0 -62.0 -63.0 -64.0 -69.0 -72.0 -75.0 -76.0 -77.0 -80.0 72 -161.0 -160.0 -159.0 -156.0 -157.0 -150.0 -151.0 -150.0 -147.0 -142.0 -143.0 -138.0 -139.0 -134.0 -135.0 -130.0 -131.0 -128.0 -123.0 -122.0 -119.0 -118.0 -119.0 -112.0 -113.0 -112.0 -109.0 -106.0 -102.0 -98.0 -100.0 -97.0 -98.0 -91.0 -94.0 -91.0 -90.0 -85.0 -82.0 -79.0 -80.0 -77.0 -72.0 -75.0 -72.0 -67.0 -66.0 -63.0 -60.0 -53.0 -52.0 -53.0 -50.0 -47.0 -44.0 -41.0 -38.0 -35.0 -36.0 -33.0 -32.0 -21.0 -29.0 -27.0 -26.0 -22.0 -18.0 -15.0 -16.0 -12.0 -10.0 -6.0 -11.0 -11.0 -4.0 -7.0 0.0 -2.0 2.0 3.0 14.0 10.0 7.0 2.0 -1.0 -4.0 -5.0 -8.0 -11.0 -12.0 -15.0 -18.0 -19.0 -22.0 -27.0 -28.0 -27.0 -32.0 -35.0 -36.0 -35.0 -36.0 -43.0 -44.0 -45.0 -46.0 -49.0 -52.0 -55.0 -54.0 -57.0 -60.0 -63.0 -66.0 -69.0 -72.0 -73.0 -74.0 -77.0 73 -162.0 -161.0 -158.0 -159.0 -156.0 -155.0 -150.0 -151.0 -148.0 -145.0 -142.0 -141.0 -138.0 -137.0 -134.0 -135.0 -130.0 -129.0 -128.0 -123.0 -122.0 -119.0 -118.0 -117.0 -112.0 -113.0 -110.0 -108.0 -105.0 -102.0 -98.0 -100.0 -97.0 -96.0 -91.0 -94.0 -91.0 -88.0 -83.0 -80.0 -79.0 -80.0 -75.0 -72.0 -73.0 -70.0 -67.0 -64.0 -61.0 -58.0 -53.0 -52.0 -51.0 -48.0 -45.0 -42.0 -41.0 -38.0 -35.0 -36.0 -33.0 -30.0 -21.0 -27.0 -27.0 -24.0 -22.0 -18.0 -15.0 -16.0 -12.0 -10.0 -6.0 -11.0 -9.0 -4.0 -7.0 0.0 -1.0 2.0 5.0 14.0 12.0 7.0 2.0 -1.0 -2.0 -3.0 -8.0 -9.0 -10.0 -15.0 -18.0 -21.0 -22.0 -25.0 -26.0 -27.0 -30.0 -33.0 -34.0 -37.0 -36.0 -41.0 -42.0 -43.0 -44.0 -49.0 -52.0 -53.0 -52.0 -55.0 -60.0 -61.0 -66.0 -67.0 -70.0 -71.0 -72.0 74 -165.0 -164.0 -159.0 -158.0 -161.0 -156.0 -153.0 -152.0 -151.0 -148.0 -145.0 -144.0 -141.0 -138.0 -137.0 -136.0 -133.0 -132.0 -129.0 -128.0 -123.0 -124.0 -121.0 -118.0 -117.0 -114.0 -113.0 -111.0 -108.0 -107.0 -102.0 -100.0 -100.0 -97.0 -98.0 -93.0 -94.0 -91.0 -86.0 -83.0 -80.0 -81.0 -78.0 -75.0 -74.0 -73.0 -70.0 -67.0 -64.0 -61.0 -56.0 -53.0 -54.0 -50.0 -47.0 -45.0 -44.0 -43.0 -38.0 -37.0 -36.0 -33.0 -28.0 -21.0 -27.0 -27.0 -26.0 -20.0 -18.0 -17.0 -18.0 -12.0 -12.0 -6.0 -12.0 -11.0 -6.0 -5.0 -2.0 -1.0 2.0 7.0 13.0 14.0 5.0 2.0 -1.0 0.0 -3.0 -6.0 -7.0 -12.0 -15.0 -18.0 -19.0 -22.0 -25.0 -24.0 -27.0 -30.0 -31.0 -34.0 -35.0 -36.0 -39.0 -42.0 -41.0 -46.0 -47.0 -50.0 -51.0 -52.0 -57.0 -58.0 -63.0 -64.0 -67.0 -70.0 -69.0 75 -166.0 -167.0 -166.0 -159.0 -158.0 -159.0 -154.0 -153.0 -152.0 -149.0 -148.0 -143.0 -144.0 -139.0 -138.0 -137.0 -136.0 -131.0 -132.0 -127.0 -128.0 -123.0 -126.0 -121.0 -116.0 -117.0 -114.0 -114.0 -111.0 -110.0 -107.0 -102.0 -100.0 -98.0 -97.0 -99.0 -93.0 -92.0 -91.0 -86.0 -84.0 -82.0 -83.0 -79.0 -77.0 -75.0 -72.0 -69.0 -67.0 -64.0 -60.0 -56.0 -54.0 -54.0 -48.0 -45.0 -46.0 -46.0 -45.0 -39.0 -39.0 -36.0 -32.0 -29.0 -21.0 -28.0 -29.0 -26.0 -20.0 -19.0 -19.0 -18.0 -12.0 -14.0 -6.0 -13.0 -13.0 -8.0 -6.0 -4.0 0.0 2.0 5.0 13.0 14.0 3.0 0.0 -1.0 0.0 -3.0 -8.0 -7.0 -14.0 -17.0 -20.0 -21.0 -22.0 -25.0 -24.0 -27.0 -30.0 -33.0 -34.0 -35.0 -36.0 -39.0 -42.0 -41.0 -46.0 -47.0 -52.0 -51.0 -54.0 -59.0 -58.0 -63.0 -64.0 -67.0 -70.0 76 -167.0 -166.0 -167.0 -166.0 -159.0 -158.0 -157.0 -154.0 -153.0 -150.0 -149.0 -146.0 -143.0 -142.0 -139.0 -138.0 -135.0 -134.0 -131.0 -130.0 -127.0 -126.0 -123.0 -124.0 -121.0 -116.0 -115.0 -113.0 -112.0 -111.0 -110.0 -105.0 -102.0 -100.0 -98.0 -97.0 -97.0 -93.0 -93.0 -90.0 -86.0 -84.0 -83.0 -84.0 -79.0 -78.0 -73.0 -70.0 -67.0 -66.0 -63.0 -60.0 -56.0 -54.0 -53.0 -48.0 -45.0 -46.0 -47.0 -44.0 -39.0 -38.0 -35.0 -30.0 -29.0 -21.0 -28.0 -28.0 -25.0 -20.0 -19.0 -20.0 -19.0 -12.0 -15.0 -6.0 -12.0 -12.0 -9.0 -4.0 -3.0 2.0 3.0 4.0 13.0 14.0 3.0 0.0 -3.0 0.0 -5.0 -10.0 -9.0 -16.0 -19.0 -22.0 -21.0 -24.0 -25.0 -24.0 -27.0 -30.0 -33.0 -34.0 -35.0 -36.0 -39.0 -44.0 -43.0 -46.0 -49.0 -52.0 -51.0 -56.0 -61.0 -60.0 -63.0 -64.0 -67.0 77 -172.0 -167.0 -166.0 -167.0 -166.0 -159.0 -158.0 -157.0 -154.0 -153.0 -150.0 -149.0 -146.0 -143.0 -142.0 -139.0 -138.0 -135.0 -134.0 -129.0 -130.0 -125.0 -126.0 -125.0 -124.0 -121.0 -116.0 -115.0 -113.0 -112.0 -113.0 -108.0 -105.0 -104.0 -100.0 -98.0 -97.0 -97.0 -91.0 -91.0 -92.0 -86.0 -84.0 -85.0 -82.0 -81.0 -76.0 -73.0 -70.0 -67.0 -64.0 -64.0 -58.0 -56.0 -56.0 -51.0 -48.0 -45.0 -47.0 -47.0 -42.0 -39.0 -38.0 -33.0 -30.0 -29.0 -21.0 -28.0 -28.0 -27.0 -20.0 -21.0 -20.0 -19.0 -14.0 -15.0 -6.0 -14.0 -12.0 -7.0 -4.0 -3.0 4.0 1.0 2.0 13.0 14.0 3.0 0.0 -1.0 -2.0 -7.0 -10.0 -9.0 -16.0 -19.0 -20.0 -21.0 -24.0 -23.0 -24.0 -27.0 -28.0 -31.0 -34.0 -35.0 -36.0 -41.0 -44.0 -43.0 -46.0 -49.0 -50.0 -53.0 -58.0 -61.0 -62.0 -61.0 -64.0 78 -171.0 -172.0 -167.0 -166.0 -167.0 -164.0 -159.0 -158.0 -157.0 -154.0 -153.0 -150.0 -149.0 -146.0 -143.0 -142.0 -139.0 -138.0 -135.0 -134.0 -129.0 -130.0 -125.0 -126.0 -125.0 -124.0 -121.0 -116.0 -115.0 -113.0 -112.0 -111.0 -108.0 -105.0 -104.0 -100.0 -98.0 -98.0 -95.0 -89.0 -91.0 -92.0 -86.0 -84.0 -85.0 -82.0 -79.0 -76.0 -73.0 -70.0 -65.0 -64.0 -62.0 -58.0 -56.0 -54.0 -51.0 -48.0 -45.0 -47.0 -45.0 -42.0 -37.0 -36.0 -33.0 -30.0 -29.0 -21.0 -26.0 -28.0 -27.0 -20.0 -21.0 -20.0 -19.0 -14.0 -15.0 -6.0 -12.0 -10.0 -7.0 -2.0 -1.0 4.0 1.0 2.0 13.0 14.0 5.0 2.0 1.0 -4.0 -7.0 -10.0 -9.0 -14.0 -17.0 -18.0 -19.0 -22.0 -23.0 -26.0 -25.0 -26.0 -31.0 -34.0 -33.0 -34.0 -39.0 -42.0 -43.0 -44.0 -49.0 -50.0 -55.0 -56.0 -59.0 -62.0 -61.0 79 -174.0 -173.0 -172.0 -167.0 -166.0 -167.0 -164.0 -161.0 -160.0 -157.0 -156.0 -151.0 -152.0 -149.0 -148.0 -145.0 -144.0 -141.0 -140.0 -137.0 -136.0 -131.0 -130.0 -123.0 -124.0 -125.0 -122.0 -120.0 -116.0 -115.0 -113.0 -112.0 -111.0 -106.0 -105.0 -104.0 -99.0 -96.0 -98.0 -95.0 -89.0 -91.0 -90.0 -86.0 -84.0 -83.0 -80.0 -77.0 -74.0 -71.0 -68.0 -65.0 -64.0 -60.0 -56.0 -54.0 -54.0 -51.0 -48.0 -45.0 -45.0 -43.0 -40.0 -37.0 -36.0 -33.0 -30.0 -29.0 -21.0 -26.0 -26.0 -25.0 -20.0 -21.0 -18.0 -19.0 -14.0 -13.0 -6.0 -10.0 -8.0 -5.0 -2.0 -1.0 4.0 1.0 4.0 13.0 14.0 7.0 2.0 1.0 -4.0 -7.0 -10.0 -9.0 -14.0 -17.0 -18.0 -19.0 -20.0 -23.0 -26.0 -25.0 -24.0 -29.0 -32.0 -33.0 -32.0 -37.0 -42.0 -43.0 -46.0 -49.0 -50.0 -55.0 -56.0 -59.0 -60.0 80 -177.0 -174.0 -175.0 -174.0 -167.0 -166.0 -167.0 -166.0 -161.0 -160.0 -159.0 -154.0 -153.0 -150.0 -149.0 -150.0 -147.0 -144.0 -141.0 -138.0 -137.0 -134.0 -133.0 -128.0 -123.0 -126.0 -123.0 -123.0 -118.0 -116.0 -117.0 -111.0 -114.0 -109.0 -106.0 -107.0 -104.0 -97.0 -96.0 -96.0 -96.0 -89.0 -91.0 -92.0 -86.0 -85.0 -83.0 -80.0 -77.0 -72.0 -69.0 -69.0 -67.0 -63.0 -58.0 -57.0 -54.0 -54.0 -53.0 -50.0 -47.0 -43.0 -43.0 -40.0 -39.0 -37.0 -33.0 -30.0 -29.0 -21.0 -26.0 -28.0 -25.0 -22.0 -21.0 -20.0 -17.0 -16.0 -13.0 -8.0 -9.0 -8.0 -3.0 -4.0 -1.0 2.0 3.0 3.0 13.0 14.0 5.0 4.0 -1.0 -2.0 -7.0 -8.0 -7.0 -12.0 -15.0 -16.0 -17.0 -18.0 -23.0 -24.0 -23.0 -24.0 -29.0 -30.0 -33.0 -32.0 -37.0 -40.0 -43.0 -46.0 -47.0 -52.0 -53.0 -54.0 -57.0 81 -178.0 -177.0 -172.0 -175.0 -174.0 -167.0 -164.0 -167.0 -164.0 -159.0 -160.0 -157.0 -154.0 -153.0 -150.0 -149.0 -148.0 -145.0 -144.0 -139.0 -138.0 -135.0 -134.0 -133.0 -128.0 -123.0 -126.0 -122.0 -121.0 -118.0 -116.0 -116.0 -111.0 -112.0 -109.0 -106.0 -108.0 -102.0 -97.0 -94.0 -96.0 -96.0 -89.0 -91.0 -90.0 -84.0 -83.0 -81.0 -78.0 -75.0 -70.0 -69.0 -67.0 -65.0 -61.0 -58.0 -57.0 -54.0 -54.0 -53.0 -50.0 -47.0 -41.0 -41.0 -40.0 -39.0 -35.0 -31.0 -28.0 -29.0 -21.0 -26.0 -28.0 -25.0 -22.0 -21.0 -20.0 -15.0 -14.0 -13.0 -8.0 -7.0 -6.0 -3.0 -4.0 -1.0 2.0 4.0 5.0 13.0 14.0 5.0 2.0 -1.0 0.0 -5.0 -6.0 -5.0 -10.0 -13.0 -14.0 -17.0 -16.0 -21.0 -22.0 -23.0 -24.0 -29.0 -32.0 -33.0 -32.0 -35.0 -40.0 -41.0 -46.0 -47.0 -50.0 -51.0 -52.0 82 -179.0 -178.0 -175.0 -172.0 -175.0 -172.0 -167.0 -164.0 -165.0 -162.0 -159.0 -158.0 -157.0 -154.0 -153.0 -150.0 -147.0 -146.0 -145.0 -142.0 -139.0 -138.0 -135.0 -132.0 -131.0 -128.0 -123.0 -125.0 -120.0 -121.0 -118.0 -116.0 -116.0 -109.0 -112.0 -109.0 -106.0 -107.0 -100.0 -97.0 -94.0 -97.0 -94.0 -89.0 -92.0 -89.0 -82.0 -81.0 -81.0 -78.0 -73.0 -70.0 -71.0 -65.0 -64.0 -59.0 -58.0 -57.0 -54.0 -55.0 -53.0 -50.0 -45.0 -41.0 -42.0 -42.0 -38.0 -33.0 -31.0 -30.0 -31.0 -21.0 -28.0 -30.0 -27.0 -24.0 -23.0 -18.0 -17.0 -16.0 -15.0 -8.0 -9.0 -6.0 -5.0 -6.0 -3.0 2.0 2.0 5.0 14.0 12.0 5.0 2.0 1.0 0.0 -7.0 -4.0 -5.0 -10.0 -11.0 -14.0 -15.0 -16.0 -19.0 -22.0 -21.0 -26.0 -27.0 -30.0 -31.0 -32.0 -37.0 -38.0 -43.0 -44.0 -47.0 -50.0 -49.0 83 -182.0 -179.0 -178.0 -175.0 -172.0 -173.0 -170.0 -167.0 -164.0 -163.0 -162.0 -157.0 -158.0 -155.0 -154.0 -153.0 -148.0 -145.0 -146.0 -143.0 -142.0 -139.0 -138.0 -133.0 -130.0 -131.0 -126.0 -122.0 -123.0 -120.0 -121.0 -118.0 -116.0 -116.0 -109.0 -112.0 -107.0 -104.0 -105.0 -100.0 -97.0 -94.0 -97.0 -94.0 -89.0 -90.0 -87.0 -80.0 -79.0 -80.0 -77.0 -74.0 -71.0 -70.0 -63.0 -62.0 -59.0 -58.0 -57.0 -54.0 -53.0 -52.0 -49.0 -46.0 -41.0 -42.0 -41.0 -36.0 -33.0 -33.0 -32.0 -32.0 -21.0 -28.0 -28.0 -29.0 -26.0 -23.0 -20.0 -19.0 -18.0 -15.0 -10.0 -11.0 -6.0 -7.0 -6.0 -4.0 2.0 4.0 5.0 14.0 10.0 3.0 0.0 1.0 0.0 -7.0 -4.0 -5.0 -10.0 -13.0 -16.0 -15.0 -16.0 -19.0 -22.0 -21.0 -26.0 -27.0 -32.0 -31.0 -34.0 -39.0 -38.0 -45.0 -46.0 -47.0 -50.0 84 -183.0 -182.0 -179.0 -178.0 -175.0 -174.0 -173.0 -172.0 -167.0 -162.0 -165.0 -162.0 -157.0 -156.0 -157.0 -156.0 -153.0 -146.0 -145.0 -146.0 -143.0 -140.0 -141.0 -138.0 -135.0 -130.0 -131.0 -125.0 -120.0 -123.0 -120.0 -119.0 -118.0 -115.0 -116.0 -109.0 -110.0 -105.0 -104.0 -103.0 -100.0 -97.0 -94.0 -97.0 -94.0 -89.0 -88.0 -85.0 -78.0 -77.0 -78.0 -77.0 -74.0 -71.0 -68.0 -63.0 -62.0 -59.0 -58.0 -55.0 -52.0 -51.0 -50.0 -47.0 -46.0 -41.0 -40.0 -39.0 -34.0 -33.0 -34.0 -33.0 -30.0 -21.0 -26.0 -29.0 -29.0 -26.0 -21.0 -21.0 -19.0 -18.0 -13.0 -12.0 -13.0 -8.0 -9.0 -7.0 -4.0 0.0 2.0 5.0 14.0 10.0 1.0 0.0 1.0 0.0 -7.0 -4.0 -5.0 -10.0 -15.0 -16.0 -15.0 -18.0 -19.0 -24.0 -21.0 -26.0 -29.0 -32.0 -33.0 -36.0 -41.0 -40.0 -45.0 -46.0 -47.0 85 -182.0 -183.0 -180.0 -179.0 -178.0 -175.0 -174.0 -173.0 -170.0 -165.0 -162.0 -163.0 -162.0 -157.0 -156.0 -157.0 -154.0 -151.0 -146.0 -145.0 -146.0 -141.0 -140.0 -139.0 -136.0 -135.0 -130.0 -130.0 -123.0 -120.0 -123.0 -118.0 -119.0 -116.0 -115.0 -116.0 -109.0 -108.0 -103.0 -102.0 -103.0 -100.0 -97.0 -94.0 -97.0 -92.0 -89.0 -88.0 -83.0 -76.0 -77.0 -78.0 -75.0 -72.0 -69.0 -66.0 -63.0 -62.0 -59.0 -56.0 -55.0 -50.0 -51.0 -48.0 -47.0 -46.0 -39.0 -38.0 -37.0 -34.0 -33.0 -34.0 -33.0 -28.0 -21.0 -26.0 -29.0 -29.0 -24.0 -22.0 -21.0 -21.0 -16.0 -15.0 -14.0 -15.0 -10.0 -10.0 -7.0 -3.0 -1.0 2.0 5.0 14.0 10.0 1.0 2.0 1.0 0.0 -5.0 -4.0 -5.0 -12.0 -13.0 -14.0 -15.0 -18.0 -21.0 -24.0 -21.0 -26.0 -29.0 -32.0 -35.0 -36.0 -41.0 -40.0 -43.0 -46.0 86 -185.0 -182.0 -181.0 -180.0 -179.0 -178.0 -173.0 -174.0 -171.0 -168.0 -165.0 -162.0 -163.0 -160.0 -157.0 -156.0 -155.0 -152.0 -151.0 -146.0 -145.0 -144.0 -141.0 -140.0 -137.0 -136.0 -133.0 -129.0 -128.0 -123.0 -120.0 -123.0 -118.0 -119.0 -116.0 -115.0 -114.0 -107.0 -106.0 -101.0 -102.0 -103.0 -98.0 -97.0 -94.0 -95.0 -92.0 -87.0 -86.0 -81.0 -76.0 -77.0 -76.0 -73.0 -70.0 -67.0 -66.0 -63.0 -62.0 -57.0 -56.0 -53.0 -50.0 -51.0 -48.0 -47.0 -44.0 -37.0 -36.0 -37.0 -34.0 -33.0 -34.0 -31.0 -28.0 -21.0 -26.0 -27.0 -27.0 -26.0 -22.0 -21.0 -21.0 -16.0 -16.0 -16.0 -15.0 -10.0 -10.0 -7.0 -1.0 1.0 1.0 3.0 14.0 10.0 1.0 2.0 1.0 0.0 -5.0 -6.0 -5.0 -12.0 -13.0 -14.0 -15.0 -20.0 -23.0 -24.0 -21.0 -26.0 -31.0 -32.0 -37.0 -36.0 -41.0 -40.0 -43.0 87 -182.0 -186.0 -180.0 -183.0 -180.0 -181.0 -176.0 -173.0 -172.0 -169.0 -170.0 -165.0 -162.0 -163.0 -160.0 -159.0 -158.0 -153.0 -152.0 -149.0 -146.0 -147.0 -146.0 -143.0 -140.0 -139.0 -136.0 -132.0 -127.0 -130.0 -123.0 -122.0 -123.0 -118.0 -121.0 -118.0 -115.0 -112.0 -105.0 -106.0 -101.0 -102.0 -101.0 -98.0 -97.0 -92.0 -93.0 -90.0 -85.0 -84.0 -79.0 -76.0 -77.0 -74.0 -71.0 -68.0 -67.0 -66.0 -63.0 -62.0 -55.0 -54.0 -51.0 -50.0 -51.0 -48.0 -45.0 -42.0 -37.0 -36.0 -37.0 -34.0 -33.0 -32.0 -31.0 -28.0 -21.0 -25.0 -27.0 -27.0 -27.0 -22.0 -21.0 -21.0 -18.0 -16.0 -18.0 -14.0 -11.0 -9.0 -5.0 -1.0 1.0 1.0 3.0 14.0 10.0 3.0 2.0 1.0 2.0 -5.0 -6.0 -5.0 -10.0 -13.0 -12.0 -17.0 -20.0 -21.0 -22.0 -21.0 -28.0 -29.0 -34.0 -35.0 -36.0 -41.0 -40.0 88 -189.0 -182.0 -187.0 -180.0 -183.0 -178.0 -179.0 -176.0 -173.0 -170.0 -169.0 -168.0 -165.0 -160.0 -163.0 -160.0 -159.0 -156.0 -153.0 -150.0 -149.0 -146.0 -147.0 -144.0 -141.0 -140.0 -137.0 -135.0 -130.0 -127.0 -130.0 -123.0 -122.0 -121.0 -118.0 -121.0 -118.0 -113.0 -110.0 -105.0 -106.0 -101.0 -102.0 -101.0 -98.0 -95.0 -90.0 -92.0 -90.0 -83.0 -82.0 -79.0 -78.0 -75.0 -72.0 -71.0 -70.0 -67.0 -66.0 -63.0 -62.0 -53.0 -52.0 -51.0 -50.0 -51.0 -46.0 -43.0 -42.0 -37.0 -36.0 -37.0 -34.0 -33.0 -32.0 -31.0 -28.0 -21.0 -25.0 -29.0 -27.0 -27.0 -22.0 -21.0 -22.0 -18.0 -16.0 -18.0 -15.0 -10.0 -7.0 -6.0 -1.0 1.0 3.0 2.0 14.0 10.0 1.0 2.0 1.0 3.0 -4.0 -6.0 -5.0 -9.0 -12.0 -14.0 -18.0 -19.0 -20.0 -22.0 -23.0 -29.0 -31.0 -33.0 -37.0 -36.0 -40.0 89 -188.0 -189.0 -182.0 -187.0 -180.0 -183.0 -176.0 -179.0 -176.0 -171.0 -170.0 -167.0 -168.0 -163.0 -160.0 -163.0 -158.0 -157.0 -156.0 -153.0 -150.0 -147.0 -146.0 -145.0 -142.0 -141.0 -138.0 -136.0 -133.0 -130.0 -127.0 -128.0 -123.0 -122.0 -121.0 -118.0 -119.0 -116.0 -111.0 -108.0 -105.0 -106.0 -101.0 -102.0 -101.0 -98.0 -95.0 -88.0 -91.0 -88.0 -83.0 -82.0 -79.0 -78.0 -73.0 -70.0 -71.0 -70.0 -67.0 -64.0 -63.0 -60.0 -53.0 -50.0 -51.0 -50.0 -49.0 -44.0 -41.0 -42.0 -37.0 -36.0 -35.0 -34.0 -33.0 -32.0 -31.0 -28.0 -21.0 -27.0 -29.0 -27.0 -25.0 -22.0 -21.0 -22.0 -18.0 -15.0 -18.0 -13.0 -8.0 -5.0 -6.0 -1.0 1.0 5.0 4.0 14.0 10.0 2.0 2.0 1.0 3.0 -2.0 -5.0 -7.0 -7.0 -10.0 -15.0 -16.0 -17.0 -18.0 -23.0 -23.0 -29.0 -30.0 -31.0 -36.0 -35.0 90 -189.0 -188.0 -187.0 -182.0 -189.0 -180.0 -183.0 -176.0 -177.0 -176.0 -171.0 -172.0 -167.0 -168.0 -163.0 -160.0 -161.0 -156.0 -159.0 -154.0 -153.0 -152.0 -147.0 -146.0 -145.0 -142.0 -139.0 -137.0 -134.0 -135.0 -132.0 -129.0 -128.0 -123.0 -124.0 -121.0 -116.0 -119.0 -116.0 -111.0 -110.0 -105.0 -108.0 -103.0 -102.0 -101.0 -96.0 -93.0 -86.0 -89.0 -88.0 -85.0 -82.0 -77.0 -78.0 -71.0 -70.0 -71.0 -70.0 -67.0 -62.0 -63.0 -60.0 -53.0 -50.0 -51.0 -48.0 -49.0 -44.0 -43.0 -42.0 -37.0 -38.0 -33.0 -34.0 -33.0 -32.0 -33.0 -30.0 -21.0 -27.0 -27.0 -27.0 -25.0 -23.0 -21.0 -22.0 -18.0 -15.0 -16.0 -11.0 -8.0 -5.0 -6.0 -1.0 1.0 5.0 6.0 14.0 10.0 4.0 3.0 0.0 3.0 0.0 -5.0 -6.0 -7.0 -8.0 -13.0 -16.0 -17.0 -18.0 -23.0 -25.0 -29.0 -30.0 -31.0 -34.0 91 -194.0 -189.0 -190.0 -187.0 -182.0 -187.0 -180.0 -183.0 -176.0 -177.0 -176.0 -171.0 -172.0 -167.0 -168.0 -163.0 -160.0 -161.0 -156.0 -157.0 -154.0 -151.0 -152.0 -147.0 -144.0 -145.0 -142.0 -139.0 -137.0 -134.0 -135.0 -132.0 -129.0 -128.0 -123.0 -124.0 -121.0 -116.0 -117.0 -114.0 -111.0 -110.0 -105.0 -108.0 -103.0 -102.0 -99.0 -96.0 -93.0 -86.0 -87.0 -88.0 -85.0 -82.0 -77.0 -76.0 -71.0 -70.0 -71.0 -68.0 -65.0 -62.0 -61.0 -58.0 -53.0 -50.0 -51.0 -48.0 -47.0 -44.0 -43.0 -42.0 -37.0 -38.0 -33.0 -34.0 -33.0 -32.0 -31.0 -30.0 -21.0 -27.0 -25.0 -28.0 -25.0 -23.0 -21.0 -22.0 -17.0 -13.0 -14.0 -9.0 -8.0 -5.0 -4.0 1.0 3.0 7.0 8.0 14.0 10.0 4.0 1.0 0.0 3.0 0.0 -5.0 -6.0 -7.0 -8.0 -13.0 -16.0 -19.0 -20.0 -23.0 -25.0 -29.0 -30.0 -31.0 92 -193.0 -194.0 -187.0 -190.0 -187.0 -182.0 -185.0 -180.0 -183.0 -176.0 -179.0 -174.0 -171.0 -170.0 -167.0 -168.0 -163.0 -160.0 -161.0 -156.0 -157.0 -156.0 -151.0 -150.0 -147.0 -146.0 -145.0 -143.0 -138.0 -137.0 -134.0 -133.0 -134.0 -131.0 -130.0 -125.0 -126.0 -121.0 -116.0 -115.0 -114.0 -111.0 -110.0 -105.0 -108.0 -105.0 -102.0 -99.0 -94.0 -91.0 -84.0 -87.0 -86.0 -83.0 -80.0 -77.0 -76.0 -71.0 -70.0 -71.0 -66.0 -63.0 -60.0 -59.0 -58.0 -53.0 -50.0 -49.0 -46.0 -49.0 -44.0 -43.0 -44.0 -39.0 -40.0 -35.0 -34.0 -33.0 -34.0 -33.0 -30.0 -21.0 -25.0 -25.0 -28.0 -25.0 -23.0 -20.0 -21.0 -17.0 -13.0 -12.0 -9.0 -8.0 -3.0 -2.0 3.0 5.0 9.0 8.0 14.0 10.0 4.0 1.0 0.0 3.0 0.0 -7.0 -8.0 -7.0 -8.0 -13.0 -18.0 -19.0 -20.0 -23.0 -25.0 -29.0 -30.0 93 -196.0 -193.0 -192.0 -187.0 -190.0 -185.0 -182.0 -185.0 -180.0 -181.0 -176.0 -177.0 -174.0 -171.0 -170.0 -167.0 -166.0 -161.0 -160.0 -159.0 -156.0 -157.0 -156.0 -149.0 -148.0 -147.0 -147.0 -144.0 -141.0 -138.0 -137.0 -134.0 -133.0 -133.0 -131.0 -130.0 -127.0 -124.0 -119.0 -116.0 -115.0 -114.0 -109.0 -110.0 -105.0 -108.0 -103.0 -102.0 -97.0 -92.0 -89.0 -84.0 -87.0 -84.0 -81.0 -80.0 -79.0 -78.0 -71.0 -72.0 -71.0 -64.0 -61.0 -62.0 -59.0 -60.0 -53.0 -48.0 -49.0 -46.0 -49.0 -44.0 -43.0 -42.0 -39.0 -40.0 -35.0 -34.0 -33.0 -34.0 -33.0 -28.0 -21.0 -25.0 -25.0 -28.0 -25.0 -23.0 -20.0 -19.0 -15.0 -13.0 -12.0 -9.0 -6.0 -3.0 -2.0 5.0 5.0 9.0 8.0 14.0 10.0 4.0 1.0 0.0 3.0 -2.0 -9.0 -8.0 -7.0 -8.0 -15.0 -18.0 -21.0 -20.0 -23.0 -25.0 -29.0 94 -197.0 -196.0 -193.0 -192.0 -187.0 -190.0 -183.0 -182.0 -185.0 -178.0 -181.0 -174.0 -177.0 -172.0 -171.0 -170.0 -165.0 -164.0 -161.0 -158.0 -159.0 -156.0 -157.0 -154.0 -147.0 -148.0 -145.0 -146.0 -142.0 -141.0 -138.0 -137.0 -134.0 -131.0 -133.0 -131.0 -128.0 -127.0 -122.0 -119.0 -116.0 -115.0 -114.0 -109.0 -110.0 -105.0 -106.0 -101.0 -100.0 -95.0 -90.0 -89.0 -84.0 -85.0 -82.0 -79.0 -80.0 -79.0 -78.0 -71.0 -72.0 -69.0 -62.0 -61.0 -62.0 -59.0 -60.0 -51.0 -48.0 -49.0 -46.0 -49.0 -44.0 -45.0 -42.0 -39.0 -42.0 -35.0 -34.0 -35.0 -36.0 -31.0 -28.0 -21.0 -25.0 -25.0 -26.0 -24.0 -24.0 -18.0 -17.0 -16.0 -13.0 -12.0 -9.0 -6.0 -3.0 0.0 5.0 4.0 9.0 8.0 14.0 10.0 4.0 0.0 1.0 1.0 -4.0 -7.0 -8.0 -7.0 -10.0 -15.0 -20.0 -21.0 -20.0 -23.0 -25.0 95 -202.0 -197.0 -198.0 -193.0 -194.0 -187.0 -188.0 -183.0 -182.0 -183.0 -178.0 -179.0 -174.0 -175.0 -172.0 -171.0 -168.0 -163.0 -164.0 -159.0 -158.0 -160.0 -156.0 -155.0 -154.0 -147.0 -146.0 -144.0 -144.0 -142.0 -141.0 -138.0 -137.0 -132.0 -131.0 -133.0 -129.0 -126.0 -127.0 -122.0 -121.0 -116.0 -115.0 -116.0 -109.0 -110.0 -103.0 -104.0 -99.0 -98.0 -93.0 -90.0 -89.0 -84.0 -83.0 -80.0 -79.0 -80.0 -79.0 -78.0 -71.0 -70.0 -67.0 -62.0 -61.0 -62.0 -57.0 -58.0 -51.0 -48.0 -49.0 -46.0 -49.0 -42.0 -45.0 -42.0 -39.0 -42.0 -35.0 -34.0 -35.0 -34.0 -31.0 -28.0 -21.0 -25.0 -25.0 -25.0 -24.0 -23.0 -16.0 -17.0 -16.0 -13.0 -10.0 -9.0 -6.0 -1.0 0.0 5.0 4.0 9.0 8.0 14.0 10.0 2.0 1.0 -1.0 1.0 -4.0 -9.0 -8.0 -7.0 -12.0 -17.0 -22.0 -23.0 -20.0 -23.0 96 -201.0 -202.0 -197.0 -198.0 -193.0 -194.0 -187.0 -188.0 -183.0 -182.0 -183.0 -178.0 -179.0 -174.0 -175.0 -172.0 -171.0 -168.0 -163.0 -162.0 -159.0 -156.0 -161.0 -156.0 -153.0 -154.0 -147.0 -146.0 -144.0 -144.0 -142.0 -139.0 -138.0 -137.0 -132.0 -131.0 -134.0 -129.0 -124.0 -125.0 -122.0 -121.0 -116.0 -115.0 -116.0 -109.0 -108.0 -103.0 -104.0 -99.0 -96.0 -93.0 -90.0 -89.0 -84.0 -81.0 -80.0 -79.0 -80.0 -77.0 -76.0 -71.0 -68.0 -65.0 -62.0 -61.0 -62.0 -57.0 -56.0 -51.0 -48.0 -49.0 -46.0 -47.0 -42.0 -45.0 -42.0 -39.0 -40.0 -35.0 -34.0 -35.0 -32.0 -31.0 -28.0 -21.0 -25.0 -25.0 -23.0 -22.0 -21.0 -14.0 -17.0 -16.0 -11.0 -8.0 -7.0 -4.0 1.0 0.0 5.0 4.0 9.0 10.0 14.0 10.0 4.0 3.0 0.0 1.0 -6.0 -7.0 -10.0 -9.0 -12.0 -19.0 -20.0 -23.0 -20.0 97 -200.0 -201.0 -200.0 -197.0 -200.0 -193.0 -194.0 -187.0 -186.0 -183.0 -182.0 -183.0 -178.0 -179.0 -174.0 -175.0 -172.0 -169.0 -170.0 -163.0 -162.0 -159.0 -156.0 -159.0 -156.0 -153.0 -152.0 -146.0 -145.0 -144.0 -144.0 -140.0 -139.0 -136.0 -137.0 -132.0 -129.0 -132.0 -129.0 -122.0 -125.0 -122.0 -121.0 -116.0 -115.0 -114.0 -109.0 -106.0 -101.0 -102.0 -97.0 -96.0 -91.0 -88.0 -89.0 -84.0 -81.0 -80.0 -79.0 -80.0 -75.0 -74.0 -69.0 -66.0 -65.0 -62.0 -61.0 -60.0 -55.0 -56.0 -51.0 -48.0 -49.0 -46.0 -49.0 -42.0 -45.0 -44.0 -39.0 -40.0 -37.0 -34.0 -35.0 -32.0 -33.0 -28.0 -21.0 -25.0 -24.0 -23.0 -22.0 -19.0 -14.0 -17.0 -14.0 -9.0 -6.0 -5.0 -2.0 1.0 0.0 5.0 4.0 9.0 12.0 14.0 10.0 6.0 3.0 0.0 -1.0 -4.0 -5.0 -10.0 -11.0 -14.0 -19.0 -18.0 -21.0 98 -205.0 -200.0 -201.0 -200.0 -197.0 -198.0 -193.0 -194.0 -187.0 -186.0 -183.0 -182.0 -183.0 -178.0 -179.0 -174.0 -175.0 -172.0 -169.0 -168.0 -163.0 -160.0 -159.0 -156.0 -157.0 -156.0 -153.0 -152.0 -146.0 -145.0 -144.0 -142.0 -140.0 -139.0 -136.0 -137.0 -132.0 -129.0 -130.0 -127.0 -122.0 -125.0 -122.0 -121.0 -116.0 -115.0 -112.0 -111.0 -106.0 -101.0 -102.0 -97.0 -94.0 -91.0 -88.0 -89.0 -84.0 -81.0 -80.0 -79.0 -78.0 -75.0 -72.0 -67.0 -68.0 -67.0 -62.0 -63.0 -60.0 -55.0 -58.0 -51.0 -48.0 -49.0 -46.0 -49.0 -42.0 -45.0 -44.0 -39.0 -40.0 -37.0 -32.0 -35.0 -32.0 -33.0 -28.0 -21.0 -24.0 -22.0 -21.0 -20.0 -19.0 -14.0 -17.0 -12.0 -7.0 -4.0 -4.0 -4.0 0.0 -2.0 3.0 4.0 9.0 14.0 14.0 10.0 6.0 3.0 -2.0 -1.0 -6.0 -7.0 -10.0 -13.0 -16.0 -19.0 -18.0 99 -206.0 -205.0 -198.0 -201.0 -200.0 -197.0 -196.0 -193.0 -192.0 -185.0 -186.0 -181.0 -182.0 -181.0 -178.0 -179.0 -174.0 -173.0 -172.0 -169.0 -168.0 -163.0 -160.0 -157.0 -156.0 -157.0 -154.0 -153.0 -151.0 -146.0 -145.0 -142.0 -142.0 -138.0 -139.0 -136.0 -135.0 -132.0 -129.0 -128.0 -127.0 -122.0 -123.0 -122.0 -119.0 -116.0 -113.0 -110.0 -109.0 -104.0 -99.0 -102.0 -95.0 -92.0 -89.0 -88.0 -89.0 -84.0 -81.0 -80.0 -77.0 -76.0 -73.0 -70.0 -67.0 -68.0 -67.0 -62.0 -61.0 -60.0 -55.0 -58.0 -51.0 -48.0 -49.0 -46.0 -47.0 -42.0 -45.0 -44.0 -39.0 -40.0 -37.0 -32.0 -35.0 -34.0 -31.0 -28.0 -21.0 -24.0 -22.0 -19.0 -20.0 -19.0 -14.0 -15.0 -10.0 -5.0 -2.0 -4.0 -4.0 0.0 -2.0 3.0 6.0 9.0 14.0 14.0 10.0 6.0 1.0 -2.0 -3.0 -8.0 -7.0 -12.0 -15.0 -16.0 -19.0 100 -207.0 -206.0 -203.0 -198.0 -201.0 -200.0 -197.0 -196.0 -193.0 -190.0 -185.0 -184.0 -181.0 -182.0 -181.0 -178.0 -179.0 -172.0 -175.0 -172.0 -169.0 -166.0 -163.0 -158.0 -157.0 -156.0 -157.0 -153.0 -152.0 -151.0 -146.0 -143.0 -142.0 -140.0 -138.0 -139.0 -136.0 -133.0 -132.0 -127.0 -128.0 -127.0 -120.0 -123.0 -120.0 -117.0 -114.0 -111.0 -108.0 -107.0 -102.0 -99.0 -100.0 -93.0 -90.0 -89.0 -88.0 -89.0 -84.0 -81.0 -80.0 -75.0 -74.0 -71.0 -70.0 -67.0 -68.0 -65.0 -60.0 -61.0 -60.0 -55.0 -56.0 -51.0 -48.0 -51.0 -48.0 -47.0 -42.0 -47.0 -44.0 -39.0 -40.0 -37.0 -32.0 -36.0 -36.0 -30.0 -27.0 -21.0 -24.0 -20.0 -19.0 -20.0 -17.0 -12.0 -13.0 -8.0 -3.0 -2.0 -4.0 -5.0 0.0 0.0 3.0 6.0 7.0 14.0 14.0 10.0 4.0 1.0 -2.0 -5.0 -6.0 -7.0 -14.0 -15.0 -16.0 101 -208.0 -209.0 -206.0 -205.0 -198.0 -203.0 -198.0 -197.0 -196.0 -191.0 -192.0 -183.0 -184.0 -181.0 -182.0 -181.0 -178.0 -177.0 -172.0 -173.0 -172.0 -167.0 -166.0 -161.0 -158.0 -157.0 -156.0 -156.0 -151.0 -152.0 -151.0 -144.0 -143.0 -140.0 -140.0 -138.0 -139.0 -134.0 -133.0 -130.0 -127.0 -128.0 -125.0 -120.0 -121.0 -118.0 -115.0 -112.0 -109.0 -106.0 -105.0 -102.0 -97.0 -98.0 -91.0 -90.0 -89.0 -88.0 -89.0 -84.0 -79.0 -78.0 -73.0 -72.0 -71.0 -70.0 -65.0 -66.0 -65.0 -60.0 -63.0 -62.0 -53.0 -56.0 -51.0 -48.0 -51.0 -48.0 -47.0 -42.0 -47.0 -42.0 -37.0 -40.0 -37.0 -32.0 -37.0 -35.0 -28.0 -27.0 -21.0 -22.0 -20.0 -19.0 -20.0 -15.0 -10.0 -11.0 -6.0 -3.0 -2.0 -4.0 -5.0 0.0 2.0 3.0 4.0 7.0 14.0 14.0 8.0 4.0 1.0 -2.0 -3.0 -8.0 -7.0 -12.0 -13.0 102 -213.0 -208.0 -207.0 -208.0 -207.0 -198.0 -201.0 -198.0 -195.0 -194.0 -191.0 -190.0 -183.0 -184.0 -181.0 -182.0 -179.0 -176.0 -177.0 -170.0 -173.0 -170.0 -167.0 -164.0 -161.0 -158.0 -157.0 -155.0 -154.0 -151.0 -152.0 -149.0 -144.0 -141.0 -140.0 -140.0 -138.0 -137.0 -134.0 -131.0 -132.0 -127.0 -126.0 -127.0 -118.0 -119.0 -116.0 -113.0 -110.0 -107.0 -104.0 -105.0 -100.0 -95.0 -96.0 -91.0 -90.0 -89.0 -88.0 -87.0 -82.0 -77.0 -76.0 -71.0 -72.0 -71.0 -68.0 -63.0 -64.0 -65.0 -60.0 -63.0 -60.0 -53.0 -56.0 -51.0 -48.0 -51.0 -48.0 -47.0 -42.0 -45.0 -40.0 -37.0 -40.0 -37.0 -32.0 -36.0 -33.0 -28.0 -27.0 -20.0 -22.0 -20.0 -19.0 -18.0 -13.0 -8.0 -9.0 -6.0 -3.0 -2.0 -4.0 -3.0 2.0 2.0 3.0 4.0 7.0 14.0 14.0 8.0 6.0 1.0 0.0 -3.0 -8.0 -5.0 -10.0 103 -210.0 -213.0 -208.0 -207.0 -208.0 -205.0 -198.0 -201.0 -198.0 -195.0 -194.0 -191.0 -190.0 -183.0 -184.0 -181.0 -182.0 -179.0 -176.0 -175.0 -170.0 -171.0 -170.0 -167.0 -162.0 -161.0 -158.0 -157.0 -155.0 -154.0 -151.0 -150.0 -149.0 -144.0 -141.0 -140.0 -141.0 -138.0 -135.0 -132.0 -131.0 -132.0 -127.0 -126.0 -125.0 -118.0 -117.0 -116.0 -113.0 -112.0 -105.0 -104.0 -103.0 -100.0 -95.0 -94.0 -91.0 -92.0 -89.0 -86.0 -87.0 -84.0 -75.0 -74.0 -71.0 -72.0 -73.0 -68.0 -61.0 -64.0 -65.0 -60.0 -61.0 -58.0 -53.0 -56.0 -51.0 -48.0 -51.0 -48.0 -47.0 -42.0 -43.0 -40.0 -37.0 -40.0 -37.0 -32.0 -34.0 -31.0 -26.0 -25.0 -20.0 -22.0 -20.0 -17.0 -16.0 -11.0 -6.0 -9.0 -6.0 -3.0 -2.0 -2.0 -3.0 4.0 2.0 2.0 2.0 5.0 14.0 14.0 6.0 6.0 -1.0 0.0 -3.0 -8.0 -5.0 104 -215.0 -210.0 -213.0 -210.0 -207.0 -206.0 -203.0 -198.0 -199.0 -196.0 -195.0 -192.0 -191.0 -188.0 -183.0 -184.0 -181.0 -180.0 -179.0 -176.0 -177.0 -170.0 -171.0 -170.0 -165.0 -162.0 -159.0 -158.0 -158.0 -157.0 -156.0 -151.0 -150.0 -149.0 -144.0 -141.0 -138.0 -141.0 -136.0 -137.0 -132.0 -131.0 -132.0 -129.0 -126.0 -123.0 -116.0 -115.0 -114.0 -111.0 -110.0 -105.0 -104.0 -101.0 -98.0 -93.0 -94.0 -91.0 -92.0 -89.0 -84.0 -85.0 -82.0 -75.0 -74.0 -71.0 -72.0 -71.0 -68.0 -61.0 -64.0 -67.0 -60.0 -59.0 -58.0 -53.0 -54.0 -53.0 -48.0 -51.0 -50.0 -47.0 -44.0 -45.0 -40.0 -37.0 -38.0 -37.0 -32.0 -32.0 -29.0 -26.0 -25.0 -20.0 -22.0 -20.0 -17.0 -14.0 -11.0 -6.0 -9.0 -6.0 -3.0 -2.0 0.0 -1.0 4.0 2.0 2.0 4.0 7.0 14.0 14.0 5.0 4.0 -1.0 0.0 -3.0 -6.0 105 -218.0 -215.0 -210.0 -213.0 -210.0 -205.0 -206.0 -203.0 -198.0 -199.0 -196.0 -195.0 -192.0 -191.0 -188.0 -183.0 -184.0 -181.0 -180.0 -177.0 -176.0 -175.0 -170.0 -171.0 -168.0 -165.0 -162.0 -159.0 -158.0 -158.0 -157.0 -154.0 -151.0 -150.0 -149.0 -144.0 -141.0 -138.0 -139.0 -134.0 -139.0 -132.0 -131.0 -134.0 -129.0 -128.0 -121.0 -116.0 -115.0 -116.0 -109.0 -112.0 -105.0 -104.0 -103.0 -96.0 -93.0 -94.0 -93.0 -92.0 -89.0 -84.0 -85.0 -80.0 -75.0 -74.0 -71.0 -72.0 -71.0 -70.0 -61.0 -64.0 -65.0 -60.0 -59.0 -58.0 -53.0 -54.0 -53.0 -48.0 -51.0 -50.0 -45.0 -44.0 -45.0 -40.0 -37.0 -38.0 -36.0 -31.0 -30.0 -27.0 -26.0 -25.0 -18.0 -22.0 -18.0 -15.0 -12.0 -11.0 -8.0 -9.0 -6.0 -1.0 -2.0 2.0 -1.0 4.0 2.0 4.0 6.0 5.0 14.0 12.0 5.0 4.0 -1.0 2.0 -3.0 106 -219.0 -220.0 -215.0 -210.0 -213.0 -212.0 -205.0 -208.0 -205.0 -200.0 -199.0 -198.0 -197.0 -194.0 -193.0 -190.0 -185.0 -186.0 -181.0 -182.0 -177.0 -178.0 -175.0 -170.0 -171.0 -170.0 -167.0 -164.0 -159.0 -160.0 -158.0 -157.0 -156.0 -151.0 -152.0 -151.0 -144.0 -141.0 -136.0 -137.0 -134.0 -139.0 -132.0 -131.0 -132.0 -129.0 -126.0 -121.0 -116.0 -115.0 -114.0 -109.0 -110.0 -105.0 -104.0 -101.0 -96.0 -93.0 -94.0 -93.0 -90.0 -91.0 -82.0 -85.0 -80.0 -75.0 -74.0 -71.0 -70.0 -71.0 -72.0 -61.0 -64.0 -63.0 -62.0 -61.0 -60.0 -53.0 -56.0 -55.0 -50.0 -51.0 -50.0 -45.0 -46.0 -47.0 -42.0 -37.0 -37.0 -36.0 -29.0 -30.0 -29.0 -26.0 -23.0 -16.0 -20.0 -16.0 -13.0 -12.0 -11.0 -8.0 -9.0 -6.0 -1.0 0.0 2.0 -1.0 6.0 2.0 6.0 6.0 5.0 14.0 10.0 5.0 4.0 -1.0 2.0 107 -220.0 -219.0 -218.0 -215.0 -210.0 -211.0 -210.0 -205.0 -206.0 -203.0 -200.0 -197.0 -198.0 -195.0 -194.0 -193.0 -190.0 -185.0 -186.0 -181.0 -182.0 -177.0 -178.0 -173.0 -170.0 -171.0 -168.0 -166.0 -163.0 -159.0 -160.0 -158.0 -157.0 -154.0 -151.0 -152.0 -149.0 -142.0 -139.0 -136.0 -137.0 -134.0 -137.0 -132.0 -131.0 -130.0 -127.0 -124.0 -119.0 -114.0 -113.0 -114.0 -109.0 -108.0 -103.0 -102.0 -101.0 -96.0 -93.0 -94.0 -93.0 -88.0 -89.0 -82.0 -85.0 -80.0 -75.0 -74.0 -71.0 -70.0 -71.0 -72.0 -61.0 -62.0 -63.0 -62.0 -61.0 -60.0 -53.0 -56.0 -55.0 -50.0 -51.0 -50.0 -45.0 -46.0 -45.0 -42.0 -37.0 -35.0 -34.0 -29.0 -30.0 -29.0 -24.0 -23.0 -16.0 -19.0 -16.0 -15.0 -12.0 -11.0 -10.0 -11.0 -4.0 1.0 0.0 2.0 1.0 8.0 2.0 6.0 6.0 6.0 14.0 8.0 5.0 4.0 -1.0 108 -223.0 -220.0 -219.0 -218.0 -217.0 -210.0 -209.0 -212.0 -205.0 -206.0 -203.0 -202.0 -197.0 -196.0 -195.0 -194.0 -193.0 -188.0 -187.0 -184.0 -181.0 -182.0 -179.0 -176.0 -173.0 -170.0 -171.0 -169.0 -166.0 -163.0 -159.0 -161.0 -160.0 -155.0 -154.0 -153.0 -152.0 -147.0 -142.0 -137.0 -136.0 -137.0 -134.0 -137.0 -132.0 -131.0 -128.0 -127.0 -122.0 -117.0 -112.0 -113.0 -114.0 -107.0 -106.0 -103.0 -102.0 -101.0 -96.0 -93.0 -94.0 -91.0 -86.0 -87.0 -82.0 -85.0 -80.0 -75.0 -72.0 -71.0 -70.0 -71.0 -70.0 -61.0 -62.0 -64.0 -64.0 -61.0 -58.0 -55.0 -56.0 -55.0 -50.0 -51.0 -50.0 -47.0 -48.0 -44.0 -41.0 -39.0 -35.0 -34.0 -29.0 -30.0 -27.0 -22.0 -21.0 -14.0 -17.0 -16.0 -15.0 -12.0 -11.0 -10.0 -9.0 -4.0 1.0 0.0 2.0 0.0 8.0 2.0 6.0 8.0 6.0 14.0 8.0 5.0 4.0 109 -222.0 -223.0 -218.0 -219.0 -218.0 -217.0 -210.0 -209.0 -210.0 -203.0 -206.0 -201.0 -202.0 -197.0 -196.0 -195.0 -192.0 -191.0 -188.0 -187.0 -184.0 -181.0 -182.0 -179.0 -174.0 -173.0 -170.0 -170.0 -167.0 -166.0 -163.0 -159.0 -161.0 -158.0 -155.0 -154.0 -153.0 -150.0 -145.0 -142.0 -137.0 -136.0 -137.0 -134.0 -137.0 -132.0 -129.0 -126.0 -125.0 -120.0 -115.0 -112.0 -113.0 -112.0 -105.0 -104.0 -103.0 -102.0 -101.0 -96.0 -93.0 -94.0 -89.0 -86.0 -87.0 -82.0 -83.0 -78.0 -75.0 -72.0 -71.0 -70.0 -71.0 -68.0 -61.0 -62.0 -64.0 -64.0 -61.0 -58.0 -55.0 -56.0 -55.0 -50.0 -51.0 -50.0 -49.0 -47.0 -44.0 -39.0 -38.0 -37.0 -34.0 -29.0 -28.0 -27.0 -22.0 -19.0 -14.0 -17.0 -16.0 -15.0 -12.0 -11.0 -10.0 -7.0 -4.0 1.0 2.0 2.0 2.0 8.0 2.0 8.0 8.0 6.0 14.0 8.0 5.0 110 -227.0 -222.0 -223.0 -218.0 -219.0 -216.0 -215.0 -210.0 -209.0 -208.0 -203.0 -204.0 -201.0 -200.0 -197.0 -196.0 -193.0 -190.0 -191.0 -186.0 -187.0 -184.0 -181.0 -180.0 -177.0 -174.0 -171.0 -169.0 -168.0 -167.0 -166.0 -163.0 -159.0 -159.0 -158.0 -155.0 -152.0 -151.0 -148.0 -145.0 -142.0 -137.0 -136.0 -137.0 -134.0 -135.0 -130.0 -127.0 -124.0 -123.0 -118.0 -115.0 -112.0 -111.0 -110.0 -103.0 -104.0 -103.0 -102.0 -101.0 -96.0 -91.0 -92.0 -89.0 -86.0 -87.0 -80.0 -81.0 -78.0 -77.0 -72.0 -71.0 -72.0 -69.0 -68.0 -61.0 -60.0 -64.0 -64.0 -61.0 -58.0 -55.0 -56.0 -55.0 -50.0 -51.0 -48.0 -49.0 -47.0 -42.0 -37.0 -38.0 -37.0 -34.0 -29.0 -28.0 -27.0 -20.0 -19.0 -14.0 -17.0 -16.0 -15.0 -12.0 -11.0 -8.0 -7.0 -4.0 1.0 4.0 4.0 2.0 8.0 4.0 8.0 8.0 4.0 14.0 8.0 111 -228.0 -229.0 -222.0 -225.0 -218.0 -221.0 -216.0 -215.0 -212.0 -211.0 -210.0 -203.0 -206.0 -201.0 -202.0 -199.0 -196.0 -195.0 -192.0 -191.0 -186.0 -187.0 -186.0 -183.0 -178.0 -179.0 -174.0 -173.0 -171.0 -170.0 -167.0 -164.0 -165.0 -161.0 -161.0 -160.0 -157.0 -154.0 -149.0 -146.0 -145.0 -144.0 -137.0 -136.0 -137.0 -134.0 -135.0 -130.0 -129.0 -124.0 -121.0 -118.0 -115.0 -112.0 -111.0 -110.0 -103.0 -104.0 -103.0 -100.0 -99.0 -96.0 -89.0 -90.0 -89.0 -86.0 -87.0 -80.0 -79.0 -78.0 -77.0 -72.0 -71.0 -72.0 -69.0 -68.0 -61.0 -60.0 -62.0 -64.0 -61.0 -58.0 -55.0 -56.0 -55.0 -50.0 -51.0 -48.0 -48.0 -45.0 -40.0 -35.0 -39.0 -39.0 -32.0 -27.0 -26.0 -25.0 -18.0 -19.0 -14.0 -19.0 -16.0 -17.0 -12.0 -11.0 -8.0 -7.0 -4.0 1.0 6.0 4.0 2.0 8.0 4.0 8.0 8.0 6.0 14.0 112 -233.0 -228.0 -227.0 -224.0 -227.0 -218.0 -221.0 -216.0 -213.0 -214.0 -211.0 -210.0 -203.0 -204.0 -201.0 -202.0 -199.0 -194.0 -197.0 -192.0 -191.0 -188.0 -187.0 -184.0 -181.0 -178.0 -177.0 -173.0 -172.0 -173.0 -170.0 -169.0 -164.0 -163.0 -163.0 -161.0 -158.0 -157.0 -154.0 -151.0 -148.0 -145.0 -146.0 -139.0 -136.0 -135.0 -134.0 -133.0 -128.0 -127.0 -122.0 -121.0 -118.0 -113.0 -112.0 -109.0 -110.0 -103.0 -104.0 -105.0 -98.0 -97.0 -94.0 -89.0 -90.0 -89.0 -86.0 -85.0 -80.0 -81.0 -78.0 -77.0 -72.0 -69.0 -72.0 -69.0 -66.0 -61.0 -60.0 -62.0 -64.0 -61.0 -58.0 -55.0 -56.0 -55.0 -50.0 -51.0 -48.0 -46.0 -43.0 -40.0 -35.0 -40.0 -37.0 -32.0 -27.0 -24.0 -25.0 -18.0 -19.0 -14.0 -19.0 -16.0 -15.0 -10.0 -11.0 -8.0 -5.0 -2.0 3.0 6.0 4.0 4.0 8.0 4.0 6.0 8.0 8.0 113 -234.0 -233.0 -228.0 -227.0 -224.0 -225.0 -218.0 -221.0 -216.0 -213.0 -214.0 -211.0 -210.0 -203.0 -204.0 -201.0 -202.0 -199.0 -194.0 -195.0 -192.0 -189.0 -188.0 -187.0 -182.0 -181.0 -178.0 -177.0 -173.0 -172.0 -173.0 -168.0 -169.0 -164.0 -163.0 -163.0 -161.0 -158.0 -155.0 -152.0 -151.0 -148.0 -145.0 -144.0 -139.0 -136.0 -133.0 -134.0 -133.0 -128.0 -125.0 -122.0 -121.0 -118.0 -113.0 -110.0 -109.0 -110.0 -103.0 -104.0 -105.0 -98.0 -95.0 -92.0 -89.0 -90.0 -89.0 -86.0 -83.0 -80.0 -81.0 -78.0 -77.0 -72.0 -69.0 -72.0 -69.0 -66.0 -61.0 -60.0 -62.0 -66.0 -61.0 -58.0 -55.0 -56.0 -55.0 -52.0 -52.0 -47.0 -44.0 -43.0 -40.0 -35.0 -38.0 -35.0 -30.0 -25.0 -22.0 -25.0 -18.0 -19.0 -14.0 -19.0 -16.0 -13.0 -10.0 -11.0 -8.0 -3.0 0.0 3.0 6.0 4.0 4.0 8.0 6.0 6.0 8.0 114 -235.0 -234.0 -233.0 -230.0 -227.0 -224.0 -223.0 -218.0 -219.0 -216.0 -213.0 -212.0 -211.0 -208.0 -203.0 -204.0 -201.0 -200.0 -199.0 -194.0 -197.0 -192.0 -189.0 -190.0 -185.0 -182.0 -179.0 -177.0 -178.0 -175.0 -174.0 -171.0 -168.0 -169.0 -164.0 -163.0 -162.0 -161.0 -158.0 -155.0 -152.0 -151.0 -150.0 -145.0 -144.0 -139.0 -136.0 -131.0 -132.0 -131.0 -128.0 -125.0 -120.0 -119.0 -116.0 -111.0 -110.0 -109.0 -110.0 -103.0 -104.0 -103.0 -98.0 -93.0 -92.0 -89.0 -90.0 -89.0 -84.0 -83.0 -80.0 -81.0 -78.0 -75.0 -72.0 -69.0 -70.0 -69.0 -66.0 -61.0 -60.0 -62.0 -64.0 -61.0 -58.0 -55.0 -56.0 -54.0 -52.0 -50.0 -45.0 -42.0 -43.0 -40.0 -35.0 -36.0 -33.0 -30.0 -23.0 -22.0 -25.0 -18.0 -19.0 -14.0 -17.0 -14.0 -13.0 -10.0 -9.0 -6.0 -1.0 0.0 5.0 8.0 4.0 4.0 8.0 8.0 8.0 115 -238.0 -235.0 -234.0 -233.0 -230.0 -227.0 -224.0 -223.0 -218.0 -219.0 -216.0 -213.0 -212.0 -211.0 -208.0 -203.0 -204.0 -201.0 -200.0 -197.0 -194.0 -195.0 -192.0 -189.0 -188.0 -185.0 -182.0 -179.0 -177.0 -178.0 -175.0 -174.0 -171.0 -168.0 -169.0 -164.0 -163.0 -162.0 -159.0 -156.0 -155.0 -152.0 -151.0 -148.0 -145.0 -144.0 -139.0 -136.0 -131.0 -132.0 -129.0 -128.0 -123.0 -120.0 -119.0 -114.0 -111.0 -110.0 -109.0 -110.0 -103.0 -104.0 -101.0 -96.0 -93.0 -92.0 -89.0 -90.0 -87.0 -84.0 -83.0 -80.0 -81.0 -76.0 -75.0 -72.0 -69.0 -70.0 -69.0 -66.0 -61.0 -60.0 -63.0 -64.0 -61.0 -58.0 -55.0 -56.0 -52.0 -51.0 -48.0 -43.0 -42.0 -43.0 -40.0 -33.0 -34.0 -31.0 -28.0 -23.0 -22.0 -23.0 -18.0 -19.0 -14.0 -15.0 -14.0 -13.0 -8.0 -7.0 -4.0 -1.0 2.0 5.0 8.0 4.0 6.0 8.0 8.0 116 -241.0 -240.0 -235.0 -234.0 -235.0 -230.0 -229.0 -226.0 -225.0 -218.0 -221.0 -218.0 -215.0 -212.0 -213.0 -210.0 -205.0 -206.0 -201.0 -200.0 -199.0 -194.0 -195.0 -194.0 -191.0 -190.0 -187.0 -184.0 -179.0 -177.0 -180.0 -175.0 -174.0 -171.0 -170.0 -171.0 -166.0 -165.0 -160.0 -159.0 -158.0 -155.0 -154.0 -151.0 -150.0 -145.0 -144.0 -141.0 -138.0 -131.0 -130.0 -131.0 -126.0 -125.0 -122.0 -119.0 -116.0 -111.0 -112.0 -109.0 -110.0 -103.0 -104.0 -101.0 -98.0 -95.0 -94.0 -89.0 -90.0 -87.0 -84.0 -85.0 -80.0 -81.0 -78.0 -77.0 -72.0 -71.0 -70.0 -71.0 -66.0 -63.0 -60.0 -63.0 -64.0 -61.0 -58.0 -55.0 -55.0 -50.0 -49.0 -46.0 -43.0 -42.0 -41.0 -38.0 -31.0 -32.0 -29.0 -28.0 -23.0 -22.0 -23.0 -18.0 -19.0 -14.0 -15.0 -14.0 -11.0 -6.0 -5.0 -4.0 1.0 2.0 5.0 8.0 4.0 8.0 8.0 117 -242.0 -243.0 -238.0 -235.0 -236.0 -233.0 -228.0 -231.0 -226.0 -225.0 -218.0 -221.0 -218.0 -215.0 -212.0 -213.0 -212.0 -205.0 -208.0 -203.0 -200.0 -201.0 -194.0 -193.0 -192.0 -191.0 -190.0 -188.0 -185.0 -181.0 -177.0 -180.0 -177.0 -172.0 -171.0 -172.0 -169.0 -168.0 -163.0 -158.0 -159.0 -160.0 -153.0 -152.0 -151.0 -148.0 -145.0 -144.0 -141.0 -138.0 -131.0 -130.0 -131.0 -124.0 -123.0 -120.0 -121.0 -118.0 -111.0 -114.0 -111.0 -108.0 -103.0 -102.0 -101.0 -100.0 -97.0 -94.0 -89.0 -92.0 -89.0 -84.0 -87.0 -80.0 -81.0 -80.0 -79.0 -72.0 -73.0 -72.0 -71.0 -66.0 -65.0 -60.0 -63.0 -66.0 -63.0 -57.0 -55.0 -55.0 -48.0 -49.0 -48.0 -45.0 -42.0 -39.0 -38.0 -31.0 -30.0 -31.0 -30.0 -23.0 -22.0 -23.0 -18.0 -19.0 -14.0 -15.0 -12.0 -11.0 -4.0 -5.0 -4.0 3.0 0.0 5.0 10.0 6.0 10.0 118 -243.0 -242.0 -241.0 -238.0 -235.0 -236.0 -231.0 -228.0 -229.0 -224.0 -225.0 -218.0 -221.0 -216.0 -215.0 -212.0 -211.0 -210.0 -205.0 -206.0 -203.0 -200.0 -201.0 -194.0 -191.0 -192.0 -189.0 -189.0 -186.0 -185.0 -181.0 -177.0 -180.0 -177.0 -172.0 -171.0 -172.0 -167.0 -166.0 -163.0 -158.0 -159.0 -158.0 -153.0 -152.0 -149.0 -146.0 -143.0 -142.0 -139.0 -136.0 -131.0 -130.0 -129.0 -122.0 -121.0 -120.0 -121.0 -118.0 -111.0 -114.0 -111.0 -106.0 -103.0 -102.0 -101.0 -100.0 -97.0 -94.0 -89.0 -92.0 -89.0 -84.0 -85.0 -80.0 -81.0 -80.0 -79.0 -72.0 -73.0 -72.0 -71.0 -66.0 -65.0 -60.0 -63.0 -64.0 -62.0 -57.0 -54.0 -53.0 -48.0 -49.0 -48.0 -45.0 -42.0 -39.0 -36.0 -31.0 -30.0 -31.0 -28.0 -23.0 -22.0 -21.0 -18.0 -19.0 -14.0 -13.0 -10.0 -9.0 -4.0 -5.0 -2.0 3.0 0.0 5.0 10.0 8.0 119 -246.0 -243.0 -242.0 -241.0 -238.0 -235.0 -234.0 -231.0 -228.0 -227.0 -224.0 -223.0 -218.0 -219.0 -216.0 -215.0 -212.0 -209.0 -210.0 -205.0 -206.0 -203.0 -200.0 -199.0 -194.0 -191.0 -190.0 -188.0 -187.0 -186.0 -185.0 -181.0 -177.0 -178.0 -177.0 -172.0 -171.0 -170.0 -167.0 -164.0 -163.0 -158.0 -159.0 -156.0 -153.0 -152.0 -147.0 -144.0 -141.0 -140.0 -137.0 -136.0 -131.0 -128.0 -127.0 -122.0 -121.0 -120.0 -121.0 -118.0 -111.0 -112.0 -109.0 -104.0 -103.0 -102.0 -99.0 -98.0 -95.0 -94.0 -89.0 -92.0 -89.0 -84.0 -85.0 -80.0 -79.0 -80.0 -77.0 -72.0 -73.0 -72.0 -71.0 -66.0 -65.0 -60.0 -63.0 -63.0 -60.0 -57.0 -54.0 -51.0 -48.0 -49.0 -46.0 -43.0 -40.0 -37.0 -34.0 -31.0 -30.0 -29.0 -28.0 -23.0 -22.0 -21.0 -18.0 -19.0 -14.0 -13.0 -10.0 -9.0 -4.0 -3.0 -2.0 3.0 2.0 7.0 12.0 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験-5.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験-5.html"},{"title":"混合ガウス分布のEMアルゴリズム","text":"クラスタリング で省略した、混合ガウス分布のEMアルゴリズムの計算過程を記述します。 EMアルゴリズム 観測データ \\(\\mathbf{X}=\\{\\mathbf{x}_1,\\ldots,\\mathbf{x}_N\\}\\) に対する対数尤度関数は、 \\((9.7)\\) から以下のように書けます。 （※明示的にパラメータを記載しています。） $$\\ln p\\left(\\mathbf{X}|\\boldsymbol{\\pi,\\mu,\\Sigma}\\right) = \\sum_{n=1}&#94;N\\ln\\left\\{\\sum_{k=1}&#94;K\\pi_k\\mathcal{N}\\left(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k\\right)\\right\\}\\qquad (9.14)$$ E step $$\\begin{aligned} p(z_{k}=1|\\mathbf{x}) &\\equiv \\frac{p(z_{k}=1)p(\\mathbf{x}|z_{k}=1)}{p(\\mathbf{x})}\\qquad (\\because\\text{Bayes' theorem})\\\\ &\\propto p(z_{k}=1)p(\\mathbf{x}|z_{k}=1) \\\\ &=\\pi_k\\mathcal{N}(\\mathbf{x}|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k) \\end{aligned}$$ なので、総和が \\(1\\) になるように正規化を行えば 負担率 が以下のように求まります。 $$\\gamma(z_{k})\\equiv p(z_{k}=1|\\mathbf{x}) =\\frac{\\pi_{k}\\mathcal{N}(\\mathbf{x}|\\mathbf{\\mu_{\\rm{k}}}, \\mathbf{\\Sigma_{\\rm{k}}})}{\\sum_{j=1}&#94;{K}\\pi_{j}\\mathcal{N}(\\mathbf{x}|\\mathbf{\\mu_{\\rm{j}}}, \\mathbf{\\Sigma_{\\rm{j}}})}\\qquad (9.13)$$ ※ なお、この時分母である \\(\\sum_{j=1}&#94;{K}\\pi_{j}\\mathcal{N}(\\mathbf{x}|\\mathbf{\\mu_{\\rm{j}}}, \\mathbf{\\Sigma_{\\rm{j}}})\\) が \\(p(\\mathbf{x})\\) であることは有用です。 （ 生物データマイニング論 第1回 では、これを用いて可視化していました。） Maximization step ※ 対数尤度関数 \\((9.14)\\) を \\(\\ln L\\) と記述します。 \\(\\boldsymbol{\\mu}_k\\) 対数尤度 \\((9.14)\\) を \\(\\boldsymbol{\\mu}_k\\) で微分します。この時 正規分布は \\(e&#94;{\\text{hoge}}\\) という形をしており、微分しても形が変わらないので、 $$\\begin{aligned} \\frac{\\partial\\ln L}{\\partial\\boldsymbol{\\mu}_k} &= \\sum_{i=n}&#94;N \\frac{\\pi_k\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)}{\\sum_j \\pi_j \\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_j,\\boldsymbol{\\Sigma}_j)}\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\\\ &= \\boldsymbol{\\Sigma}_k&#94;{-1}\\sum_{n=1}&#94;N \\gamma_{nk}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\\\ &= 0\\\\ \\therefore\\boldsymbol{\\mu}_k&#94;{\\star} &= \\frac{\\sum_{n=1}&#94;N\\gamma(z_{nk})\\mathbf{x}_n}{\\sum_{n=1}&#94;N\\gamma(z_{nk})} \\qquad (9.17)\\\\ \\end{aligned}$$ と最適解が求まりました。 \\(\\pi_k\\) パラメータ \\(\\pi_k\\) については、 \\(\\sum_{k=1}&#94;K \\pi_k = 1\\) という制約に注意する必要があります。ですが、 隠れマルコフモデルの最尤推定 で行なった能登同様に、ラグランジュの未定乗数 \\(\\lambda\\) を導入すればこの問題は解けます。 $$L_{\\lambda} = \\log L + \\lambda\\left(\\sum_{c=1}&#94;K \\pi_c - 1\\right)$$ の導関数が \\(0\\) となる条件を求める事になるので、 $$\\begin{aligned} \\frac{\\partial L_{\\lambda}}{\\partial\\pi_k} &= \\sum_{n=1}&#94;N \\frac{\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)}{\\sum_k \\pi_k \\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)} + \\lambda\\\\ &= \\sum_{n=1}&#94;N \\frac{\\gamma_{nk}}{\\pi_k} + \\lambda = 0 &\\therefore \\pi_k = -\\frac{1}{\\lambda}\\sum_{n=1}&#94;N \\gamma_{ic}\\\\ \\frac{\\partial L_{\\lambda}}{\\partial\\lambda} &= \\sum_{k=1}&#94;K \\pi_k - 1\\\\ &= \\left(-\\frac{1}{\\lambda}\\sum_{k=1}&#94;K\\sum_{n=1}&#94;N \\gamma_{nk}\\right) - 1 = 0 &\\therefore \\lambda = -n \\end{aligned}$$ より、 $$\\pi_k&#94;{\\star} = \\frac{\\sum_{n=1}&#94;N\\gamma(z_{nk})}{N} \\qquad(9.22)$$ と最適解が求まりました。 \\(\\boldsymbol{\\Sigma}_k\\) \\(\\boldsymbol{\\mu}_k\\) と同様に、対数尤度 \\((9.14)\\) を \\(\\boldsymbol{\\Sigma}_k\\) で微分します。すると、 $$\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\log L = \\sum_{n=1}&#94;N\\frac{\\pi_k\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)}{\\sum_j \\pi_j \\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_j,\\boldsymbol{\\Sigma}_j)}$$ となります。ここで、 \\(\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)\\) を計算すると、 $$\\begin{aligned} &\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)\\\\ =&\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\frac{1}{(2\\pi)&#94;{D/2}}\\frac{1}{|\\boldsymbol{\\Sigma}_k|&#94;{1/2}}\\exp\\left\\{-\\frac{1}{2}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;T\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\right\\}\\\\ =&\\frac{1}{(2\\pi)&#94;{D/2}}\\biggl(\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\frac{1}{|\\boldsymbol{\\Sigma}_k|&#94;{1/2}}\\biggr)\\exp\\left\\{-\\frac{1}{2}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;T\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\right\\}\\\\ &+\\frac{1}{(2\\pi)&#94;{D/2}}\\frac{1}{|\\boldsymbol{\\Sigma}_k|&#94;{1/2}}\\left(\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\exp\\left\\{-\\frac{1}{2}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;T\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\right\\}\\right)\\\\ =&\\frac{1}{(2\\pi)&#94;{D/2}}\\biggl(-\\frac{1}{2}\\biggr)|\\boldsymbol{\\Sigma}_k|&#94;{-1/2}\\boldsymbol{\\Sigma}_k&#94;{-1}\\exp\\left\\{-\\frac{1}{2}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;T\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\right\\}\\quad (\\ast1)\\\\ &+\\frac{1}{(2\\pi)&#94;{D/2}}\\frac{1}{|\\boldsymbol{\\Sigma}_k|&#94;{1/2}}\\frac{1}{2}\\exp\\left\\{-\\frac{1}{2}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;T\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\right\\}\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;{T}\\boldsymbol{\\Sigma}_k&#94;{-1}\\quad (\\ast2)\\\\ =&-\\frac{1}{2}\\boldsymbol{\\Sigma}_k&#94;{-1}\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)+\\frac{1}{2}\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;{T}\\boldsymbol{\\Sigma}_k&#94;{-1}\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)\\\\ =&\\frac{1}{2}\\left\\{\\boldsymbol{\\Sigma}_k&#94;{-1}-\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;{T}\\boldsymbol{\\Sigma}_k&#94;{-1}\\right\\}\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k) \\end{aligned}$$ したがって、 $$ \\boldsymbol{\\Sigma}_k&#94;{\\star}= \\frac{\\sum_{n=1}&#94;N\\gamma(z_{nk})\\left(\\mathbf{x}_n-\\boldsymbol{\\mu}_k\\right)\\left(\\mathbf{x}_n-\\boldsymbol{\\mu}_k\\right)&#94;{\\mathrm{T}}}{\\sum_{n=1}&#94;N\\gamma(z_{nk})} \\qquad (9.19) $$ と最適解が求まりました。 ※ \\(\\ast1,\\ast2\\) の式変形は以下でより詳細に説明します。 が、その前にいくつか基本事項の定義を振り返ります。 行列式 $$\\det A=\\displaystyle\\sum_{\\sigma\\in S_n}\\mathrm{sgn}(\\sigma)\\prod_{i=1}&#94;na_{i\\sigma(i)}=\\displaystyle\\sum_{\\sigma\\in S_n}\\mathrm{sgn}(\\sigma)a_{1\\sigma(1)}a_{2\\sigma(2)}\\cdots a_{n\\sigma(n)}$$ \\(\\sigma\\) は \\(1\\) から \\(n\\) の置換（順列）を表す。 \\(\\mathrm{sgn}(\\sigma)\\) は置換の符号を表す。なお、\b置換の符号は 互\b換の数 に注目しており、奇置換（互換の数が奇数個）なら \\(-1\\) 、偶置換なら \\(+1\\) \b\b 余韻子 \\(n\\) 次正方行列 \\(A := (a_{ij})\\) に対し、 \\(i\\) 行と \\(i\\) 列を \\(1\\) つずつ取り去って作られる小行列を \\(M_{ij}\\) とする。つまり、 $$ M_{ij} = \\small \\left[ \\begin{array}{ccc} a_{11} & \\cdots &a_{1\\hspace{1mm}j-1} & a_{1\\hspace{1mm}j+1} & \\cdots & a_{1n} \\\\ \\vdots & &\\vdots & \\vdots & &\\vdots \\\\ a_{i-1 \\hspace{1mm} 1} & \\cdots &a_{i-1\\hspace{1mm}j-1} & a_{i-1\\hspace{1mm}j+1} & \\cdots & a_{i-1 \\hspace{1mm}n} \\\\ a_{i+1 \\hspace{1mm} 1} & \\cdots &a_{i+1\\hspace{1mm}j-1} & a_{i+1\\hspace{1mm}j+1} & \\cdots & a_{i+1 \\hspace{1mm}n} \\\\ \\vdots & &\\vdots & \\vdots & &\\vdots \\\\ a_{n1} &\\cdots &a_{n\\hspace{1mm}j-1} & a_{n\\hspace{1mm}j+1} &\\cdots &a_{nn} \\end{array} \\right] $$ です。ここで、 \\(\\Delta_{ij}=(-1)&#94;{i+j}|M_{ij}|\\) とすると、以下の 余因子展開 ができます。 \\(A\\) の行列式は \\(j\\) 列に関して、以下のように展開されます。 $$\\det A=\\Delta_{1j}a_{1j}+\\Delta_{2j}a_{2j}+\\cdots+\\Delta_{nj}a_{nj}$$ \\(A\\) の行列式は \\(i\\) 行に関して、以下のように展開されます。 $$\\det A=\\Delta_{i1}a_{i1}+\\Delta_{i2}a_{i2}+\\cdots+\\Delta_{in}a_{in}$$ \b 余韻子行列 \\(n\\) 次正方行列 \\(A := (a_{ij})\\) に対し、 \\((i, j)\\) 余因子を \\((j, i)\\) 成分に持つ行列 $$\\tilde{A} := \\begin{pmatrix}&\\Delta_{11}&\\Delta_{21}&\\cdots&\\Delta_{n1}\\\\&\\Delta_{21}&\\Delta_{22}&\\ldots&\\Delta_{n2}\\\\&\\vdots&\\vdots&\\ddots&\\vdots\\\\&\\Delta_{n1}&\\Delta_{n2}&\\cdots&\\Delta_{nn}\\end{pmatrix}$$ を 余韻子行列 と呼びます。ここで、余韻子展開を考えれば、余韻子行列に関して、 $$\\tilde{A}A=A\\tilde{A}=\\det(A)I_n$$ が成り立つことがわかります。 \\(\\ast1\\) の変形 以上を踏まえると、 \\(\\frac{\\partial\\det(A)}{\\partial a_{ij}} = \\Delta_{ij}\\) なので、 $$\\frac{\\partial|\\Sigma|}{\\partial\\Sigma} =\\tilde\\Sigma = |\\Sigma|\\Sigma&#94;{-1}$$ が成り立ち、 $$\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\frac{1}{|\\boldsymbol{\\Sigma}_k|&#94;{1/2}} =-\\frac{1}{2}|\\boldsymbol{\\Sigma}_k|&#94;{-\\frac{3}{2}}\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\boldsymbol{\\Sigma_k}=-\\frac{1}{2}|\\boldsymbol{\\Sigma}_k|&#94;{-1/2}\\boldsymbol{\\Sigma_k}&#94;{-1}$$ となることがわかります。 トレースと固有値の関係性 【命題】 トレースには、 \\(Tr(A) = \\sum_{k=1}&#94;{n}\\lambda_{k}\\) という関係がある。 トレース： \\(n\\times n\\) の正方行列 \\(A\\) に対して、\b対角成分の和 \\(\\sum_{k=1}&#94;{n}a_{kk}\\) を \\(A\\) のトレースと呼び、 \\(\\mathrm{Tr}(A),\\mathrm{tr}A\\) \b と表す。 【証明】 まず、固有方程式は、 $$\\phi(t) = |A-tI| = \\left|\\begin{array}{cccc} a_{11}-t & a_{12} & \\ldots & a_{1n} \\\\ a_{21} & a_{22}-t & \\ldots & a_{2n} \\\\ \\vdots & \\vdots & \\ddots & \\vdots \\\\ a_{n1} & a_{n2} & \\ldots & a_{nn}-t \\end{array} \\right|$$ である。ここで、 \\(t\\) の係数に着目する。 \\(t&#94;n\\) の係数 これは、対角成分を全て掛け合わせた次の多項式 $$(a_{11}-t)(a_{22}-t)\\ldots(a_{nn}-t)$$ における \\(t&#94;n\\) の係数と等しくなる。よって、係数は「 \\((-1)&#94;n\\) 」 \\(t&#94;{n-1}\\) の係数 これも\b、先ほどの多項式の \\(t&#94;{n-1}\\) の係数と等しくなる。（ \\(\\because\\) 余韻子展開を考える。 \\(\\sigma\\) が全単射のため、１行（列）対角成分ではないものがあると、\b少なくともあと１つは体格成分でないものがあることがわかる。） 定数項 これは、\b余韻子展開を考えれば \\(|A|\\) そのもの。 よって、係数は「 \\((-1)&#94;{n-1}(a_{11}+a_{22}+\\ldots+a_{nn})\\) 」であり、これは対角和を用いて「 $(-1)&#94;{n-1}\\mathrm{Tr}(A) $ 」とも書ける。 一方先ほどの固有方程式は固有値を解に持つ。 つまり、 \\(A\\) の固有値を \\(\\lambda_1\\) 〜 \\(\\lambda_n\\) として、 $$\\phi(t)=(-1)&#94;n(t-\\lambda_1)(t-\\lambda_2)\\cdots(t-\\lambda_n)$$ とかける。（ \\((-1)&#94;n\\) によって、 \\(t&#94;n\\) の係数を合わせている。） この式を展開すると、 \\(t&#94;{n-1}\\) の係数が「 \\((-1)&#94;{n-1}(\\lambda_1+\\lambda_2+\\ldots+\\lambda_n)\\) 」であることから $$\\mathrm{Tr}(A) = \\lambda_1+\\lambda_2+\\ldots+\\lambda_n$$ ※ちなみに、 \\(\\phi(t)=(-1)&#94;n(t-\\lambda_1)(t-\\lambda_2)\\cdots(t-\\lambda_n)\\) の定数項を考えることで、 $$|A| = \\lambda_1\\lambda_2\\ldots\\lambda_n$$ であることもわかる。 トレースの循環性 \\(A\\) を \\(m \\times n\\) 、 \\(B\\) を \\(n \\times m\\) の行列とすると、 \\(AB\\) は \\(m \\times m\\) の行列であり、 $$ \\begin{aligned} \\mathrm{Tr}[AB]&= \\sum_{i=1}&#94;{m} (AB)_{ii} \\\\&= \\sum_{i=1}&#94;{m}\\sum_{j=1}&#94;{n} A_{ij}B_{ji} \\\\&= \\sum_{j=1}&#94;{n} \\sum_{i=1}&#94;{m} B_{ji} A_{ij} \\\\&= \\sum_{j=1}&#94;{n} (BA)_{jj} \\\\&= \\mathrm{Tr}[BA] \\end{aligned} $$ となる。これを応用すれば、以下の 循環性 が証明できる。 \\(A,B,C\\) をそれぞれ \\(m\\times n,n \\times l,l \\times m\\) の行列とするとき、 $$\\begin{aligned} \\mathrm{Tr}[ABC] =& \\mathrm{Tr}[BCA] \\\\=& \\mathrm{Tr}[CAB] \\end{aligned} $$ が成り立つ。（ \\(\\because\\) ２つの\b行列積をセットで考えれば明らか） 逆行列の微分 正則行列 \\(A\\) に対して、 \\(A&#94;{-1}A=I\\) が成立するので、\bこの等式の両辺を \\(A\\) で微分して、 $$\\begin{aligned} \\biggr(\\frac{\\partial }{\\partial A}A&#94;{-1}\\biggl)A + A&#94;{-1}\\biggr(\\frac{\\partial }{\\partial A}A\\biggl) = 0\\\\ \\biggr(\\frac{\\partial A&#94;{-1}}{\\partial A}\\biggl) = -A&#94;{-1}\\biggr(\\frac{\\partial }{\\partial A}A\\biggl)A&#94;{-1} \\end{aligned}$$ シングルエントリ行列 \\((i,j)\\) 成分のみが \\(1\\) で、残りが全て \\(0\\) の行列 \\(\\mathbf{J}&#94;{ij}\\) を シングルエントリ行列 と呼ぶ。なお、\b以下の式が成り立つ。 $$\\mathrm{Tr}\\bigr(\\mathbf{AJ}&#94;{ij}\\bigl)=\\mathbf{A}_{ji}$$ \b \\(2 \\times 2\\) の行列でこれを示す。 $$\\begin{aligned} \\mathrm{Tr}\\bigr(\\mathbf{AJ}&#94;{12}\\bigl)&=\\mathrm{Tr}\\biggr(\\begin{pmatrix}a_{11}&a_{12}\\\\a_{21}&a_{22}\\end{pmatrix}\\begin{pmatrix}0&1\\\\0&0\\end{pmatrix}\\biggl)\\\\ &=\\mathrm{Tr}\\begin{pmatrix}0&a_{11}\\\\0&a_{21}\\end{pmatrix}\\\\ &=a_{21}\\\\ &=\\mathbf{A}_{21} \\end{aligned}$$ \\(\\ast2\\) の変形 以上を踏まえれば、 $$\\begin{aligned} \\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_{ij}}(\\mathbf{x}-\\boldsymbol{\\mu})&#94;T\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu}) &=\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_{ij}}\\mathrm{Tr}\\biggr((\\mathbf{x}-\\boldsymbol{\\mu})&#94;T\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})\\biggl)\\\\ &=\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_{ij}}\\mathrm{Tr}\\biggr(\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\biggl)\\\\ &=\\mathrm{Tr}\\biggr(\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_{ij}}\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\biggl)\\\\ &=\\mathrm{Tr}\\biggr(-\\boldsymbol{\\Sigma}&#94;{-1}\\frac{\\partial\\boldsymbol{\\Sigma}}{\\partial\\boldsymbol{\\Sigma}_{ij}}\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\biggl)\\\\ &=\\mathrm{Tr}\\biggr(-\\boldsymbol{\\Sigma}&#94;{-1}\\mathbf{J}&#94;{ij}\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\biggl)\\\\ &=-\\mathrm{Tr}\\biggr(\\boldsymbol{\\Sigma}&#94;{-1}\\mathbf{J}&#94;{ij}\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\biggl)\\\\ &=-\\mathrm{Tr}\\biggr(\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\boldsymbol{\\Sigma}&#94;{-1}\\mathbf{J}&#94;{ij}\\biggl)\\\\ &=-\\left\\{\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\boldsymbol{\\Sigma}&#94;{-1}\\right\\}_{ji}\\\\ &=-\\left\\{\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\boldsymbol{\\Sigma}&#94;{-1}\\right\\}_{ij}\\\\ \\end{aligned}$$ よって、 $$\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}}(\\mathbf{x}-\\boldsymbol{\\mu})&#94;T\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})=-\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\boldsymbol{\\Sigma}&#94;{-1}$$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-1-2.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-1-2.html"},{"title":"クラスタリング","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) 講義の方針 データ解析アルゴリズムは、生物学の研究に不可欠 R や python のパッケージとして、すぐダウンロードして使うことができる。 しかし、原理を知らずに使うと、アルゴリズムの出す結果を盲信することになり危険。 正しい理解：結果を疑えるようになること。 階層的クラスタリング クラスタリング データ点を クラスタ（互いに類似したグループ） に分割する。 距離尺度：ユークリッド距離、コサイン距離など。 階層的クラスタリング 最初は各点がクラスタとなる。 二つのクラスタを選んで合併していく。 Single Link ：二つのクラスタをまたぐ最近点の距離 chaining により、ゆるいクラスタができる （非推奨） Complete Link ：二つのクラスタをまたぐ最遠点の距離 最も固いクラスタができるが、細かく分け過ぎる傾向がある。 Average Link ：二つのクラスタをまたぐ点対の平均距離 最もバランスがとれており、通常はこれを用いる。 最後は一つのクラスタになる。 デンドログラム ：合併の過程を樹形図の形で表したもの。 K-Means 分割的クラスタリング の一手法。$K$ クラスにデータ点を分割する。 以下を繰り返す。 各データ点 $\\mathbf{x}$ を最も近い中心点 $\\mu_k$ に割り当てて、クラスタ $c_1,\\ldots,c_K$ を作成する。 割当を元に中心点を計算しなおす。 $$\\mu_k = \\sum_{j\\in C_i} \\mathbf{x}_j$$ 実装 In [1]: import numpy as np import matplotlib.pyplot as plt Data. In [2]: np . random . seed ( 0 ) In [3]: N = 30 ; K = 5 vmin = 0 ; vmax = 1 In [4]: # Training Data. data = np . random . uniform ( vmin , vmax , ( N , 2 )) x , y = data . T In [5]: plt . scatter ( x , y ) plt . title ( \"Training Data.\" ) plt . show () In [6]: # Background Color Xs , Ys = np . meshgrid ( np . linspace ( vmin , vmax , 100 ), np . linspace ( vmin , vmax , 100 )) XYs = np . c_ [ Xs . ravel (), Ys . ravel ()] Training. 自作のモジュール （ kerasy.ML.KMeans.KMeans ） を使って学習させます。 In [7]: from kerasy.ML.KMeans import KMeans In [8]: model = KMeans ( K = K , random_state = 0 ) In [9]: model . fit ( data ) Visualization. In [10]: Nfig = len ( model . history ) col = 3 row = Nfig // col + 1 if Nfig % col != 0 else Nfig//col In [11]: # For Visualization. plt_model = KMeans ( K = K ) In [12]: fig = plt . figure ( figsize = ( 6 * col , 4 * row )) for i ,( idx , mu ) in enumerate ( model . history ): # Plot Training Data with respective class color. ax = fig . add_subplot ( row , col , i + 1 ) ax . scatter ( x , y , c = idx ) # Plot Representative points(µk) of each class. mux , muy = mu . T ax . scatter ( mux , muy , marker = 'x' , c = \"red\" , s = 200 ) # Background. plt_model . mu = mu Z , _ = plt_model . predict ( XYs ) Zs = Z . reshape ( Xs . shape ) ax . pcolor ( Xs , Ys , Zs , alpha = 0.2 ) ax . set_xlim ( vmin , vmax ) ax . set_ylim ( vmin , vmax ) ax . set_title ( f \"Iteration. {i:>02} \" ) plt . show () 混合ガウス分布 混合ガウス分布は、次のように混合係数 $\\pi_k$ でガウス分布を線形重ね合わせした形でかける。 $$p(\\mathbf{x}) = \\sum_{k=1}&#94;K\\pi_k\\mathcal{N}\\left(\\mathbf{x}|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k\\right)\\qquad (9.7)$$ ここで、 二値ベクトル（1-of-K符号化法） $\\mathbf{z}$ の周辺分布は、$0\\leq\\pi_k\\leq1$ と $\\sum_{k=1}&#94;K\\pi_k = 1 $ を満たす $\\pi_k$ を用いて、 $$p\\left(\\mathbf{z}\\right) = \\prod_{k=1}&#94;K\\pi_k&#94;{z_k}\\qquad (9.9)$$ と書ける。また、$\\mathbf{z}$ が与えられた時の $\\mathbf{x}$ の事後分布は当然ながら次のガウス分布である。 $$p\\left(\\mathbf{x}|\\mathbf{z}\\right) = \\prod_{k=1}&#94;K\\mathcal{N}\\left(\\mathbf{x}|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k\\right)&#94;{z_k}\\qquad(9.11)$$ EMアルゴリズム 観測データ $\\mathbf{X}=\\{\\mathbf{x}_1,\\ldots,\\mathbf{x}_N\\}$ に対する対数尤度関数は、$(9.7)$ から以下のように書ける。 （※明示的にパラメータを記載しています。） $$\\ln p\\left(\\mathbf{X}|\\boldsymbol{\\pi,\\mu,\\Sigma}\\right) = \\sum_{n=1}&#94;N\\ln\\left\\{\\sum_{k=1}&#94;K\\pi_k\\mathcal{N}\\left(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k\\right)\\right\\}\\qquad (9.14)$$ Expectation step M stepで必要となる $\\gamma(z_{nk})$ を求める。 この値は、$\\mathbf{x}$ が与えられた下での $\\mathbf{z}$ の条件付き確率であり、混合要素 $k$ が $\\mathbf{x}$ の観測を 「説明する」 度合いを表す 負担率(responsibility) として解釈することもできる。 $$ \\begin{aligned} \\gamma(z_{k})\\equiv p(z_{k}=1|\\mathbf{x}) &=\\frac{p(z_{k}=1)p(\\mathbf{x}|z_{k}=1)}{\\sum_{j=1}&#94;{K}p(z_{j}=1)p(\\mathbf{x}|z_{j}=1)}\\\\ &=\\frac{\\pi_{k}\\mathcal{N}(\\mathbf{x}|\\mathbf{\\mu_{\\rm{k}}}, \\mathbf{\\Sigma_{\\rm{k}}})}{\\sum_{j=1}&#94;{K}\\pi_{j}\\mathcal{N}(\\mathbf{x}|\\mathbf{\\mu_{\\rm{j}}}, \\mathbf{\\Sigma_{\\rm{j}}})}\\qquad (9.13) \\end{aligned} $$ Maximization step M stepでは、尤度関数を最大化するように各パラメータの値を更新する。 ※ 導出過程は 混合ガウス分布のEMアルゴリズム に載せています。 $$ \\begin{aligned} \\boldsymbol{\\mu}_k &= \\frac{\\sum_{n=1}&#94;N\\gamma(z_{nk})\\mathbf{x}_n}{\\sum_{n=1}&#94;N\\gamma(z_{nk})} & (9.17)\\\\ \\boldsymbol{\\Sigma}_k &= \\frac{\\sum_{n=1}&#94;N\\gamma(z_{nk})\\left(\\mathbf{x}_n-\\boldsymbol{\\mu}_k\\right)\\left(\\mathbf{x}_n-\\boldsymbol{\\mu}_k\\right)&#94;{\\mathrm{T}}}{\\sum_{n=1}&#94;N\\gamma(z_{nk})} & (9.19)\\\\ \\pi_k &= \\frac{\\sum_{n=1}&#94;N\\gamma(z_{nk})}{N} & (9.22) \\end{aligned} $$ 実装 Data. In [13]: np . random . seed ( 0 ) In [14]: N = 150 ; K = 3 In [15]: # Train Data. data = np . concatenate ([ np . random . multivariate_normal ( mean = [ 0 , 0 ], cov = np . eye ( 2 ), size = int ( N / 3 )), np . random . multivariate_normal ( mean = [ 0 , 5 ], cov = np . eye ( 2 ), size = int ( N / 3 )), np . random . multivariate_normal ( mean = [ 3 , 2 ], cov = np . eye ( 2 ), size = int ( N / 3 )), ]) x , y = data . T In [16]: plt . scatter ( x , y ) plt . title ( \"Training Data.\" ) plt . show () In [17]: # Background Color xmin , ymin = np . min ( data , axis = 0 ) xmax , ymax = np . max ( data , axis = 0 ) Xs , Ys = np . meshgrid ( np . linspace ( xmin , xmax , 100 ), np . linspace ( ymin , ymax , 100 )) XYs = np . c_ [ Xs . ravel (), Ys . ravel ()] Training. 自作のモジュール （ kerasy.ML.MixedDistribution.MixedGaussian ） を使って学習させます。 In [18]: from kerasy.ML.MixedDistribution import MixedGaussian In [19]: model = MixedGaussian ( K = K , random_state = 1234 ) In [20]: model . fit ( data , span = 20 ) Visualization. In [21]: Nfig = len ( model . history ) col = 3 row = Nfig // col + 1 if Nfig % col != 0 else Nfig//col In [22]: # For Visualization. plt_model = MixedGaussian ( K = K ) plt_model . N , plt_model . M = data . shape In [23]: fig = plt . figure ( figsize = ( 6 * col , 4 * row )) for i ,( epoch , idx , mu , S , pi ) in enumerate ( model . history ): # Plot Training Data with respective class color. ax = fig . add_subplot ( row , col , i + 1 ) ax . scatter ( x , y , c = idx ) # Background. plt_model . mu = mu plt_model . S = S plt_model . pi = pi Z = plt_model . predict ( XYs ) Zs = np . sum ( Z , axis = 1 ) . reshape ( Xs . shape ) # Likelihood. ax . pcolor ( Xs , Ys , Zs , alpha = 0.2 ) ax . set_xlim ( xmin , xmax ) ax . set_ylim ( ymin , ymax ) ax . set_title ( f \" {epoch:>02} epochs.\" ) plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-1-1.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-1-1.html"},{"title":"イントロダクション","text":"講師： 山崎俊彦 参考書： CG-ARTS協会発行「ディジタル画像処理」 参考書： R. Szeliski, Computer Vision Algorithms and Applications, Springer (PDF版はインターネット上で無料公開) 講義予定 前半（山崎担当） 画像の操作 画像の特徴抽出・内容理解・構造化 機械学習一般 後半（相澤担当） 画像を撮る：カメラの内部処理・センサ・レンズ・標本化 画像を表現する。色の知覚・表現 画像の基礎的な処理。周波数変換、線形・非線形フィルタリング # 日付 担当 内容 1 9/30(月) 山崎 画像・映像を中心とした現在の技術動向の紹介、低次・領域・局所画像特徴 2 10/7(月) 山崎 特徴選択、特徴表現 3 10/21(月) 山崎 機械学習概論、教師なし学習、クラスタリング 4 10/28(月) 山崎 機械学習 (NN, SVM, RF) 5 11/7(木) 山崎 深層学習 (Deep Neural Networks) 6 11/11(月) 山崎 動画像処理 (ブロックマッチング、背景差分、オプティカルフロー) 7 11/13(水) 山崎 3次元空間情報の取得と処理 8 11/18(月) 相澤 9 11/25(月) 相澤 10 12/9(月) 相澤 11 12/16(月) 相澤 12 12/23(月) 相澤 13 1/@@ テスト パターン認識一般 現在は、90%位が 学習ベース(data-driven) 。残りが解析的手法。最近はこのhybridも。 全体的な流れ 学習(training) 検証(validation)←パラメータ最適化 推論(test, inference) なぜ今 学習ベース なのか？ データの大規模化：インターネット上から大量に収集可。 計算機の進化：ムーアの法則による高速化。さらにはクラウド 労働力のクラウド化 画像特徴 低次特徴量 色ヒストグラム（RGB,HSV,L*a*b*）：単純計算すると \\(256&#94;3\\) 個binができるので、注意。 色共起ヒストグラム（Correlogram）：隣接ピクセルの色を踏まえたヒストグラム 円、コーナー直線の数・大きさ・長さ 物体の円度、曲率等 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"映像メディア工学","url":"https://iwasakishuto.github.io/University/3A/映像メディア工学-1.html","loc":"https://iwasakishuto.github.io/University/3A/映像メディア工学-1.html"},{"title":"matplotlibチートシート","text":"In [1]: import numpy as np import matplotlib.pyplot as plt $N$ 枚の画像を plot Vsize , Hsize = () # 画像の横の長さと縦の長さ。 n_fig = \"画像の枚数\" n_col = \"横に並ぶ数\" n_row = n_fig // n_col + 1 if n_fig % n_col != 0 else n_fig // n_col # 行数を計算。 fig = plt . figure ( figsize = ( Vsize * n_col , Hsize * n_row )) for i , hoge in enumerate ( HOGEs ): ax = fig . add_subplot ( row , col , i + 1 ) \"\"\" 描きたいオブジェクトをプロット \"\"\" plt . tight_layout () plt . show () gifの画像の作成 上のようにやって全ての画像をまとめた一枚の画像を出力しても良いが、 n_fig = \"画像の枚数\" digit = len ( str ( N )) for i , hoge in enumerate ( HOGEs ): ax = fig . add_subplot ( row , col , i + 1 ) plt . figure ( figsize = \"サイズ\" ) \"\"\" 描きたいオブジェクトをプロット \"\"\" plt . savefig ( f \"img{i:>0{digit}}.png\" ) として連番の画像を作成し、それを以下のプログラムでgif画像にした方が見やすい場合もある from PIL import Image N = 30 digit = len ( str ( N )) images = [] for i in range ( N ): img = Image . open ( f \"{i:>0{digit}}.png\" ) images . append ( img ) images [ 0 ] . save ( 'out.gif' , save_all = True , append_images = images [ 1 :], loop = 0 , duration = 300 ) # loop=0: 無限ループ # duration: 一枚あたりの表示時間[ms] cmaps In [2]: cmaps = [ 'Accent' , 'Blues' , 'BrBG' , 'BuGn' , 'BuPu' , 'CMRmap' , 'Dark2' , 'GnBu' , 'Greens' , 'Greys' , 'OrRd' , 'Oranges' , 'PRGn' , 'Paired' , 'Pastel1' , 'Pastel2' , 'PiYG' , 'PuBu' , 'PuBuGn' , 'PuOr' , 'PuRd' , 'Purples' , 'RdBu' , 'RdGy' , 'RdPu' , 'RdYlBu' , 'RdYlGn' , 'Reds' , 'Set1' , 'Set2' , 'Set3' , 'Spectral' , 'Wistia' , 'YlGn' , 'YlGnBu' , 'YlOrBr' , 'YlOrRd' , 'afmhot' , 'autumn' , 'binary' , 'bone' , 'brg' , 'bwr' , 'cividis' , 'cool' , 'coolwarm' , 'copper' , 'cubehelix' , 'flag' , 'gist_earth' , 'gist_gray' , 'gist_heat' , 'gist_ncar' , 'gist_rainbow' , 'gist_stern' , 'gist_yarg' , 'gnuplot' , 'gnuplot2' , 'gray' , 'hot' , 'hsv' , 'inferno' , 'jet' , 'magma' , 'nipy_spectral' , 'ocean' , 'pink' , 'plasma' , 'prism' , 'rainbow' , 'seismic' , 'spring' , 'summer' , 'tab10' , 'tab20' , 'tab20b' , 'tab20c' , 'terrain' , 'viridis' , 'winter' ] In [3]: matrix = np . arange ( 100 ) . reshape ( 10 , 10 ) In [4]: Vsize , Hsize = ( 4 , 4 ) n_fig = len ( cmaps ) n_col = 4 n_row = n_fig // n_col + 1 if n_fig % n_col != 0 else n_fig//n_col In [5]: fig = plt . figure ( figsize = ( Vsize * n_col , Hsize * n_row )) for i , cmap in enumerate ( cmaps ): ax = fig . add_subplot ( n_row , n_col , i + 1 ) ax . matshow ( matrix , cmap = cmap ) ax . set_title ( f \"↓ {cmap} ↓\" , fontsize = 24 ), ax . set_xticks ([]), ax . set_yticks ([]) plt . tight_layout () plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"映像メディア工学","url":"https://iwasakishuto.github.io/University/3A/映像メディア工学-0.html","loc":"https://iwasakishuto.github.io/University/3A/映像メディア工学-0.html"},{"title":"生物物理学 第1回","text":"講師： 能瀬聡直 講義資料： 生物物理学 参考書： 神経科学 -脳の探求- 参考書： ニューロンの生物物理 講義概要 生物物理学とは 遺伝情報の流れ 蛋白質の構造と機能 細胞内タンパク質のダイナミックス 遺伝子操作技術 ゲノム科学とバイオインフォマティックス バイオイメージング、生体分子計測 脳・神経系の生物物理 講義日程 # 日付 担当 1 9/25 能瀬 2 10/2 樋口 3 10/9 樋口 4 10/16 樋口 5 10/23 樋口 6 10/30 樋口 7 11/6 樋口 8 11/20 能瀬 9 11/27 能瀬 10 12/4 樋口 11 12/11 能瀬 12 12/18 能瀬 13 1/8 能瀬 14 1/15 能瀬 生物物理学とは？ 物理の手法で生物を見る。 生体分子の機能や構造の研究。 対象は広範囲、ただし物理的理念を背景にもつ。 生体高分子の構造・機能、脳・神経機構など単なる記述中心の従来の生物学と異なり、論理的な思考法を用い、より普遍的な原理を見いだすことを目指している。 生物物理の代表的発見 DNA二重螺旋構造の発見（1953年、1962年ノーベル生理医学賞） 蛋白質の高次構造の解析（1960年、1962年ノーベル化学賞） 神経活動のイオン機構の解明（1953年、1963年ノーベル生理医学賞） 最近の技術革新 ヒトゲノム計画 ヒトの全遺伝子の設計図解読の終了（2000年） イメージング技術 蛍光蛋白質・レーザー顕微鏡（1990年代） 1分子観測・1分子操作 溶液中での蛋白質1分子の観察（1990年代） 神経回路の作動原理の解明に向けた従来の3つのアプローチ 解剖学(Anatomy) 神経の配線を明らかにする。 生理学(Physiology) 神経活動を測定・操作する。 理論 神経活動パターンから原理を抽出 Part1. Introduction 脳神経系における情報の流れ ニューロンの構成 脳とコンピューター 半導体 ↔︎ 半導体素子 ↔︎ 集積回路 ↔︎ コンピューター 分子 ↔︎ 神経細胞 グリア細胞 ↔︎ 神経回路 ↔︎ 脳 活動電位の特徴 全か無か： \\(\\mathrm{Na}\\) チャネル活性化に閾値がある。 一過性： \\(\\mathrm{Na}\\) チャネル不活性化 確実に伝播 一体、どのような構造を持った神経回路の中を、どのように信号が伝わることで特定の演算が創発されるのか。 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物物理学","url":"https://iwasakishuto.github.io/University/3A/生物物理学-1.html","loc":"https://iwasakishuto.github.io/University/3A/生物物理学-1.html"},{"title":"HMMをpythonで実装","text":"（kerasy.ML.HMM.HMM） の使い方 自作のモジュール （kerasy.ML.HMM.HMM） を使って実装をします。 In [1]: from kerasy.ML.HMM import HMM In [2]: model = HMM () In [3]: # 以下のようなパラメタファイルを読み込む。 ! cat params.json { \"M\": 4, \"K\": 4, \"basetypes\": [\"a\", \"c\", \"g\", \"u\"], \"pi\": [0.7, 0.1, 0.1, 0.1], \"A\": [[0.8, 0.1, 0.1, 0.0], [0.0, 0.8, 0.1, 0.1], [0.1, 0.0, 0.8, 0.1], [0.1, 0.0, 0.1, 0.8]], \"phi\": [[0.4, 0.1, 0.1, 0.4], [0.25, 0.25, 0.25, 0.25], [0.1, 0.4, 0.4, 0.1], [0.3, 0.2, 0.2, 0.3]] } In [4]: model . load_params ( \"params.json\" ) In [5]: # インスタンスに読み込まれた各種パラメータ model . params () 【Parameter】 ===================================== *initial state z(1) z(2) z(3) z(4) 0.7000 0.1000 0.1000 0.1000 ------------------------------------- *transition probability matrix [States after transition] z(1) z(2) z(3) z(4) z(1) 0.8000 0.1000 0.1000 0.0000 z(2) 0.0000 0.8000 0.1000 0.1000 z(3) 0.1000 0.0000 0.8000 0.1000 z(4) 0.1000 0.0000 0.1000 0.8000 ------------------------------------- *emission probability z(1) z(2) z(3) z(4) a 0.4000 0.2500 0.1000 0.3000 c 0.1000 0.2500 0.4000 0.2000 g 0.1000 0.2500 0.4000 0.2000 u 0.4000 0.2500 0.1000 0.3000 In [6]: # なお、この時以下のような辞書を同時に作成しています。 print ( model . base2int ) print ( model . int2base ) {'a': 0, 'c': 1, 'g': 2, 'u': 3} {0: 'a', 1: 'c', 2: 'g', 3: 'u'} In [7]: # また、パラメータはnumpyの行列の形で読み込まれています。 print ( type ( model . pi )) print ( type ( model . A )) print ( type ( model . phi )) In [8]: # 以下のようにすれば、学習したパラメタを同じ形式で出力することができます。 model . save_params ( \"out.json\" ) Viterbi algorithm HMMのViterbiアルゴリズムを実装して、尤もらしいサンプル配列の隠れ状態列を推定します。 In [9]: from kerasy.utils.bio import alignStr , readMonoSeq , readMultiSeq # ファイルの中身 cat seq1.fasta ``` sample-RNA gagaguccuauacaaacuccaaaacacugagaccauacaaguaaaaccagucgagaaaau agucaacagcacccccguugcguauccugcggagaaugccucgcuaucuguccucacgau uggucuaaccgcucggcucaggcgugugggccugaaauccgggcagcaaacuacgguaag uuuucgcguaucaaaaauacauugaugaauguucgcuauuagccgggucgacguuuugau ggugacuaggagcgaaagugauuuuuuugugagcggugucauagcaggggaucaucugag gugaacuauggacgggucagucgcccucauuggguuuguuacucagauacgugacacacg uaaggucgcacggcaguagugauccacgagaaucggcacucuuacgagcaagucuauagc gacguggcuugcuauuaagacaguaauggacucggacagcuaguacgcgacuaaucauuu ucgcacgccaucacacuuucaacccaggagcuuacaguguuccaggggccaggcuugggg cagccucuguggaagugcgagggcugcgcuaguguacauuagccgacccucagacgugaa auaaagagaugcugcugguugcacagugagcaacguucacucggcaacccgucggauacc ``` In [10]: # ファイルの読み込み seq1 = readMonoSeq ( 'seq1.fasta' ) print ( f \"Input Sequence: \\n {alignStr(seq1[0])}\" ) Input Sequence: gagaguccuauacaaacuccaaaacacugagaccauacaaguaaaaccagucgagaaaau agucaacagcacccccguugcguauccugcggagaaugccucgcuaucuguccucacgau uggucuaaccgcucggcucaggcgugugggccugaaauccgggcagcaaacuacgguaag uuuucgcguaucaaaaauacauugaugaauguucgcuauuagccgggucgacguuuugau ggugacuaggagcgaaagugauuuuuuugugagcggugucauagcaggggaucaucugag gugaacuauggacgggucagucgcccucauuggguuuguuacucagauacgugacacacg uaaggucgcacggcaguagugauccacgagaaucggcacucuuacgagcaagucuauagc gacguggcuugcuauuaagacaguaauggacucggacagcuaguacgcgacuaaucauuu ucgcacgccaucacacuuucaacccaggagcuuacaguguuccaggggccaggcuugggg cagccucuguggaagugcgagggcugcgcuaguguacauuagccgacccucagacgugaa auaaagagaugcugcugguugcacagugagcaacguucacucggcaacccgucggauacc In [11]: # この時、文字列をリストに格納しています。 print ( type ( seq1 )) In [12]: pred1 = model . predict ( sequences = seq1 , asai = True ) In [13]: # 変数asaiは、隠れ状態がZero-based numberingかどうかを決めるものであり、特に意味はありません。（課題の形式に対応したものがasai=True.） print ( f \"Hidden Indexes: \\n {alignStr(pred1[0])}\" ) Hidden Indexesn [14]: # もちろんパラメタの更新は行われていません。 model . params () 【Parameter】 ===================================== *initial state z(1) z(2) z(3) z(4) 0.7000 0.1000 0.1000 0.1000 ------------------------------------- *transition probability matrix [States after transition] z(1) z(2) z(3) z(4) z(1) 0.8000 0.1000 0.1000 0.0000 z(2) 0.0000 0.8000 0.1000 0.1000 z(3) 0.1000 0.0000 0.8000 0.1000 z(4) 0.1000 0.0000 0.1000 0.8000 ------------------------------------- *emission probability z(1) z(2) z(3) z(4) a 0.4000 0.2500 0.1000 0.3000 c 0.1000 0.2500 0.4000 0.2000 g 0.1000 0.2500 0.4000 0.2000 u 0.4000 0.2500 0.1000 0.3000 Baum-Welch algorithm HMMのBaum-Welchアルゴリズムを実装して、モデルを学習させてます。 In [15]: model = HMM () model . load_params ( \"params2.json\" ) model . params () # 文字が \"acgu\"→\"ACGT\"に変わっただけです。 【Parameter】 ===================================== *initial state z(1) z(2) z(3) z(4) 0.7000 0.1000 0.1000 0.1000 ------------------------------------- *transition probability matrix [States after transition] z(1) z(2) z(3) z(4) z(1) 0.8000 0.1000 0.1000 0.0000 z(2) 0.0000 0.8000 0.1000 0.1000 z(3) 0.1000 0.0000 0.8000 0.1000 z(4) 0.1000 0.0000 0.1000 0.8000 ------------------------------------- *emission probability z(1) z(2) z(3) z(4) A 0.4000 0.2500 0.1000 0.3000 C 0.1000 0.2500 0.4000 0.2000 G 0.1000 0.2500 0.4000 0.2000 T 0.4000 0.2500 0.1000 0.3000 cat seq2.txt ``` >Vitis_vinifera_chr14.trna15-AlaAGC (28776087-28776159) Ala (AGC) 73 bp Sc: 68.12 GGGGATGTAGCTCAGATGGTAGAGCGCTCGCTTAGCATGCGAGAGGTACGGGGATCGATA CCCCGCATCTCCA >Vitis_vinifera_chr13.trna5-ArgCCG (2691241-2691313) Arg (CCG) 73 bp Sc: 83.85 GATCGCATAGCGGAGTGGATATCGCGTTAGACTCCGAATCTAAAGGTCGTGGGTTCGAAT CCCACTGCGATCG >Vitis_vinifera_chr3.trna6-GlnCTG (5807449-5807520) Gln (CTG) 72 bp Sc: 71.93 GGTCCCATGGTCTAGTGGTCAGGACATTGGACTCTGAATCCAGTAACCCGAGTTCAAATC TCGGTGGGACCT >Vitis_vinifera_chr14.trna19-LeuAAG (25640120-25640040) Leu (AAG) 81 bp Sc: 62.71 GTGGAGATGGCCGAGTTGGTCTAAGGCGCCAGATTAAGGTTCTTGTCCGAAAGGGCGTGG GTTCAAATCCCACTCTCCACA >Vitis_vinifera_chr18.trna9-MetCAT (2896034-2896118) Met (CAT) 85 bp Sc: 60.66 GGGGTGGTGGCGCAGTTGGCTAGCGCGTAGGTCTCATAGCTTCCGAGTAATCCTGAGGTC GAGAGTTCGAGCCTCTCTCACCCCA >Vitis_vinifera_chr3.trna30-ProTGG (7498415-7498344) Pro (TGG) 72 bp Sc: 68.98 GGGCATTTGGTCTAGTGGTATGATTCTCGCTTTGGGTGCGAGAGGTCCCGAGTTCGATTC TCGGAATGACCC >Vitis_vinifera_chr5.trna13-GluTTC (21745120-21745048) Glu (TTC) 73 bp Sc: 36.67 AGTCCCATAGCCTAGTTGGTCGAGCACAAGGTTTTCAATCTTGTGGTCGTGGGTTCGAGC CCTATTGGTGGTT >Vitis_vinifera_chr5.trna3-TyrGTA (7422575-7422666) Tyr (GTA) 92 bp Sc: 33.68 CCGATCTTAACTCAATTGGTAGAGCAGAGGACCGTAGTGGGGTTGACCCAATAGATATCC TTAGGTCGTTAGTTTGAATCCAACAGGTCTAA >Vitis_vinifera_chr1.trna8-ValCAC (11396083-11396156) Val (CAC) 74 bp Sc: 66.86 GTCTAGGTGGTATAGTTGGTTATCACGCTAGTCTCACACACTAGAGGTCCCTAGTTCGAA CCCAGGCTCAGATA >Vitis_vinifera_chr14.trna2-SerTGA (4021381-4021462) Ser (TGA) 82 bp Sc: 80.82 GTCGATATGTCCGAGTGGTTAAGGAGACAGACTTGAAATCTGTTGGGCTTCGCCCGCGCA GGTTCGAACCCTGCTGTCGACG ``` In [16]: seq2 = readMultiSeq ( 'seq2.txt' ) In [17]: for i , seq in enumerate ( seq2 ): print ( f \"No. {i:>02} \\n {alignStr(seq, width=45)}\" ) No.00 GGGGATGTAGCTCAGATGGTAGAGCGCTCGCTTAGCATGCGAGAG GTACGGGGATCGATACCCCGCATCTCCA No.01 GATCGCATAGCGGAGTGGATATCGCGTTAGACTCCGAATCTAAAG GTCGTGGGTTCGAATCCCACTGCGATCG No.02 GGTCCCATGGTCTAGTGGTCAGGACATTGGACTCTGAATCCAGTA ACCCGAGTTCAAATCTCGGTGGGACCT No.03 GTGGAGATGGCCGAGTTGGTCTAAGGCGCCAGATTAAGGTTCTTG TCCGAAAGGGCGTGGGTTCAAATCCCACTCTCCACA No.04 GGGGTGGTGGCGCAGTTGGCTAGCGCGTAGGTCTCATAGCTTCCG AGTAATCCTGAGGTCGAGAGTTCGAGCCTCTCTCACCCCA No.05 GGGCATTTGGTCTAGTGGTATGATTCTCGCTTTGGGTGCGAGAGG TCCCGAGTTCGATTCTCGGAATGACCC No.06 AGTCCCATAGCCTAGTTGGTCGAGCACAAGGTTTTCAATCTTGTG GTCGTGGGTTCGAGCCCTATTGGTGGTT No.07 CCGATCTTAACTCAATTGGTAGAGCAGAGGACCGTAGTGGGGTTG ACCCAATAGATATCCTTAGGTCGTTAGTTTGAATCCAACAGGTCT AA No.08 GTCTAGGTGGTATAGTTGGTTATCACGCTAGTCTCACACACTAGA GGTCCCTAGTTCGAACCCAGGCTCAGATA No.09 GTCGATATGTCCGAGTGGTTAAGGAGACAGACTTGAAATCTGTTG GGCTTCGCCCGCGCAGGTTCGAACCCTGCTGTCGACG In [18]: # 学習させる。 model . fit ( sequences = seq2 , epochs = 2000 , verbose = False ) In [19]: import matplotlib.pyplot as plt In [20]: def plotHistory ( model ): \"\"\" 学習の過程をプロットする関数 \"\"\" plt . plot ( model . history ) plt . title ( f \"Mean Log Likelihood Transition (eoochs= {model.epoch} )\" ) plt . xlabel ( \"epochs\" ) plt . ylabel ( \"Mean Log Likelihood\" ) plt . show () In [21]: plotHistory ( model ) In [22]: model . params () 【Parameter】 ===================================== *initial state z(1) z(2) z(3) z(4) 0.1024 0.0000 0.8976 0.0000 ------------------------------------- *transition probability matrix [States after transition] z(1) z(2) z(3) z(4) z(1) 0.2819 0.7181 0.0000 0.0000 z(2) 0.0000 0.5670 0.0000 0.4330 z(3) 0.0521 0.0000 0.3415 0.6064 z(4) 0.5158 0.0000 0.0000 0.4842 ------------------------------------- *emission probability z(1) z(2) z(3) z(4) A 0.3436 0.3099 0.1059 0.0055 C 0.2538 0.0592 0.0970 0.4297 G 0.4026 0.4418 0.7971 0.0345 T 0.0000 0.1891 0.0000 0.5304 ※ 隠れ状態ごとにかなり偏った遷移を行なう。 また、 遷移行列の対角成分がそこまで大きい値では無い。 → 特定の構造が、 ある程度の長さのゆとりを持って 繰り返されていると予想される。 In [23]: pred2 = model . predict ( sequences = seq2 , asai = True ) In [24]: for i , pred in enumerate ( pred2 ): print ( f \"No. {i:>02} Hidden Indexes: \\n {alignStr(pred, width=45)}\" ) No.00 Hidden Indexes: 333334122244412241241222224412444124122412222 2411222224412224441241244441 No.01 Hidden Indexes: 334411241241222412241241124412244441224441222 2412412244412244412441122441 No.02 Hidden Indexes: 334441241244412412441222412412244441224441241 244412244412244441241222444 No.03 Hidden Indexes: 341222241244122441244412222244122441222444441 244122222241222244412244412444441241 No.04 Hidden Indexes: 333341241241122441244124112412244412412444441 2241244441222441222244412244444441244441 No.05 Hidden Indexes: 333412441244412412412224444124444122224122222 444412244412444441222412444 No.06 Hidden Indexes: 334441241244412441244122411222244444124444122 2412412244412244441241241244 No.07 Hidden Indexes: 341244441244412441241222412222241241241222441 244412412241244441224124412444122444124122444 12 No.08 Hidden Indexes: 344412241241222441244124112441244412411244122 22444441244412244412244412241 No.09 Hidden Indexes: 344124122444122412441222222412244412224441241 2244412444112412244412244441122441241 補足：上記プログラムにバグがないかの確認 Baum-Welchアルゴリズムが正しく実装できていたか、極端な配列を学習させることで確認します。 In [25]: model = HMM () model . load_params ( \"params3.json\" ) model . params () 【Parameter】 ============================== *initial state z(1) z(2) z(3) 0.7000 0.1000 0.2000 ------------------------------ *transition probability matrix [States after transition] z(1) z(2) z(3) z(1) 0.8000 0.1000 0.1000 z(2) 0.1000 0.8000 0.1000 z(3) 0.1000 0.1000 0.1000 ------------------------------ *emission probability z(1) z(2) z(3) A 0.4000 0.2500 0.1000 C 0.1000 0.2500 0.4000 G 0.1000 0.2500 0.4000 T 0.4000 0.2500 0.1000 In [26]: seq_extreme = readMonoSeq ( 'seq3.txt' ) In [27]: # かなり極端な配列の例で実装してみる。 print ( f \"Input Sequence: \\n {alignStr(seq_extreme[0])}\" ) Input Sequence: TCTTTTTCCTCCTCTCTCCTTTCCCTCTTTTCCCTTCTTCTCTCCCTTTTCCTTCTCTTC TCTCTTTTCTTCCCCTTTTCCTTTTCTCCTCCCTCCCTTTCTTCCCTCCTTCCTCCCCCC CTCCCCTTTCCTTCCTTTCTCCTTCTCCCCATATGGCCATTTACTTCAGCTGATAGACAC CGAGTAACAACAATAAAGCGTTAGGTGGACGAATGCTCTACTCTGACCTCTAGCTTGTGG GTTCGCGGCTTGCCGAACGCTGGCCTCTGCCCGTCGAACCAATAAATGTTTATCCAGGAC ACCCCGTTCTTTGGTGATATCCCTCGCTCGAGTTATAGCATTGAAACCTCCATATCCGGC GATAAGAGCTACGGACCGTATACTGGGCGCCGGTAATTGGTTGCACTCGCCCTCGGTCTT TTTCTTTTTGGTTTAGCAGAGCAAGGCGTGGAAAAGGAGAGAGGGAGAAAAGGGAAAGGG AAAAGAGGAGAAGAAAGAAAAAGGAAGGGGGGAAGAGGAGAGAAGGGAAGGGAAGGGGGA GAAAGAGGGAAAGAGGAGAAAAAAGGAGGGGGAAGAAGGAAGGGGGAAAGGGGGGGAAAG 上の配列は、以下の構造を持っていることがわかります。 index type 1~150 pyrimidine base 151~450 both 451~600 purine base In [28]: model . fit ( sequences = seq_extreme , epochs = 100 , verbose = False ) In [29]: plotHistory ( model ) In [30]: model . params () 【Parameter】 ============================== *initial state z(1) z(2) z(3) 1.0000 0.0000 0.0000 ------------------------------ *transition probability matrix [States after transition] z(1) z(2) z(3) z(1) 0.9933 0.0000 0.0067 z(2) 0.0000 1.0000 0.0000 z(3) 0.0000 0.0033 0.9967 ------------------------------ *emission probability z(1) z(2) z(3) A 0.0000 0.4851 0.2199 C 0.5034 0.0000 0.2627 G 0.0000 0.5149 0.2415 T 0.4966 0.0000 0.2760 In [31]: pred_extreme = model . predict ( sequences = seq_extreme ) In [32]: print ( f \"Hidden Indexes: \\n {alignStr(pred_extreme[0])}\" ) Hidden Indexesうまく傾向をつかんでいることから、学習アルゴリズムに大きな誤りはなさそうです。 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験-4.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験-4.html"},{"title":"生物統計論 第1回","text":"講師： 木立尚孝 講義概要 09/27 (Fri) 10:25-12:10 10/04 (Fri) 10:25-12:10 10/11 (Fri) 10:25-12:10 10/18 (Fri) 10:25-12:10 10/25 (Fri) 10:25-12:10 11/08 (Fri) 10:25-12:10 11/15 (Fri) 10:25-11:30(Lecture) / 11:30-12:10: (Test) Section1.1 STATISTICAL ANALYSIS Genomic data has recently become available, so the analyzing methods still its infancy at the century scale. It is very important how much information can be extracted from genomic and other omic data. Data-driven Research Development of measurement, communication, computing technologies. data science, e-science Statistics, computer skill, artificial intelligence, machine learning. Statistical Analysis Subjects and measurements are often conclude the random events , such as noise. Aiming for finding the \"True\" distribution, and inferencing on that distribution. Power of Statistical Methods Amount of information we can extract \"Many and high\" / \"Few or low\" quality Event infinite number of data cannot answer all questions. ex) we couldn't answer \"what is the number of eyes on the next dice.\" Data dependency. Section1.2 PROBABILITY DEFINITIONS Probability: Mathematical Probability: The probability of an event consisting of n out of m possible equally likely occurrences, defined to be n / m Statistical Probability: Each event is random, but if you repeat it a lot, you can see the probability that each event occurs. Subjective Probability: A type of probability derived from an individual's personal judgment or own experience about whether a specific outcome is likely to occur. ※ Mathematical Probability is the most strict and basic. Probability space \\(\\left(\\Omega, E, P\\right)\\) $$\\begin{aligned}&\\Omega: \\text{Set, Samplemspace}\\\\&E: \\text{Events,}\\sigma\\text{-algebra}\\\\&P: \\text{Probability measure}\\end{aligned}$$ Sample Space The sets of elementary events. ex.) The number of eyes on the dice. All possible genomes. All possible gene expression profiles \\(\\omega_i\\in\\Omega\\) is the identifier of possible individual stochastic phenomena. \\(\\sigma\\) -algebra $$ \\begin{aligned} &\\varepsilon= \\left\\{E_1,E_2,\\cdots|E_i\\subseteq\\Omega:\\text{event}:\\sigma\\text{-algebra} \\right\\}\\\\ &\\Rightarrow \\varnothing,\\Omega,\\left(E_i\\setminus E_j\\right),\\left(\\bigcup_{i=1}&#94;{\\infty}E_i\\right),\\left(\\bigcap_{i=1}&#94;{\\infty}E_i\\right)\\in\\varepsilon \\end{aligned} $$ The sets of Events. Each event \\(E_i\\subseteq\\Omega\\) Include Empty set \\(\\varnothing\\) , universal set \\(\\Omega\\) Closure to variable \"Set Operation\". (ex. Union, intersection, complement) example) discrete set Real set Power set Borel set \\(\\mathcal{A}\\) Probability measure $$\\begin{aligned}&\\mathbb{P} : \\mathcal{E} \\rightarrow \\mathbb{R} \\\\& 0 \\leq \\mathbb{P}(E) \\leq 1, E \\in \\mathcal{E} \\\\&\\mathbb{P}(\\Omega)=1, \\mathbb{P}(\\varnothing)=0 \\\\&\\text { For } E_{1}, E_{2}, \\cdots \\in \\mathcal{E}, \\text{ s.t. } E_{i} \\cap E_{j}=\\varnothing, \\forall i \\neq j \\\\&\\mathbb{P}\\left(\\bigcup_{i=1}&#94;{\\infty} E_{i}\\right)=\\sum_{i=1}&#94;{\\infty} \\mathbb{P}\\left(E_{i}\\right)\\end{aligned}$$ Each event is assigned a value that indicates the likelihood or probability of occurrence. Random variable $$\\begin{aligned}X: &\\text{random variable}\\\\\\Leftrightarrow &X : \\Omega \\rightarrow \\mathbb{R} \\\\ &\\text { s.t. } X&#94;{-1}(A) \\in \\mathcal{E}, \\forall A \\in \\mathcal{A} \\\\&X&#94;{-1}(A) :=\\{\\omega \\in \\Omega \\mid X(\\omega) \\in A\\}\\end{aligned}$$ Section1.3 PROBABILITY TERMS AND PROPERTIES Probability distribution function \\(F_x\\) (cumulative distribution) Probability density function \\(f_x\\) $$F_x\\left(x+dx\\right)-F_x\\left(x\\right)=:f_x(x)dx$$ Conditional Probability Joint Probability distribution $$(X,Y): \\Omega\\rightarrow\\mathbb{R}&#94;2; (X,Y)(\\omega) = \\left(X(\\omega),Y(\\omega)\\right)\\\\\\left(X,Y\\right)&#94;{-1}(A) = \\left\\{\\omega\\in\\Omega|\\left(X(\\omega),Y(\\omega)\\right)\\in A\\right\\}$$ Independent random variables Expected Value Variance Covariance: $$\\begin{cases}X,Y: \\text{independent random variables}\\Rightarrow \\mathrm{Cov}(X,Y) = 0\\\\X,Y: \\text{independent random variables}\\not\\Leftarrow \\mathrm{Cov}(X,Y) = 0 \\end{cases}$$ Indicator Function: $$\\mathbb{I}_A(x)=\\begin{cases}1 & x\\in A\\\\0 & x\\notin A\\end{cases},A\\in\\mathcal{A}$$ Marginalization Section1.4 PROBABILITY DISTRIBUTIONS Look Here!! if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物統計論","url":"https://iwasakishuto.github.io/University/3A/生物統計論-1.html","loc":"https://iwasakishuto.github.io/University/3A/生物統計論-1.html"},{"title":"生物統計論 第0回","text":"Section1.4 PROBABILITY DISTRIBUTIONS In [1]: import numpy as np import collections import matplotlib.pyplot as plt In [2]: N = 100000 Bernoulli Distribution In [3]: def BernoulliVar ( q , N , seed = None ): rng = np . random . RandomState ( seed ) if seed is not None else np . random return np . var ( rng . rand ( N ) < q ) In [4]: qs = np . linspace ( 0 , 1 , 1000 ) In [5]: probs = [ BernoulliVar ( q , N ) for q in qs ] In [6]: plt . title ( \"Bernoulli distribution\" ) plt . plot ( qs , probs , label = \"$Var(X)$\" ) plt . xlabel ( \"q\" ) plt . ylabel ( \"$Var(X)$\" ) plt . legend () plt . show () Binomial Distribution In [7]: def BinomialProb ( n , p , N , seed = None , color = None , ax = None ): if ax == None : fig , ax = plt . subplots () rng = np . random . RandomState ( seed ) if seed is not None else np . random counter = collections . Counter ( rng . binomial ( n , p , N )) count , freqs = zip ( * sorted ( counter . most_common ())) probs = [ freq / N for freq in freqs ] ax . plot ( count , probs , color = color , label = f \"p= {p} and n= {n} \" ) ax . scatter ( count , probs , color = color ) return ax In [8]: ax = BinomialProb ( 20 , 0.5 , N , seed = 0 , color = \"blue\" ) ax = BinomialProb ( 20 , 0.7 , N , seed = 0 , color = \"green\" , ax = ax ) ax = BinomialProb ( 40 , 0.5 , N , seed = 0 , color = \"red\" , ax = ax ) plt . legend () plt . show () Normal Distribution In [9]: from scipy import stats In [10]: def NormalProb ( mu , sigma ): X = np . arange ( mu - 3.5 * sigma , mu + 3.5 * sigma , sigma / 50 ) Y = stats . norm . pdf ( X , mu , sigma ) for i in np . arange ( - 3 , 4 , 1 ): idx = np . argmin ( abs ( X - ( mu + i * sigma ))) plt . plot ([ X [ idx ], X [ idx ]], [ 0 , Y [ idx ]], 'k-' ) plt . scatter ( X [ idx ], Y [ idx ], color = \"black\" ) plt . plot ( X , Y , color = \"black\" ) In [11]: NormalProb ( mu = 0 , sigma = 0.1 ) Multivariate Normal Distribution In [12]: from scipy.stats import multivariate_normal In [13]: x , y = np . mgrid [ - 3 : 3.5 : . 01 , - 3 : 3 : . 01 ] pos = np . dstack (( x , y )) rv = multivariate_normal ([ 0.5 , - 0.2 ], [[ 2.0 , 2.3 ], [ 0.3 , 0.8 ]]) plt . contourf ( x , y , rv . pdf ( pos )) plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物統計論","url":"https://iwasakishuto.github.io/University/3A/生物統計論-0.html","loc":"https://iwasakishuto.github.io/University/3A/生物統計論-0.html"},{"title":"HMMのスケーリング","text":"HMMを実装する際に課題となるのが、forward-algorithm で \\(\\alpha\\) を再帰的に求める際に、 \\(\\alpha\\left(\\mathbf{z}_{n-1}\\right)\\) に \\(p(\\mathbf{z}_n|\\mathbf{z}_{n-1})\\) と \\(p(\\mathbf{x}_n|\\mathbf{z}_n)\\) をかけるため、値が非常に小さくなり、計算機の ダイナミックレンジ を超えてしまうことです。 そこで、ここでは \\(\\alpha\\left(\\mathbf{z}_{n}\\right)\\) と \\(\\beta\\left(\\mathbf{z}_{n}\\right)\\) にスケーリングを施し、それらの値が \\(1\\) のオーダーに止まるようにする手法を説明します。 forward-backward \\(\\alpha,\\beta\\) forward-backward algorithm で用いられていた \\(\\alpha,\\beta\\) は以下のように定義されていました。 $$ \\begin{aligned} \\alpha\\left(\\mathbf{z}_{n}\\right) & \\equiv p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}, \\mathbf{z}_{n}\\right) & (13.34)\\\\ \\beta\\left(\\mathbf{z}_{n}\\right) & \\equiv p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right) & (13.35) \\end{aligned} $$ Scaling factors まず、スケーリングされた \\(\\alpha,\\beta\\) は以下のように表されます。スケーリングによって、 \\(\\alpha\\) は高々 \\(K\\) 個の変数上の確率分布 、 \\(\\beta\\) は2つの条件付き確率の比 になることがわかります。 $$ \\begin{aligned} \\widehat{\\alpha}\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)=\\frac{\\alpha\\left(\\mathbf{z}_{n}\\right)}{p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)} & (13.55)\\\\ \\widehat{\\beta}\\left(\\mathbf{z}_{n}\\right) &=\\frac{p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right)}{p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)}=\\frac{\\beta\\left(\\mathbf{z}_{n}\\right)}{p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)} & (13.61) \\end{aligned} $$ ここで、これらと \\(\\alpha,\\beta\\) を関連付けるためのスケーリング係数 \\(c\\) を導入します。 $$ c_{n}=p\\left(\\mathbf{x}_{n} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1}\\right)\\qquad (13.56) $$ すると、 $$ \\begin{aligned} p\\left(\\mathbf{x}_1,\\ldots,\\mathbf{x}_n\\right) &= p\\left(\\mathbf{x}_n | \\mathbf{x}_1,\\ldots,\\mathbf{x}_{n-1}\\right)\\cdots p\\left(\\mathbf{x}_3 | \\mathbf{x}_1,\\mathbf{x}_{2}\\right)p\\left(\\mathbf{x}_2 | \\mathbf{x}_1\\right)p(\\mathbf{x}_1)\\\\ &= c_n\\cdots c_3c_2c_1\\\\ &= \\prod_{m=1}&#94;{n} c_{m} \\end{aligned}\\qquad (13.58) $$ と展開することができるので、 $$ \\begin{aligned} \\alpha\\left(\\mathbf{z}_{n}\\right)&=p\\left(\\mathbf{z}_{n} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right) p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)=\\left(\\prod_{m=1}&#94;{n} c_{m}\\right) \\widehat{\\alpha}\\left(\\mathbf{z}_{n}\\right) & (13.58)\\\\ \\beta\\left(\\mathbf{z}_{n}\\right)&=p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)\\widehat{\\beta}\\left(\\mathbf{z}_{n}\\right) = \\left(\\prod_{m=n+1}&#94;{N} c_{m}\\right) \\widehat{\\beta}\\left(\\mathbf{z}_{n}\\right) & (13.60) \\end{aligned} $$ と対応関係がわかります。 \\(\\gamma,\\xi\\) 続いて、 \\(\\gamma,\\xi\\) と \\(\\widehat{\\alpha},\\widehat{\\beta}\\) の対応関係を求めます。 \\(\\alpha,\\beta\\) \\(\\alpha,\\beta\\) を用いると、以下のように表されていました。 $$ \\begin{aligned} \\gamma\\left(\\mathbf{z}_{n}\\right) &= \\frac{\\alpha\\left(\\mathbf{z}_{n}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} & (13.33)\\\\ \\xi\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right) &=\\frac{\\alpha\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} &(13.43) \\end{aligned}$$ \\(\\widehat{\\alpha},\\widehat{\\beta}\\) 先の対応関係を用いれば、 \\(\\widehat{\\alpha},\\widehat{\\beta}\\) を用いると、 $$ \\begin{aligned} \\gamma\\left(\\mathbf{z}_{n}\\right) &=\\widehat{\\alpha}\\left(\\mathbf{z}_{n}\\right) \\widehat{\\beta}\\left(\\mathbf{z}_{n}\\right) & (13.64)\\\\ \\xi\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right) &=\\left(c_{n}\\right)&#94;{-1} \\widehat{\\alpha}\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) \\widehat{\\beta}\\left(\\mathbf{z}_{n}\\right) & (13.65) \\end{aligned} $$ と表されることがわかります。 Recursion 最後に、再帰式の対応関係も求めます。 \\(\\alpha,\\beta\\) $$ \\begin{aligned} \\alpha\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} \\alpha\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) & (13.36)\\\\ \\alpha\\left(\\mathbf{z}_{1}\\right) &=p\\left(\\mathbf{x}_{1}, \\mathbf{z}_{1}\\right)=p\\left(\\mathbf{z}_{1}\\right) p\\left(\\mathbf{x}_{1} | \\mathbf{z}_{1}\\right)=\\prod_{k=1}&#94;{K}\\left\\{\\pi_{k} p\\left(\\mathbf{x}_{1} | \\boldsymbol{\\phi}_{k}\\right)\\right\\}&#94;{z_{1 k}} & (13.37)\\\\ \\beta\\left(\\mathbf{z}_{n}\\right) &=\\sum_{\\mathbf{z}_{n+1}} \\beta\\left(\\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{x}_{n+1} | \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) & (13.38)\\\\ \\beta\\left(\\mathbf{z}_{N}\\right) &= \\frac{\\gamma\\left(\\mathbf{z}_N\\right)p\\left(\\mathbf{X}\\right)}{\\alpha\\left(\\mathbf{z}_N\\right)} = \\frac{p\\left(\\mathbf{z}_{N} | \\mathbf{X}\\right)p(\\mathbf{X})}{p\\left(\\mathbf{X}, \\mathbf{z}_{N}\\right)} = 1 & (13.30) \\end{aligned} $$ \\(\\widehat{\\alpha},\\widehat{\\beta}\\) $$ \\begin{aligned} c_{n} \\widehat{\\alpha}\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} \\widehat{\\alpha}\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) & (13.58)\\\\ \\widehat{\\alpha}\\left(\\mathbf{z}_{1}\\right) &=p\\left(\\mathbf{z}_{1}| \\mathbf{x}_{1}\\right)=\\frac{p\\left(\\mathbf{z}_{1}\\right)p\\left(\\mathbf{x}_{1}| \\mathbf{z}_{1}\\right)}{p\\left(\\mathbf{x}_{1}\\right)} = \\frac{\\prod_{k=1}&#94;{K}\\left\\{\\pi_{k} p\\left(\\mathbf{x}_{1} | \\boldsymbol{\\phi}_{k}\\right)\\right\\}&#94;{z_{1 k}}}{p\\left(\\mathbf{x}_{1}\\right)}\\\\ c_{n+1} \\widehat{\\beta}\\left(\\mathbf{z}_{n}\\right) &=\\sum_{\\mathbf{z}_{n+1}} \\widehat{\\beta}\\left(\\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{x}_{n+1} | \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) &(13.62)\\\\ \\widehat{\\beta}\\left(\\mathbf{z}_{N}\\right) &= \\frac{\\gamma\\left(\\mathbf{z}_N\\right)}{\\widehat{\\alpha}\\left(\\mathbf{z}_N\\right)} = \\frac{p\\left(\\mathbf{z}_{N} | \\mathbf{X}\\right)}{p\\left(\\mathbf{z}_{n} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)} = 1 & (13.30) \\end{aligned} $$ なお、ここで \\((13.58)\\) でどのようにして \\(c_n\\) を求めるかですが、 $$ \\begin{aligned} \\mathrm{R.H.S}\\ (13.58) &= p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} \\widehat{\\alpha}\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right)\\\\ &= p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}}p\\left(\\mathbf{z}_{n-1}|\\mathbf{x}_1,\\ldots,\\mathbf{x}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right)\\\\ &= p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n}|\\mathbf{x}_1,\\ldots,\\mathbf{x}_{n-1}\\right)\\\\ &=p\\left(\\mathbf{x}_{n},\\mathbf{z}_{n}|\\mathbf{x}_1,\\ldots,\\mathbf{x}_{n-1}\\right) \\end{aligned} $$ となることから、 \\((13.58)\\) の右辺を \\(\\mathbf{z}_n\\) について周辺化すれば、 $$\\sum_{\\mathbf{z}_{n}}p\\left(\\mathbf{x}_{n},\\mathbf{z}_{n}|\\mathbf{x}_1,\\ldots,\\mathbf{x}_{n-1}\\right) = p\\left(\\mathbf{x}_{n}|\\mathbf{x}_1,\\ldots,\\mathbf{x}_{n-1}\\right) = c_n$$ となるので、 \\(c_n\\) が求められることがわかります。 おまけ（尤度関数） 尤度関数はスケーリング係数 \\(c\\) を用いるだけで簡単に求められることがわかります。 $$p(\\mathbf{X})=\\prod_{n=1}&#94;{N} c_{n}\\qquad (13.63)$$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験-3.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験-3.html"},{"title":"HMMの最尤推定の計算過程","text":"ここでは、 HMMの最尤推定 で省略した計算過程について記述します。 \\(Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\) $$ \\begin{aligned} p(\\mathbf{X}, \\mathbf{Z} | \\boldsymbol{\\theta})&=p\\left(\\mathbf{z}_{1} | \\boldsymbol{\\pi}\\right)\\left[\\prod_{n=2}&#94;{N} p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}, \\mathbf{A}\\right)\\right] \\prod_{m=1}&#94;{N} p\\left(\\mathbf{x}_{m} | \\mathbf{z}_{m}, \\boldsymbol{\\phi}\\right)\\qquad (13.10)\\\\ &=\\prod_{k=1}&#94;{K} \\pi_{k}&#94;{z_{1 k}}\\left[ \\prod_{n=2}&#94;{N}\\prod_{k=1}&#94;{K} \\prod_{j=1}&#94;{K} A_{j k}&#94;{z_{n-1, j} z_{n k}} \\right] \\prod_{m=1}&#94;{N}\\prod_{i=1}&#94;{D} \\prod_{k=1}&#94;{K} \\phi_{i k}&#94;{x_{ni} z_{nk}}\\\\ \\therefore\\ln p(\\mathbf{X}, \\mathbf{Z} | \\boldsymbol{\\theta}) &=\\sum_{k=1}&#94;Kz_{1k}\\ln\\pi_k\\left[\\sum_{n=2}&#94;N\\sum_{k=1}&#94;K\\sum_{j=1}&#94;Kz_{n-1,j}z_{nk}\\ln A_{jk}\\right]\\sum_{m=1}&#94;N\\sum_{i=1}&#94;D\\sum_{k=1}&#94;Kx_{ni}z_{nk}\\ln\\phi_{ik} \\end{aligned} $$ であるから、これを \\((13.12)\\) に代入して、 $$ \\begin{aligned} Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)=&\\sum_{\\mathbf{Z}} p\\left(\\mathbf{Z} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right) \\ln p(\\mathbf{X}, \\mathbf{Z} | \\boldsymbol{\\theta})\\qquad (13.12)\\\\ =& \\sum_{\\mathbf{Z}} p\\left(\\mathbf{Z} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\sum_{k=1}&#94;Kz_{1k}\\ln\\pi_k+\\sum_{\\mathbf{Z}} p\\left(\\mathbf{Z} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\sum_{n=2}&#94;N\\sum_{k=1}&#94;K\\sum_{j=1}&#94;Kz_{n-1,j}z_{nk}\\ln A_{jk}\\\\ &+\\sum_{\\mathbf{Z}} p\\left(\\mathbf{Z} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\sum_{m=1}&#94;N\\sum_{i=1}&#94;D\\sum_{k=1}&#94;Kx_{ni}z_{nk}\\ln\\phi_{ik} \\end{aligned} $$ ここで、 \\(\\sum_{\\mathbf{Z}} = \\sum_{\\mathbf{z_1},\\mathbf{z_2},\\ldots,\\mathbf{z_N}}\\) なので、それぞれ 関係の無い部分を周辺化 でき、 $$ \\begin{aligned} Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)=& \\sum_{k=1}&#94;K\\sum_{\\mathbf{z_1}} p\\left(\\mathbf{z_1} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)z_{1k}\\ln\\pi_k+\\sum_{n=2}&#94;N\\sum_{k=1}&#94;K\\sum_{j=1}&#94;K\\sum_{\\mathbf{z_{n-1},z_n}}p\\left(\\mathbf{z_{n-1},z_n} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)z_{n-1,j}z_{nk}\\ln A_{jk}\\\\ &+\\sum_{m=1}&#94;N\\sum_{i=1}&#94;D\\sum_{k=1}&#94;K\\sum_{\\mathbf{z_n}}p\\left(\\mathbf{z_n} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)x_{ni}z_{nk}\\ln\\phi_{ik}\\\\ \\end{aligned}$$ となります。また、 \\(\\gamma,\\xi\\) の定義 を用いることで $$\\begin{aligned} Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)=& \\sum_{k=1}&#94;K\\left(\\sum_{\\mathbf{z_1}} \\gamma\\left(\\mathbf{z}_1\\right)z_{1k}\\right)\\ln\\pi_k+\\sum_{n=2}&#94;N\\sum_{k=1}&#94;K\\sum_{j=1}&#94;K\\left(\\sum_{\\mathbf{z_{n-1},z_n}}\\xi\\left(\\mathbf{z_{n-1},z_{n}}\\right) z_{n-1,j}z_{nk}\\right)\\ln A_{jk}\\\\ &+\\sum_{m=1}&#94;N\\sum_{i=1}&#94;D\\sum_{k=1}&#94;K\\left(\\sum_{\\mathbf{z_n}}\\gamma\\left(\\mathbf{z}_n\\right)x_{ni}z_{nk}\\right)\\ln\\phi_{ik} \\end{aligned} $$ と書き直せます。この時、潜在変数が離散なので、 \\(\\gamma,\\xi\\) はそれぞれ和が \\(1\\) となる \\(K,\\left(K\\times K\\right)\\) 個の非負の数の集合を用いて以下のように記述できます。 $$ \\begin{aligned} \\gamma\\left(z_{n k}\\right) &=\\sum_{\\mathbf{z}} \\gamma(\\mathbf{z}) z_{n k} &(13.15)\\\\ \\xi\\left(z_{n-1, j}, z_{n k}\\right) &=\\sum_{\\mathbf{z}} \\gamma(\\mathbf{z}) z_{n-1, j} z_{n k} &(13.16)\\end{aligned} $$ したがって、これらを用いて上記の式を書き直すと、 $$ \\begin{aligned} Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\mathrm{old}}\\right)=& \\sum_{k=1}&#94;{K} \\gamma\\left(z_{1 k}\\right) \\ln \\pi_{k}+\\sum_{n=2}&#94;{N} \\sum_{j=1}&#94;{K} \\sum_{k=1}&#94;{K} \\xi\\left(z_{n-1, j}, z_{n k}\\right) \\ln A_{j k} \\\\ &+\\sum_{n=1}&#94;{N} \\sum_{k=1}&#94;{K}\\gamma\\left(z_{n k}\\right) \\sum_{i=1}&#94;Dx_{ni} \\ln \\phi_{i k} \\end{aligned}\\qquad (13.17) $$ Maximization step ここでは、上記の \\(Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\mathrm{old}}\\right)\\) 関数を各パラメータ \\(\\boldsymbol{\\theta}\\) に関して最大化する際の ラグランジュの未定乗数法 を書き下します。 \\(\\boldsymbol{\\pi}\\) $$ \\begin{aligned} L\\left(\\boldsymbol{\\pi},\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text { old }}\\right) &= \\sum_{k=1}&#94;{K} \\gamma\\left(z_{1 k}\\right) \\ln \\pi_{k} + \\lambda_1\\left(\\sum_{k=1}&#94;K\\pi_k - 1\\right)\\\\ \\frac{\\partial L}{\\partial \\pi_k}&=\\frac{\\gamma\\left(z_{1 k}\\right)}{\\pi_k} + \\lambda_1 = 0\\quad \\therefore \\pi_k = -\\frac{\\gamma\\left(z_{1 k}\\right)}{\\lambda_1}\\\\ \\frac{\\partial L}{\\partial \\lambda_1}&=\\sum_{k=1}&#94;K\\pi_k - 1 = 0\\quad \\therefore\\lambda_1 = -\\sum_{k=1}&#94;K\\gamma\\left(z_{1 k}\\right)\\\\ \\therefore\\pi_k&#94;{\\star} &= \\frac{\\gamma\\left(z_{1 k}\\right)}{\\sum_{j=1}&#94;{K} \\gamma\\left(z_{1 j}\\right)} \\end{aligned} $$ \\(\\boldsymbol{A}\\) $$\\begin{aligned} L\\left(\\boldsymbol{A},\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text { old }}\\right) & = \\sum_{n=2}&#94;{N} \\sum_{j=1}&#94;{K} \\sum_{k=1}&#94;{K} \\xi\\left(z_{n-1, j}, z_{n k}\\right) \\ln A_{j k} + \\sum_{j=1}&#94;K\\lambda_{2,j}\\left(\\sum_{k=1}&#94;K A_{jk} - 1\\right)\\\\ \\frac{\\partial L}{\\partial A_{jk}} &= \\sum_{n=2}&#94;{N}\\frac{\\xi\\left(z_{n-1, j}, z_{n k}\\right)}{A_{jk}} + \\lambda_{2,j} = 0\\quad \\therefore A_{jk} = -\\frac{\\sum_{n=2}&#94;N\\xi\\left(z_{n-1, j}, z_{n k}\\right)}{\\lambda_{2,j}}\\\\ \\frac{\\partial L}{\\partial \\lambda_{2,j}} &= \\sum_{k=1}&#94;K A_{jk} - 1 = 0\\quad \\therefore \\lambda_{2,j} = -\\sum_{k=1}&#94;K\\sum_{n=2}&#94;N\\xi\\left(z_{n-1, j}, z_{n k}\\right)\\\\ \\therefore A_{jk}&#94;{\\star}&=\\frac{\\sum_{n=2}&#94;{N} \\xi\\left(z_{n-1, j}, z_{n k}\\right)}{\\sum_{l=1}&#94;{K} \\sum_{n=2}&#94;{N} \\xi\\left(z_{n-1, j}, z_{n l}\\right)} \\end{aligned}$$ \\(\\boldsymbol{\\phi}\\) $$\\begin{aligned} L\\left(\\boldsymbol{\\phi},\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text { old }}\\right) & = \\sum_{n=1}&#94;{N} \\sum_{k=1}&#94;{K}\\gamma\\left(z_{n k}\\right) \\sum_{i=1}&#94;Dx_{ni} \\ln \\phi_{i k} + \\sum_{k=1}&#94;K\\lambda_{3,k}\\left( \\sum_{i=1}&#94;D\\phi_{ik} - 1\\right)\\\\ \\frac{\\partial L}{\\partial\\phi_{ik}} &= \\frac{\\sum_{n=1}&#94;N\\gamma\\left(z_{n k}\\right)x_{ni}}{\\phi_{ik}} + \\lambda_{3,k}=0\\quad \\therefore \\phi_{ik} = -\\frac{\\sum_{n=1}&#94;N\\gamma\\left(z_{n k}\\right)x_{ni}}{\\lambda_{3,k}}\\\\ \\frac{\\partial L}{\\partial\\lambda_{3,k}} &= \\sum_{i=1}&#94;D\\phi_{ik} - 1 = 0 \\quad \\therefore \\lambda_{3,k} = -\\sum_{i=1}&#94;D\\sum_{n=1}&#94;N\\gamma\\left(z_{n k}\\right)x_{ni} = -\\sum_{i=1}&#94;D\\gamma\\left(z_{n k}\\right)\\\\ \\therefore \\phi_{ik}&#94;{\\star} &= \\frac{\\sum_{n=1}&#94;N\\gamma\\left(z_{n k}\\right)x_{ni}}{\\sum_{i=1}&#94;D\\gamma\\left(z_{n k}\\right)} \\end{aligned}$$ Expectation step $$ \\begin{aligned} \\gamma\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right) &(13.13)\\\\ \\xi\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right) &(13.14)\\\\ \\alpha\\left(\\mathbf{z}_{n}\\right) & \\equiv p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}, \\mathbf{z}_{n}\\right) & (13.34)\\\\ \\beta\\left(\\mathbf{z}_{n}\\right) & \\equiv p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right) & (13.35)\\\\ \\end{aligned} $$ forward-algorithm \\((\\alpha)\\) $$\\begin{aligned} \\alpha\\left(\\mathbf{z}_{n}\\right) & =p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}, \\mathbf{z}_{n}\\right) \\\\ & =p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n}\\right) \\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n}\\right) \\quad (\\because \\text{conditional independence})\\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1}, \\mathbf{z}_{n}\\right) \\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1}, \\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right) \\quad (\\because \\text{demarginalization})\\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1}, \\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n-1}\\right) \\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1} | \\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n-1}\\right) \\quad (\\because \\text{conditional independence})\\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1}, \\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) \\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} \\alpha(\\mathbf{z}_{n-1})p(\\mathbf{z} | \\mathbf{z}_{n-1})\\\\ \\end{aligned}$$ backward-algorithm \\((\\beta)\\) $$\\begin{aligned} \\beta\\left(\\mathbf{z}_{n}\\right) & =p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right) \\\\ & =\\sum_{\\mathbf{z}_{n+1}} p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N}, \\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) \\quad (\\because \\text{demarginalization})\\\\ & =\\sum_{\\mathbf{z}_{n+1}} p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}, \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) \\\\ & =\\sum_{\\mathbf{z}_{n+1}} p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) \\quad (\\because \\text{conditional independence})\\\\ & =\\sum_{\\mathbf{z}_{n+1}} p\\left(\\mathbf{x}_{n+2}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{x}_{n+1} | \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) \\quad (\\because \\text{conditional independence})\\\\ & =\\sum_{\\mathbf{z}_{n+1}} \\beta(\\mathbf{z}_{n+1})p(\\mathbf{x}_{n+1}|\\mathbf{z}_{n+1})p(\\mathbf{z}_{n+1}|\\mathbf{z}_n)\\qquad (13.38) \\end{aligned}$$ \\(\\gamma,\\xi\\) $$ \\begin{aligned} \\gamma\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n} | \\mathbf{X}\\right)=\\frac{p\\left(\\mathbf{X} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})}\\quad (\\because \\text{Bayes' theorem}) &(13.32)\\\\ &=\\frac{p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}, \\mathbf{z}_{n}\\right) p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} \\quad (\\because \\text{conditional independence})\\\\ &= \\frac{\\alpha\\left(\\mathbf{z}_{n}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} & (13.33) \\end{aligned} $$ $$\\begin{aligned} \\xi\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n} | \\mathbf{X}\\right) \\\\ &=\\frac{p(\\mathbf{X} | \\mathbf{z}_{n-1}, \\mathbf{z}_{n}) p\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} \\quad (\\because \\text{Bayes' theorem})\\\\ &=\\frac{p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1} | \\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n-1}\\right)}{p(\\mathbf{X})} \\quad (\\because \\text{conditional independence})\\\\ &=\\frac{\\alpha\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) \\beta\\left(\\mathbf{x}_{n}\\right)}{p(\\mathbf{X})}\\qquad (13.43) \\end{aligned}$$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験-2.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験-2.html"},{"title":"HMMの最尤推定","text":"※ かなり導出部分を省略しています。導出は適宜 HMMの最尤推定の計算過程 を参照してください。 隠れマルコフモデルは、一般に以下の式で表されます。 $$ p(\\mathbf{X}, \\mathbf{Z} | \\boldsymbol{\\theta})=p\\left(\\mathbf{z}_{1} | \\boldsymbol{\\pi}\\right)\\left[\\prod_{n=2}&#94;{N} p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}, \\mathbf{A}\\right)\\right] \\prod_{m=1}&#94;{N} p\\left(\\mathbf{x}_{m} | \\mathbf{z}_{m}, \\boldsymbol{\\phi}\\right)\\qquad (13.10) $$ \\(\\mathbf{X} = \\{\\mathbf{x}_1,\\ldots,\\mathbf{x}_N\\}\\) : \\(\\mathbf{Z} = \\{\\mathbf{z}_1,\\ldots,\\mathbf{z}_N\\}\\) \\(\\boldsymbol{\\theta}=\\{\\boldsymbol{\\pi}, \\mathbf{A}, \\boldsymbol{\\phi}\\}\\) ※ 一般に放出確率 \\(p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}, \\boldsymbol{\\phi}\\right)\\) は、 二値のベクトル \\(\\mathbf{z}_n\\) の \\(K\\) 個の可能な状態に対応した \\(K\\) 個の要素を持つベクトルからなる任意の分布 $$ p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}, \\phi\\right)=\\prod_{k=1}&#94;{K} p\\left(\\mathbf{x}_{n} | \\phi_{k}\\right)&#94;{z_{n k}}\\qquad (13.9) $$ を考えることも可能ですが、今回は下記の離散多項分布を考えます。 Name Probability Conditional Distribution initial state \\(\\pi_{k} \\equiv p\\left(z_{1 k}=1\\right)\\) \\(p\\left(\\mathbf{z}_{1} \\mid \\boldsymbol{\\pi}\\right)=\\prod_{k=1}&#94;{K} \\pi_{k}&#94;{z_{1 k}}\\quad (13.8)\\) transition probability \\(A_{j k} \\equiv p\\left(z_{n k}=1\\mid z_{n-1, j}=1\\right)\\) \\(p\\left(\\mathbf{z}_{n} \\mid \\mathbf{z}_{n-1}, \\mathbf{A}\\right)=\\prod_{k=1}&#94;{K} \\prod_{j=1}&#94;{K} A_{j k}&#94;{z_{n-1, j} z_{n k}}\\quad (13.7)\\) emission probability \\(\\phi_{i k}\\equiv p\\left(x_{n i}=1 \\mid z_{n k}=1\\right)\\) \\(p(\\mathbf{x}_n \\mid \\mathbf{z}_n, \\boldsymbol{\\phi})=\\prod_{i=1}&#94;{D} \\prod_{k=1}&#94;{K} \\phi_{i k}&#94;{x_{ni} z_{nk}}\\quad (13.22)\\) 尤度関数 ここで、データ集合 \\(\\mathbf{X}\\) が観測された際に、上記の同時分布を潜在変数 \\(\\mathbf{Z}\\) について周辺化することで、尤度関数は以下のように記述されます。 $$ p(\\mathbf{X} | \\boldsymbol{\\theta})=\\sum_{\\mathbf{Z}} p(\\mathbf{X}, \\mathbf{Z} | \\boldsymbol{\\theta})\\qquad (13.11) $$ しかし、この尤度関数は \\(n\\) について分解できない（ \\(\\mathbf{z}_n\\) ）ごとに和を取れないので、 条件付き独立 の性質を活かして 尤度関数の対数の期待値 を最大化する Baum-Welch algorithm (EM algorithm) を用います。 Baum-Welch (EM) パラメータ \\(\\boldsymbol{\\theta}&#94;{\\text {old }}\\) を用いて \\(p\\left(\\mathbf{Z} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\) を最大化する。 対数尤度関数の期待値 \\(Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\) を求める。 \\(Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\) を最大化するパラメータに更新する。 \\(\\boldsymbol{\\theta}\\rightarrow\\boldsymbol{\\theta}&#94;{\\text {old }}\\) 1に戻る。 $$ Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)=\\sum_{\\mathbf{Z}} p\\left(\\mathbf{Z} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right) \\ln p(\\mathbf{X}, \\mathbf{Z} | \\boldsymbol{\\theta})\\qquad (13.12) $$ ここで、表記を簡単にするために、 γ 、 ξ を導入します。 $$ \\begin{aligned} \\gamma\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right) &(13.13)\\\\ \\xi\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right) &(13.14) \\end{aligned} $$ なお、潜在変数が離散なので、以下のように記述し直せます。（ \\(\\pi_{k},A_{j k},\\phi_{j k}\\) と同様。） $$ \\begin{aligned} \\gamma\\left(z_{n k}\\right) &=\\sum_{\\mathbf{z}} \\gamma(\\mathbf{z}) z_{n k} &(13.15)\\\\ \\xi\\left(z_{n-1, j}, z_{n k}\\right) &=\\sum_{\\mathbf{z}} \\gamma(\\mathbf{z}) z_{n-1, j} z_{n k} &(13.16)\\end{aligned} $$ これらを用いると、 \\(Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\mathrm{old}}\\right)\\) が以下のように書き下せます。 （計算過程） $$ \\begin{aligned} Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\mathrm{old}}\\right)=& \\sum_{k=1}&#94;{K} \\gamma\\left(z_{1 k}\\right) \\ln \\pi_{k}+\\sum_{n=2}&#94;{N} \\sum_{j=1}&#94;{K} \\sum_{k=1}&#94;{K} \\xi\\left(z_{n-1, j}, z_{n k}\\right) \\ln A_{j k} \\\\ &+\\sum_{n=1}&#94;{N} \\sum_{k=1}&#94;{K}\\gamma\\left(z_{n k}\\right) \\sum_{i=1}&#94;Dx_{ni} \\ln \\phi_{i k} \\end{aligned}\\qquad (13.17) $$ Maximization step ※ 実際の計算の順番からは前後しますが、先にM stepを説明します。 上記の \\(Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\mathrm{old}}\\right)\\) を各パラメータ \\(\\boldsymbol{\\theta}\\) に関して最大化するのは（別ブロックに別れているから）簡単で、それぞれ 適当なラグランジュ乗数を導入する ことで、以下のように求まります。 （計算過程） $$ \\begin{aligned} \\pi_{k}&= \\frac{\\gamma\\left(z_{1 k}\\right)}{\\sum_{j=1}&#94;{K} \\gamma\\left(z_{1 j}\\right)} & (13.18)\\\\ A_{j k}&= \\frac{\\sum_{n=2}&#94;{N} \\xi\\left(z_{n-1, j}, z_{n k}\\right)}{\\sum_{l=1}&#94;{K} \\sum_{n=2}&#94;{N} \\xi\\left(z_{n-1, j}, z_{n l}\\right)} & (13.19)\\\\ \\phi_{i k}&=\\frac{\\sum_{n=1}&#94;{N} \\gamma\\left(z_{n k}\\right) x_{n i}}{\\sum_{n=1}&#94;{N} \\gamma\\left(z_{n k}\\right)} & (13.23) \\end{aligned} $$ Expectation step M step で必要となる \\(\\gamma,\\xi\\) は、 条件付き独立性 を用いることで効率的に計算することができます。 $$ \\begin{aligned} \\gamma\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n} | \\mathbf{X}\\right)=\\frac{p\\left(\\mathbf{X} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})}\\quad (\\because \\text{Bayes' theorem}) &(13.32)\\\\ &=\\frac{p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}, \\mathbf{z}_{n}\\right) p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} \\quad (\\because \\text{conditional independence})\\\\ &= \\frac{\\alpha\\left(\\mathbf{z}_{n}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} & (13.33) \\end{aligned} $$ $$ \\begin{aligned} \\alpha\\left(\\mathbf{z}_{n}\\right) & \\equiv p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}, \\mathbf{z}_{n}\\right) & (13.34)\\\\ \\beta\\left(\\mathbf{z}_{n}\\right) & \\equiv p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right) & (13.35) \\end{aligned} $$ 条件付き独立性を用いてそれぞれ変形すると、以下の再帰式を導くことができます。 （計算過程） $$ \\begin{aligned} \\alpha\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} \\alpha\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) & (13.36)\\\\ \\alpha\\left(\\mathbf{z}_{1}\\right) &=p\\left(\\mathbf{x}_{1}, \\mathbf{z}_{1}\\right)=p\\left(\\mathbf{z}_{1}\\right) p\\left(\\mathbf{x}_{1} | \\mathbf{z}_{1}\\right)=\\prod_{k=1}&#94;{K}\\left\\{\\pi_{k} p\\left(\\mathbf{x}_{1} | \\boldsymbol{\\phi}_{k}\\right)\\right\\}&#94;{z_{1 k}} & (13.37)\\\\ \\beta\\left(\\mathbf{z}_{n}\\right) &=\\sum_{\\mathbf{z}_{n+1}} \\beta\\left(\\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{x}_{n+1} | \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) & (13.38)\\\\ \\beta\\left(\\mathbf{z}_{N}\\right) &= \\frac{\\gamma\\left(\\mathbf{z}_N\\right)p\\left(\\mathbf{X}\\right)}{\\alpha\\left(\\mathbf{z}_N\\right)} = \\frac{p\\left(\\mathbf{z}_{N} | \\mathbf{X}\\right)p(\\mathbf{X})}{p\\left(\\mathbf{X}, \\mathbf{z}_{N}\\right)} = 1 & (13.30) \\end{aligned} $$ ※ なお、ここで \\(\\alpha\\) の再起式を forward-algorithm 、 \\(\\beta\\) の再起式を backward-algorithm と呼ぶことがあります。 また、これらを用いて \\(\\xi\\) を記述することもでき、以下のように表せます。 （計算過程） $$\\xi\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right)=\\frac{\\alpha\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})}\\qquad (13.43)$$ 以上でBaum-Welchに必要な計算式が求まりました。 おまけ（尤度関数） 尤度関数は、アルゴリズムの停止条件に用いられるなど、値を求めることが非常に有用です。 求める際は、 $$ \\gamma\\left(\\mathbf{z}_{n}\\right)= \\frac{\\alpha\\left(\\mathbf{z}_{n}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} \\qquad (13.33) $$ の両辺を \\(\\mathbf{z}_n\\) について周辺化すれば、左辺は $$\\sum_{\\mathbf{z}_{n}} \\gamma\\left(\\mathbf{z}_{n}\\right) = \\sum_{\\mathbf{z}_{n}}p\\left(\\mathbf{z}_{n} | \\mathbf{X}\\right) = 1$$ となることが明らかなので、以下のように求まります。 $$p(\\mathbf{X})=\\sum_{\\mathbf{z}_{n}} \\alpha\\left(\\mathbf{z}_{n}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)\\qquad (13.41)$$ また、上記の式は任意の \\(n\\) について成立するので、 \\(n=N\\) の場合を考えれば \\(\\alpha\\) のみを用いて求めることができます。 $$p(\\mathbf{X})=\\sum_{\\mathbf{z}_{N}} \\alpha\\left(\\mathbf{z}_{N}\\right)\\qquad (13.42)$$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験-1.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験-1.html"},{"title":"Numpyの行列計算チートシート","text":"はじめに 様々なアルゴリズムを実装する際に漸化式は出るけど実装時にうまくいかない。ということは良くあります。また、 Python を使って実装する場合、そのほとんどが行列の取り扱いです。 （柔軟であるが故にエラーを吐かずに動いてしまう…笑） そこで、まずは行列計算のチートシートを作成します。（随時加筆修正していきます。） 目次 基本事項 内積（行列積） 外積 In [1]: import numpy as np 基本事項 In [2]: N = 3 A = np . arange ( N ) B = np . arange ( N ) . reshape ( - 1 , N ) # np.expand_dims(A, axis=0), A[None,:] C = np . arange ( N ) . reshape ( N , - 1 ) # np.expand_dims(A, axis=1), A[:,None] D = np . arange ( N * N ) . reshape ( N , N ) In [3]: print ( f \"A = {A} \" ) print ( f \"B = {B} \" ) print ( f \"C = {C} \" ) print ( f \"D = {D} \" ) A = [0 1 2] B = [[0 1 2]] C = [[0] [1] [2]] D = [[0 1 2] [3 4 5] [6 7 8]] In [4]: print ( f \"A.shape = {A.shape} \" ) print ( f \"B.shape = {B.shape} \" ) print ( f \"C.shape = {C.shape} \" ) print ( f \"D.shape = {D.shape} \" ) A.shape = (3,) B.shape = (1, 3) C.shape = (3, 1) D.shape = (3, 3) In [5]: print ( f \"A.ndim = {A.ndim} \" ) print ( f \"B.ndim = {B.ndim} \" ) print ( f \"C.ndim = {C.ndim} \" ) print ( f \"D.ndim = {D.ndim} \" ) A.ndim = 1 B.ndim = 2 C.ndim = 2 D.ndim = 2 ndim ex. scalar $(0)$ 1 , 2 ,... vector $1$ A matrix $\\geq2$ B , C , D 内積（行列積） vector & scalar / matrix & scalar スカラーが絡むと、各要素とスカラーの積となる。 shape の変化はない。 どちらから掛けてもエラーは起こらない。 In [6]: print ( f \"np.dot(A,2) = {np.dot(A,2)}\" ) # vector & scalar print ( f \"np.dot(B,2) = {np.dot(B,2)}\" ) # matrix & scalar print ( f \"np.dot(C,2) = {np.dot(C,2)}\" ) # matrix & scalar print ( f \"np.dot(D,2) = {np.dot(D,2)}\" ) # matrix & scalar np.dot(A,2) = [0 2 4] np.dot(B,2) = [[0 2 4]] np.dot(C,2) = [[0] [2] [4]] np.dot(D,2) = [[ 0 2 4] [ 6 8 10] [12 14 16]] vector & vector 内積となる。 結果はスカラーとなる。 shape が異なると、エラーが起きる。 In [7]: print ( f \"np.dot(A,A) = {np.dot(A,A)}\" ) # vector & vector np.dot(A,A) = 5 In [8]: np . dot ( A , np . arange ( N - 1 )) # shape=(3,) & shape=(2,) ValueError : shapes (3,) and (2,) not aligned: 3 (dim 0) != 2 (dim 0) vector & matrix 行列積となる。 ベクトルは、位置によって変換のされ方が異なる。 左がベクトルの場合： np.dot((x,) (y,z)) = np.dot((1,x) (y,z)) 右がベクトルの場合： np.dot((y,z) (x,)) = np.dot((y,z) (x,1)) 行列積であるので、結果の shape は np.dot((x,y) (y,z)) = (x,z) となる。 上で y が異なるとエラーが生じる。 In [9]: print ( np . dot ( A , B )) # np.dot((3,)(1,3)) print ( np . dot ( A , C )) # np.dot((3,)(3,1)) print ( np . dot ( B , A )) # np.dot((1,3)(3,)) print ( np . dot ( C , A )) # np.dot((3,1)(3,)) ValueError : shapes (3,) and (1,3) not aligned: 3 (dim 0) != 3 (dim 0) [5] [5] ValueError : shapes (3,1) and (3,) not aligned: 1 (dim 1) != 3 (dim 0) matrix & matrix c = np.dot(a,b) a.shape=(a1,a2,...,aN,X) b.shape=(b1,b2,...,X,bM) c.shape=(a1,a2,...,aN,b1,b2,...,bM) c[i1,i2,...,iN,j1,j2,...,jM] == a[i1,i2,...,iM,:].dot(b[j1,j2,...,jM-1,:,jM]) In [10]: import itertools def checkNPdot ( shape1 , shape2 ): \"\"\" 計算可能なshapeの関係を列挙する。 \"\"\" a = np . arange ( np . prod ( shape1 )) b = np . arange ( np . prod ( shape2 )) for comb1 in itertools . permutations ( shape1 , len ( shape1 )): for comb2 in itertools . permutations ( shape2 , len ( shape2 )): try : print ( f \" {comb1} .dot( {comb2} ) = {(a.reshape(comb1).dot(b.reshape(comb2))).shape}\" ) except : pass 以下で具体的に見ていく！ np.dot(2D, 3D) c = np.dot(a,b) a.shape=(i,X) b.shape=(j,X,k) c.shape=(i,j,k) c[i,j,k] == a[i,:].dot(b[j,:,k]) In [11]: a = np . arange ( 6 ) . reshape ( 2 , 3 ) b = np . arange ( 24 ) . reshape ( 2 , 3 , 4 ) c = np . dot ( a , b ) In [12]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) print ( f \"np.dot(a,b).shape = {c.shape} \" ) a.shape = (2, 3) b.shape = (2, 3, 4) np.dot(a,b).shape = (2, 2, 4) In [13]: I , J , K = c . shape In [14]: np . all ([ c [ i , j , k ] == a [ i ,:] . dot ( b [ j ,:, k ]) for i in range ( I ) for j in range ( J ) for k in range ( K )]) Out[14]: True np.dot(3D,2D) c = np.dot(a,b) a.shape=(i,j,X) b.shape=(X,k) c.shape=(i,j,k) c[i,j,k] == a[i,j,:].dot(b[:,k]) In [15]: a = np . arange ( 24 ) . reshape ( 4 , 2 , 3 ) b = np . arange ( 6 ) . reshape ( 3 , 2 ) c = np . dot ( a , b ) In [16]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) print ( f \"np.dot(a,b).shape = {c.shape} \" ) a.shape = (4, 2, 3) b.shape = (3, 2) np.dot(a,b).shape = (4, 2, 2) In [17]: I , J , K = c . shape In [18]: np . all ([ c [ i , j , k ] == a [ i , j ,:] . dot ( b [:, k ]) for i in range ( I ) for j in range ( J ) for k in range ( K )]) Out[18]: True np.dot(3D,3D) c = np.dot(a,b) a.shape=(i,j,X) b.shape=(k,X,l) c.shape=(i,j,k,l) c[i,j,k,l] == a[i,j,:].dot(b[k,:,l]) In [19]: a = np . arange ( 24 ) . reshape ( 2 , 3 , 4 ) b = np . arange ( 60 ) . reshape ( 3 , 4 , 5 ) c = np . dot ( a , b ) In [20]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) print ( f \"np.dot(a,b).shape = {c.shape} \" ) a.shape = (2, 3, 4) b.shape = (3, 4, 5) np.dot(a,b).shape = (2, 3, 3, 5) In [21]: I , J , K , L = c . shape In [22]: np . all ([ c [ i , j , k , l ] == a [ i , j ,:] . dot ( b [ k ,:, l ]) for i in range ( I ) for j in range ( J ) for k in range ( K ) for l in range ( L )]) Out[22]: True np.dot(2D,4D) c = np.dot(a,b) a.shape=(i,X) b.shape=(j,k,X,l) c.shape=(i,j,k,l) c[i,j,k,l] == a[i,:].dot(b[j,k,:,l]) In [23]: a = np . arange ( 6 ) . reshape ( 2 , 3 ) b = np . arange ( 120 ) . reshape ( 2 , 4 , 3 , 5 ) c = np . dot ( a , b ) In [24]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) print ( f \"np.dot(a,b).shape = {c.shape} \" ) # c[i,j,k,l] == a[i,j,:].dot(b[k,:,l]) a.shape = (2, 3) b.shape = (2, 4, 3, 5) np.dot(a,b).shape = (2, 2, 4, 5) In [25]: I , J , K , L = c . shape In [26]: np . all ([ c [ i , j , k , l ] == a [ i ,:] . dot ( b [ j , k ,:, l ]) for i in range ( I ) for j in range ( J ) for k in range ( K ) for l in range ( L )]) Out[26]: True np.dot(3D,4D) c = np.dot(a,b) a.shape=(i,j,X) b.shape=(k,l,X,m) c.shape=(i,j,k,l,m) c[i,j,k,l,m] == a[i,j,:].dot(b[k,l,:,m]) In [27]: a = np . arange ( 24 ) . reshape ( 2 , 3 , 4 ) b = np . arange ( 360 ) . reshape ( 3 , 5 , 4 , 6 ) c = np . dot ( a , b ) In [28]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) print ( f \"np.dot(a,b).shape = {c.shape} \" ) a.shape = (2, 3, 4) b.shape = (3, 5, 4, 6) np.dot(a,b).shape = (2, 3, 3, 5, 6) In [29]: I , J , K , L , M = c . shape In [30]: np . all ([ c [ i , j , k , l , m ] == a [ i , j ,:] . dot ( b [ k , l ,:, m ]) for i in range ( I ) for j in range ( J ) for k in range ( K ) for l in range ( L ) for m in range ( M )]) Out[30]: True np.dot(4D,4D) c = np.dot(a,b) a.shape=(i,j,k,X) b.shape=(l,m,X,n) c.shape=(i,j,k,l,m,n) c[i,j,k,l,m,n] == a[i,j,k,:].dot(b[l,m,:,n]) In [31]: a = np . arange ( 120 ) . reshape ( 2 , 3 , 4 , 5 ) b = np . arange ( 360 ) . reshape ( 3 , 4 , 5 , 6 ) c = np . dot ( a , b ) In [32]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) print ( f \"np.dot(a,b).shape = {c.shape} \" ) a.shape = (2, 3, 4, 5) b.shape = (3, 4, 5, 6) np.dot(a,b).shape = (2, 3, 4, 3, 4, 6) In [33]: I , J , K , L , M , N = c . shape In [34]: np . all ([ c [ i , j , k , l , m , n ] == a [ i , j , k ,:] . dot ( b [ l , m ,:, n ]) for i in range ( I ) for j in range ( J ) for k in range ( K ) for l in range ( L ) for m in range ( M ) for n in range ( N )]) Out[34]: True 外積 c = np.outer(a,b) c[i][j] = a.reshape(-1,)[i]*b.reshape(-1,)[j] In [35]: c = np . outer ( a , b ) In [36]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) a.shape = (a1,a2,...,aN) b.shape = (b1,b2,...,bM) In [37]: Na = np . prod ( a . shape ) Nb = np . prod ( b . shape ) In [38]: print ( f \"Na = {Na} \" ) print ( f \"Nb = {Nb} \" ) Na = a1*a2*・・・*aN Nb = b1*b2*・・・*bM In [39]: print ( c . shape ) (Na, Nb) In [40]: np . all ([ c [ i ][ j ] == a . reshape ( - 1 ,)[ i ] * b . reshape ( - 1 ,)[ j ] for i in range ( Na ) for j in range ( Nb )]) Out[40]: True In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験-0.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験-0.html"},{"title":"分子生命科学Ⅲ 第1回","text":"講師： 饗場篤 参考文献： Neuroscience: Exploring the Brain, 3rd Edition 参考文献： Principles of Neurobiology 講義概要 この授業最大の目的は、 「将来僕らが脳を対象とすることになった時に敷居を低くする」 こと。 # タイトル 内容 日付 1 神経系の構造と機能 中枢神経系の構造・機能 末梢神経系の構造・機能 9/26,10/3 2 感覚神経系 感覚系の構成 体性感覚系 視覚系（末梢視覚系・平衡感覚系） 聴覚と平衡感覚（聴覚系・平衡感覚系） 化学感覚系（嗅覚系・味覚系） 10/10,17,24,31 3 運動系 脊髄による運動制御 脳による運動制御 11/14,21 4 脳と行動の化学的制御 11/28 5 摂食行動 12/12 6 脳のリズムと睡眠 脳波 睡眠 概日リズム 12/19 7 精神疾患 統合失調症 感情障害 不安障害 12/26 8 神経変性疾患 アルツハイマー病 パーキンソン病 ALS 1/9 神経系の構造と機能（１） 神経系の機能的構成 神経系は、 感覚系 、 統合系 、 運動系 の３つに分けることができる。 感覚系は、感覚器で何かを感じると、 陽イオン が神経細胞の末端に流れ込み、 活動電位 が上がり、電気的なシグナルとして 中枢神経系(CNS)特に、大脳皮質の感覚野 にこの入力を伝える。 運動系は、逆向きで、脳の運動野からのシグナルが 末梢神経系 に伝わる。 神経系の構成成分 ニューロン(神経細胞,neuron) グリア細胞(glial cells) 血管(blood vessels) ニューロン(neuron) 極性のある細胞で、 細胞体(cell body or soma) 、 樹状突起(dendrites) 、 軸索(axon) からなり、（ほとんどの場合） 活動電位(action potential) を発生する。 膝蓋腱反射(knee-jerk reflex) ニューロンがどのように神経回路に含まれているか、を示す良い例。 医師が膝蓋骨の下の腱を軽く叩くと、大腿四頭筋が伸ばされ、その信号が脊髄まで伝わる。この信号が脊髄で 運動ニューロン に直結しており、運動ニューロンが発火して少し離れた部分の筋肉を収縮させる。その反動で足が上がる。 グリア細胞(glia cells) グリア細胞はニューロン（ヒトでは \\(1\\) - \\(2\\times10&#94;{11}\\) 個）の \\(3\\) - \\(10\\) 倍（マウスだと同数程度）存在し、脳の体積の約半分を占める。 長い軸索と興奮性膜を特徴とするニューロンに対して、グリア細胞の突起は細胞体の周辺に留まり、活動電位を発生しない。 ニューロンの生存や発達、機能発言のための液性環境維持と代謝的支援、神経伝達の調節等を行なっている。 と、ニューロンの補助的な役割だと今までは考えられていたが、最近ではもっと積極的な意味があるのでは無いかと研究されている。 中枢神経系のグリア細胞が下の4種からなる。 アストロサイト(astrocyte)（アストログリア、星状膠細胞） オリゴデンドロサイト(oligodendrocyte)（オリゴデンドログリア、稀突起膠細胞） 上衣細胞(ependymal cell) ミクログリア(microglia)（小膠細胞） アストロサイト(astrocyte)の機能 血液脳関門 を形成してがんが脳に転移しないように防御したりしている。 神経伝達物質の最取り込み（神経伝達物質が出てすぐに取り込まないと、麻薬や覚せい剤のような影響が出てしまう。）。 オリゴデンドロサイト(oligodendrocyte) 中枢神経系 において、 髄鞘（ミエリン・myelin） を形成する。（ 末梢 では シュワン細胞 が髄鞘を形成する。） 上衣細胞(ependymal cells) ミクログリア(microglia) 上衣細胞は脳室と脊髄中心管を覆う一層の上皮性細胞で、脳を脳脊髄液から遮断する（脳脊髄液脳関門(cerebro-spinal fluid brain barrier)） ミクログリアは損傷に際して活性化する脳内の免疫性細胞で貪食能を持つ。アストログリア、オリゴデンドロサイト、上衣細胞が 外胚葉 由来なのに対し、ミクログリアは 中胚葉 由来である。 脳の構造 哺乳動物の脳は、ほぼ共通の構造を持っている。ヒトの特徴は、 連合野 が広いということである。 解剖学用語 解剖学用語 解剖学的切断面 神経系の構成 中枢神経系(CNS: central nervous system) 脳(brain) 大脳(cerebrum) 小脳(cerebellum) 脳幹(brain stem) 脊髄(spinal cord) 末梢神経系(PNS: peripheral nervous system) 体性神経系(somatic nervous system) 脳神経(cranial nerve) 脊髄神経(spinal nerve) 自律神経系(autonomic nervous system) 小脳(cerebellum) 脳幹（延髄・橋・中脳・間脳）の背後に位置する。 大脳や脊髄と広範な連絡を持つ運動制御中枢 言語や思考などの高次脳機能に関与 小脳の 同 側の身体の運動に関与 脳幹(brain stem) 間脳→中脳→橋→延髄からなり、上方で間脳に、下方で脊髄に連なる（狭義では間脳を含めない）。 大脳から脊髄・小脳への情報、逆に脊髄・小脳から大脳への情報を中継 呼吸、意識、体温調節等の生命維持機能を制御 （大脳・小脳の損傷では生存できるが、脳幹の損傷は通常早急な死に至る） 錐体交叉 脳の運動ニューロンの軸索が延髄の後ろで一旦交叉（ 錐体交叉 ）して反対側にいっているから、反対側の機能がうまく制限できなくなる。 一方で 小脳 は同側なので、そのようなことは起こらない。 脊髄(spinal cord) 脊髄は脊柱管にあり、延髄に続いて錐体交叉下端より始まり、脊髄円錐にて終わる。 皮膚・関節・筋肉から脳への情報、逆に脳からの情報を伝える主経路 末梢神経の脊髄神経で身体と通ずる。 脊髄に入る情報を運ぶ軸索は 後根(dorsal root) に含まれ、脊髄から出ていく情報を運ぶ軸索は 前根(ventral root) に含まれる。 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"分子生命科学Ⅲ","url":"https://iwasakishuto.github.io/University/3A/分子生命科学Ⅲ-1.html","loc":"https://iwasakishuto.github.io/University/3A/分子生命科学Ⅲ-1.html"}]};