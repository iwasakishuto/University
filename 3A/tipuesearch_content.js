var tipuesearch = {"pages":[{"title":"Ex.15 Neural Network","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-15.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-15.html"},{"title":"Ex.14 Brownian motion","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-14.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-14.html"},{"title":"Ex.13 Sparse Modeling","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-13.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-13.html"},{"title":"Ex.12 Order Statistics","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-12.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-12.html"},{"title":"Ex.11 Data Assimilation","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-11.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-11.html"},{"title":"Ex.10 Expectation Maximization Algorithm","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-10.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-10.html"},{"title":"Ex.9 Kullback-Leibler Divergence","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-9.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-9.html"},{"title":"Ex.8 Multivariate Normal Distribution","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-8.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-8.html"},{"title":"Ex.7 Positive Definite Symmetric Matrix","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-7.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-7.html"},{"title":"Ex.6 Multinomial Distribution","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-6.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-6.html"},{"title":"Ex.5 Categorical Distribution","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-5.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-5.html"},{"title":"Ex4. Exponential Distribution","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-4.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-4.html"},{"title":"EX3. Law of Large Numbers","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-3.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-3.html"},{"title":"EX2. Characteristic function","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-2.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-2.html"},{"title":"EX1. Covariance","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-1.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-1.html"},{"title":"レポート課題5(10/31出題)","text":"6vLZgF3nCybQn4I+b+dw0g==;;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-report5.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-report5.html"},{"title":"確率と統計(1)基礎概念","text":"講師： 本多 淳也 参考書： エージェントアプローチ人工知能 第2版 参考書： イラストで学ぶ 人工知能概論 In [1]: import numpy as np import matplotlib.pyplot as plt 講義概要 確率変数と確率分布 確率分布の性質を表す指標 同時確率 条件付き確率 確率変数と確率分布 用語 意味 確率(probability) 事象の起こりやすさを定量的に示す $0$ から $1$ の値 確率変数(random variable) その変数に関する任意の事象に対して確率が定義されている変数 確率分布(probability distribution) 確率変数に関する各事象に対してその確率を与える関数 離散型(discrete type)確率変数 ある可算集合 $\\mathcal{X}$ の中のいずれかの値をとる確率変数 確率質量関数(probability mass function) $f(x)$ $$f(x)\\geq0,\\quad \\sum_{x\\in\\mathcal{X}}f(x) = 1$$ 連続型(continuous type)確率変数 連続値をとる確率変数 確率密度関数(probability density function) $f(x)$ $$f(x)\\geq0,\\quad\\int_{-\\infty}&#94;{\\infty}f(x)dx=1$$ 累積分布関数(cumulative distribution function) $F(x)$ $$F(x) = P(X\\leq x)=\\int_{-\\infty}&#94;{x}f(u)du\\ \\text{ or } \\sum_{i:i\\leq x}f(i)$$ 確率分布の性質を表す指標 用語 数式 説明 期待値(expectation) $$E(X) = \\sum_xxf(x)\\ \\text{ or }\\int xf(x)dx$$ 確率変数の値の平均（正確には確率による重み付きの平均） 確率変数を代表する値を表す指標 ※ 外れ値(outlier)に敏感 中央値(median) $P(X\\leq x)=1/2$ を満たす $x$ データを大きい順（または小さい順）に並べたときの真ん中の値。 最頻値(mode) $f(x)$ を最大にする $x$ データの中で最も頻度が高い値 分散(variance) $$\\begin{aligned}V(X) &= E\\left\\{(X-E[X])&#94;2\\right\\}\\\\&=E\\left\\{X&#94;2-2E[X]X+(E[X])&#94;2\\right\\}\\\\&=E[X&#94;2]-E\\left[2E[X]X\\right]+(E[X])&#94;2\\\\&=E[X&#94;2]-2E[X]E[X]+(E[X])&#94;2\\\\&=E[X&#94;2]-(E[X])&#94;2\\end{aligned}$$ 確率変数の散らばり具合を表す指標 標準偏差(standard devariation) $\\sqrt{V(X)}$ 分散の平方根 標準化(standardization) $$Z=\\frac{X-E(X)}{\\sqrt{V(X)}}$$ 任意の確率変数 $X$ に対して、期待値 $0$、分散 $1$ の確率変数 $Z$ が定義できる。 歪度(skewness) $$\\alpha_3 = \\frac{E\\left\\{\\left[X - E(X)\\right]&#94;3\\right\\}}{\\left\\{V(X)\\right\\}&#94;{3/2}}$$ 確率変数の非対称性を表す。 劣度(kurtosis) $$\\beta_4 = \\frac{E\\left\\{\\left[X - E(X)\\right]&#94;4\\right\\}}{\\left\\{V(X)\\right\\}&#94;{2}}-3$$ 確率分布の尖り具合を表す。 積率(moment) $$\\mu_r = E\\left[X&#94;r\\right]$$ 期待値・分散・歪度・劣度などを表すパラメータ。全ての次数の積率を指定すれば、確率分布を一位に決定することができる。（左は $r$ 次の積率） 積率母関数(moment generating function) $$M_X(t) = E[e&#94;{tX}]=\\begin{cases}\\sum_xe&#94;{tx}f(x)\\\\\\int e&#94;{tx}f(x)dx\\end{cases}\\\\ M_X&#94;{(r)}(0)=\\mu_r$$ 全ての次数の積率を生成する関数。存在しない（無限大に発散する）こともある。 In [2]: def computation_variance ( n = 10000 , mu = 0 , sigma = 1 , seed = None ): X = np . random . RandomState ( seed ) . normal ( loc = mu , scale = sigma , size = n ) EX = sum ( X ) / n EX2 = sum ( X ** 2 ) / n # Calculate variance in 3 ways. var1 = np . var ( X ) var2 = sum (( X - EX ) ** 2 ) / n var3 = EX2 - EX ** 2 print ( \"`np.var(X)` =\" , var1 ) print ( \"E{(X - E[X])&#94;2} =\" , var2 ) print ( \"E[X&#94;2] - (E[X])&#94;2 =\" , var3 ) In [3]: computation_variance ( mu = 100 , seed = 0 ) `np.var(X)` = 0.9752679753477969 E{(X - E[X])&#94;2} = 0.9752679753477979 E[X&#94;2] - (E[X])&#94;2 = 0.9752679752218683 In [4]: computation_variance ( mu = 1e8 , seed = 1 ) `np.var(X)` = 0.9975731614280597 E{(X - E[X])&#94;2} = 0.9975731614281662 E[X&#94;2] - (E[X])&#94;2 = -98.0 ※ 「二乗の平均 - 平均の二乗」は丸め誤差の影響を受けやすい 歪度(skewness) 確率変数の非対称性を表す。 $$\\alpha_3 = \\frac{E\\left\\{\\left[X - E(X)\\right]&#94;3\\right\\}}{\\left\\{V(X)\\right\\}&#94;{3/2}}$$ In [5]: def plot_skewness ( ax = None , seed = None , n = 100 ): if ax == None : fig , ax = plt . subplots () X = np . random . RandomState ( seed ) . randint ( low = 1 , high = 7 , size = n ) ax . hist ( X , density = True , bins = 6 , color = \"blue\" , align = 'left' ) EX = np . mean ( X ) VX = np . var ( X ) skewness = np . mean (( X - EX ) ** 3 ) / VX ** ( 3 / 2 ) ax . set_title ( f \"skewness = {skewness:.3f} \" ) return ax In [6]: fig = plt . figure ( figsize = ( 12 , 3 )) for i , seed in enumerate ([ 44756 , 96331 , 76432 ]): ax = fig . add_subplot ( 1 , 3 , i + 1 ) ax = plot_skewness ( ax = ax , seed = seed ) plt . show () 劣度(kurtosis) 確率分布の尖り具合を表す。 $$\\beta_4 = \\frac{E\\left\\{\\left[X - E(X)\\right]&#94;4\\right\\}}{\\left\\{V(X)\\right\\}&#94;{2}}-3$$ In [7]: X = np . linspace ( - 5 , 5 , 10000 ) In [8]: f1 = lambda x : 1 / 1250 * ( 5 - abs ( x )) ** 4 f2 = lambda x , mu = 0 , sigma = 1 : 1 / np . sqrt ( 2 * np . pi * sigma ** 2 ) * np . exp ( - ( x - mu ) ** 2 / 2 * sigma ** 2 ) f3 = lambda x : 1 / 4 if abs ( x ) <= 2 else 0 In [9]: def plot_kurtosis ( X , func , ax = None ): if ax == None : fig , ax = plt . subplots () Y = np . array ([ func ( x ) for x in X ]) ax . plot ( X , Y , color = \"red\" ) Y /= sum ( Y ) EX = np . sum ( Y * X ) VX = np . sum ( Y * ( X - EX ) ** 2 ) kurtosis = np . sum ( Y * ( X - EX ) ** 4 ) / VX ** 2 - 3 ax . set_title ( f \"kurtosis = {kurtosis:.3f} \" ) return ax In [10]: fig = plt . figure ( figsize = ( 12 , 3 )) for i , func in enumerate ([ f1 , f2 , f3 ]): ax = fig . add_subplot ( 1 , 3 , i + 1 ) ax = plot_kurtosis ( X = X , func = func , ax = ax ) ax . set_xlim ( - 5 , 5 ); ax . set_ylim ( 0 , 1 ) plt . show () 同時確率 用語 数式 説明 同時確率(joint probability) 複数の確率変数が関わる確率 同時確率質量関数 $$P(X=x,Y=y) = f(x,y)\\\\f(x,y)\\geq0,\\quad\\sum_{x\\in\\mathcal{X}}\\sum_{y\\in\\mathcal{Y}}f(x,y)=1$$ 離散型の同時確率 同時確率密度関数 $$P(a\\leq X\\leq b,c\\leq Y\\leq d) = \\int_c&#94;d\\int_a&#94;bf(x,y)dxdy\\\\f(x,y)\\geq0,\\quad\\int_{-\\infty}&#94;{\\infty}\\int_{-\\infty}&#94;{\\infty}f(x,y)dxdy=1$$ 連続型の同時確率 共分散 $X$ と $X&#94;{\\prime}$ の 共分散(covariance) ： $$\\mathrm{Cov}(X,X&#94;{\\prime}) = E\\left[(X-E[X])(X&#94;{\\prime}-E[X&#94;{\\prime}])\\right]$$ $\\mathrm{Cov}(X,X&#94;{\\prime})>0$ の時：$X$ と $X&#94;{\\prime}$ の増減は 同傾向 $\\mathrm{Cov}(X,X&#94;{\\prime})<0$ の時：$X$ と $X&#94;{\\prime}$ の増減は 逆傾向 $\\mathrm{Cov}(X,X&#94;{\\prime})=0$ の時：$X$ と $X&#94;{\\prime}$ の増減は 無関係 共分散は、以下の形でも表されるので、A社の株価を $X$、B社の株価を $X&#94;{\\prime}$ とすると、以下の解釈も可能 $$V(X+X&#94;{\\prime}) = V(X) + V(X&#94;{\\prime}) + 2\\mathrm{Cov}(X,X&#94;{\\prime})$$ $\\mathrm{Cov}(X,X&#94;{\\prime})>0\\Longleftrightarrow V(X+X&#94;{\\prime})>V(X)+V(X&#94;{\\prime})$ なので、A,B両者の株を買うと分散が 拡大 する → 変動リスクが増大し、資産価値は不安定 $0>\\mathrm{Cov}(X,X&#94;{\\prime})\\Longleftrightarrow V(X)+V(X&#94;{\\prime})>V(X+X&#94;{\\prime})$ なので、A,B両者の株を買うと分散が 縮小 する → 変動リスクが抑制され、資産価値は安定 独立性 全ての $(x,y)$ で $p_{X,Y}(x,y) = p_X(x)p_Y(y)$ の時、$X$ と $Y$ は互いに 独立(independent) 2つの確率変数が独立の時、 積の期待値は各々の期待値の積と一致 $$E[XY] = E[X]E[Y]$$ 和の積率母関数は各々の積率母関数の積と一致 $$M_{X+Y}(t) = M_X(t)M_Y(t)$$ ２つの確率変数は無相関 $$\\mathrm{Cov}(X,Y) = 0$$ 2つの確率変数が独立ならば無相関であるが、逆は一般には正しくない。 条件付き確率 ベイズの定理(Bayes' theorem) $$P(X|Y) = \\frac{P(Y|X)P(X)}{P(Y)}$$ In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-5.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-5.html"},{"title":"生物物理学 第6回","text":"エネルギー生産系の仕組み（細胞内小器官） 光関連の現象 細胞・器官 たんぱく質等 眼で見る 視細胞（桿体、錐体細胞） ロドプシン等 光合成 葉緑体 光システム（タンパク質複合体） 蛍の光 発色細胞 ルシフェリン+ルシフェラーゼ クラゲの光 発色細胞 エコーリン、GFP(green fluorescence protein) 日焼け 色素形成細胞（メラノサイト） メラニン（チロシンの重合体） 体内時計 目のメラノプシン発現網膜神経細胞 メラノプシン ATPを作るプロセス 光合成(photosynthesis) は、高等植物や緑藻（青色細菌）が 葉緑体（クロロプラスト） 内で行う、二酸化炭素の固定反応である。 この過程で水が酸素に酸化され、二酸化炭素は還元されて糖になる。 光合成は大きく2つの段階に区別される。 1つは 明反応 と呼ばれ、光のエネルギーを利用して水が酸素に酸化されるとともに、二酸化炭素の還元に必要な \\(\\mathrm{NADPH}_2&#94;+\\) と \\(\\mathrm{ATP}\\) をつくりだす。 もう1つの段階は 暗反応 と呼ばれ、 \\(\\mathrm{NADPH}_2&#94;+\\) と \\(\\mathrm{ATP}\\) を利用して二酸化炭素から種々の糖がつくられる。 クロロプラスト中の大部分のクロロフィルは 光を集めるアンテナ の役割を果たす。吸収された光子のエネルギーはアンテナクロロフィル間を励起エネルギーとして移動し、 アンテナクロロフィル よりも励起エネルギーの 低い 反応中心クロロフィル に集められる。 FRET(Fluorescence resonance energy transfer) $$\\text{Transfer Efficiency at two rates: } E= \\frac{k_T}{k_T+k_F} = \\frac{1}{1 + \\frac{k_F}{k_T}}$$ \\(k_T\\) ：Donor から Acceptor に移動する速度 \\(k_F\\) ：Donor が吸収する速度 Chl(from) Chl(to) 移動効率（移動距離） b(F) a(A) 高 b(F) b(A) 中 a(F) a(A) 中 a(F) b(A) 低 幅 \\(L\\) の中の電子のエネルギー準位： \\(E_n = \\frac{1}{8m}\\left(\\frac{nh}{L&#94;{\\prime}}\\right)&#94;2\\) フェミルの黄金律 時間的に変化しない弱い相互作用（摂動）のある電子系が、あるエネルギー固有状態から別のエネルギー固有状態へ移る際の単位時間あたりの遷移確率は、摂動法（時間で展開）の最低次数として近似計算できる。 遷移速度 \\(k_T\\) は、エネルギー固有状態の単位時間あたりの遷移確率である。 $$\\Psi_{\\mathrm{Da}}\\Psi_{\\mathrm{Ab}}\\underset{k_T}{\\longrightarrow}\\Psi_{\\mathrm{Db}}\\Psi_{\\mathrm{Aa}}$$ Da: Active state of Donor Ab: Ground state of Acceptor 光合成の概要 水を分解して、電子を膜間に入れる。 光を用いて電子の酸化還元電位を上げる。 酸化還元電位を利用してチラコイド外のプロトンを内側に輸送する。 内側のプロトンのケミカルポテンシャルを利用してATPを合成する。 まとめ 共役長が長くなる と吸収波長は長くなり、可視光の利用が可能となる。 分子間距離が近いと エネルギー移動や電子移動 が起こる。電子移動の方向は、酸化還元電位に依存する。 エネルギーを 酸化還元電位 に交換する（逆も） 生物は、 多数のタンパク質が 上記1-3の原理を巧みに利用して、光化学反応（葉緑体内の光合成）や電子伝達（ミトコンドリア内）の機能を行う。 ATP を合成するF1,F0は高効率でATPを合成する。特に、F1は仕事効率が約100%である。 .prompt { /* This is for jupyter blog.*/ min-width: 0; /* This padding is tuned to match the padding on the CodeMirror editor. */ padding: 0em 0.4em 0em 0em; margin: 0px; font-family: monaco; } /*蛍光ペン(pink)*/ .marker-pink { color: #c45a5a; background: linear-gradient(transparent 70%, #ff66ff 60%); font-weight: bold; } /*蛍光ペン(blue) & hover info*/ .marker-info { color: #5C7DC4; background: linear-gradient(transparent 70%, #66FFCC 60%); font-weight: bold; position: relative; cursor: pointer; } .marker-info:hover:before { opacity: 1; z-index: 2; } .marker-info:before { content: attr(aria-label); opacity: 0; position: absolute; top: 30px; right: -90px; font-size: 14px; width: 300px; padding: 10px; color: #fff; background-color: #555; border-radius: 3px; pointer-events: none; } /* 枠囲み */ .frame { border: solid 1.0px #000000; padding: 0.5em 1em; margin: 2em 0; } /* 暗記用 question box */ span .qbox{ display: none; } span.qbox-wrapper:hover .qbox-default{ display: none; } span.qbox-wrapper:hover .qbox{ display: inline; } .qbox-wrapper{ font-weight: bold; padding: 5px 10px; border-radius: 5px; border: solid 2px #000000; margin: 5px } .qbox-wrapper:hover{ text-shadow: 0px 0px 6px rgba(255, 255, 255, 1); -webkit-box-shadow: 0px 5px 40px -10px rgba(0,0,0,0.57); -moz-box-shadow: 0px 5px 40px -10px rgba(0,0,0,0.57); transition: all 0.4s ease 0s; } /* 画像吹き出し */ .balloon { display: table; width: 100%; } .balloon_img { display: table-cell; vertical-align: middle; width: 50%; padding-right: 10px; } .balloon_comment { border: #83274e solid 4px; position: relative; background: #fff; padding: 12px; border-radius: 13px; display: block } .balloon_comment::before { content: \"\"; position: absolute; border-right: 23px solid #83274e; border-bottom: 20px solid transparent; border-top: 20px solid transparent; top: 30%; left: -23px; } .balloon_comment::after { content: \"\"; position: absolute; border-right: 24px solid #fff; border-bottom: 20px solid transparent; border-top: 20px solid transparent; top: 30%; left: -17px; } if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物物理学","url":"https://iwasakishuto.github.io/University/3A/生物物理学-6.html","loc":"https://iwasakishuto.github.io/University/3A/生物物理学-6.html"},{"title":"頻度パターンマイニング","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) 参考資料： 頻出パターン発見アルゴリズム入門 -アイテム集合からグラフまで- Data Mining A formal study of efficient methods for extracting interesting rules and patterns from massive data. Frequent itemset mining. Closed pattern mining. Structured data mining. Itemset Mining Frequent Itemset Mining Closed Itemset Mining Closure Extension LCM Itemset Mining Frequent Itemset Mining Finding all \"frequent\" sets of elements(items) appearing $\\sigma$ times or more in a database. Definitions Database A set $\\Sigma = \\{1,\\ldots,n\\}$ of items(elements). Tramsaction database A set $T=\\{t_1,\\ldots,t_m\\}$ of subsets of $\\Sigma$ Each subset $t\\subseteq\\Sigma$ is called a transaction Frequent sets Itemset $X$ appears in transaction t: $X\\subseteq t$ Occurrence of $X$ in database $T$: $$\\mathrm{Occ}(X,T) = \\left\\{t\\in T: X\\subseteq t\\right\\}$$ Frequency of $X$: $\\mathrm{Fr}(X,T) = |\\mathrm{Occ}(X,T)|$ Minimum support (minsup): $0\\leq\\sigma\\leq|T|$ $X$ is frequent in $T$ if $\\mathrm{Fr}(X,T)\\geq\\sigma$ Market Basket Data Popular application of itemset mining. Business and Market data analysis. ※ Visit \"The Instacart Online Grocery Shopping Dataset 2017\" and Download \"instacart_2017_05_01\" Folder. In [1]: ! tree instacart_2017_05_01 instacart_2017_05_01 ├── aisles.csv ├── departments.csv ├── order_products__prior.csv ├── order_products__train.csv ├── orders.csv └── products.csv 0 directories, 6 files In [2]: import numpy as np import pandas as pd products.csv In [3]: df_products = pd . read_csv ( \"./instacart_2017_05_01/products.csv\" ) df_products . head ( 3 ) Out[3]: .dataframe thead tr:only-child th { text-align: right; } .dataframe thead th { text-align: left; } .dataframe tbody tr th { vertical-align: top; } product_id product_name aisle_id department_id 0 1 Chocolate Sandwich Cookies 61 19 1 2 All-Seasons Salt 104 13 2 3 Robust Golden Unsweetened Oolong Tea 94 7 In [4]: print ( f \"`products.csv` data num: {len(df_products)}\" ) `products.csv` data num: 49688 In [5]: id2name = dict ( zip ( df_products . product_id , df_products . product_name )) order_products__train.csv In [6]: df_order_products = pd . read_csv ( \"./instacart_2017_05_01/order_products__train.csv\" ) df_order_products . head ( 3 ) Out[6]: .dataframe thead tr:only-child th { text-align: right; } .dataframe thead th { text-align: left; } .dataframe tbody tr th { vertical-align: top; } order_id product_id add_to_cart_order reordered 0 1 49302 1 1 1 1 11109 2 1 2 1 10246 3 0 In [7]: N_transactions_total = len ( df_order_products . groupby ( \"order_id\" )) print ( f \"Total number of transactions: {N_transactions_total} \" ) Total number of transactions: 131209 Extract Only N products In [8]: N = 10 In [9]: extracted_ids = df_order_products . groupby ( \"product_id\" ) . size () . reset_index () . sort_values ( by = 0 , ascending = False ) . product_id [: N ] . values In [10]: # Only focus on N products. df_order_products_extracted = df_order_products [ df_order_products . product_id . apply ( lambda x : x in extracted_ids )] In [11]: N_transactions_extracted = len ( df_order_products_extracted . groupby ( \"order_id\" )) print ( f \"Transactions: {N_transactions_extracted} / {N_transactions_total} \" ) Transactions: 59887/131209 In [12]: for i , extracted_id in enumerate ( extracted_ids ): print ( f \"No.{i+1:>0{len(str(N))}}: {id2name[extracted_id]} \" ) No.01: Banana No.02: Bag of Organic Bananas No.03: Organic Strawberries No.04: Organic Baby Spinach No.05: Large Lemon No.06: Organic Avocado No.07: Organic Hass Avocado No.08: Strawberries No.09: Limes No.10: Organic Raspberries In [13]: df_product_id_OneHot = pd . get_dummies ( df_order_products_extracted . product_id ) In [14]: df_order_OneHot = pd . concat ([ df_order_products_extracted . order_id , df_product_id_OneHot ], axis = 1 ) In [15]: df = df_order_OneHot . groupby ( \"order_id\" ) . sum () . reset_index () In [16]: df . head ( 3 ) Out[16]: .dataframe thead tr:only-child th { text-align: right; } .dataframe thead th { text-align: left; } .dataframe tbody tr th { vertical-align: top; } order_id 13176 16797 21137 21903 24852 26209 27966 47209 47626 47766 0 1 1 0 0 0 0 0 0 1 0 0 1 96 0 0 0 0 0 0 1 0 0 0 2 98 1 0 0 0 0 0 1 0 0 0 In [17]: database = np . array ( df [ df . columns [ 1 :]]) In [18]: database Out[18]: array([[1, 0, 0, ..., 1, 0, 0], [0, 0, 0, ..., 0, 0, 0], [1, 0, 0, ..., 0, 0, 0], ..., [0, 0, 1, ..., 0, 0, 0], [0, 0, 0, ..., 0, 0, 0], [0, 0, 1, ..., 0, 0, 0]], dtype=uint8) In [19]: N , M = database . shape In [20]: print ( f \"n_samples: {N} \" ) print ( f \"n_features: {M} \" ) n_samples: 59887 n_features: 10 In [21]: from kerasy.search.itemset import FrequentSet In [22]: model = FrequentSet ( threshold = 100 ) In [23]: model . fit ( database ) In [24]: # Frequent Itemset. (frq >= threshold) model . all Out[24]: [None, array([0]), array([0, 1]), array([0, 1, 3]), array([0, 2]), array([0, 2, 3]), array([0, 2, 3, 6]), array([0, 2, 3, 7]), array([0, 2, 5]), array([0, 2, 6]), array([0, 2, 6, 7]), array([0, 2, 7]), array([0, 2, 8]), array([0, 2, 9]), array([0, 3]), array([0, 3, 5]), array([0, 3, 6]), array([0, 3, 6, 7]), array([0, 3, 7]), array([0, 3, 8]), array([0, 3, 9]), array([0, 5]), array([0, 5, 6]), array([0, 5, 7]), array([0, 5, 8]), array([0, 5, 9]), array([0, 6]), array([0, 6, 7]), array([0, 6, 8]), array([0, 6, 9]), array([0, 7]), array([0, 7, 8]), array([0, 8]), array([0, 8, 9]), array([0, 9]), array([1]), array([1, 3]), array([1, 3, 4]), array([1, 3, 9]), array([1, 4]), array([1, 4, 5]), array([1, 4, 8]), array([1, 4, 9]), array([1, 5]), array([1, 5, 8]), array([1, 6]), array([1, 7]), array([1, 8]), array([1, 8, 9]), array([1, 9]), array([2]), array([2, 3]), array([2, 3, 4]), array([2, 3, 5]), array([2, 3, 6]), array([2, 3, 7]), array([2, 3, 8]), array([2, 3, 9]), array([2, 4]), array([2, 4, 5]), array([2, 4, 6]), array([2, 4, 7]), array([2, 4, 8]), array([2, 4, 9]), array([2, 5]), array([2, 5, 6]), array([2, 5, 7]), array([2, 5, 8]), array([2, 5, 9]), array([2, 6]), array([2, 6, 7]), array([2, 6, 8]), array([2, 6, 9]), array([2, 7]), array([2, 7, 8]), array([2, 8]), array([2, 8, 9]), array([2, 9]), array([3]), array([3, 4]), array([3, 4, 5]), array([3, 4, 5, 8]), array([3, 4, 6]), array([3, 4, 7]), array([3, 4, 8]), array([3, 4, 8, 9]), array([3, 4, 9]), array([3, 5]), array([3, 5, 7]), array([3, 5, 8]), array([3, 5, 8, 9]), array([3, 5, 9]), array([3, 6]), array([3, 6, 7]), array([3, 6, 8]), array([3, 6, 9]), array([3, 7]), array([3, 7, 8]), array([3, 8]), array([3, 8, 9]), array([3, 9]), array([4]), array([4, 5]), array([4, 5, 7]), array([4, 5, 8]), array([4, 5, 8, 9]), array([4, 5, 9]), array([4, 6]), array([4, 6, 8]), array([4, 6, 9]), array([4, 7]), array([4, 7, 8]), array([4, 8]), array([4, 8, 9]), array([4, 9]), array([5]), array([5, 6]), array([5, 6, 7]), array([5, 6, 8]), array([5, 7]), array([5, 7, 8]), array([5, 8]), array([5, 8, 9]), array([5, 9]), array([6]), array([6, 7]), array([6, 8]), array([6, 8, 9]), array([6, 9]), array([7]), array([7, 8]), array([8]), array([8, 9]), array([9])] Association Rule Mining Confidence : $\\mathrm{Supp}(A\\text{ and }B)/\\mathrm{Supp}(A)$ (Probability of $B$, Given $A$) What item is likely to be bought when $A$ is bought. Search: large support, confidence large Post-processing of itemset mining Summary Itemset mining is the simplest of all mining algorithms. Need to maintain occurrence of each pattern in database. Tree by lexicographical order is (implicitly) used. Closed Itemset Mining [Problem] in Frequent Pattern Mining Huge Number of frequent itemsets Hard to analyze Most of them are similar [Solution] Closed Pattern Mining Find only closed patterns Observation : Most frequent itemset $X$ can be extended without changing occurrence by adding new elements. definition : An itemset $X$ is a \"closed set\" if and only if there is no proper superset of $X$ with the same frequency (thus the same occurrence set). A closed itemset is the maximal set among all itemsets with the same occurrences. Equivalence class $[X] =\\left\\{Y | \\mathrm{Occ}(X)=\\mathrm{Occ}(Y)\\right\\}$ Implementation. Brute-force: Stupid Baseline ALGORITHM: Bruteforcel First, generate all frequent itemsets. Check them one by one via maximality test Finally, extract all closed sets Maximality test for each candidate frequent set $X$ Add some element $e$ in $\\Sigma$ to $X$ If $\\mathrm{Freq}(X U \\{e\\})$ is properly less than $\\mathrm{Freq}(X)$ then reject $X$. ※ Number of patterns usually exponential to input size, so Brute-force is exponential delay w.r.t. pattern size. Reverse Search A general mathematical framework to design enumeration algorithms. Can be used to prove the correctness of the algorithm. Popular in computational geometry. Data mining algorithms can be explained in remarkable simplicity. How to do reverse Search? Native Backtracking → Duplication Duplication chack by Marking → Exponential Memory. Reduction Map : Mapping from a children to the parent. LCM(Linear Time Closed Sets Miner) Key Algorithm: Prefix Preserving Closure Extension = Children generation from the reduction map. 飽和集合列挙アルゴリズムを用いた大規模データベースからのルール発見手法 Python Implementation: I'm doing now XD Summary Closure Extension: Jump from closed set to closed set. LCM: Linear Delay. Very fast in practice, too (Winner of FIMI'04(Frequent Itemset Mining Implementation Workshop)). Relation to clique enumeration. In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-5.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-5.html"},{"title":"機械学習概論","text":"講師： 山崎俊彦 参考書： CG-ARTS協会発行「ディジタル画像処理」 参考書： R. Szeliski, Computer Vision Algorithms and Applications, Springer (PDF版はインターネット上で無料公開) In [1]: import numpy as np import matplotlib.pyplot as plt 教師付き学習(Supervised learning) 大量の教師データがあれば、DNNですごい性能を出せるので、今の研究の主流は以下。 transfer learning (転移学習) few-shot learning (一枚だけで汎化性能を得る。) zero-shot learning (文字の情報を用いて画像の識別を行う。) メタ学習 (どうやって学習すれば良いかを学ぶ。) Nearest Neighbor法 決定木(decision tree) Support Vector Machine(SVM) アンサンブル学習 Neural Network Nearest Neighbor法 In [2]: N = 150 ; K = 3 In [3]: data = np . concatenate ([ np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 0 , 0 ], cov = np . eye ( 2 ), size = int ( N / 3 )), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 1 , 5 ], cov = np . eye ( 2 ), size = int ( N / 3 )), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 3 , 2 ], cov = np . eye ( 2 ), size = int ( N / 3 )), ]) x , y = data . T In [4]: cls = np . concatenate ([ np . full ( shape = int ( N / 3 ), fill_value = 0 ), np . full ( shape = int ( N / 3 ), fill_value = 1 ), np . full ( shape = int ( N / 3 ), fill_value = 2 ), ]) In [5]: xmin , ymin = np . min ( data , axis = 0 ) xmax , ymax = np . max ( data , axis = 0 ) Xs , Ys = np . meshgrid ( np . linspace ( xmin , xmax , 100 ), np . linspace ( ymin , ymax , 100 )) XYs = np . c_ [ Xs . ravel (), Ys . ravel ()] In [6]: # Nearest Neighbor Zs = np . asarray ([ cls [ np . argmin ( np . sum ( np . square ( xy - data ), axis = 1 ))] for xy in XYs ], dtype = int ) . reshape ( Xs . shape ) In [7]: plt . figure ( figsize = ( 8 , 6 )) plt . scatter ( x , y , c = cls , s = 50 ) plt . pcolor ( Xs , Ys , Zs , alpha = 0.2 ) plt . title ( \"Nearest Neighbor\" ), plt . xlim ( xmin , xmax ), plt . ylim ( ymin , ymax ) plt . xticks ([]), plt . yticks ([]) plt . show () 決定木(decision tree) $M$ 個のクラスに分割したとして、 $$\\text{Information gain} = \\text{Entropy}(S) - \\left\\{\\text{Entropy}(S_1) + \\cdots + \\text{Entropy}(S_M)\\right\\}$$ が最大になるように条件を設定する。 In [8]: from kerasy.ML.tree import DecisionTreeClassifier In [9]: N = 150 ; K = 3 In [10]: data = np . concatenate ([ np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 0 , 0 ], cov = np . eye ( 2 ), size = int ( N / 3 )), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 1 , 5 ], cov = np . eye ( 2 ), size = int ( N / 3 )), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 3 , 2 ], cov = np . eye ( 2 ), size = int ( N / 3 )), ]) x , y = data . T In [11]: cls = np . concatenate ([ np . full ( shape = int ( N / 3 ), fill_value = 0 ), np . full ( shape = int ( N / 3 ), fill_value = 1 ), np . full ( shape = int ( N / 3 ), fill_value = 2 ), ]) In [12]: xmin , ymin = np . min ( data , axis = 0 ) xmax , ymax = np . max ( data , axis = 0 ) Xs , Ys = np . meshgrid ( np . linspace ( xmin , xmax , 100 ), np . linspace ( ymin , ymax , 100 )) XYs = np . c_ [ Xs . ravel (), Ys . ravel ()] In [13]: model = DecisionTreeClassifier ( criterion = \"gini\" , max_depth = 3 , random_state = 0 ) model . fit ( data , cls ) predictions = model . predict ( data ) In [14]: # Decision Tree Zs = model . predict ( XYs ) . reshape ( Xs . shape ) In [15]: fig = plt . figure ( figsize = ( 18 , 4 )) for i , seed in enumerate ([ 0 , 1 , 5 ]): ax = fig . add_subplot ( 1 , 3 , i + 1 ) model = DecisionTreeClassifier ( criterion = \"gini\" , max_depth = 3 , random_state = seed ) model . fit ( data , cls ) predictions = model . predict ( data ) Zs = model . predict ( XYs ) . reshape ( Xs . shape ) ax . scatter ( x , y , c = predictions , s = 50 ) ax . pcolor ( Xs , Ys , Zs , alpha = 0.2 ) ax . set_title ( f \"Decision Tree seed= {seed} \" ), ax . set_xlim ( xmin , xmax ), ax . set_ylim ( ymin , ymax ) ax . set_xticks ([]), ax . set_yticks ([]) plt . tight_layout () plt . show () Support Vector Machine(SVM) $$f(\\mathbf{x}) = \\mathbf{w}\\cdot\\mathbf{x} + \\mathbf{b} = \\mathbf{0}$$ $\\|\\mathbf{w}\\|$ を決定するためには、黄色の線上にある点(support vector)のみ寄与。SVMの重要なところは、通常 $$\\mathrm{Error}_{\\text{世の中全体}}>\\mathrm{Error}_{\\text{見たことのある世界}}$$ であるが、発明者 Vapnic が $$\\mathrm{Error}_{\\text{世の中全体}}\\leq\\mathrm{Error}_{\\text{見たことのある世界}} + \\alpha$$ を証明してしまった。なお、$\\alpha$ も $\\|\\mathbf{w}\\|$ の最小化で最小化できるため、$\\|\\mathbf{w}\\|$ の最小化をひたすら頑張るだけで良い。 ※ 実装は ここ アンサンブル学習 名前 説明 強学習器 bagging トレーニングデータをランダムにサンプリングして学習器 $f&#94;b(\\mathbf{x}),(b=1,2,\\ldots,B)$ を作る。 $$f(\\mathbf{x}) = \\frac{1}{B}\\sum_b&#94;Bf&#94;b(\\mathbf{x})$$ Random Forest (RF) 決定木 $f&#94;r(\\mathbf{x}),(r=1,2,\\ldots,R)$ をランダムに作る。木がたくさんあるので森(forest)になる。 $$f(\\mathbf{x}) = \\frac{1}{R}\\sum_r&#94;Rf&#94;r(\\mathbf{x})$$ boosting 弱学習器 $f&#94;t(\\mathbf{x})$ の精度に応じた重み付き多数決を行う。なお、$\\alpha$ の決め方はadaboostやXGboostなど様々ある。 $$f(\\mathbf{x}) = \\frac{1}{T}\\sum_t&#94;T\\alpha&#94;tf&#94;t(\\mathbf{x})$$ Neural Network パーセプトロン $\\mathbf{w}$ を法線と考えると、超平面のあっちとこっちを判定しているだけ＝SVMと同じ。 perceptronの学習アルゴリズムは、下記の流れで収束することが知られている。 重み（法線）ベクトルをランダムに設定 2クラス $0,1$ があったとして、training dataから順に取り出して、$y$ を出力してみる（平面のどちら側か） 合っていたら何もしない。間違っていたら $$ \\begin{cases} \\mathbf{w}\\longleftarrow\\mathbf{w} +\\rho \\mathbf{x} & (\\text{クラス1を0と誤判定した時})\\\\ \\mathbf{w}\\longleftarrow\\mathbf{w} -\\rho \\mathbf{x} & (\\text{クラス0を1と誤判定した時}) \\end{cases}$$ 2,3を全てのtraining dataに対して行う。 全てのtraining dataに対して正解が規定回数に達したら終了。それ以外の場合、2に戻る。 # Pythonでプログラム化すると以下。 while True : n_true = 0 for x , c in zip ( data , cls ): if c == 1 and sum ( w * x ) < 0 : w += rho * x elif c == 0 and sum ( w * x ) >= 0 : w -= rho * x else : n_true += 1 if n_true > N * true_rate : break In [16]: n_cls0 = 30 ; n_cls1 = 40 N = n_cls0 + n_cls1 In [17]: w = np . random . RandomState ( 0 ) . uniform ( size = 2 ) # Initialization. rho = 1e-3 # step size. true_rate = 0.9 In [18]: # train_x data = np . concatenate ([ np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 2 , 4 ], cov = np . eye ( 2 ), size = n_cls0 ), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 3 , 1 ], cov = np . eye ( 2 ), size = n_cls1 ), ]) X1 , X2 = data . T # train_t cls = np . concatenate ([ np . zeros ( shape = ( n_cls0 ), dtype = int ), np . ones ( shape = ( n_cls1 ), dtype = int ) ]) In [19]: while True : n_true = 0 for x , c in zip ( data , cls ): if c == 1 and sum ( w * x ) < 0 : w += rho * x elif c == 0 and sum ( w * x ) >= 0 : w -= rho * x else : n_true += 1 if n_true > N * true_rate : break In [20]: X = np . linspace ( min ( X1 ), max ( X2 ), 1000 ) Y = ( - w [ 0 ] / w [ 1 ]) * X In [21]: plt . scatter ( X1 , X2 , c = cls ) plt . plot ( X , Y , color = \"red\" ) plt . xlabel ( \"$x_1$\" , fontsize = 18 ), plt . ylabel ( \"$x_2$\" , fontsize = 18 ) plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"映像メディア工学","url":"https://iwasakishuto.github.io/University/3A/映像メディア工学-4.html","loc":"https://iwasakishuto.github.io/University/3A/映像メディア工学-4.html"},{"title":"生物統計論 第5回","text":"In [1]: import numpy as np import matplotlib.pyplot as plt Section5.1 Bayesian Model Comparison Overfitting In [2]: N = 15 Ms = [ 2 , 4 , 8 , 16 ] seed = 0 In [3]: # Training data. x = np . random . RandomState ( seed ) . uniform ( low = 0 , high = 1 , size = N ) Noise = np . random . RandomState ( seed ) . normal ( loc = 0 , scale = 0.1 , size = N ) t = np . sin ( 2 * np . pi * x ) + Noise In [4]: fig = plt . figure ( figsize = ( 12 , 8 )) for i , M in enumerate ( Ms ): ax = fig . add_subplot ( 2 , 2 , i + 1 ) # Training. X = np . array ([ x ** m for m in range ( M + 1 )]) . T w = np . linalg . solve ( X . T . dot ( X ), X . T . dot ( t )) # For Validation plot. Xs = np . linspace ( 0 , 1 , 1000 ) t_true = np . sin ( 2 * np . pi * Xs ) t_pred = w . dot ( np . array ([ Xs ** m for m in range ( M + 1 )])) # RSS(Residual Sum of Squares) residual = t - w . dot ( np . array ([ x ** m for m in range ( M + 1 )])) RSS = residual . T . dot ( residual ) # Plot. ax . plot ( Xs , t_true , color = \"black\" , label = \"$t=\\sin(2\\pi x)$\" ) ax . plot ( Xs , t_pred , color = \"red\" , label = f \"prediction ($M= {M} $)\" ) ax . scatter ( x , t , edgecolors = 'blue' , facecolor = \"white\" , label = \"train data\" ) ax . set_title ( f \"Results (RSS=$ {RSS:.3f} $,M=$ {M} $)\" ), ax . set_xlabel ( \"$x$\" ), ax . set_ylabel ( \"$t$\" ) ax . set_xlim ( 0 , 1 ), ax . set_ylim ( - 1.2 , 1.2 ) ax . legend () plt . tight_layout () plt . show () Varying Component Number In [5]: from kerasy.ML.MixedDistribution import MixedGaussian from kerasy.utils.data_generator import generateMultivariateNormal In [6]: N = 200 cls = 6 seed = 123 In [7]: data , means = generateMultivariateNormal ( cls = cls , N = N , scale = 8e-3 , same = False , seed = seed ) x , y = data . T mux , muy = means . T In [8]: # Background Color xmin , ymin = np . min ( data , axis = 0 ); xmax , ymax = np . max ( data , axis = 0 ) Xs , Ys = np . meshgrid ( np . linspace ( xmin , xmax , 100 ), np . linspace ( ymin , ymax , 100 )) XYs = np . c_ [ Xs . ravel (), Ys . ravel ()] In [9]: Nfig = cls col = 3 row = Nfig // col + 1 if Nfig % col != 0 else Nfig//col fig = plt . figure ( figsize = ( 6 * col , 4 * row )) Likelihoods = [] for i , K in enumerate ( range ( 1 , cls + 1 )): ax = fig . add_subplot ( row , col , i + 1 ) model = MixedGaussian ( K = K , random_state = seed ) model . fit ( data , span = 20 ) Z = model . predict ( XYs ) idx = np . argmax ( model . predict ( data ), axis = 1 ) Zs = np . sum ( Z , axis = 1 ) . reshape ( Xs . shape ) # Likelihood. likelihood = np . sum ( Z ) ax . scatter ( x , y , c = idx ) ax . pcolor ( Xs , Ys , Zs , alpha = 0.2 ) ax . set_xlim ( xmin , xmax ) ax . set_ylim ( ymin , ymax ) ax . set_title ( f \"K= {K} , {np.sum(Z):.1f}\" ) Likelihoods . append ( likelihood ) plt . tight_layout () plt . show () In [10]: fig = plt . figure ( figsize = ( 12 , 4 )) axL = fig . add_subplot ( 1 , 2 , 1 ) axL . scatter ( x , y , label = \"data\" ) axL . scatter ( mux , muy , label = \"mean\" , marker = \"*\" , color = \"red\" , s = 150 ) axL . set_title ( \"Training Data.\" ) axL . legend () axR = fig . add_subplot ( 1 , 2 , 2 ) axR . plot ( np . arange ( cls ) + 1 , Likelihoods ) axR . scatter ( np . arange ( cls ) + 1 , Likelihoods ) axR . set_xlabel ( \"num comp\" ) axR . set_ylabel ( \"likelihoods\" ) axR . set_title ( \"Log likelihood vs num comp\" , fontsize = 18 ) plt . tight_layout () plt . show () Cross Validation ※ Not Bayesian estimate the skill of a machine learning model on unseen data. use a limited sample in order to estimate how the model is expected to perform in general when used to make predictions on data not used during the training of the model. In [11]: n_fold = 5 size = N // n_fold Kmax = 30 In [12]: Likelihoods = [] CrossValidationLikelihoods = [] for i , K in enumerate ( range ( 1 , Kmax + 1 )): H = 0 for h in range ( n_fold ): mask = np . ones ( shape = N , dtype = bool ) mask [ h * size :( h + 1 ) * size ] = False model = MixedGaussian ( K = K , random_state = seed ) model . fit ( data [ mask ], span = 20 ) Z = model . predict ( data [ np . logical_not ( mask )]) H += np . sum ( Z ) model = MixedGaussian ( K = K , random_state = seed ) model . fit ( data , span = 20 ) Z = model . predict ( data ) Likelihoods . append ( np . sum ( Z )) CrossValidationLikelihoods . append ( H ) In [13]: fig = plt . figure ( figsize = ( 12 , 4 )) axL = fig . add_subplot ( 1 , 2 , 1 ) axL . plot ( np . arange ( Kmax ) + 1 , CrossValidationLikelihoods ) axL . scatter ( np . arange ( Kmax ) + 1 , CrossValidationLikelihoods ) axL . set_xlabel ( \"num comp\" ), axL . set_ylabel ( \"Cross Validation likelihoods\" ), axL . set_title ( \"Cross Validation Log likelihood vs num comp\" , fontsize = 18 ) axR = fig . add_subplot ( 1 , 2 , 2 ) axR . plot ( np . arange ( Kmax ) + 1 , Likelihoods ) axR . scatter ( np . arange ( Kmax ) + 1 , Likelihoods ) axR . set_xlabel ( \"num comp\" ), axR . set_ylabel ( \"likelihoods\" ), axR . set_title ( \"Log likelihood vs num comp\" , fontsize = 18 ) plt . tight_layout () plt . show () Cross Entropy of Prediction ※ Not Bayesian empirical distribution $D = \\left\\{\\mathbf{x}&#94;{(h)}|h=1,\\ldots,n\\right\\}$ $x\\sim\\mathrm{Emp}(D)$ $f_X(\\mathbf{X}) = \\frac{1}{n}\\sum_{h=1}&#94;n\\delta\\left(\\mathbf{x}-\\mathbf{x}&#94;{(h)}\\right)$ $\\mathbb{E}\\left(g(\\mathbf{x})\\right) = \\frac{1}{n}\\sum_{h=1}&#94;n\\int d\\mathbf{x}g(\\mathbf{x})\\delta\\left(\\mathbf{x}-\\mathbf{x}&#94;{(h)}\\right) = \\frac{1}{n}\\sum_{h=1}&#94;ng\\left(\\mathbf{x}&#94;{(h)}\\right)$ In [14]: seed = 0 N = 1000 In [15]: data = np . random . RandomState ( seed ) . normal ( size = N ) In [16]: Emp = dict ( zip ( data , np . zeros ( N ))) for x in data : Emp [ x ] += 1 / N In [17]: for X , Y in sorted ( Emp . items ()): plt . plot (( X , X ),( 0 , Y ), color = \"black\" , alpha = 0.1 ) plt . title ( \"Empirical distribution (Normal)\" ) plt . xlabel ( \"x\" ) plt . show () We can assume Empirical distribution as a true distribution . Cross Entropy $$ \\begin{aligned} H(D,\\boldsymbol{\\theta}) &= \\text{Cross Entropy between }f_{\\text{Emp}(D)} \\text{ and }f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right)\\\\ &= \\mathbb{E}_{\\text{Emp}(D)}\\left(-\\log f\\left(\\mathbf{X}|\\boldsymbol{\\theta}\\right)\\right)\\\\ &= -\\int f_{\\text{Emp}(D)}(\\mathbf{x})\\log f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right)d\\mathbf{x}\\\\ &= -\\frac{1}{n}\\sum_{h=1}&#94;n\\log f\\left(\\mathbf{x}&#94;{(h)}|\\boldsymbol{\\theta}\\right)\\\\ &= -\\bar{l}&#94;{(n)}\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right) \\end{aligned} $$ We can also say that: $$ \\begin{aligned} H(D,\\boldsymbol{\\theta}) &= -\\int f_{\\text{Emp}}(\\mathbf{x})\\log f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right)d\\mathbf{x}\\\\ &\\Rightarrow \\int f_{\\text{Emp}}(\\mathbf{x})\\log f_{\\text{Emp}}(\\mathbf{x})d\\mathbf{x} -\\int f_{\\text{Emp}}(\\mathbf{x})\\log f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right)d\\mathbf{x}\\\\ &= -\\int f_{\\text{Emp}}(\\mathbf{x})\\log\\left\\{\\frac{f_{\\text{Emp}}(\\mathbf{x})}{f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right)}\\right\\}d\\mathbf{x}\\\\ &= \\mathrm{KL}\\left(f_{\\text{Emp}}\\|f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right)\\right)\\\\ &= \\text{Kullback-Leibler divergence between}f_{\\text{Emp}(D)} \\text{ and }f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right) \\end{aligned} $$ Evidence Approximation ※ Yes Bayesian In a fully Bayesian treatment of the linear basis function model, we would introduce prior distributions over the hyperparameters $\\alpha$, and $\\beta$. $$ \\begin{aligned} p(t|\\mathbf{t},\\mathbf{X},\\mathbf{x},\\alpha,\\beta) &= \\int p(t|\\mathbf{w},\\mathbf{x},\\beta)p(\\mathbf{w}|\\mathbf{t},\\mathbf{X},\\alpha,\\beta)d\\mathbf{w}& (3.57)\\\\ &\\Rightarrow \\int p(t|\\mathbf{w},\\mathbf{x},\\beta)p(\\mathbf{w}|\\mathbf{t},\\mathbf{X},\\alpha,\\beta)p(\\alpha,\\beta|\\mathbf{t},\\mathbf{X})d\\mathbf{w}d\\alpha d\\beta& (3.74) \\end{aligned} $$ Marginalize with respect to these hyperparameters as well as with respect to the parameters $\\mathbf{w}$ to make predictions. Complete marginalization over all of these variables is analytically intractable. We will maximize $(3.74)$ in line with the framework of empirical Bayes (or type 2 maximum likelihood , generalized maximum likelihood , evidence approximation ) Obtain the marginal likelihoo function by first integrating over the parameters $\\mathbf{w}$ $$p(\\mathbf{t}|\\alpha,\\beta) = \\int p(\\mathbf{t}|\\mathbf{w},\\mathbf{X},\\beta)p(\\mathbf{w}|\\alpha)d\\mathbf{w}\\qquad (3.77)$$ Maximize $p(\\mathbf{t}|\\alpha,\\beta)$ with respect to $\\alpha$ and $\\beta$. In [18]: from kerasy.utils.preprocessing import PolynomialBaseTransformer from kerasy.utils.data_generator import generateSin , generateGausian from kerasy.ML.linear import EvidenceApproxBayesianRegression In [19]: N = 20 Ms = np . arange ( 10 ) xmin = 0 ; xmax = 1 seed = 0 In [20]: x_train , y_train = generateSin ( size = N , xmin = xmin , xmax = xmax , seed = seed ) _ , y_noise = generateGausian ( size = N , x = x_train , loc = 0 , scale = 0.15 , seed = seed ) y_train += 1 + y_noise In [21]: alpha = 100 beta = 100 In [22]: evidences = [] history = [] for M in Ms : phi = PolynomialBaseTransformer ( M = M ) x_train_features = phi . transform ( x_train ) model = EvidenceApproxBayesianRegression ( alpha = alpha , beta = beta , iter_max = 10000 ) model . fit ( x_train_features , y_train ) evidences . append ( model . evidence ( x_train_features , y_train )) history . append ( model ) best_M = np . argmax ( evidences [ 1 :]) + 1 best_model = history [ best_M ] In [23]: x_test = np . linspace ( xmin , xmax , 1000 ) phi = PolynomialBaseTransformer ( M = best_M ) x_test_features = phi . transform ( x_test ) y_test = 1 + np . sin ( 2 * np . pi * x_test ) y_pred , y_std = best_model . predict ( x_test_features ) In [24]: fig = plt . figure ( figsize = ( 12 , 4 )) axEVI = fig . add_subplot ( 1 , 2 , 1 ) axEVI . plot ( Ms , evidences ) axEVI . scatter ( Ms , evidences ) axEVI . set_title ( \"The relationship between 'model evidence' and $M$\" ), axEVI . set_xlabel ( \"$M$\" ), axEVI . set_ylabel ( \"$\\log({model\\ evidence})$\" , fontsize = 16 ) axBest = fig . add_subplot ( 1 , 2 , 2 ) axBest . plot ( x_test , y_test , color = \"black\" , label = \"$\\sin(2\\pi x)$\" ) axBest . plot ( x_test , y_pred , color = \"red\" , label = \"predict($\\mu$)\" ) axBest . fill_between ( x_test , y_pred - y_std , y_pred + y_std , color = \"pink\" , alpha = 0.5 ) axBest . scatter ( x_train , y_train , s = 50 , edgecolors = 'black' , facecolor = \"white\" , label = \"train data\" ) axBest . set_ylim ( - 0.5 , 2.5 ), axBest . legend (), axBest . set_title ( f \"Bayesian Linear Regression (M= {best_M} )\" ) plt . tight_layout () plt . show () In [25]: print ( \"[Best Parameter]\" ) print ( f \"M = {best_M} \" ) print ( f \"alpha = {best_model.alpha} \" ) print ( f \"beta = {best_model.beta} \" ) [Best Parameter] M = 3 alpha = 0.0025750535934692723 beta = 56.07833727501231 Section5.2 Markov Process Biological Diversity Single Origin of Life \"Nothing in Biology Makes Sense Except in the Light of Evolution\" C.T. Dobzhansky Stochastic Transcription (Stochasticity vs Regulation) Stochasticity in Development Stochastic Process Mathematical description of stochastic behaviors. data: $\\left\\{\\mathbf{X}_t|t=1,\\ldots,n\\right\\}$ Probability: $\\mathbb{P}\\left(\\mathbf{X}_{t_m} = \\mathbf{x}_{t_m},\\ldots,\\mathbf{X}_{t_2} = \\mathbf{x}_{t_2},\\mathbf{X}_{t_1} = \\mathbf{x}_{t_1}\\right)$ $\\omega$ is one of the random paths. $\\mathbf{X}_t$ is a map indicats which state random paths $\\omega$ is in at time $t$ Events $E$ is a constraint on the value of $\\mathbf{X}_t$ at some times. $P(E)$ is the probability if the random paths satisfy the constraint $E$. markov Process $$\\mathbb{P}\\left(\\mathbf{X}_t = \\mathbf{x}_t|\\mathbf{X}_{t-1} = \\mathbf{x}_{t-1},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right) = \\mathbb{P}\\left(\\mathbf{X}_t=\\mathbf{x}_t|\\mathbf{X}_{t-1}=\\mathbf{x_{t-1}}\\right)$$ Decomposition of Joint Distribution $$ \\begin{aligned} &\\mathbb{P}\\left(\\mathbf{X}_t = \\mathbf{x}_t,\\mathbf{X}_{t-1} = \\mathbf{x}_{t-1},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\\\ &=\\mathbb{P}\\left(\\mathbf{X}_t = \\mathbf{x}_t | \\mathbf{X}_{t-1} = \\mathbf{x}_{t-1},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\times\\mathbb{P}\\left(\\mathbf{X}_{t-1} = \\mathbf{x}_{t-1},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\\\ &=\\mathbb{P}\\left(\\mathbf{X}_t = \\mathbf{x}_t | \\mathbf{X}_{t-1} = \\mathbf{x}_{t-1},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\times \\mathbb{P}\\left(\\mathbf{X}_{t-1} = \\mathbf{x}_{t-1} | \\mathbf{X}_{t-2} = \\mathbf{x}_{t-2},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\times \\mathbb{P}\\left(\\mathbf{X}_{t-2} = \\mathbf{x}_{t-2},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\\\ &= \\mathbb{P}\\left(\\mathbf{X}_t = \\mathbf{x}_t | \\mathbf{X}_{t-1} = \\mathbf{x}_{t-1},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\times \\cdots \\times\\mathbb{P}\\left(\\mathbf{X}_2=\\mathbf{x}_2|\\mathbf{X}_1=\\mathbf{x}_1,\\mathbf{X}_0=\\mathbf{x}_0\\right)\\times \\mathbb{P}\\left(\\mathbf{X}_1=\\mathbf{x}_1|\\mathbf{X}_0=\\mathbf{x}_0\\right)\\times\\mathbb{P}\\left(\\mathbf{X}_0=\\mathbf{x}_0\\right)\\\\ &= \\mathbb{P}\\left(\\mathbf{X}_t = \\mathbf{x}_t | \\mathbf{X}_{t-1} = \\mathbf{x}_{t-1}\\right) \\times \\mathbb{P}\\left(\\mathbf{X}_{t-1} = \\mathbf{x}_{t-1} | \\mathbf{X}_{t-2} = \\mathbf{x}_{t-2}\\right)\\times \\cdots\\times\\mathbb{P}\\left(\\mathbf{X}_1=\\mathbf{x}_1|\\mathbf{X}_0=\\mathbf{x}_0\\right)\\times\\mathbb{P}\\left(\\mathbf{X}_0=\\mathbf{x}_0\\right)\\quad\\left(\\because \\text{Markov Process}\\right) \\end{aligned} $$ Transition Matrix (Assume Time Independence ): $$P = \\left\\{P_{ij}\\right\\} = \\left\\{\\mathbb{P}\\left(\\mathbf{X}_t=i|\\mathbf{X}_{t-1}=j\\right)\\right\\},\\quad P_{ij}\\geq0,\\sum_i P_{ij}=1$$ Computing transition probability Birth and Death process $$ P= \\left(\\begin{matrix}1-\\lambda_0&\\mu_1&0&0\\\\\\lambda_0&1-\\lambda_1-\\mu_1&\\mu_2&0\\\\0&\\lambda_1&1-\\lambda_2-\\mu_2&\\mu_3\\\\0&0&\\lambda_2&1-\\mu_3\\end{matrix}\\right) $$ $P = U\\Lambda U&#94;{-1}$: Eigen decomposition $P&#94;n = U\\Lambda&#94;n U&#94;{-1}$ In [26]: def makeRandomP ( N , seed = 123 ): lambdas = np . r_ [ np . random . RandomState ( seed ) . uniform ( low = 0 , high = 1 / N , size = N - 1 ), np . zeros ( shape = 1 )] mus = np . r_ [ np . zeros ( shape = 1 ), np . random . RandomState ( seed + 1 ) . uniform ( low = 0 , high = 1 / N , size = N - 1 )] P = np . zeros ( shape = ( N , N )) for i in range ( N ): P [ i , - 1 + i ] = mus [ i ]; P [ i , i ] = 1 - mus [ i ] - lambdas [ i ]; P [ i , 1 + i if 1 + i < N else 1 + i - N ] = lambdas [ i ] return P In [27]: def LongTimeBehaviors ( P , even = True ): inf = 50 if even else 51 eigenvals , eigenvecs = np . linalg . eig ( P ) Lambda = np . diag ( eigenvals ) eigenvecs_inv = np . linalg . inv ( eigenvecs ) Pn = np . dot ( eigenvecs , np . dot ( Lambda ** inf , eigenvecs_inv )) Pn = np . where ( Pn < 1e-5 , 0 , Pn ) return Pn example Periodic In [28]: P = np . array ([ [ 0 , 1 , 0 ], [ 1 / 2 , 0 , 1 / 2 ], [ 0 , 1 , 0 ] ]) In [29]: print ( f \"P&#94;2n: \\n {LongTimeBehaviors(P, even=True)} \\n \" ) print ( f \"P&#94;2n+1: \\n {LongTimeBehaviors(P, even=False)}\" ) P&#94;2n: [[0.5 0. 0.5] [0. 1. 0. ] [0.5 0. 0.5]] P&#94;2n+1: [[0. 1. 0. ] [0.5 0. 0.5] [0. 1. 0. ]] Reducible In [30]: P = np . array ([ [ 1 / 3 , 3 / 4 , 0 , 0 ], [ 2 / 3 , 1 / 4 , 0 , 0 ], [ 0 , 0 , 1 / 3 , 3 / 4 ], [ 0 , 0 , 2 / 3 , 1 / 4 ] ]) In [31]: LongTimeBehaviors ( P ) Out[31]: array([[0.52941176, 0.52941176, 0. , 0. ], [0.47058824, 0.47058824, 0. , 0. ], [0. , 0. , 0.52941176, 0.52941176], [0. , 0. , 0.47058824, 0.47058824]]) Absorbing In [32]: P = np . array ([ [ 1 , 1 / 2 , 0 , 0 ], [ 0 , 0 , 1 / 2 , 0 ], [ 0 , 1 / 2 , 0 , 0 ], [ 0 , 0 , 1 / 2 , 1 ] ]) In [33]: LongTimeBehaviors ( P ) Out[33]: array([[1. , 0.66666667, 0.33333333, 0. ], [0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. ], [0. , 0.33333333, 0.66666667, 1. ]]) Irreducible, Aperiodic In [34]: P = np . array ([ [ 2 / 3 , 1 / 12 , 0 ], [ 1 / 3 , 5 / 8 , 1 / 8 ], [ 0 , 7 / 24 , 7 / 8 ], ]) In [35]: LongTimeBehaviors ( P ) Out[35]: array([[0.06976762, 0.06976748, 0.06976741], [0.27906992, 0.2790698 , 0.27906974], [0.65116246, 0.65116272, 0.65116286]]) In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物統計論","url":"https://iwasakishuto.github.io/University/3A/生物統計論-5.html","loc":"https://iwasakishuto.github.io/University/3A/生物統計論-5.html"},{"title":"レポート課題4(10/24出題)","text":"q7fV0SW4znd1NbK6NuIuXA==;;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-report4.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-report4.html"},{"title":"探索","text":"講師： 本多 淳也 参考書： エージェントアプローチ人工知能 第2版 参考書： イラストで学ぶ 人工知能概論 講義概要 状態空間 15パズル 迷路 コスト無しグラフの探索 コスト付きグラフの探索 ゲーム木の探索 状態空間 ありうる局面の１つ１つを 状態 と言う。 状態全体からなる集合を 状態空間 と言う。 目的： 初期状態から出発して、許される 状態遷移 を繰り返し、最終状態へたどり着くこと。 これは、 グラフ(graph) の 探索(search) 問題と等価 （ノードが状態に、エッジが状態遷移にそれぞれ対応する。） 15パズル ルール： 一度に動かせるのは1パネルのみ。 飽きますに隣のパネルをずらす操作のみ可能 目標： 「できるだけ少ない手数で」 与えられた配置から元の配置に戻すこと。 元に戻すことが不可能な問題を識別する。 迷路 目的：スタートからゴールまで誘導する。 状態(state) $s$：移動できる場所 行動(action) $a$：進む方向 コスト無しグラフの探索 用語 意味 オープンリスト(open list) これから探索するノードの候補リスト クローズドリスト(closed list) 探索が終わったノードのリスト キュー(queue) 先入れ先出し スタック(stack) 後入れ先出し 探索の基本アルゴリズム open_list = [ initial_state ] # オープンリストは初期化状態のみ closed_list = [] # クローズドリストは空 while ( open_list ): # オープンリストが空になるまで以下を繰り返す。 state = getOptimalState ( open_list ) # オープンリストから（何らかの基準で）状態sを取り出す。 closed_list . append ( state ) # sをクローズドリストに追加する。 if state == last_state : break # sが最終状態ならば探索終了 open_list += [ s for s in state . transibles () if s not in closed_list ] # sから遷移可能でまだクローズドリストに入っていない状態をオープンリストに追加する。 深さ優先探索 行き止まりに当たるまで進み、ゴールが見つからなかったら直近の分岐に戻って別の道を探す探索法。 メモリ使用量が少ない ゴールが近くにあっても、他の深い別れ道に迷い込むと時間がかかる ゴールが複数ある時、一番近くのものが見つかるとは限らない オープンリストは スタック （後入れ先出し） にする。 open_list = [ initial_state ] closed_list = [] while ( open_list ): state = open_list . pop ( 0 ) # オープンリストの先頭の状態sを取り出す。 closed_list . append ( state ) if state == last_state : break open_list . push ([ s for s in state . transibles () if s not in closed_list ]) # sから遷移可能でまだクローズドリストに入っていない状態をオープンリストの\"先頭に\"追加する。 幅優先探索 分かれ道に来たらそれぞれの道を一歩ずつ進み，ゴールが見つからなかったらそれぞれの道をもう一歩ずつ進む探索法。 ゴールが近くにある時、早く見つかる。 ゴールが複数ある時、一番近くのものが見つかる。 分かれ道での分岐数が多いとメモリ使用量が多い。 オープンリストは キュー （先入れ後出し） にする。 open_list = [ initial_state ] closed_list = [] while ( open_list ): state = open_list . pop ( - 1 ) # オープンリストの\"末尾\"の状態sを取り出す。 closed_list . append ( state ) if state == last_state : break open_list . push ([ s for s in state . transibles () if s not in closed_list ]) # sから遷移可能でまだクローズドリストに入っていない状態をオープンリストの\"先頭に\"追加する。 反復深化探索 深さに制限をつけて深さ優先探索を行い、徐々に深さを深くしていく探索法 ゴールが近くにある時、早く見つかる ゴールが複数ある時、一番近くのものが見つかる 同じノードを何度も訪れる（分岐が多いと影響小） まとめ 深さ優先探索・幅優先探索・反復深化探索は、グラフに関する特別な知識を使わずにオープンリストから状態を選択することから、 ブラインド探索(blined search) と呼ばれる。 # 探さ優先探索 幅優先探索 反復深化探索 完全性（必ず解が見つかるか） (completeness) $m$ が有限なら Yes Yes Yes 時間計算量 (time complexity) $\\mathrm{O}(b&#94;m)$ $\\mathrm{O}(b&#94;d)$ $\\mathrm{O}(b&#94;d)$ 空間計算量(space complexity) $\\mathrm{O}(bm)$ $\\mathrm{O}(b&#94;d)$ $\\mathrm{O}(bd)$ 最適性（一番近くの解が見つかるか） (optimality) Yes Yes Yes $b$：最大分岐数 $d$：一番浅い解の深さ $m$：最大の深さ コスト付きグラフの探索 各エッジに 遷移コスト が割り当てられている場合の最適遷移パス探索問題。 ブラインド探索 ：グラフに関する特別な知識を使わずにオープンリストから状態を選択。 貪欲探索(greedy search)：現在の状態からの遷移コストが最小の状態を選ぶ。 （深さ優先探索に対応） 最適探索(optimal search)：初期状態からの遷移コスト和が最小の状態を選ぶ。 （各コストが1だと幅優先探索になる。ダイクストラ法とも。） ヒューリスティック探索（最良優先探索, best-first search） ：グラフに関する何らかの知識を使ってオープンリストから適切と思われる状態を選択。 貪欲最良優先探索 $A&#94;{\\ast}$ 探索 貪欲最良優先探索 $\\hat{h}(s)$ を最小にする状態を選ぶ $h(s)$：$s$ から最終状態までの遷移コスト和の最小値 $\\hat{h}(s)$：$h(s)$ の推定（ヒューリスティック関数） 一度オープンリストに入ったの評価値更新は不要 ヒューリスティック関数の選び方： ユーザが 事前知識 により構築（例：直線距離） データから 機械学習 により自動構築 一般には完全性も最適性もないが、実用上は（そこそこ）うまくいくことが（それなりに）多い。 $A&#94;{\\ast}$ 探索(A-start search) $s$ を経由する場合の遷移コスト和の推定値 $\\left(\\hat{g}(s)+\\hat{h}(s)\\right)$ を最小にする状態を選ぶ。 $g(s)$：初期状態から $s$ までの遷移コスト和の最小値 $\\hat{g}(s)$：探索済みノードから $s$ に遷移する場合の最小値（ダイクストラ法と同じ） ノード $s$ を訪れると隣接ノードの $\\hat{g}(s&#94;{\\prime})$ が更新される。 $h(s)$：$s$ から最終状態までの遷移コスト和の最小値 $\\hat{h}(s)$：$h(s)$ のヒューリスティック推定値 最適経路上の $s$ ではいずれも $g(s)+h(s)$ が最小、経路外の点ではそれより大きい値をとることを利用 $\\forall s, 0\\leq\\hat{h}(s)\\leq h(s)$ が成り立つ時、$\\hat{h}(s)$ は 許容的(admissible) であるといい、この場合には $A&#94;{\\ast}$ 探索は最適性を持つ。 ※ 実装等は、 レポート課題 に記載。 In [1]: from kerasy.search.Astar import OptimalTransit In [2]: n = 3 m = 3 initial_str = \"2,-1,6,1,3,4,7,5,8\" last_str = \"1,2,3,4,5,6,7,8,-1\" In [3]: OptimalTransit ( n , m , initial_str , last_str , heuristic_method = \"Manhattan_distance\" , n_row = 5 ) n_transition = 9 ゲーム木の探索 2人のプレイヤーが交互に遷移先を決めるゲーム（ex. 将棋・囲碁・リバーシ・◯×など）における最適遷移探索問題 ミニマックス探索 自分は一番良い（点数を最大化する）手を選ぶ 相手は一番悪い（点数を最小化する）手を選ぶ アルファ・ベータ探索 ミニ・マックス探索では、全ての局面に対する点数を求める必要があり、時間がかかる。 不要な点数計算を省略することで効率化 $\\alpha$：max計算の際の下界値 $\\beta$：min計算の際の上界値 モンテカルロ木探索 アルファ・ベータ法を用いても、ゲーム木を深く探索するのは困難（$b&#94;d$ が $b&#94;{d/2}$ になる程度。） そこで、 ランダムに 手を打つ。 囲碁やスケジューリングなどで活用されている。 まとめ 広大な状態空間を効率よく探索したい コスト無しグラフの探索 コスト付きグラフの探索 ゲーム木の探索 膨大な状態空間の探索には，近似的な手法が有用 事前知識や機械学習によるヒューリスティック関数の構築 モンテカル 木探索 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-4.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-4.html"},{"title":"ガウシアンプロセスとベイズ最適化","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) In [1]: import numpy as np import matplotlib.pyplot as plt import seaborn as sns データ駆動科学とベイズ最適化 データ駆動科学では、データに基づいて、新たな知見・事柄を発見することが求められる 単に予測を行うだけでなく、それに基づいて「行動」を設計することが必要 これらは、「ベイズ最適化」の枠組みに乗ることが多い 概要 ベイズ線形回帰 ガウシアンプロセス ベイズ最適化 ベイズ線形回帰 線形回帰モデルのパラメータを 最尤推定 によって決める場合、 解こうとしている問題に合わせてモデルの複雑さを適切に決めることが必要 ↑は、単純に尤度を最大化するだけでは 過学習 を引き起こしてしまう。 データの一部を独立なテスト用データとして取っておく ことでモデルの汎化性能を評価できるが、この方法は 計算量が大きく 、 データの無駄遣い となり得る。 これらの問題に対処するため、線形回帰モデルをベイズ的に取り扱うことで最尤推定の過学習を回避するとともに 「訓練データだけからモデルの複雑さを自動的に決定する。」 概要 解こうとしている問題に沿った 尤度関数(likelihood function) （ $p(\\mathbf{t}|\\mathbf{X},\\mathbf{w})$ ） を定義する。 モデルパラメータの 事前分布(prior distribution) （ $p(\\mathbf{w})$ ） を、 尤度関数 の 共役事前分布(conjugate prior) の形で定義する。 ベイズの公式より、 事後分布(posterior distribution) は 事前分布 と 尤度関数 の積に比例する。 （ $p(\\mathbf{w}|\\mathbf{t},\\mathbf{X})\\propto p(\\mathbf{t}|\\mathbf{X},\\mathbf{w})\\cdot p(\\mathbf{w})$ ） あるパラメータ （ $\\mathbf{w}$ ） 下で入力 $\\mathbf{x}$ が与えられた時の確率分布 （ $p(t|\\mathbf{w},\\mathbf{x})$ ） を、3で求めた 事後分布 （ $p(\\mathbf{w}|\\mathbf{t},\\mathbf{X})$ ） で重み付けしながら 周辺化(marginalization) する （ $p(t|\\mathbf{t},\\mathbf{X},\\mathbf{x}) = \\int p(t|\\mathbf{w},\\mathbf{x})p(\\mathbf{w}|\\mathbf{t},\\mathbf{X})d\\mathbf{w}$ ） ことで、 予測分布(predivtive distribution) （ $p(t|\\mathbf{w},\\mathbf{x})$ ） を得る。 具体例 ※ $D$ 次元の説明変数 $\\mathbf{x}$ で一次元の目標変数 $t$ を線形回帰するモデルをベイズ的に取り扱う。 目標変数 $t$ が決定論的な関数 $y(\\mathbf{x},\\mathbf{w})$ と加法性のガウスノイズの和で与えられる場合を考える。 $$t = y(\\mathbf{x},\\mathbf{w}) + \\epsilon\\qquad (3.7)$$ ここで、$\\epsilon$ は期待値が $0$ で精度が $\\beta$ のガウス確率変数である。すなわち、以下で表すことができる。 $$p(t|\\mathbf{x},\\mathbf{w},\\beta) = \\mathcal{N}\\left(t|y(\\mathbf{x},\\mathbf{w}),\\beta&#94;{-1}\\right)\\qquad (3.8)$$ データ点が $(3.8)$ の分布から 独立に生成された と仮定すると、尤度関数を次のように表せる。 $$p(\\mathbf{t}|\\mathbf{X},\\mathbf{w},\\beta) = \\prod_{n=1}&#94;N\\mathcal{N}\\left(t_n|\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n),\\beta&#94;{-1}\\right)\\qquad (3.10)$$ モデルパラメータ $\\mathbf{w}$ の事前分布を導入する。 ここで、 $\\beta$ が既知 と仮定すると、上記の尤度関数の共役事前分布である、期待値 $\\mathbf{m}_0$ 共分散 $\\mathbf{S}_0$ を持つガウス分布で表すのが適当である。 $$p(\\mathbf{w}) = \\mathcal{N}(\\mathbf{w}|\\mathbf{m}_0,\\mathbf{S}_0)\\qquad (3.48)$$ ※ なお、$\\mathbf{w},\\beta$ の両方が未知である場合、共役事前分布は ガウス-ガンマ分布 隣、予測分布は スチューデントのt分布 となる。 ベイズの公式より、 事後分布は事前分布と尤度関数の積に比例する ので、これを解くことで事後分布を次の形で書き出すことができる。 （導出） $$ p(\\mathbf{w}|\\mathbf{t},\\mathbf{X},\\beta) = \\mathcal{N}(\\mathbf{w}|\\mathbf{m}_N,\\mathbf{S}_N) \\qquad (3.49)\\\\ \\begin{cases} \\mathbf{m}_N &= \\mathbf{S}_N\\left(\\mathbf{S}_0&#94;{-1}\\mathbf{m}_0 + \\beta\\boldsymbol{\\Phi}&#94;T\\mathbf{t}\\right) & (3.50)\\\\ \\mathbf{S}_N&#94;{-1} &= \\mathbf{S}_0&#94;{-1} + \\beta\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi} & (3.51) \\end{cases} $$ $\\mathbf{w}$ で周辺化することで、予測分布を求めるが、議論の簡単のために、 「モデルパラメータ $\\mathbf{w}$ の事前分布 $p(\\mathbf{w})$ が、単一の制度パラメータ $\\alpha$ で記述される期待値が $0$ の等方的ガウス分布である」 とする。 $$p(\\mathbf{w}|\\alpha) = \\mathcal{N}\\left(\\mathbf{w}|\\mathbf{0},\\alpha&#94;{-1}\\mathbf{I}\\right)\\qquad (3.52)$$ この時、上記の $\\mathbf{w}$ の事後分布 $(3.49)$ の形は変わらず、$\\mathbf{m}_N,\\mathbf{S}_N$ の値が $$ \\begin{cases} \\mathbf{m}_N &= \\beta\\mathbf{S}_N\\boldsymbol{\\Phi}&#94;T\\mathbf{t} & (3.53)\\\\ \\mathbf{S}_N&#94;{-1} &= \\alpha\\mathbf{I} + \\beta\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi} & (3.54) \\end{cases} $$ となる。この条件下で周辺化すると、以下の結果を得る。 （導出） $$ \\begin{aligned} p(t|\\mathbf{t},\\mathbf{X},\\mathbf{x},\\alpha,\\beta) &= \\int p(t|\\mathbf{w},\\mathbf{x},\\beta)p(\\mathbf{w}|\\mathbf{t},\\mathbf{X},\\alpha,\\beta)d\\mathbf{w}& (3.57)\\\\ &= \\mathcal{N}\\left(t|\\mathbf{m}_N&#94;T\\phi(\\mathbf{x}),\\sigma_N&#94;2(\\mathbf{x})\\right) & (3.58)\\\\ \\sigma_N&#94;2(\\mathbf{x}) &= \\frac{1}{\\beta} + \\phi(\\mathbf{x})&#94;T\\mathbf{S}\\phi(\\mathbf{x}) & (3.59) \\end{aligned} $$ ※ ここで、$(3.59)$ の第1項はデータに含まれるノイズを、第2項は $\\mathbf{w}$ に関する不確かさを反映している。 事後分布の計算の導出過程 $$ \\begin{aligned} \\text{likelihood function : } p(\\mathbf{t}|\\mathbf{X},\\mathbf{w},\\beta) &= \\prod_{n=1}&#94;N\\mathcal{N}\\left(t_n|\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n),\\beta&#94;{-1}\\right)& (3.10)\\\\ \\text{prior distribution : } p(\\mathbf{w}) &= \\mathcal{N}(\\mathbf{w}|\\mathbf{m}_0,\\mathbf{S}_0)& (3.48)\\\\ \\text{posterior distribution : } p(\\mathbf{w}|\\mathbf{t},\\mathbf{X},\\beta) &= \\mathcal{N}(\\mathbf{w}|\\mathbf{m}_N,\\mathbf{S}_N) & (3.49)\\\\ \\mathbf{m}_N &= \\mathbf{S}_N\\left(\\mathbf{S}_0&#94;{-1}\\mathbf{m}_0 + \\beta\\boldsymbol{\\Phi}&#94;T\\mathbf{t}\\right) & (3.50)\\\\ \\mathbf{S}_N&#94;{-1} &= \\mathbf{S}_0&#94;{-1} + \\beta\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi} & (3.51)\\\\ \\mathcal{N}(x|\\mu,\\sigma&#94;2) &= \\frac{1}{\\left(2\\pi\\sigma&#94;2\\right)&#94;{1/2}}\\exp\\left\\{-\\frac{1}{2\\sigma&#94;2}(x-\\mu)&#94;2\\right\\} & (2.42)\\\\ \\mathcal{N}(\\mathbf{x}|\\boldsymbol{\\mu},\\boldsymbol{\\Sigma}) &= \\frac{1}{(2\\pi)&#94;{D/2}}\\frac{1}{|\\boldsymbol{\\Sigma}|&#94;{1/2}}\\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{x}-\\boldsymbol{\\mu}\\right)&#94;T\\boldsymbol{\\Sigma}&#94;{-1}\\left(\\mathbf{x}-\\boldsymbol{\\mu}\\right)\\right\\} & (2.43) \\end{aligned} $$ $$ \\begin{aligned} p(\\mathbf{w}|\\mathbf{t},\\mathbf{X},\\beta) &\\propto p(\\mathbf{t}|\\mathbf{X},\\mathbf{w},\\beta) p(\\mathbf{w}) \\\\ &=\\prod_{n=1}&#94;N\\mathcal{N}\\left(t_n|\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n),\\beta&#94;{-1}\\right)\\mathcal{N}(\\mathbf{w}|\\mathbf{m}_0,\\mathbf{S}_0)\\\\ &\\propto\\prod_{n=1}&#94;N\\exp\\left\\{-\\frac{\\beta}{2}\\left(t_n-\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n)\\right)&#94;2\\right\\}\\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)&#94;T\\mathbf{S}_0&#94;{-1}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)\\right\\} \\\\ &=\\exp\\left\\{-\\frac{\\beta}{2}\\sum_{n=1}&#94;N\\left(t_n-\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n)\\right)&#94;2\\right\\}\\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)&#94;T\\mathbf{S}_0&#94;{-1}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)\\right\\} \\\\ &= \\exp\\left\\{-\\frac{\\beta}{2}\\left( \\begin{array}{c}t_1 - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_1)\\\\ t_2 - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_2) \\\\ \\vdots \\\\ t_N - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_N) \\end{array} \\right)&#94;T\\left( \\begin{array}{c}t_1 - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_1)\\\\ t_2 - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_2) \\\\ \\vdots \\\\ t_N - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_N) \\end{array} \\right) \\right\\}\\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)&#94;T\\mathbf{S}_0&#94;{-1}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)\\right\\} \\\\ &= \\exp\\left\\{-\\frac{\\beta}{2}\\left(\\mathbf{t}-\\boldsymbol{\\Phi}\\mathbf{w}\\right)&#94;T\\left(\\mathbf{t}-\\boldsymbol{\\Phi}\\mathbf{w}\\right)\\right\\}\\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)&#94;T\\mathbf{S}_0&#94;{-1}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)\\right\\}\\\\ &= \\exp\\left\\{ -\\frac{1}{2} \\left(\\beta\\mathbf{t}&#94;T\\mathbf{t} - \\beta\\mathbf{t}&#94;T\\boldsymbol{\\Phi}\\mathbf{w} - \\beta\\mathbf{w}&#94;T\\boldsymbol{\\Phi}&#94;T\\mathbf{t} + \\beta\\mathbf{w}&#94;T\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi}\\mathbf{w} + \\mathbf{w}&#94;T\\mathbf{S}_0&#94;{-1}\\mathbf{w} - \\mathbf{w}&#94;T\\mathbf{S}&#94;{-1}_0\\mathbf{m}_0 - \\mathbf{m}_0&#94;T\\mathbf{S}&#94;{-1}_0\\mathbf{w} + \\mathbf{m}_0&#94;T\\mathbf{S}&#94;{-1}_0\\mathbf{m}_0\\right)\\right\\}\\\\ &= \\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{w}&#94;T\\left(\\beta\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi} + \\mathbf{S}&#94;{-1}_0\\right)\\mathbf{w} - \\mathbf{w}&#94;T\\left(\\beta\\boldsymbol{\\Phi}&#94;T\\mathbf{t} + \\mathbf{S}&#94;{-1}_0\\mathbf{m}_0\\right) - \\left(\\beta\\mathbf{t}&#94;T\\boldsymbol{\\Phi} + \\mathbf{m}_0\\mathbf{S}&#94;{-1}_0\\right)\\mathbf{w} + \\left(\\beta\\mathbf{t}&#94;T\\mathbf{t} + \\mathbf{m_0}&#94;T\\mathbf{S}&#94;{-1}_0\\mathbf{m}_0\\right)\\right)\\right\\} \\\\ &=\\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{w} - \\mathbf{S}_N\\left(\\mathbf{S}_0&#94;{-1}\\mathbf{m}_0 + \\beta\\boldsymbol{\\Phi}&#94;T\\mathbf{t}\\right)\\right)&#94;T\\mathbf{S}_N&#94;{-1}\\left(\\mathbf{w} - \\mathbf{S}_N\\left(\\mathbf{S}_0&#94;{-1}\\mathbf{m}_0 + \\beta\\boldsymbol{\\Phi}&#94;T\\mathbf{t}\\right)\\right) + \\mathrm{C} \\right\\}\\\\ &\\propto\\mathcal{N}(\\mathbf{w}|\\mathbf{m}_N,\\mathbf{S}_N)\\\\ &\\begin{cases} \\mathbf{m}_N &= \\mathbf{S}_N\\left(\\mathbf{S}_0&#94;{-1}\\mathbf{m}_0 + \\beta\\boldsymbol{\\Phi}&#94;T\\mathbf{t}\\right) & (3.50)\\\\ \\mathbf{S}_N&#94;{-1} &= \\mathbf{S}_0&#94;{-1} + \\beta\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi} & (3.51)\\\\\\end{cases} \\end{aligned}\\\\ $$ 周辺化計算の導出過程 以下の「ガウス分布の周辺分布と条件付き分布の関係」の $(2.115)$ の結果を用いる。 $\\mathbf{x}$ の周辺ガウス分布と、$\\mathbf{x}$ が与えられた時の $\\mathbf{y}$ の条件付きガウス分布が次式で与えられたとする。 $$ \\begin{aligned} p(\\mathbf{x}) &=\\mathcal{N}\\left(\\mathbf{x} | \\boldsymbol{\\mu}, \\mathbf{\\Lambda}&#94;{-1}\\right) & (2.113)\\\\ p(\\mathbf{y} | \\mathbf{x}) &=\\mathcal{N}\\left(\\mathbf{y} | \\mathbf{A} \\mathbf{x}+\\mathbf{b}, \\mathbf{L}&#94;{-1}\\right) & (2.114)\\end{aligned} $$ この時、$\\mathbf{y}$ の周辺分布と、$\\mathbf{y}$ が与えられた時の $\\mathbf{x}$ の条件付き分布は $$ \\begin{aligned} p(\\mathbf{y}) &=\\mathcal{N}\\left(\\mathbf{y} | \\mathbf{A} \\boldsymbol{\\mu}+\\mathbf{b}, \\mathbf{L}&#94;{-1}+\\mathbf{A} \\mathbf{\\Lambda}&#94;{-1} \\mathbf{A}&#94;{\\mathrm{T}}\\right) & (2.115)\\\\ p(\\mathbf{x} | \\mathbf{y}) &=\\mathcal{N}\\left(\\mathbf{x} | \\mathbf{\\Sigma}\\left\\{\\mathbf{A}&#94;{\\mathrm{T}} \\mathbf{L}(\\mathbf{y}-\\mathbf{b})+\\mathbf{\\Lambda} \\boldsymbol{\\mu}\\right\\}, \\mathbf{\\Sigma}\\right) & (2.116) \\end{aligned} $$ で与えられる。ただし、 $$\\mathbf{\\Sigma} = \\left(\\mathbf{\\Lambda} + \\mathbf{A}&#94;T\\mathbf{LA}\\right)&#94;{-1}\\qquad (2.117)$$ である。 実装 In [2]: from kerasy.ML.linear import BayesianLinearRegression from kerasy.utils.preprocessing import GaussianBaseTransformer from kerasy.utils.data_generator import generateSin , generateGausian In [3]: N = 25 ; D = 1 ; M = 25 xmin = 0 ; xmax = 1 seed = 10 In [4]: alpha = 1 beta = 25 In [5]: x_test = np . linspace ( xmin , xmax , 1000 ) y_test = np . sin ( 2 * np . pi * x_test ) x_train , y_train = generateSin ( size = N , xmin = xmin , xmax = xmax , seed = seed ) _ , y_noise = generateGausian ( size = N , x = x_train , loc = 0 , scale = 1 / beta , seed = seed ) y_train += y_noise In [6]: # transform mu = np . linspace ( xmin , xmax , M ); sigma = 0.1 phi = GaussianBaseTransformer ( mu = mu , sigma = sigma ) x_train_features = phi . transform ( x_train ) x_test_features = phi . transform ( x_test ) In [7]: random_idx = np . random . RandomState ( seed ) . choice ( N , N ) In [8]: fig = plt . figure ( figsize = ( 16 , 8 )) for i , n in enumerate ([ 1 , 2 , 4 , 25 ]): ax = fig . add_subplot ( 2 , 2 , i + 1 ) model = BayesianLinearRegression ( alpha = alpha , beta = beta ) model . fit ( x_train_features [ random_idx [: n ]], y_train [ random_idx [: n ]]) y_pred , y_std = model . predict ( x_test_features ) ax . plot ( x_test , y_test , color = \"black\" , label = \"$\\sin(2\\pi x)$\" ) ax . plot ( x_test , y_pred , color = \"red\" , label = \"predict($\\mu$)\" ) ax . fill_between ( x_test , y_pred - y_std , y_pred + y_std , color = \"pink\" , alpha = 0.5 ) ax . scatter ( x_train [ random_idx [: n ]], y_train [ random_idx [: n ]], s = 150 , edgecolors = 'black' , facecolor = \"white\" , label = \"train data\" ) ax . set_ylim ( - 1.5 , 1.5 ), ax . legend (), ax . set_title ( f \"Bayesian Linear Regression (N= {n} )\" ) plt . tight_layout () plt . show () ガウシアンプロセス 回帰分析のための カーネル法 テストサンプルに対して、 予測値だけでなく、予測分散も与えることができる。 線形回帰のモデルは、以下で表されていた。 $$y(\\mathbf{x},\\mathbf{w}) = \\mathbf{w}&#94;T\\phi(\\mathbf{x})\\qquad (3.3)$$ この結果に、ベイズ線形回帰の結果 $(3.53)$ を代入すると、 $$ \\begin{aligned} y(\\mathbf{x},\\mathbf{m}_N) &= \\mathbf{m}_N\\phi(\\mathbf{x}) = \\beta\\phi(\\mathbf{x})&#94;T\\mathbf{S}_N\\boldsymbol{\\Phi}&#94;T\\mathbf{t} \\\\ &= \\sum_{n=1}&#94;N\\beta\\phi(\\mathbf{x})&#94;T\\mathbf{S}_N\\phi(\\mathbf{x}_n)t_n & (3.60)\\\\ \\mathbf{S}_N&#94;{-1} &= \\mathbf{S}_0&#94;{-1} + \\beta\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi} & (3.51) \\end{aligned} $$ したがって、点 $\\mathbf{x}$ での予測分布の平均は訓練データの目標変数 $t_n$ の線型結合で与えられるので、 $$ \\begin{aligned} y(\\mathbf{x},\\mathbf{m}_N) &= \\sum_{n=1}&#94;Nk(\\mathbf{x}, \\mathbf{x}_n)t_n & (3.61)\\\\ k(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}) &= \\beta\\phi(\\mathbf{x})&#94;T\\mathbf{S}_N\\phi(\\mathbf{x}&#94;{\\prime}) & (3.62)\\\\ &= \\left(\\beta&#94;{1/2}\\mathbf{S}_N&#94;{1/2}\\phi(\\mathbf{x})\\right)&#94;T\\left(\\beta&#94;{1/2}\\mathbf{S}_N&#94;{1/2}\\phi(\\mathbf{x})\\right) & (3.65) \\end{aligned} $$ とかける。なお、$k(\\mathbf{x}, \\mathbf{x}&#94;{\\prime})$ を 平滑化行列(smoother matrix) 、または 等価カーネル(equivalent kernel) と呼ぶ。（$(3.65)$ から、等価カーネルが通常のカーネル関数が満たすべき性質を満たしていることがわかる。） また、訓練データの目標値の線型結合を取ることで予測を行う上記のような回帰関数を 線形平滑器(linear smoother) と呼ぶ。 In [9]: from kerasy.utils.preprocessing import GaussianBaseTransformer , SigmoidBaseTransformer , PolynomialBaseTransformer In [10]: X = np . linspace ( - 1 , 1 , 200 ) M = 15 mu = np . linspace ( - 0.9 , 0.9 , M ); sigma = 0.1 gausian_phi = GaussianBaseTransformer ( mu = mu , sigma = sigma ) In [11]: def mkSmootherMatrix ( X , phi , alpha = 1 , beta = 25 ): X_feature = phi . transform ( X ) N , M = X_feature . shape SN = np . linalg . inv ( alpha * np . eye ( M ) + beta * X_feature . T . dot ( X_feature )) K = beta * np . dot ( X_feature , np . dot ( SN , X_feature . T )) return K In [12]: K = mkSmootherMatrix ( X , gausian_phi ) In [13]: SP = [ 30 , 120 , 150 ] colors = [ \"red\" , \"salmon\" , \"pink\" ] In [14]: fig = plt . figure ( figsize = ( 12 , 6 )) axKernel = plt . subplot2grid (( 3 , 2 ), ( 0 , 1 ), rowspan = 3 ) axKernel = sns . heatmap ( K , vmin = np . min ( K ), vmax = np . max ( K ), cmap = \"jet\" , cbar = False , square = True , ax = axKernel ) axKernel . set_xticks ([]), axKernel . set_yticks ([]) axKernel . set_xlabel ( \"$x$\" , fontsize = 18 ), axKernel . set_ylabel ( \"$x&#94;{\\prime}$\" , fontsize = 18 ) for i in range ( 3 ): axL = plt . subplot2grid (( 3 , 2 ), ( i , 0 )) axL . set_facecolor ( 'lightcyan' ) axL . plot ( K [ SP [ i ]], color = colors [ i ], linewidth = 4 ) axL . set_xticks ([]), axL . set_yticks ([]) axKernel . axhline ( SP [ i ], color = colors [ i ], linewidth = 10 , alpha = 0.7 ) plt . tight_layout () plt . show () In [15]: Transformers = [ ( GaussianBaseTransformer , mu ), ( SigmoidBaseTransformer , mu ), ( PolynomialBaseTransformer , 10 ), ] In [16]: fig = plt . figure ( figsize = ( 12 , 4 )) for i ,( phi_func , param ) in enumerate ( Transformers ): ax = fig . add_subplot ( 1 , 3 , i + 1 ) phi = phi_func ( param ) K = mkSmootherMatrix ( X , phi ) ax . plot ( K [ 100 ], color = \"blue\" ) ax . scatter ( 100 , 0 , color = \"red\" , marker = \"x\" , s = 150 , label = \"$x&#94;{\\prime}$\" ) ax . set_xticks ([]), ax . set_yticks ([]), ax . set_title ( f \"$k(x,x')$: {phi.__name__} \" , fontsize = 16 ) ax . set_xlabel ( \"$x$\" , fontsize = 18 ), ax . legend () plt . tight_layout () plt . show () カーネル関数の例 を見ればわかるよう、 対応する基底関数が局所的でないにも関わらず、等価カーネルは $x&#94;{\\prime}$ に関して局所的な関数となっていることがわかる！！ また、$y(\\mathbf{x})$ と $y(\\mathbf{x}&#94;{\\prime})$ の共分散を考えると、 $$ \\begin{aligned} \\mathrm{cov}\\left[y(\\mathbf{x}),y(\\mathbf{x}&#94;{\\prime})\\right] &= \\mathrm{cov}\\left[\\phi(\\mathbf{x})&#94;T\\mathbf{w}, \\mathbf{w}&#94;T\\phi(\\mathbf{x})\\right]\\\\ &= \\phi(\\mathbf{x})&#94;T\\mathbf{S}_N\\phi(\\mathbf{x}&#94;{\\prime}) = \\beta&#94;{-1}k(\\mathbf{x},\\mathbf{x}&#94;{\\prime})\\quad(3.63) \\end{aligned} $$ となる。ここで、上述の等価カーネルの形状を考えると、 近接での予測平均は互いに強い相関を持っている一方で、より離れた点の組では相関は小さくなることがわかる。 ベイズ線形回帰 のように基底関数の集合を明示的に定義するのではなく、局所的なカーネルを直接定義し、観測された訓練集合が与えられた時、この局所的なカーネルを用いて新たな入力ベクトル $\\mathbf{x}$ に対する予測値を求めることができる。 この定式化から、回帰（と分類）に対する実用的な枠組みである ガウス過程(Gaussian process) が得られる。 ベイズ最適化 $M$ 個の候補点があり、この中から最大の観測値を持つものを探したい。 できるだけ実験数を少なくしたい。 $N$ 個の候補点に対する実験が終わった。$M-N$ 個の候補点が残っている。 次の $N+1$ 個目の候補点を最適に選びたい。 $N$ 個の化合物から予測モデルを学習し、それを用いて、残りの候補点を スコアリング し決定。 Maximum Probability of Improvement: Current Maxを超える確率。 Maximum Expected Improvement: (観測値-Current Max)の期待値。 Thompson Sampling: 残りのM-N個候補点に対して、条件つき結合確率からサンプリングを行い、そのサンプリング値をスコアとする。 In [17]: xmin = 0 ; xmax = 1 N = 1000 ; M = 25 seed = 1 In [18]: alpha = 1 beta = 25 In [19]: X = np . linspace ( xmin , xmax , N ) Y = 5e1 * X * ( X - 0.2 ) * ( X - 0.3 ) * ( X - 0.7 ) * ( X - 1 ) _ , noise = generateGausian ( size = 1000 , x = X , loc = 0 , scale = 1 / beta , seed = seed ) Y_ob = Y + noise In [20]: mu = np . linspace ( xmin , xmax , M ) sigma = 0.1 phi = GaussianBaseTransformer ( mu = mu , sigma = sigma ) In [21]: X_features = phi . transform ( X ) In [22]: fig = plt . figure ( figsize = ( 18 , 8 )) idx = np . random . RandomState ( seed ) . choice ( N , 2 ) # Initialization. next_idx = idx for i , _ in enumerate ( range ( 12 )): ax = fig . add_subplot ( 3 , 4 , i + 1 ) model = BayesianLinearRegression ( alpha = alpha , beta = beta ) model . fit ( X_features [ idx ], Y_ob [ idx ]) y_pred , y_std = model . predict ( X_features ) current_max = np . max ( Y_ob [ idx ]) max_improve_id = np . argmax ( y_pred ) ax . plot ( X , Y , color = \"black\" , label = \"True distribution\" ) ax . plot ( X , y_pred , color = \"red\" , label = \"predict($\\mu$)\" ) ax . fill_between ( X , y_pred - y_std , y_pred + y_std , color = \"pink\" , alpha = 0.5 ) ax . scatter ( X [ idx ], Y_ob [ idx ], s = 50 , edgecolors = 'black' , facecolor = \"white\" , label = \"Observation\" ) ax . scatter ( X [ next_idx ], Y_ob [ next_idx ], s = 150 , edgecolors = 'black' , facecolor = \"black\" , label = \"New Obsevation\" ) ax . set_xlabel ( \"Explanatory Variable\" ), ax . set_ylabel ( \"Measured Value\" ), ax . set_title ( f \"N={len(idx)}, Max= {current_max:.3f} \" ) ax . set_ylim ( - 0.5 , 0.3 ), ax . set_xticks ([]), ax . set_yticks ([]) ax . axhline ( current_max , color = \"green\" , label = \"Current Maximum\" ) ax . axvline ( np . max ( X [ max_improve_id ]), color = \"blue\" , label = \"Maximum Probability of Improvement\" ) next_idx = max_improve_id if np . random . uniform () > 0.5 else np . random . choice ( N , 1 ) idx = np . r_ [ idx , next_idx ] ax . legend () plt . tight_layout () plt . show () おわりに（データ駆動科学） データ駆動科学では、データに基づいて、新たな知見・事柄を発見することが求められる。 単に予測を行うだけでなく、それに基づいて次の「行動」を設計することが必要 これらは、ベイズ最適化の枠組みに乗ることが多い。 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-4.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-4.html"},{"title":"特徴選択","text":"講師： 山崎俊彦 参考書： CG-ARTS協会発行「ディジタル画像処理」 参考書： R. Szeliski, Computer Vision Algorithms and Applications, Springer (PDF版はインターネット上で無料公開) In [1]: import numpy as np import matplotlib.pyplot as plt 主成分分析(PCA) In [2]: N = 20 seed = 0 In [3]: X = np . linspace ( 0 , 1 , N ) Y = X + np . random . RandomState ( N ) . normal ( loc = 0 , scale = 5e-2 , size = N ) data = np . vstack (( X , Y )) In [4]: def Rotate ( x , radian ): A = np . array ([ [ np . cos ( radian ), - np . sin ( radian )], [ np . sin ( radian ), np . cos ( radian )] ]) return np . dot ( A , data ) In [5]: fig = plt . figure ( figsize = ( 10 , 4 )) ax = fig . add_subplot ( 1 , 2 , 1 ) ax . scatter ( X , Y , color = \"black\" ), ax . set_title ( \"Original\" ) X_tra , Y_tra = Rotate ( data , radian =- 1 / 4 * np . pi ) ax = fig . add_subplot ( 1 , 2 , 2 ) ax . scatter ( X_tra , Y_tra , color = \"red\" ), ax . set_title ( \"Rotated\" ), ax . set_ylim ( - 1 / 2 * np . sqrt ( 2 ), 1 / 2 * np . sqrt ( 2 )) plt . tight_layout () plt . show () $2$ 次元空間で左上図のようなデータがあったとする。この時、このデータを表現するのに $(x,y)$ の二次元が必要だろうか？ データ全体を右に $1/4\\pi$ 回転させると、右上図のようなデータれるとなる。この場合、$y&#94;{\\prime}$ 軸方向はノイズとみなせ、$x&#94;{\\prime}$ 軸のみでデータを表現していると言える。 この例のように、$K$ 次元のデータであっても、で０他の偏りによって $M( こういった場合に、 「$M$ 方向の軸をどのように決めるか？」 、 「$M$ をどうやって決めるか？」 などが問題となる。 ※ 詳しくは 主成分分析(PCA) に記載。 線形判別分析(LDA) 入力ベクトル $\\mathbf{x}$ を $K$ クラスの一つ $C_k$ に割り当てる関数である識別（決定面が超平面となるとき、 線形識別(linear discriminant) ）を、 「次元の削減」 という観点から捉えることができる。 2クラス分類 $D$ 次元入力ベクトルを得て、それを以下の式で $1$ 次元に射影するとする。 $$y = \\mathbf{w}&#94;T\\mathbf{x}\\qquad (4.20)$$ ある閾値を設定し、$y\\geq-w_0$ の場合クラス $C_1$、そうでない場合クラス $C_2$ であるとすると、 標準的な線形分類器が得られる。 一般に、$D$ 次元から $1$ 次元へ射影することによって相当量の情報量の損失を発生させる。 重みベクトル $\\mathbf{w}$ の要素を調整することで、 クラスの分離を最大にする射影を選択したい。 $\\mathbf{w}$ 上へ射影された際のクラス分離度の最も簡単な測定法は、 射影されたクラスの平均の分離度（以下の式） を見ることである。 $$m_2-m_1 = \\mathbf{w}&#94;T\\left(\\mathbf{m}_2-\\mathbf{m}_1\\right) = \\mathbf{w}&#94;T\\left(\\frac{1}{N_2}\\sum_{n\\in C_2}\\mathbf{x}_n -\\frac{1}{N_1}\\sum_{n\\in C_1}\\mathbf{x}_n\\right)\\qquad (4.21)\\ \\&\\ (4.22)$$ 上の式は $\\mathbf{w}$ の値を大きくすればいくらでも大きな値にすることができるので、 $\\mathbf{w}$ が単位長である（$\\sum_i w_i&#94;2 = 1$）という制約を加える。 ラグランジュ乗数を用いてこれを解くと、$\\mathbf{w}\\propto(\\mathbf{m}_2-\\mathbf{m}_1)$ が得られる。 クラス分布の非対角な共分散が強い場合など、一般に、 各クラスの平均値だけを見ていても上手く判別する事ができない。 そこでフィッシャーが提案した方法が、 「射影されたクラス平均間の分離度を大きくすると同時に、各クラス内では小さな分散を与える関数を最大化する」 クラス $C_k$ から射影されたデータのクラス内分散は以下で与えられる。 $$s_k&#94;2 = \\sum_{n\\in C_k}(y_n-m_k)&#94;2\\qquad (4.2)$$ 全データ集合に対する総クラス内分散が $s_1&#94;2+s_2&#94;2$ であると定義する。 フィッシャーの判別基準は、 クラス間分離度 と クラス内分散 の比率で表される。 $$ \\begin{aligned} J(\\mathbf{w}) &= \\frac{(m_2-m_1)&#94;2}{s_1&#94;2 + s_2&#94;2} & (4.25)\\\\ &= \\frac{\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}}{\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}} & (4.27)\\\\ \\mathbf{S}_{\\mathrm{B}} &= (\\mathbf{m}_2-\\mathbf{m}_1)(\\mathbf{m}_2-\\mathbf{m}_1)&#94;T & (4.27)\\\\ \\mathbf{S}_{\\mathrm{W}} &= \\sum_{n\\in C_1}(\\mathbf{x}_n-\\mathbf{m}_1)(\\mathbf{x}_n-\\mathbf{m}_1)&#94;T + \\sum_{n\\in C_2}(\\mathbf{x}_n-\\mathbf{m}_2)(\\mathbf{x}_n-\\mathbf{m}_2)&#94;T& (4.27)\\\\ \\end{aligned} $$ $\\mathbf{S}_{\\mathrm{B}}$ を クラス間共分散行列(between-class covariance matrix) と呼ぶ。 $\\mathbf{S}_{\\mathrm{W}}$ を (総)クラス内共分散行列(within-class covariance matrix) と呼ぶ。 $J(\\mathbf{w})$ を $\\mathbf{w}$ に関して微分すると、以下の式が満たされる場合に $J(\\mathbf{w})$ が最大となる事がわかる。 $$ \\begin{aligned} \\frac{dJ(\\mathbf{w})}{d\\mathbf{w}} &= \\frac{\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}} + \\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\right)\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right) - \\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\right)\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}} + \\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right)}{\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right)&#94;2}\\\\ \\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\right)\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}} + \\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right) &= \\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}} + \\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\right)\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right)\\\\ \\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\right)\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}&= \\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right)\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\qquad (4.29) \\end{aligned} $$ $(4.27)$ から、 $\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}$ は常に $(\\mathbf{m}_2-\\mathbf{m}_1)$ と同じ方向を持つ。 $\\mathbf{w}$ の方向だけが重要で、 大きさは考慮する必要がないので、スカラーファクタ $\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right)$ と $\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\right)$ を無視できる。 $(4.29)$ の両辺に $\\mathbf{S}_{\\mathrm{W}}&#94;{-1}$ を左からかけて、 フィッシャーの線形判別(Fisher's linear discriminant) が得られる。 $$\\mathbf{w}\\propto\\mathbf{S}_{\\mathrm{W}}&#94;{-1}(\\mathbf{m}_2-\\mathbf{m}_1)\\qquad (4.30)$$ フィッシャーの線形判別(Fisher's linear discriminant) は、厳密には識別子ではなく、 むしろ $1$ 次元へ削減する際のデータの射影方向の選択を行なっている。 In [6]: from kerasy.ML.decomposition import LDA In [7]: N1 = 100 ; N2 = 100 cov = [[ 10 , 1 ],[ 1 , 3 ]] In [8]: x1 = np . random . RandomState ( seed ) . multivariate_normal ([ 0 , 7 ], cov , N1 ) x2 = np . random . RandomState ( seed + 1 ) . multivariate_normal ([ 8 , 6 ], cov , N2 ) x1min = np . min ( x1 ); x1max = np . max ( x1 ) x2min = np . min ( x2 ); x2max = np . max ( x2 ) m1 = np . mean ( x1 , axis = 0 ); m2 = np . mean ( x2 , axis = 0 ) m = ( m1 + m2 ) / 2 data = np . r_ [ x1 , x2 ] In [9]: X = np . linspace ( - 100 , 100 , 1000 ) In [10]: fig = plt . figure ( figsize = ( 12 , 6 )) for i , tf in enumerate ([ True , False ]): model = LDA () model . fit ( x1 , x2 , mean_only = tf ) w1 , w2 = model . w alpha = - w2 / w1 beta = m [ 1 ] - alpha * m [ 0 ] x_features = model . transform ( data ) axT = fig . add_subplot ( 2 , 2 , i + 1 ) axT . plot ( X , X * ( - w2 / w1 ) + beta , color = \"black\" , label = \"linear discriminant\" ) axT . scatter ( x1 [:, 0 ], x1 [:, 1 ], color = \"blue\" , label = \"class1\" ) axT . scatter ( x2 [:, 0 ], x2 [:, 1 ], color = \"red\" , label = \"class2\" ) axT . scatter ( m1 [ 0 ], m1 [ 1 ], color = \"green\" , marker = \"*\" , s = 200 ), axT . scatter ( m2 [ 0 ], m2 [ 1 ], color = \"green\" , marker = \"*\" , s = 200 , label = \"mean\" ) axT . set_xlim ( x1min , x1max ), axT . set_ylim ( x2min , x2max ) axT . set_xticks ([]), axT . set_yticks ([]), axT . legend (), axT . set_title ( \"Only Mean\" if tf else \"Fisher's linear discriminant\" ) axB = fig . add_subplot ( 2 , 2 , 3 + i ) axB . hist ( x_features [: N1 ], alpha = 0.3 , color = \"blue\" , label = \"class1\" ) axB . hist ( x_features [ N1 :], alpha = 0.3 , color = \"red\" , label = \"class2\" ) axB . set_xticks ([]), axB . set_yticks ([]), axB . legend () plt . tight_layout () plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"映像メディア工学","url":"https://iwasakishuto.github.io/University/3A/映像メディア工学-3.html","loc":"https://iwasakishuto.github.io/University/3A/映像メディア工学-3.html"},{"title":"生物統計論 第4回","text":"In [1]: import numpy as np import matplotlib.pyplot as plt Section4.1 Expectation Maximization Algorithm The expectation maximization algorithm, or EM algorithm, is a general technique for finding maximum likelihood solutions for probabilistic models having latent variable. Consider a probabilistic model in which we collectively denote all of the observed variables by $\\mathbf{X}$ all of the hidden variables by $\\mathbf{Z}$ (assuming discrete, but discussion is identical if continuous) joint distribution by $p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)$ Goal is to maximize the likelihood function that is given by $$p\\left(\\mathbf{X}|\\boldsymbol{\\theta}\\right) = \\sum_{\\mathbf{Z}}p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)\\qquad (9.69)$$ Properties Guaranteed to terminate Likelihood always increases Solving M-step is often easy No need to traverse the data Separation of parameter dependency $\\log(pq)=\\log(p)+\\log(q)$ Sometimes solved exactly Often a few times faster than gradient descent (if stopping condition is not too stringent) Expectation values characterize the optimized model Lower Bound of Likelihood $\\mathcal{L}\\left(q,\\boldsymbol{\\theta}\\right)$ and $\\mathrm{KL}\\left(q\\|p\\right)$ We shall suppose that direct optimization of $p(\\mathbf{X}|\\boldsymbol{\\theta})$ is difficult the optimization of the complete-data likelihood function $p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)$ is significantly easier We introduce a distribution $q\\left(\\mathbf{Z}\\right)$ defined over the latent variables. For any choice of $q\\left(\\mathbf{Z}\\right)$, the following decomposition holds $$ \\begin{aligned} \\ln p\\left(\\mathbf{X}|\\boldsymbol{\\theta}\\right) &= \\mathcal{L}\\left(q,\\boldsymbol{\\theta}\\right) + \\mathrm{KL}\\left(q\\|p\\right) &(9.70)\\\\ \\mathcal{L}\\left(q,\\boldsymbol{\\theta}\\right) &= \\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln\\left\\{\\frac{p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)}{q(\\mathbf{Z})}\\right\\} & (9.71)\\\\ \\mathrm{KL}\\left(q\\|p\\right) &= -\\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln\\left\\{\\frac{p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}\\right)}{q(\\mathbf{Z})}\\right\\} & (9.72) \\end{aligned} $$ NOTE : $\\mathcal{L}(q,\\boldsymbol{\\theta})$ is a functional of the distribution $q(\\mathbf{Z})$, and a function of the parameters $\\boldsymbol{\\theta}$ $$ \\begin{aligned} \\mathcal{L}\\left(q,\\boldsymbol{\\theta}\\right) + \\mathrm{KL}\\left(q\\|p\\right) &=\\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln\\left\\{\\frac{p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)}{q(\\mathbf{Z})}\\right\\} -\\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln\\left\\{\\frac{p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}\\right)}{q(\\mathbf{Z})}\\right\\}\\\\ &= \\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln\\left\\{\\frac{p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)}{p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}\\right)}\\right\\}\\\\ &= \\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln p\\left(\\mathbf{X}|\\boldsymbol{\\theta}\\right)\\\\ &= \\ln p\\left(\\mathbf{X}|\\boldsymbol{\\theta}\\right) \\end{aligned}$$ From $(9.72)$, we see that $\\mathrm{KL}(q\\|p)$ is the Kullback-Leibler divergence between $q(\\mathbf{Z})$ and the posterior distribution $p(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta})$ Kullback-Leibler divergence satisfies $\\mathrm{KL}(q\\|p)\\geq0$ with eqyality if, and only if, $q(\\mathbf{Z})=p(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta})$. Therefore, $\\mathcal{L}(q,\\boldsymbol{\\theta})\\leq\\ln p(\\mathbf{X}|\\boldsymbol{\\theta})$, in other words that $\\mathcal{L}(q,\\boldsymbol{\\theta})$ is a lower bound on $\\ln p(\\mathbf{X}|\\boldsymbol{\\theta})$ E step In the E step, the lower bound $\\mathcal{L}(q,\\boldsymbol{\\theta}&#94;{\\text{old}})$ is maximized with respect to $q(\\mathbf{Z})$ while holding $\\boldsymbol{\\theta}&#94;{\\text{old}}$ fixed. $\\ln p(\\mathbf{X}|\\boldsymbol{\\theta}&#94;{\\text{old}})$ does not depend on $q(\\mathbf{Z})$ the largest value of $\\mathcal{L}(q,\\boldsymbol{\\theta}&#94;{\\text{old}})$ will occur when the Kullback-Leibler divergence vanishes. ∴ When $q(\\mathbf{Z})$ is equal to the posterior distribution $p(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}})$, $\\mathrm{KL}(q\\|p)=0$ and the lower bound $\\mathcal{L}(q,\\boldsymbol{\\theta}&#94;{\\text{old}})$ will be maximized. M step In the M step, the lower bound $\\mathcal{L}(q,\\boldsymbol{\\theta}&#94;{\\text{old}})$ is maximized with respect to $\\boldsymbol{\\theta}$ to give some new value $\\boldsymbol{\\theta}&#94;{\\text{new}}$ while holding $q(\\mathbf{Z})$ fixed. This will cause the lower bound $\\mathcal{L}$ to increase This will necessarily cause the corrresponding log likelihood function to increase. Because $q$ is held fixed during the M step, it will not equal the new posterior distribution $p(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}})$ $\\left(\\mathrm{KL}(q\\|p)\\neq0\\right)$ $\\mathcal{Q}(\\boldsymbol{\\theta},\\boldsymbol{\\theta}&#94;{\\text{old}})$ $$ \\mathcal{Q}\\left(\\boldsymbol{\\theta},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)=\\sum_{\\mathbf{Z}}p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)\\ln p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right) \\qquad (9.33)\\\\ $$ If we substitute $q(\\mathbf{Z}) = p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)$ into $(9.71)$, $$ \\begin{aligned} \\mathcal{L}\\left(q,\\boldsymbol{\\theta}\\right) &= \\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln\\left\\{\\frac{p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)}{q(\\mathbf{Z})}\\right\\} & (9.71)\\\\ &= \\sum_{\\mathbf{Z}}p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)\\ln p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right) - \\sum_{\\mathbf{Z}}p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)\\ln p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)\\\\ &= \\mathcal{Q}\\left(\\boldsymbol{\\theta},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right) + \\text{const.} \\end{aligned} $$ ∴ \"Maximizing $\\mathcal{L}(q,\\boldsymbol{\\theta})$\" is equal to \"Maximizing $\\mathcal{Q}\\left(\\boldsymbol{\\theta},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)$\". In [2]: from kerasy.ML.MixedDistribution import MixedGaussian In [3]: # Train Data. data = np . concatenate ([ np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 0 , 0 ], cov = np . eye ( 2 ), size = 50 ), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 0 , 5 ], cov = np . eye ( 2 ), size = 50 ), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 3 , 2 ], cov = np . eye ( 2 ), size = 50 ), ]) X , Y = data . T K = 3 In [4]: # Back Ground Color xmin , ymin = np . min ( data , axis = 0 ) - 0.3 xmax , ymax = np . max ( data , axis = 0 ) + 0.3 Xs , Ys = np . meshgrid ( np . linspace ( xmin , xmax , 100 ), np . linspace ( ymin , ymax , 100 )) XYs = np . c_ [ Xs . ravel (), Ys . ravel ()] In [5]: model = MixedGaussian ( K = 3 , random_state = 1234 ) model . fit ( data , memo_span = 1 ) ll_hist = [ ll for _ , _ , _ , ll in model . history ] mu_hist = [ mu for _ , _ ,( mu , _ , _ ), _ in model . history ] In [6]: plt_model = MixedGaussian ( K = 3 ) plt_model . N , plt_model . M = data . shape L_old = min ( ll_hist ) - 300 for epoch , idx ,( mu , S , pi ), ll in model . history [: - 1 ]: fig = plt . figure ( figsize = ( 12 , 8 )) ll_old = ll_hist [ epoch ]; ll_new = ll_hist [ epoch + 1 ] mu_old = mu_hist [ epoch ]; mu_new = mu_hist [ epoch + 1 ] L_new = np . random . uniform ( low = 0.3 , high = 0.5 ) * ( ll_new - ll_old ) + ll_old # 真面目に計算していない。 dL_old = ll_old - L_old ; dL_new = L_new - ll_old ; dll_old = ll_new - ll_old ax1 = fig . add_subplot ( 2 , 2 , 1 ) plt_model . mu = mu ; plt_model . S = S ; plt_model . pi = pi gammas = plt_model . predict ( XYs ) Zs = np . sum ( gammas , axis = 1 ) . reshape ( Xs . shape ) # Likelihood. ax1 . pcolor ( Xs , Ys , Zs , alpha =. 5 , cmap = \"jet\" ) ax1 . scatter ( X , Y , c = idx , cmap = \"prism\" ) ax1 . set_xlim ( xmin , xmax ), ax1 . set_ylim ( ymin , ymax ), ax1 . set_title ( f \"epochs: {epoch:>02}\" , fontsize = 18 ) ax2 = fig . add_subplot ( 2 , 2 , 2 ) ax2 . axhline ( ll_old , color = \"black\" , label = \"$\\ln p(\\mathbf{X},θold)$\" , linewidth = 3 ) ax2 . axhline ( L_old , color = \"black\" , label = \"$L(q,θold)$\" , linestyle = \":\" ) ax2 . arrow ( x = 0.3 , y = L_old , dx = 0 , dy = dL_old , head_width = dL_old / 6000 , head_length = dL_old * 0.1 , fc = 'red' , ec = 'red' , length_includes_head = True ) ax2 . set_title ( f \"E step (Epoch={epoch})\" , fontsize = 18 ), ax2 . legend (), ax2 . set_xticks ([]), ax2 . set_ylim ( - 600 , - 570 ) ax3 = fig . add_subplot ( 2 , 2 , 3 ) for k in range ( K ): xb , yb = mu_old [ k ]; xa , ya = mu_new [ k ] ax3 . plot (( xb , xa ),( yb , ya ), color = \"black\" ) ax3 . scatter ( xb , yb , color = \"black\" , s = 50 ) ax3 . scatter ( xa , ya , color = \"red\" , marker = \"*\" , s = 150 ) ax3 . set_xlim ( xmin , xmax ), ax3 . set_ylim ( ymin , ymax ), ax3 . set_title ( \"θ → θnew\" ) ax3 . grid () ax4 = fig . add_subplot ( 2 , 2 , 4 ) L_new = np . random . uniform ( low = 0.3 , high = 0.5 ) * ( ll_new - ll_old ) + ll_old # 真面目に計算していない。 ax4 . axhline ( ll_old , color = \"black\" , label = \"$\\ln p(\\mathbf{X},θold)$\" , linestyle = \"--\" ) ax4 . axhline ( ll_new , color = \"black\" , label = \"$\\ln p(\\mathbf{X},θnew)$\" , linewidth = 3 ) ax4 . axhline ( L_new , color = \"black\" , label = \"$L(q,θnew)$\" , linestyle = \":\" ) ax4 . arrow ( x = 0.7 , y = ll_old , dx = 0 , dy = dll_old , head_width = dll_old / 6000 , head_length = dll_old * 0.1 , fc = 'k' , ec = 'k' , length_includes_head = True ) ax4 . arrow ( x = 0.3 , y = ll_old , dx = 0 , dy = dL_new , head_width = dL_new / 6000 , head_length = dL_new * 0.1 , fc = 'red' , ec = 'red' , length_includes_head = True ) ax4 . set_title ( f \"M step (Epoch={epoch})\" , fontsize = 18 ), ax4 . legend (), ax4 . set_xticks ([]), ax4 . set_ylim ( - 600 , - 570 ) plt . tight_layout () plt . savefig ( f \"img/img{epoch:>02}\" ) L_old = L_new fig_no = 0 L_old = min ( ll_hist ) - 300 for epoch in range ( len ( model . history ) - 1 ): ll_old = ll_hist [ epoch ]; ll_new = ll_hist [ epoch + 1 ] L_new = np . random . uniform ( low = 0.3 , high = 0.5 ) * ( ll_new - ll_old ) + ll_old # 真面目に計算していない。 dL_old = ll_old - L_old ; dL_new = L_new - ll_old ; dll_old = ll_new - ll_old # Estep fig = plt . figure ( figsize = ( 3 , 10 )) ax = fig . add_subplot ( 1 , 1 , 1 ) ax . axhline ( ll_old , color = \"black\" , label = \"$\\ln p(\\mathbf{X},θold)$\" , linewidth = 3 ) ax . axhline ( L_old , color = \"black\" , label = \"$L(q,θold)$\" , linestyle = \":\" ) ax . arrow ( x = 0.3 , y = L_old , dx = 0 , dy = dL_old , head_width = dL_old / 60 , head_length = dL_old * 2e-1 , fc = 'red' , ec = 'red' , length_includes_head = True ) ax . set_title ( f \"E step (Epoch={epoch})\" , fontsize = 18 ), ax . legend (), ax . set_xticks ([]), ax . set_ylim ( - 600 , - 570 ) plt . savefig ( f \"img/img{fig_no:>02}\" ); fig_no += 1 plt . clf () # Mstep fig = plt . figure ( figsize = ( 3 , 10 )) ax = fig . add_subplot ( 1 , 1 , 1 ) L_new = np . random . uniform ( low = 0.3 , high = 0.5 ) * ( ll_new - ll_old ) + ll_old # 真面目に計算していない。 ax . axhline ( ll_old , color = \"black\" , label = \"$\\ln p(\\mathbf{X},θold)$\" , linestyle = \"--\" ) ax . axhline ( ll_new , color = \"black\" , label = \"$\\ln p(\\mathbf{X},θnew)$\" , linewidth = 3 ) ax . axhline ( L_new , color = \"black\" , label = \"$L(q,θnew)$\" , linestyle = \":\" ) ax . arrow ( x = 0.7 , y = ll_old , dx = 0 , dy = dll_old , head_width = dll_old / 60 , head_length = dll_old * 2e-1 , fc = 'k' , ec = 'k' , length_includes_head = True ) ax . arrow ( x = 0.3 , y = ll_old , dx = 0 , dy = dL_new , head_width = dL_new / 60 , head_length = dL_new * 2e-1 , fc = 'red' , ec = 'red' , length_includes_head = True ) ax . set_title ( f \"M step (Epoch={epoch})\" , fontsize = 18 ), ax . legend (), ax . set_xticks ([]), ax . set_ylim ( - 600 , - 570 ) plt . savefig ( f \"img/img{fig_no:>02}\" ); fig_no += 1 plt . clf () L_old = L_new Section4.2 Mixture Model Implementation Gaussian Mixture Distribution k-means clustering Section4.3 Linear Regression Least Squares polynomial function we observe a real-value input variable $x$ and we wish to use this observation to predict the value of a real-valued target variable $t$. In the most simplest approach based on curve fitting, we shall fit the data using a polynomial function of the form : $$y(x,\\mathbf{w}) = w_0+w_1x+w_2x&#94;2+\\cdots+w_Mx&#94;M=\\sum_{j=0}&#94;Mw_jx&#94;j\\qquad (1.1)$$ data we are given a training set comprising $N$ observation of $x$, written $\\mathbf{X}\\equiv(\\mathbf{x_1},\\ldots,\\mathbf{x}_N)&#94;T$ with corresponding observation of the values of $t$, denoted $\\mathbf{t}\\equiv(t_1\\ldots,t_N)&#94;T$ we can difine $M$, which is the order of the polynomial. The values of the coefficients($w_j$) will be determined by fitting the polynomial to the training data. This can be done by minimizing an error function that measures the misfit between the function $y(x,\\mathbf{w})$ and the training set data points. One simple choice of error function, which is widely used, is given by the sum of the squares of the errors $$E(\\mathbf{w}) = \\frac{1}{2}\\mathrm{RSS} = \\frac{1}{2}\\sum_{n=1}&#94;N\\left\\{y(\\mathbf{x}_n,\\mathbf{w}) - t_n\\right\\}&#94;2\\qquad (1.2)$$ (the factor of $1/2$ is included for later convenience.) Trainig Aim: find the best $\\mathbf{w}&#94;{\\star}=\\underset{w\\in\\mathbb{R}}{\\mathrm{argmin}}\\left\\{\\mathrm{RSS}(\\mathbf{w})\\right\\}$ $\\mathbf{t} = \\left(\\begin{matrix}t_1\\\\\\vdots\\\\t_N\\end{matrix}\\right),\\quad\\mathbf{X} = \\left(\\begin{matrix}x_1&#94;0&x;_1&#94;1&\\cdots&x;_1&#94;M\\\\x_2&#94;0&x;_2&#94;1&\\cdots&x;_2&#94;M\\\\\\vdots&\\vdots&\\ddots&\\vdots\\\\x_N&#94;0&x;_N&#94;1&\\cdots&x;_N&#94;M\\end{matrix}\\right),\\quad\\mathbf{w}=\\left(\\begin{matrix}w_1\\\\\\vdots\\\\w_M\\end{matrix}\\right)$ $\\mathrm{RSS}(\\mathbf{w}) = \\left(\\mathbf{t} - \\mathbf{Xw}\\right)&#94;T\\left(\\mathbf{t} - \\mathbf{Xw}\\right)$ Solution: $$ \\begin{aligned} \\frac{\\partial E(\\mathbf{w})}{\\partial\\mathbf{w}} &=\\frac{1}{2}\\frac{\\partial}{\\partial\\mathbf{w}}\\|\\mathbf{t}-\\mathbf{Xw}\\|&#94;2\\\\ &=\\frac{1}{2}\\frac{\\partial}{\\partial\\mathbf{w}}\\left(\\|\\mathbf{t}\\|&#94;2 - 2\\mathbf{w}&#94;T\\mathbf{X}&#94;T\\mathbf{t} + \\|\\mathbf{Xw}\\|&#94;2\\right)\\\\ &=\\frac{1}{2}\\frac{\\partial}{\\partial\\mathbf{w}}\\left(\\|\\mathbf{t}\\|&#94;2 - 2\\mathbf{w}&#94;T\\mathbf{X}&#94;T\\mathbf{t} + \\mathbf{w}&#94;T\\mathbf{X}&#94;T\\mathbf{Xw}\\right)\\\\ &=\\frac{1}{2} \\left(-2\\mathbf{X}&#94;T\\mathbf{t} + \\left(\\mathbf{X}&#94;T\\mathbf{X} + \\left(\\mathbf{X}&#94;T\\mathbf{X}\\right)&#94;T\\right)\\mathbf{w}\\right)\\\\ &= -\\mathbf{X}&#94;T\\mathbf{t}+\\mathbf{X}&#94;T\\mathbf{Xw}=\\mathbf{0}\\\\ \\therefore\\mathbf{w}&#94;{\\star} &= \\left(\\mathbf{X}&#94;T\\mathbf{X}\\right)&#94;{-1}\\mathbf{X}&#94;T\\mathbf{t} \\end{aligned}$$ ※ In the following programs, I use np.linalg.solve to calcurate $\\mathbf{w}&#94;{\\ast}$ equation program $$\\left(\\mathbf{X}&#94;T\\mathbf{X}\\right)\\mathbf{w}&#94;{\\star} = \\mathbf{X}&#94;T\\mathbf{t}$$ w = np.linalg.solve(X.T.dot(X), X.T.dot(t)) In [7]: N = 15 Ms = [ 2 , 4 , 8 , 16 ] seed = 0 In [8]: # Training data. x = np . random . RandomState ( seed ) . uniform ( low = 0 , high = 1 , size = N ) Noise = np . random . RandomState ( seed ) . normal ( loc = 0 , scale = 0.1 , size = N ) t = np . sin ( 2 * np . pi * x ) + Noise In [9]: fig = plt . figure ( figsize = ( 12 , 8 )) for i , M in enumerate ( Ms ): ax = fig . add_subplot ( 2 , 2 , i + 1 ) # Training. X = np . array ([ x ** m for m in range ( M + 1 )]) . T w = np . linalg . solve ( X . T . dot ( X ), X . T . dot ( t )) # For Validation plot. Xs = np . linspace ( 0 , 1 , 1000 ) t_true = np . sin ( 2 * np . pi * Xs ) t_pred = w . dot ( np . array ([ Xs ** m for m in range ( M + 1 )])) # RSS(Residual Sum of Squares) residual = t - w . dot ( np . array ([ x ** m for m in range ( M + 1 )])) RSS = residual . T . dot ( residual ) # Plot. ax . plot ( Xs , t_true , color = \"black\" , label = \"$t=\\sin(2\\pi x)$\" ) ax . plot ( Xs , t_pred , color = \"red\" , label = f \"prediction ($M= {M} $)\" ) ax . scatter ( x , t , edgecolors = 'blue' , facecolor = \"white\" , label = \"train data\" ) ax . set_title ( f \"Results (RSS=$ {RSS:.3f} $,M=$ {M} $)\" ), ax . set_xlabel ( \"$x$\" ), ax . set_ylabel ( \"$t$\" ) ax . set_xlim ( 0 , 1 ), ax . set_ylim ( - 1.2 , 1.2 ) ax . legend () plt . tight_layout () plt . show () Regularized Least Square $$ \\begin{aligned} E(\\mathbf{w}) &= E_{D}(\\mathbf{w}) + \\lambda E_W(\\mathbf{w}) & (3.24)\\\\ &= \\frac{1}{2}\\mathrm{RSS} + \\lambda\\frac{1}{2}\\mathbf{w}&#94;T\\mathbf{w}\\\\ &= \\frac{1}{2}\\sum_{n=1}&#94;N\\left\\{y(\\mathbf{x}_n,\\mathbf{w}) - t_n\\right\\}&#94;2+\\frac{1}{2}\\mathbf{w}&#94;T\\mathbf{w} & (3.27)\\\\ \\therefore\\mathbf{w}&#94;{\\star} &= \\left(\\lambda\\mathbf{I} + \\mathbf{X}&#94;T\\mathbf{X}\\right)&#94;{-1}\\mathbf{X}&#94;T\\mathbf{t} & (3.28) \\end{aligned} $$ In [10]: lambda_ = 1e-4 In [11]: fig = plt . figure ( figsize = ( 12 , 8 )) for i , M in enumerate ( Ms ): ax = fig . add_subplot ( 2 , 2 , i + 1 ) # Training. X = np . array ([ x ** m for m in range ( M + 1 )]) . T w = np . linalg . solve ( lambda_ * np . identity ( M + 1 ) + X . T . dot ( X ), X . T . dot ( t )) # For Validation plot. Xs = np . linspace ( 0 , 1 , 1000 ) t_true = np . sin ( 2 * np . pi * Xs ) t_pred = w . dot ( np . array ([ Xs ** m for m in range ( M + 1 )])) # RSS(Residual Sum of Squares) residual = t - w . dot ( np . array ([ x ** m for m in range ( M + 1 )])) RSS = residual . T . dot ( residual ) # Plot. ax . plot ( Xs , t_true , color = \"black\" , label = \"$t=\\sin(2\\pi x)$\" ) ax . plot ( Xs , t_pred , color = \"red\" , label = f \"prediction ($M= {M} $)\" ) ax . scatter ( x , t , edgecolors = 'blue' , facecolor = \"white\" , label = \"train data\" ) ax . set_title ( f \"Results (RSS=$ {RSS:.3f} $,M=$ {M} $,$\\lambda= {lambda_} $)\" ), ax . set_xlabel ( \"$x$\" ), ax . set_ylabel ( \"$t$\" ) ax . set_xlim ( 0 , 1 ), ax . set_ylim ( - 1.2 , 1.2 ) ax . legend () plt . tight_layout () plt . show () Section4.4 Bayesian Inference Maximal Likelihood Estimate $$ l(\\boldsymbol{\\theta}|D) = \\log L(\\boldsymbol{\\theta}|D) = \\log\\mathbb{P}(D|\\boldsymbol{\\theta})\\\\ \\hat{\\boldsymbol{\\theta}}_{\\text{ML}} = \\underset{\\boldsymbol{\\theta}}{\\text{argmax}}l(\\boldsymbol{\\theta}|D) $$ ※ $l$: large → High probability of observing $D$ from the model $\\boldsymbol{\\theta}$ Maximum a Posteriori Estimate Maximum a posteriori estimate $$ \\begin{aligned} \\hat{\\boldsymbol{\\theta}_{\\text{MAP}}} &= \\underset{\\boldsymbol{\\theta}}{\\text{argmax}}f(\\boldsymbol{\\theta}|D)\\\\ &= \\underset{\\boldsymbol{\\theta}}{\\text{argmax}}f(D|\\boldsymbol{\\theta})f(\\boldsymbol{\\theta})\\\\ &= \\underset{\\boldsymbol{\\theta}}{\\text{argmax}}\\left\\{l(\\boldsymbol{\\theta}|D) L \\log f(\\boldsymbol{\\theta})\\right\\}\\\\ \\end{aligned} $$ Posterior mean estimate $$ \\hat{\\boldsymbol{\\theta}_{\\text{PME}}} = \\int\\boldsymbol{\\theta}f(\\boldsymbol{\\theta}|D)d\\boldsymbol{\\theta} $$ Implementation of Gaussian Prior for Regression. In [12]: seed = 123 In [13]: from kerasy.ML.linear import BayesianLinearRegression from kerasy.utils.preprocessing import GaussianBaseTransformer from kerasy.utils.data_generator import generateSin , generateGausian In [14]: N = 25 ; D = 1 ; M = 25 xmin = 0 ; xmax = 1 In [15]: alpha = 1 beta = 25 In [16]: x_test = np . linspace ( xmin , xmax , 1000 ) y_test = np . sin ( 2 * np . pi * x_test ) x_train , y_train = generateSin ( size = N , xmin = xmin , xmax = xmax , seed = seed ) _ , y_noise = generateGausian ( size = N , x = x_train , loc = 0 , scale = 1 / beta , seed = seed ) y_train += y_noise In [17]: # transform mu = np . linspace ( xmin , xmax , M ); sigma = 0.1 phi = GaussianBaseTransformer ( mu = mu , sigma = sigma ) x_train_features = phi . transform ( x_train ) x_test_features = phi . transform ( x_test ) In [18]: random_idx = np . random . RandomState ( seed ) . choice ( N , N ) In [19]: fig = plt . figure ( figsize = ( 16 , 8 )) for i , n in enumerate ([ 1 , 2 , 4 , 25 ]): ax = fig . add_subplot ( 2 , 2 , i + 1 ) model = BayesianLinearRegression ( alpha = alpha , beta = beta ) model . fit ( x_train_features [ random_idx [: n ]], y_train [ random_idx [: n ]]) y_pred , y_std = model . predict ( x_test_features ) ax . plot ( x_test , y_test , color = \"black\" , label = \"$\\sin(2\\pi x)$\" ) ax . plot ( x_test , y_pred , color = \"red\" , label = \"predict($\\mu$)\" ) ax . fill_between ( x_test , y_pred - y_std , y_pred + y_std , color = \"pink\" , alpha = 0.5 ) ax . scatter ( x_train [ random_idx [: n ]], y_train [ random_idx [: n ]], s = 150 , edgecolors = 'black' , facecolor = \"white\" , label = \"train data\" ) ax . set_ylim ( - 1.5 , 1.5 ), ax . legend (), ax . set_title ( f \"Bayesian Linear Regression (N= {n} )\" ) plt . tight_layout () plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物統計論","url":"https://iwasakishuto.github.io/University/3A/生物統計論-4.html","loc":"https://iwasakishuto.github.io/University/3A/生物統計論-4.html"},{"title":"レポート課題3(10/17出題)","text":"6+NYJ/AjdZBjEEUk7r4/+w==;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;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-report3.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-report3.html"},{"title":"連続最適化(2)制約付き最適化","text":"講師： 佐藤一誠 参考書： 最適化手法 参考書： 機械学習のための連続最適化 講義概要 等式制約付き最適化問題 ラグランジュ未定乗数法 ラグランジュ双対問題 双対変数の最適化 不等式制約付き最適化問題 制約なし最適化問題への変換 双対問題 まとめ 制約付き最適化問題(constrained optimization problem) \\(\\mathcal{X}\\subset\\mathbb{R}&#94;d\\) 上に定義される関数 \\(f:\\mathcal{X}\\rightarrow\\mathbb{R}\\) の最小値を求める。 $$ \\begin{aligned} \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{minimization : }}&f(\\mathbf{x})\\\\ \\text{subject to : }&g(\\mathbf{x})=\\mathbf{0}\\\\ &h(\\mathbf{x})\\leq\\mathbf{0} \\end{aligned} $$ \"subject to\"は、 「…を条件として」 という意味。 \\(g_i,h_i\\) は互いに 一次独立(linearly independent) であると仮定。 実行可能解(feasible solution) ：全ての制約条件を満たす \\(\\mathbf{x}\\) 凸最適化問題(convex optimization problem) ：関数 \\(f\\) が凸、集合 \\(\\mathcal{X}\\) が凸、制約条件 \\(\\mathbf{g},\\mathbf{h}\\) が凸であれば、最適値が一意に定まる。 ※ 以下、凸最適化問題を考える。 等式制約付き最適化問題 等式制約付き最適化問題 $$ \\begin{aligned} \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{minimization : }}&f(\\mathbf{x})\\\\ \\text{subject to : }&g(\\mathbf{x})=\\mathbf{0}\\\\ \\end{aligned} $$ \\(\\mathbf{x}_k\\) に設定して、勾配法や準ニュートン法などで以下の $$\\mathbf{x}_{k+1} = \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{argmin}}f(\\mathbf{x}) + c_k\\|\\mathbf{g}(x)\\|&#94;2$$ \\(c_k\\) の値を徐々に増やしていく。 $$0 < c_1 < c_2 < \\cdots$$ ラグランジュ未定乗数法 詳しくは ラグランジュ未定乗数法 に記載されているので、ここでは具体例を紹介する。 問題 $$ \\begin{aligned} \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{min : }}&3x&#94;2 + 2y&#94;2\\\\ \\text{subject to : }&x+y=1\\\\ \\end{aligned} $$ 解答 ラグランジュ関数は、 $$L(x,y,\\lambda) = 3x&#94;2 + 2y&#94;2 + \\lambda(x+y-1)$$ となるから、 $$ \\begin{aligned} \\frac{\\partial L}{\\partial x} &= 6x+\\lambda=0 &\\therefore x = -\\frac{1}{6}\\lambda\\\\ \\frac{\\partial L}{\\partial y} &= 4y+\\lambda=0 &\\therefore y = -\\frac{1}{4}\\lambda\\\\ \\frac{\\partial L}{\\partial \\lambda} &= x+y-1=0 &\\therefore \\lambda = -\\frac{12}{5}\\\\ \\end{aligned} $$ よって、 \\((x,y) = (0.4,0.6)\\) ラグランジュ双対問題 これも、詳しくは ラグランジュ双対問題 に記載されているので、ここでは具体例を紹介する。 問題 $$ \\begin{aligned} \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{min : }}&3x&#94;2 + 2y&#94;2\\\\ \\text{subject to : }&x+y=1\\\\ \\end{aligned} $$ 解答 ラグランジュ関数は、 $$L(x,y,\\lambda) = 3x&#94;2 + 2y&#94;2 + \\lambda(x+y-1)$$ となるから、 $$ \\begin{aligned} \\frac{\\partial L}{\\partial x} &= 6x+\\lambda=0 &\\therefore x = -\\frac{1}{6}\\lambda\\\\ \\frac{\\partial L}{\\partial y} &= 4y+\\lambda=0 &\\therefore y = -\\frac{1}{4}\\lambda \\end{aligned} $$ よって、これらを \\(L(x,y,\\lambda)\\) に代入して、 $$\\omega(\\lambda) = \\underset{x,y\\in\\mathbb{R}}{\\inf}L(x,y,\\lambda) = -\\frac{5}{24}\\lambda&#94;2-\\lambda$$ したがって、 \\(\\underset{\\lambda\\in\\mathbb{R}}{\\text{argmax}}\\omega(\\lambda) = -\\frac{12}{5}\\Longrightarrow(x,y) = (0.4,0.6)\\) 双対変数の最適化 上の問題では、双対変数 \\(\\lambda\\) の最適化問題を解析的に解けたが、解析的に解くことができない問題もある。その場合に使うのが 双対上昇法 や 乗数法 と呼ばれる 双対変数の勾配上昇 を行う手法である。 手法 数式 解説 双対上昇法 $$\\begin{aligned}\\mathbf{x}_{k+1} &= \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{argmin}}L(\\mathbf{x},\\boldsymbol{\\lambda}_{k})\\\\\\boldsymbol{\\lambda}_{k+1} &= \\boldsymbol{\\lambda}_k + \\varepsilon_k\\nabla\\omega(\\mathbf{\\boldsymbol{\\lambda}}_k) \\\\&= \\boldsymbol{\\lambda}_k + \\varepsilon_k\\mathbf{g}(\\mathbf{x}_{k+1})\\end{aligned}$$ 適当な初期値から，ラグランジュ関数の最小化と双対変数の勾配上昇を交互に実行 乗数法 $$\\begin{aligned}\\mathbf{x}_{k+1} &= \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{argmin}}L_c(\\mathbf{x},\\boldsymbol{\\lambda}_{k})\\\\\\boldsymbol{\\lambda}_{k+1} &= \\boldsymbol{\\lambda}_k + c\\nabla\\omega(\\mathbf{\\boldsymbol{\\lambda}}_k) \\\\&= \\boldsymbol{\\lambda}_k + c\\mathbf{g}(\\mathbf{x}_{k+1})\\end{aligned}$$ 適当な初期値から， 拡張ラグランジュ関数 の最小化と双対変数の勾配上昇を交互に実行 なお、 拡張ラグランジュ関数(augmented Lagrangian) は、以下で表される関数で、二次の項を加えることで凸性を増している。 $$L_c(\\mathbf{x},\\boldsymbol{\\lambda}) = f(\\mathbf{x}) + \\boldsymbol{\\lambda}&#94;T\\mathbf{g}(\\mathbf{x}) + \\frac{c}{2}\\|\\mathbf{g}(\\mathbf{x})\\|&#94;2$$ ※実装は レポート課題3 に記載。 不等式制約付き最適化問題 $$ \\begin{aligned} \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{minimization : }}&f(\\mathbf{x})\\\\ \\text{subject to : }&h(\\mathbf{x})\\leq\\mathbf{0}\\\\ \\end{aligned} $$ 実行可能解 \\(\\mathbf{x}\\) において \\(h_i(\\mathbf{x}) = 0\\) の時、この制約を 有効制約(active constraint) と呼ぶ。 実行可能解 \\(\\mathbf{x}\\) においてそれ以外の時、この制約を 無効制約(inactive constraint) と呼ぶ。 制約なし最適化問題への変換 障壁法(barrier method) 初期値を \\(\\mathbf{x}_k\\) に設定して、勾配法や準ニュートン法などで以下の制約なし最適化問題を解く。 $$\\mathbf{x}_{k+1} = \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{argmin}}f(\\mathbf{x}) - c_k\\log(-h(\\mathbf{x}))$$ \\(c_k\\) の値を徐々に減らしていく。 途中の解 \\(\\mathbf{x}_{k+1}\\) が常に \\(h(\\mathbf{x}_{k+1})\\leq0\\) を満たす （つまり、実行可能領域の内側にある） ことから、 内点法(interior-point method) ともよばれる。 \\(c_k\\) の決め方が難しい。 罰則法(penalty method) 初期値を \\(\\mathbf{x}_k\\) に設定して、勾配法や準ニュートン法などで以下の制約なし最適化問題を解く。 $$\\mathbf{x}_{k+1} = \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{argmin}}f(\\mathbf{x}) + c_k\\max(0,h(\\mathbf{x}))&#94;2$$ \\(c_k\\) の値を徐々に増やしていく。 途中の解 \\(\\mathbf{x}_{k+1}\\) が一般に \\(h(\\mathbf{x}_{k+1})>0\\) を満たす （つまり、実行可能領域の外側にある） ことから、 外点法(exterior-point method) ともよばれる。 \\(c_k\\) の決め方が難しい。 射影勾配法(projected gradient method) 勾配降下（ \\(\\tilde{\\mathbf{x}}_{k+1} = \\mathbf{x}_k-\\varepsilon_k\\nabla f(\\mathbf{x}_k)\\) ）と実行可能領域への射影（ \\(\\mathbf{x}_{k+1} = \\mathbf{P}_k\\tilde{\\mathbf{x}}_{k+1}\\) ）を繰り返す。 まとめると $$\\mathbf{x}_{k+1} = \\mathbf{P}_k\\left(\\mathbf{x}_k - \\varepsilon_k\\nabla f(\\mathbf{x}_k)\\right)$$ 射影が簡単に計算できる時、効率が良い。 双対問題 詳しくは ラグランジュ未定乗数法 に記載。 まとめ 制約付き最適化問題： $$ \\begin{aligned} \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{minimization : }}&f(\\mathbf{x})\\\\ \\text{subject to : }&g(\\mathbf{x})=\\mathbf{0}\\\\ &h(\\mathbf{x})\\leq\\mathbf{0} \\end{aligned} $$ ラグランジュ関数： $$L\\left(\\mathbf{x},\\boldsymbol{\\lambda},\\boldsymbol{\\mu}\\right) = f(\\mathbf{x}) + \\boldsymbol{\\lambda}&#94;Tg(\\mathbf{x}) + \\boldsymbol{\\mu}&#94;Th(\\mathbf{x})$$ 双対問題： $$ \\begin{aligned} \\underset{\\boldsymbol{\\lambda,\\mu},\\ \\mathbf{x}\\in\\mathcal{X}}{\\text{maximization : }}&L\\left(\\mathbf{x},\\boldsymbol{\\lambda},\\boldsymbol{\\mu}\\right)\\\\ \\text{subject to : }&\\boldsymbol{\\mu}\\geq\\mathbf{0}\\\\ \\end{aligned} $$ KKT条件： $$ \\begin{aligned} \\begin{cases} \\nabla_{\\mathbf{x}}L\\left(\\mathbf{x}&#94;{\\ast},\\boldsymbol{\\lambda}&#94;{\\ast},\\boldsymbol{\\mu}&#94;{\\ast}\\right) = \\mathbf{0}\\\\ \\nabla_{\\boldsymbol{\\lambda}}L\\left(\\mathbf{x}&#94;{\\ast},\\boldsymbol{\\lambda}&#94;{\\ast},\\boldsymbol{\\mu}&#94;{\\ast}\\right) = \\mathbf{0} & \\boldsymbol{\\mu}&#94;{\\ast}\\geq\\mathbf{0}\\\\ \\nabla_{\\boldsymbol{\\mu}}L\\left(\\mathbf{x}&#94;{\\ast},\\boldsymbol{\\lambda}&#94;{\\ast},\\boldsymbol{\\mu}&#94;{\\ast}\\right) \\leq \\mathbf{0} & \\mu_i&#94;{\\ast}h_i(\\mathbf{x}&#94;{\\ast}) = 0,\\ \\forall i \\end{cases} \\end{aligned} $$ .prompt { /* This is for jupyter blog.*/ min-width: 0; /* This padding is tuned to match the padding on the CodeMirror editor. */ padding: 0em 0.4em 0em 0em; margin: 0px; font-family: monaco; } /*蛍光ペン(pink)*/ .marker-pink { color: #c45a5a; background: linear-gradient(transparent 70%, #ff66ff 60%); font-weight: bold; } /*蛍光ペン(blue) & hover info*/ .marker-info { color: #5C7DC4; background: linear-gradient(transparent 70%, #66FFCC 60%); font-weight: bold; position: relative; cursor: pointer; } .marker-info:hover:before { opacity: 1; z-index: 2; } .marker-info:before { content: attr(aria-label); opacity: 0; position: absolute; top: 30px; right: -90px; font-size: 14px; width: 300px; padding: 10px; color: #fff; background-color: #555; border-radius: 3px; pointer-events: none; } /* 枠囲み */ .frame { border: solid 1.0px #000000; padding: 0.5em 1em; margin: 2em 0; } /* 暗記用 question box */ span .qbox{ display: none; } span.qbox-wrapper:hover .qbox-default{ display: none; } span.qbox-wrapper:hover .qbox{ display: inline; } .qbox-wrapper{ font-weight: bold; padding: 5px 10px; border-radius: 5px; border: solid 2px #000000; margin: 5px } .qbox-wrapper:hover{ text-shadow: 0px 0px 6px rgba(255, 255, 255, 1); -webkit-box-shadow: 0px 5px 40px -10px rgba(0,0,0,0.57); -moz-box-shadow: 0px 5px 40px -10px rgba(0,0,0,0.57); transition: all 0.4s ease 0s; } /* 画像吹き出し */ .balloon { display: table; width: 100%; } .balloon_img { display: table-cell; vertical-align: middle; width: 50%; padding-right: 10px; } .balloon_comment { border: #83274e solid 4px; position: relative; background: #fff; padding: 12px; border-radius: 13px; display: block } .balloon_comment::before { content: \"\"; position: absolute; border-right: 23px solid #83274e; border-bottom: 20px solid transparent; border-top: 20px solid transparent; top: 30%; left: -23px; } .balloon_comment::after { content: \"\"; position: absolute; border-right: 24px solid #fff; border-bottom: 20px solid transparent; border-top: 20px solid transparent; top: 30%; left: -17px; } if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-3.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-3.html"},{"title":"RNA-seqデータ解析（バッチスクリプト版）","text":"QSryZ/406gNL0ksiDpGSBw==;;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-12.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-12.html"},{"title":"RNA-seqデータ解析（対話モード版）","text":"I5o5xfnGt1M/c91PUGJOnQ==;;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-11.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-11.html"},{"title":"ゲノム解析ツールの環境構築","text":"5kJSsDcnpHKpiwNsBT0zVg==;;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-10.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-10.html"},{"title":"逐次最小問題最適化法(SMO)","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) In [1]: import numpy as np import matplotlib.pyplot as plt 二次計画問題を解くアルゴリズム概観 アルゴリズム 説明 伝統的な二次計画法のアルゴリズム 計算コスト及びメモリ使用量の面で現実的には厳しい。 チャンキング(chunking) カーネル行列からラグランジュ乗数が $0$ となるデータに対応する行および列を取り除いても、ラグランジュ関数が不変であることを利用し、元々の二次計画問題は、より次元数の小さな問題を順番に解くことで、最終的には $0$ とならないラグランジュ乗数だけを残す、という問題に帰着する。 射影共役勾配法(projected conjugate gradient method) チャンキングを実装する手法 分解法(decomposition method) チャンキングと同様 サイズの小さな二次計画問題を繰り返し解く という手法だが、ここの部分問題の大きさが一定であるため、任意の大きさのデータに対応できる。 逐次最小問題最適化法(SMO;sequential minimal optimization) 分解法の計算コストを削減した手法。たった２つのラグランジュ乗数を含む部分問題を逐次解いていくことで最終的な解を得る。 逐次最小問題最適化法(SMO;sequential minimal optimization) ラグランジュ双対問題 を以下のように定義する。 $$ \\begin{aligned} \\tilde{L}(\\mathbf{a}) &=\\sum_n&#94;Na_n - \\frac{1}{2}\\sum_{n=1}&#94;{N}\\sum_{m=1}&#94;Na_na_mt_nt_mk(\\mathbf{x}_n,\\mathbf{x}_m)& (7.10)\\\\ a_n & \\geq 0,\\quad n=1,\\ldots,N & (7.11)\\\\ \\sum_{n=1}&#94;Na_nt_n &= 0 & (7.12) \\end{aligned} $$ 逐次最小問題最適化法(SMO;sequential minimal optimization) は反復法である。 適当な初期値 $\\mathbf{a}&#94;{(0)}$ から出発して、更新 $\\mathbf{a}&#94;{(k)} \\rightarrow \\mathbf{a}&#94;{(k+1)}$ を繰り返す。 この際、 １度には2つの成分しか動かさない。 ここで、$a_p$ と $a_q$ だけ動かすことを考える。 （他の $a_n$ は定数とみなす） この時、制約条件より $$ a_pt_p + a_qt_q = 0-\\sum_{n\\neq p,q} a_nt_n = \\mathrm{const.}$$ が成立する。したがって、 $$ \\frac{\\partial a_q}{\\partial a_p} = -\\frac{t_p}{t_q} =-t_pt_q \\cdots (\\ast)$$ と解析的に偏微分を求めることが可能である。 目的関数 $\\tilde{L}$ の変化量 以下、$K_{ij} = k\\left(\\mathrm{x}_i,\\mathrm{x}_j\\right)$ とおく。ここで、 $$a_p\\mapsto a_p+\\Delta_p, \\quad a_q\\mapsto a_q+\\Delta_q$$ と更新した時、目的関数 $\\tilde{L}$ の変化量 $\\Delta\\tilde{L}$ は、 $$ \\begin{aligned} \\Delta\\tilde{L} &= \\Delta_p + \\Delta_q - \\Delta_pt_p\\sum_{n=1}&#94;Na_nt_nk(\\mathbf{x}_p,\\mathbf{x}_n) - \\Delta_qt_q\\sum_{n=1}&#94;Na_nt_nk(\\mathbf{x}_q,\\mathbf{x}_n)\\\\ &-\\frac{1}{2}\\left[\\Delta_p&#94;2k(\\mathbf{x}_p,\\mathbf{x}_p) + 2\\Delta_p\\Delta_qt_pt_qk(\\mathbf{x}_p,\\mathbf{x}_q) + \\Delta_q&#94;2k(\\mathbf{x}_q,\\mathbf{x}_q)\\right] \\end{aligned} $$ となる。 $(\\ast)$ より $\\Delta_q = -t_pt_q\\Delta_p$ である。 $t_p=t_q(\\Longleftrightarrow\\Delta_q=-\\Delta_p)$ の時と $t_p\\neq t_q$ の時に場合分けをし、それぞれ $\\Delta_p$ で変化量を偏微分して $0$ とおく。 結果は共に等しく、以下で表される。 $$ \\begin{aligned} \\Delta_p &= \\frac{1-t_pt_q + t_p\\left(\\sum_{n=1}&#94;Na_nt_nK_{qn} - \\sum_{n=1}&#94;Na_nt_nK_{pn}\\right)}{K_{pp} - 2K_{pq} + K_{qq}}\\\\ &= \\frac{1-t_pt_q + t_p\\left(y(\\mathbf{x_q}) - y(\\mathbf{x}_q)\\right)}{K_{pp} - 2K_{pq} + K_{qq}}\\\\ \\end{aligned} $$ クリッピング この時、 $t_pa_p+t_qa_q=c$ $a_p\\geq0$ $a_q\\geq0$ が成立していなければならないので、以下を満たすように $\\Delta_p$ の クリッピング を行う必要がある。 $t_p=t_q$ のときは $ 0 \\leq a_p + \\Delta_p \\leq c/t_p$ $t_p=-t_q$ のときは $ \\mathrm{max}\\{0,c/t_p\\}\\leq a_p+\\Delta_p$ 変数の選択方法 最後に、動かす $\\mu_p,\\mu_q$ の選択基準であるが、SMO法の発見者である $John C. Platt$ の論文に従うならば以下の様になる。 $KTT$条件を破る$a_p$を$1$つ目に選ぶ。 続いて、$\\left|y\\left(\\mathbf{x_q}\\right)-y\\left(\\mathbf{x_p}\\right)\\right|$ が最大となる$a_p$を次に選ぶ。 これは、$\\left|y\\left(\\mathbf{x_q}\\right)-y\\left(\\mathbf{x_p}\\right)\\right|$ が大きければそれだけステップ幅も大きくなるため収束が早くなるというヒューリスティックス（直感）である。 これを繰り返して、$\\tilde{L}$ が収束するまで反復を繰り返せば学習完了である。 実装例 kerasy.ML.svm.BaseSVM に記載。 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-5.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-5.html"},{"title":"ラグランジュ双対問題","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) はじめに このノートは、 Qiita記事『ラグランジュ双対問題について解説』 を引用しています。 ラグランジュ双対関数 ラグランジアン 次の最小化問題を考える. $$ \\begin{aligned} \\min_{x\\in\\mathbb{R}&#94;n} &~ f_0(x)\\\\ \\mathrm{s.t.} &~ f_i(x)\\le 0,~ i=1,\\ldots,m\\\\ &~ h_i(x)=0, ~i=1,\\ldots, p \\end{aligned} $$ 実行可能領域は 空でない とする この最適化問題の 最適値 を \\(p&#94;\\star\\) と書く 凸性は特に仮定しない 主問題 という ラグランジアンは次のように定義される。 $$L(x, \\lambda, \\nu):=f_0(x)+\\sum_{i=1}&#94;m\\lambda_i f_i(x)+\\sum_{i=1}&#94;p\\nu_i h_i(x)$$ \\(\\lambda_i, \\nu_i\\) はラグランジュ未定乗数 ラグランジュ双対関数 ラグランジュ双対関数は次のように定義される. $$ \\begin{aligned} g(\\lambda,\\nu)&:=\\inf_{x\\in D} L(x, \\lambda, \\nu)\\\\ &=\\inf_{x\\in D} \\left(f_0(x)+\\sum_{i=1}&#94;m\\lambda_i f_i(x)+\\sum_{i=1}&#94;p\\nu_i h_i(x)\\right) \\end{aligned} $$ \\(D:=\\bigcap_{i=0}&#94;m \\mathrm{dom}(f_i) \\cap \\bigcap_{i=1}&#94;p \\mathrm{dom}(h_i)\\) 双対関数は, \\((\\lambda,\\nu)\\) のアフィン関数の各点でのinfになっているため, 必ずconcave(上に凸)となる (もとの問題が凸でなくても) 証明してみた: $$ \\begin{aligned} & g(t\\lambda_a+(1-t)\\lambda_b, t\\nu_a+(1-t)\\nu_b)\\\\ =&\\inf_{x\\in\\mathcal{D}}\\left(tL(x,\\lambda_a,\\nu_a)+(1-t)L(x,\\lambda_b,\\nu_b)\\right)\\\\ \\ge& t\\inf_{x\\in\\mathcal{D}}L(x,\\lambda_a,\\nu_a)+(1-t)L(x,\\lambda_b,\\nu_b)\\\\ =& tg(\\lambda_a,\\nu_a)+(1-t)g(\\lambda_b,\\nu_b) \\end{aligned} $$ 最適値の下限 任意の \\(\\lambda\\ge0, \\nu\\) に対して, 次が成り立つ. \\($g(\\lambda,\\nu)\\le p&#94;\\star\\) 証明: \\(\\tilde{x}\\) を実行可能解とする: \\(f_i(\\tilde{x})\\le 0, h_i(\\tilde{x}) = 0\\) \\(\\lambda\\ge 0\\) を仮定 このとき, \\(L(\\tilde{x},\\lambda,\\nu)\\) の値は, \\(f_0(\\tilde{x})\\) でおさえられる: $$ L(\\tilde{x},\\lambda,\\nu)=f_0(\\tilde{x})+\\underbrace{\\sum_{i=1}&#94;{m}\\lambda_if_i(\\tilde{x})}_{\\le0}+\\underbrace{\\sum_{i=1}&#94;{p}\\nu_ih_i(\\tilde{x})}_{=0}\\le f_0(\\tilde{x}) $$ ゆえに, \\(g(\\lambda, \\nu)\\) は \\(f_0(\\tilde{x})\\) でおさえられる: $$ \\therefore~g(\\lambda, \\nu)=\\inf_{x\\in\\mathcal{D}}L(x,\\lambda,\\nu)\\le L(\\tilde{x},\\lambda,\\nu)\\le f_0(\\tilde{x}) $$ 任意の \\(\\tilde{x}\\) に対して, \\(g(\\lambda, \\nu)\\le f_0(\\tilde{x})\\) が成り立つため, \\(g(\\lambda, \\nu)\\le p&#94;\\star\\) が成り立つ. 結論: 双対関数の値は, 主問題の最適値を超えない 線形近似による解釈 元の主問題と等価な次の最小化問題を考える. $$ \\min_{x}~f_0(x)+\\sum_{i=1}&#94;{m}I_-(f_i(x))+\\sum_{i=1}&#94;{p}I_0(h_i(x)) $$ ただし, \\(I_{-},I_{0}\\) は 指示関数 : $$ I_-(u):=\\begin{cases} 0&u\\le 0\\\\ \\infty& u>0 \\end{cases},~~~ I_0(u):=\\begin{cases} 0&u = 0\\\\ \\infty& u\\ne 0 \\end{cases} $$ 最小化するのが目的であるが, 指示関数は制約を満たさないと無限大になってしまう. この指示関数は, 制約違反に対する不満度 を表していると解釈できる. ここで, \\(I_-(u)\\) を \\(\\lambda_i u (\\lambda_i\\ge 0)\\) \\(I_0(u)\\) を \\(\\nu_iu\\) というように指示関数を近似する. $$ \\min_{x}~L(x,\\lambda,\\nu)=f_0(x)+\\sum_{i=1}&#94;{m}\\lambda_i f_i(x)+\\sum_{i=1}&#94;{p}\\nu_i h_i(x) $$ これは制約違反をソフトに近似したものと考えられる もちろん, 制約を違反するほど不満度は上昇するようになっている 不等式制約に関して, 違反しているとき \\(f_i(x)>0\\) であり, \\(\\lambda_if_i(x)\\ge0\\) 任意の \\(u\\) に関して, \\(\\lambda_iu \\le I_-(u)\\) と \\(\\nu_iu \\le I_0(u)\\) が成り立つため, 双対関数が元の主問題の下限を与えることがわかる 共役関数 \\(f\\) の共役関数 \\(f&#94;\\ast\\) は次で定義される. $$ f&#94;*(y)=\\sup_{x\\in\\mathrm{dom} f}(y&#94;\\top x-f(x)). $$ 共役関数と双対問題には密接な関係がある. ( フェンシェル双対定理 ) たとえば, 機械学習のよくある形 $$ \\min_{w\\in\\mathbb{R}&#94;d} f(Xw)+g(w) $$ の双対問題は, $$ \\max_{\\alpha\\in\\mathbb{R}&#94;n} -f&#94;\\ast(-\\alpha)-g&#94;\\ast(X&#94;\\top\\alpha) $$ というように共役関数を使って表現できる. そのため, 凸共役 を覚えておけば, 形式的に双対問題を導出できる. 証明は簡単で, ラグランジアン \\(L(w,z,\\alpha)=f(z)+g(w)+\\alpha&#94;\\top(z-Xw)\\) を考えて, 双対関数の定義にしたがって \\(w\\in\\mathbb{R}&#94;d,z\\in\\mathbb{R}&#94;n\\) に関して最小化するだけだ. ちなみに, このとき最適解 \\(w&#94;\\star,\\alpha&#94;\\star\\) に関して $$ w&#94;\\star \\in \\partial g&#94;\\ast(X&#94;\\top \\alpha&#94;\\star), \\quad \\alpha&#94;\\star \\in -\\partial f(Xw&#94;\\star) $$ が成立する (KKT条件). ラグランジュ双対問題 双対関数から双対問題へ. ラグランジュ双対問題 ここまでで, 双対関数が主問題の下限を与えることを示した. 自然な疑問は, 「ラグランジュ双対関数から得られる最も良い下限はどれくらいなのか?」ということだ. 最も良い下限は次の最大化問題を解くことで得られる. $$ \\begin{aligned} \\max_{\\lambda,\\nu}~&g(\\lambda,\\nu)\\\\ \\mathrm{s.t.} ~&\\lambda\\ge0 \\end{aligned} $$ $ これは, ラグランジュ双対問題 と呼ばれる 双対実行可能領域: \\((\\lambda,\\nu)\\) に関して, \\(\\lambda\\ge0\\) かつ \\(g(\\lambda,\\nu)>-\\infty\\) \\((\\lambda&#94;\\star,\\nu&#94;\\star)\\) : 双対問題の最適解 \\(d&#94;\\star\\) : 双対問題の最適値 双対問題は必ず凸最適化問題 目的関数が必ずconcaveで, 制約が凸であるため これは, 主問題が凸最適化でなくても成り立つ 弱双対性 $$ d&#94;\\star\\le p&#94;\\star $$ 主問題の凸性にかかわらず, 成り立つ この不等式は, \\(p&#94;\\star, d&#94;\\star\\) が発散しないときに成り立つ \\(p&#94;\\star - d&#94;\\star\\) を 双対ギャップ という よく最適化アルゴリズムの停止条件に使われる \\(p&#94;\\star\\) を求めるのことが難しいときに \\(d&#94;\\star\\) を求めることで, \\(p&#94;\\star\\) の下限を知ることができる 双対問題は必ず凸であるため, 多くの場合効率的に解ける 強双対性 $$ d&#94;\\star=p&#94;\\star $$ 主問題の最適値が双対問題の最適値と一致するという性質 強双対性は常には成り立たない もし主問題が凸, すなわち: $$ \\begin{aligned} \\min_{x\\in\\mathbb{R}&#94;n} &~ f_0(x)\\\\ \\mathrm{s.t.} &~ f_i(x)\\le 0, ~i=1,\\ldots,m\\\\ &~ Ax=b \\end{aligned} $$ で \\(f_0,\\ldots,f_m\\) が 凸なら, たいていは(いつもではない)強双対性が成り立つ. たとえば, SVMの最適化問題は凸であり, 強双対性が成り立つため, 主問題/双対問題のどちらを解いてもよい. スレーター条件 次を満たすような \\(x\\in\\mathrm{relint}(D)\\) が存在することをいう. $$ f_i(x)<0,~i=1,\\ldots,m,~~~Ax=b $$ $ 主問題が凸でスレーター条件を満たすとき, 強双対性が成り立つ スレーター条件は強双対性の十分条件である (必要十分ではない) もし, \\(f_1,\\ldots,f_k\\) がアフィンなら, より弱い条件が成り立てばよい: $$ f_i(x)\\le 0,~i=1,\\ldots,k,~~~f_i(x)<0,~i=k+1,\\ldots,m,~~~Ax=b $$ 言い換えれば, アフィンの不等式制約は等号を含んでもよい 補足: int(内部)とrelint(相対的内部) \\(\\mathrm{int}(S)\\) : Sに含まれる最大開集合 Sから境界上の点を取り除いたもの \\(\\mathrm{relint}(S)\\) : Sによって拘束される線形空間上で, Sから境界上の点を取り除いたもの. intとrelintの違いのイメージとしては, まっすぐな下敷きのような平面を考えたとき, intは下敷きの平面ごと取り除いてしまい空集合になるのに対して, relintは下敷きの縁を削って残った部分. Example1 \\(S=\\lbrace(x_1,x_2)\\mid 0\\le x_1\\le 1,x_2=0\\rbrace\\) $$ \\mathrm{int}(S)=\\emptyset, \\mathrm{relint}(S)=\\{(x_1,x_2)\\mid 0 < x_1 < 1,x_2=0\\}, (\\mathrm{aff}(S)=\\{(x_1,x_2)\\in\\mathbb{R}&#94;2\\mid x_2=0\\}) $$ Example2 \\(S= \\lbrace (x_1,x_2)\\mid 0\\le x_1\\le 1,0\\le x_2\\le 1\\rbrace\\) $$ \\mathrm{int}(S)=\\mathrm{relint}(S)=\\{(x_1,x_2)\\mid 0 < x_1 < 1,0<x_2<1\\}, (\\mathrm{aff}(S)=\\{(x_1,x_2)\\in\\mathbb{R}&#94;2\\}) $$ 最適性条件 特に主問題の凸性を仮定しない. 相補性条件 特に, 強双対性条件を満たすと仮定すると, $$ \\begin{aligned} f_0(x&#94;\\star)&=g(\\lambda&#94;\\star,\\nu&#94;\\star)\\\\ &=\\inf_{x\\in D} \\left(f_0(x)+\\sum_{i=1}&#94;m\\lambda_i&#94;\\star f_i(x)+\\sum_{i=1}&#94;p\\nu_i&#94;\\star h_i(x)\\right)\\\\ &\\le f_0(x&#94;\\star)+\\sum_{i=1}&#94;m\\lambda_i&#94;\\star f_i(x&#94;\\star)+\\sum_{i=1}&#94;p\\nu_i&#94;\\star h_i(x&#94;\\star)\\\\ &\\le f_0(x&#94;\\star) \\end{aligned} $$ 1行目: 強双対性 2行目: 双対関数の定義 3行目: \\(\\inf\\) の定義 4行目: \\(\\lambda_i&#94;\\star\\ge0, f_i(x&#94;\\star)\\le0, ~i=1,\\ldots,m\\) と \\(h_i(x&#94;\\star)=0, ~i=1,\\ldots,p\\) 1,3行目と3,4行目を考慮すると, $$ \\sum_{i=1}&#94;m\\lambda_i&#94;\\star f_i(x&#94;\\star)=0. $$ 和の各項は非負であるため, $$ \\lambda_i&#94;\\star f_i(x&#94;\\star)=0,~~~i=1,\\ldots,m. $$ これを相補性条件という もし \\(\\lambda_i&#94;\\star>0\\) なら, \\(f_i(x&#94;\\star)=0\\) もし \\(f_i(x&#94;\\star)<0\\) なら, \\(\\lambda_i&#94;\\star=0\\) KKT条件 (Karush-Kuhn-Tucker条件) 強双対性を仮定すると, \\(x&#94;\\star\\) は \\(L(x,\\lambda&#94;\\star,\\nu&#94;\\star)\\) を最小化するため, \\(x&#94;\\star\\) における勾配は0である: $$ \\nabla f_0(x&#94;\\star)+\\sum_{i=1}&#94;m\\lambda_i&#94;\\star \\nabla f_i(x&#94;\\star)+\\sum_{i=1}&#94;p\\nu_i&#94;\\star\\nabla h_i(x&#94;\\star)=0 $$ ゆえに, 最適解で成り立つ式を列挙すると: \\(f_i(x&#94;\\star)\\le 0,~i=1,\\ldots,m\\) \\(h_i(x&#94;\\star)= 0,~i=1,\\ldots,p\\) \\(\\lambda_i\\ge0,~i=1,\\ldots,m\\) \\(\\lambda_i f_i(x&#94;\\star)= 0,~i=1,\\ldots,m\\) \\(\\nabla f_0(x&#94;\\star)+\\sum_{i=1}&#94;m\\lambda_i&#94;\\star \\nabla f_i(x&#94;\\star)+\\sum_{i=1}&#94;p\\nu_i&#94;\\star\\nabla h_i(x&#94;\\star)=0\\) これがいわゆる KKT条件 である. (必要条件) まとめると, 強双対性を満たすなら, 最適解において主変数と双対変数はKKT条件を満たさなければならない. 主問題が凸であるとき, KKT条件は十分条件にもなる. つまり, ある点 \\(\\tilde{x},\\tilde{\\lambda}, \\tilde{\\nu}\\) がKKT条件を満たすなら, \\(\\tilde{x}=x&#94;\\star, \\tilde{\\lambda}=\\lambda&#94;\\star, \\tilde{\\nu}=\\nu&#94;\\star\\) . 十分条件の証明: $$ \\begin{aligned} g(\\tilde{\\lambda},\\tilde{\\nu})&=L(\\tilde{x},\\tilde{\\lambda},\\tilde{\\nu})\\\\ &= f_0(\\tilde{x})+\\sum_{i=1}&#94;m\\tilde{\\lambda}_i f_i(\\tilde{x})+\\sum_{i=1}&#94;p\\tilde{\\nu}_i h_i(\\tilde{x})\\\\ &= f_0(\\tilde{x}) \\end{aligned} $$ 1行目: \\(\\tilde{x}\\) がKKT条件の最後の条件を満たすため 主問題が凸であるため, \\(L(x,\\tilde{\\lambda},\\tilde{\\nu})\\) は \\(x\\) に関して凸である ( \\(\\because\\tilde{\\lambda}_i\\ge0\\) ) \\(\\therefore~L\\) を最小化する \\(x\\) は, 勾配が0である 2行目: ラグランジアンの定義 3行目: \\(\\tilde{x}\\) がKKT条件の2つ目と4つ目を満たすため この式は, 双対ギャップが0であることを意味するため, \\(\\tilde{x},\\tilde{\\lambda}, \\tilde{\\nu}\\) は最適解である. 結論: スレーター条件を満たすとき, KKT条件は最適性の必要十分条件となる if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-4.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-4.html"},{"title":"サポートベクターマシーン(SVM)","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) In [1]: import numpy as np import matplotlib.pyplot as plt In [2]: seed = 0 サポートベクターマシーン(SVM) マージン最大化 に基づく線形識別器 カーネル関数と組み合わせることによって非線形な識別も可能 サンプル間の類似度にしか依存しない （→非ベクトルデータの分類にも適用可能 ） まとめ マージン最大化 という方針で誤差関数を定義する。 汎化性能を高めるために、 スラック変数 を導入して ソフトなマージン最大化に緩和 する ラグランジュ未定乗数法 を用いてラグランジュ関数を得る。 各パラメータについて微分する。 ラグランジュ関数に代入して 双対問題 を得る。 SMO法 などを用いて二次計画問題である双対問題を解く。 無効制約のデータ点は識別関数に影響しなくなる。 （SVMが疎になる。） マージン最大化 「個々のデータに関して確率計算をし、何らかの識別面を求める」 のではなく、 「汎化性能の最も高い識別面を直接考える」 そこで、 「マージン最大化」 という方針で識別面を最適化する。（正則化理論・VC理論により正当化されている。） 最も近いデータ $\\phi(\\mathbf{x}_n)$ までの距離（ マージン ）が最大となるような識別面を選ぶ。（ここでは、距離＝ユークリッド距離とする。） 識別面からちょうどマージンの分だけ離れた面上に乗る特徴ベクトル（一般に複数）を、(広義の) サポートベクトル (support vector) と呼ぶ。 学習法の定式化（2クラス分類） ※ 二クラスが線形分離可能であると仮定する。 線形識別関数が $y(\\mathbf{x}) = \\mathbf{w}&#94;T\\phi(\\mathbf{x})+b$ で表され、$y(\\mathbf{x})$ の正負でクラスを識別するとする。 $y(\\mathbf{x})>0$ の時 $t=1$ $y(\\mathbf{x})<0$ の時 $t=-1$ したがって、 $t_ny(\\mathbf{x}_n)>0$ が全てのデータ $(\\mathbf{x}_n,t_n)$ に対して成り立つ （∵特徴空間で線形分離可能） 学習の目的は「パラメータ $\\mathbf{w}$ と $b$ を決定すること」。 データと識別面の最小距離は $1 / \\|\\mathbf{w}\\|$ で表される。（理由は以下） ※ 記述を簡単にするために線形識別問題の場合で考えるが、非線形写像 $\\phi$ を通しても同様の議論が成り立つ。 点 $\\mathbf{x}_n$ から識別面に下ろした垂線の足を $\\mathbf{x}_{n\\perp}$ 点 $\\mathbf{x}_n$ から識別面までの符号付き距離を $d_n$ と定義すると、 $\\mathbf{w}$ が識別面の法ベクトルであるから、 $\\mathbf{x}_{n\\perp} = \\mathbf{x}_n - d_n\\frac{\\mathbf{w}}{\\|\\mathbf{w}\\|}$ と表せる。 $\\mathbf{x}_{n\\perp}$ は識別面上にあるので、$\\mathbf{w}&#94;T\\mathbf{x}_{n\\perp} + b = 0$ が成り立つ。 したがって、 $$\\mathbf{w}&#94;T\\left(\\mathbf{x}_n - d_n\\frac{\\mathbf{w}}{\\|\\mathbf{w}\\|}\\right) + b = 0\\qquad \\therefore d_n = \\frac{\\mathbf{w}&#94;T\\mathbf{x}_n + b}{\\|\\mathbf{w}\\|}$$ として距離 $d_n$ が定義できる。ここで、$(\\mathbf{w},b)\\rightarrow(k\\mathbf{w},kb)$ としても $d_n$ の値は不変なので、 $$t_n\\left(\\mathbf{w}&#94;T\\mathbf{x}_n + b \\right)= 1\\qquad (7.4)$$ とスケーリングしても一般性を失わない。 なお、 このスケーリング下では、全てのデータ $\\mathbf{x}_n$ に対して $$t_n\\left(\\mathbf{w}&#94;T\\mathbf{x}_n + b \\right) \\geq 1\\qquad (7.5)$$ が成り立つ。 ここまでをまとめると、 マージン最大 は、 『$t_n\\left(\\mathbf{w}&#94;T\\mathbf{x}_n+b\\right)\\geq1\\quad(i=1,\\ldots,n)$ という条件下で、$\\frac{1}{2}||\\mathbf{w}||&#94;2$ を最小化する問題』 であると言える。 この制約付き最適化問題を解くために、$(7.5)$ の各制約式ごとにラグランジュ乗数 $a_n\\geq0$ を導入すると、次のラグランジュ関数が得られる。 $$L(\\mathbf{w},b,\\mathbf{a}) = \\frac{1}{2}\\|\\mathbf{w}\\|&#94;2 - \\sum_{n=1}&#94;{N}a_n\\left\\{t_n\\left(\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n) + b\\right) - 1\\right\\}\\qquad (7.7)$$ よって、$\\mathbf{w},b$ について微分して、 $$ \\begin{aligned} \\frac{\\partial L}{\\partial \\mathbf{w}} &= \\mathbf{w}-\\sum_{n=1}&#94;N a_nt_n\\phi(\\mathbf{x}_n) =0 \\quad \\therefore \\mathbf{w}&#94;{\\ast}=\\sum_{n=1}&#94;N a_nt_n\\phi(\\mathbf{x}_n) & (7.8)\\\\ \\frac{\\partial L}{\\partial b} &= -\\sum_{n=1}&#94;N a_nt_n = 0 \\quad\\therefore\\sum_{n=1}&#94;Na_n&#94;{\\ast}t_n = 0 & (7.9)\\\\ \\end{aligned} $$ が得られる。これらの結果を $(7.7)$ に代入して $\\mathbf{w},b$ を消去すると、元の問題は以下の 双対問題 に変換される。 $$ \\tilde{L}(\\mathbf{a}) =\\sum_n&#94;Na_n - \\frac{1}{2}\\sum_{n=1}&#94;{N}\\sum_{m=1}&#94;Na_na_mt_nt_mk(\\mathbf{x}_n,\\mathbf{x}_m)\\qquad (7.10)$$ なお、$\\mathbf{a}$ は以下の制約を満たす。 $$ \\begin{aligned} a_n & \\geq 0,\\quad n=1,\\ldots,N & (7.11)\\\\ \\sum_{n=1}&#94;Na_nt_n &= 0 & (7.12) \\end{aligned} $$ また、カーネル関数 $k(\\mathbf{x},\\mathbf{x}&#94;{\\prime})$ は、$k(\\mathbf{x},\\mathbf{x}&#94;{\\prime}) = \\phi(\\mathbf{x})&#94;T\\phi(\\mathbf{x})$ と定義される。 この双対問題は二次計画問題であり、 逐次最小問題最適化法(SMO;sequential minimal optimization) などで解くことができる。 なお、今回の場合、 制約条件が全て線形 であることから 実行可能域が凸領域 であることがわかるので、 任意の局所解が大局解になる。 一旦最適な $\\mathbf{a}$ が求まると、識別関数 $y(\\mathbf{x})$ は、 $$y(\\mathbf{x}) = \\mathbf{w}&#94;{\\ast T}\\phi(\\mathbf{x})+b = \\sum_{n=1}&#94;N a_nt_nk(\\mathbf{x},\\mathbf{x}_n) + b \\qquad (7.13)$$ として表すことができる。ここで、 KKT条件より $a_n=0\\Leftrightarrow t_ny(\\mathbf{x}_n)-1>0$ のデータは識別関数に影響しないので、計算から除外することができる。（SVMが疎になる理由） なお、バイアスパタメータ $b$ は、任意のサポートベクトル $\\mathbf{x}_n$ が $t_ny(\\mathbf{x}_n) = 1$ を満たすことから、 $$ \\begin{aligned} &t;_n\\left(\\sum_{m\\in\\mathcal{S}}a_mt_mk(\\mathbf{x}_n,\\mathbf{x}_m) + b\\right) = 1 & (7.17)\\\\ &\\therefore b&#94;{\\ast}= \\frac{1}{N_{\\mathcal{S}}}\\sum_{n\\in\\mathcal{S}}\\left(t_n-\\sum_{n\\in\\mathcal{S}}a_mt_mk(\\mathbf{x}_n,\\mathbf{x}_m)\\right)&(7.18) \\end{aligned} $$ として求めることができる。（数値計算の誤差の影響を小さくするため、$(7.17)$ の両辺に $t_n$ をかけ、全てのサポートベクトルで平均をとった。 In [3]: from kerasy.ML.svm import hardSVC In [4]: n_cls1 = 20 ; n_cls2 = 20 N = n_cls1 + n_cls2 In [5]: train_x = np . concatenate ([ np . random . RandomState ( seed ) . normal ( loc = [ 0.5 , 0 ], scale = [ 0.2 , 0.4 ], size = ( n_cls1 , 2 )), np . random . RandomState ( seed ) . normal ( loc = [ - 0.5 , 0 ], scale = [ 0.2 , 0.4 ], size = ( n_cls2 , 2 )) ]) train_y = np . concatenate ([ np . ones ( shape = n_cls1 ), - np . ones ( shape = n_cls2 ) ]) In [6]: X , Y = np . meshgrid ( np . linspace ( - 1 , 1 , 100 ), np . linspace ( - 1 , 1 , 100 )) In [7]: kernels = [ \"linear\" , \"polynomial\" , \"gaussian\" , \"sigmoid\" , \"laplacian\" , \"inverse_multiquadric\" ] In [8]: n_fig = len ( kernels ) n_col = 3 n_row = n_fig // n_col if n_fig % n_col ==0 else n_fig//n_col+1 fig = plt . figure ( figsize = ( 4 * n_col , 4 * n_row )) for i , kernel in enumerate ( kernels ): ax = fig . add_subplot ( n_row , n_col , i + 1 ) model = hardSVC ( kernel = kernel ) model . fit ( train_x , train_y , max_iter = 1500 , sparse_memorize = False ) Z = np . vectorize ( lambda x , y : model . predict ( np . array ([ x , y ]) . reshape ( 1 , - 1 )))( X , Y ) == 1 ax . pcolor ( X , Y , Z , alpha = 0.3 ) for i in range ( N ): alpha = 1 if i in model . isSV () else 0.3 color = \"red\" if train_y [ i ] == 1 else \"blue\" ax . plot ( train_x [ i , 0 ], train_x [ i , 1 ], marker = \"o\" , color = color , markersize = 10 , alpha = alpha ) ax . set_title ( f \" {kernel} kernel\" ) ax . set_xlim ( - 1 , 1 ), ax . set_ylim ( - 1 , 1 ) plt . tight_layout () plt . show () ソフトマージン ここまで、 「二クラスが線形分離可能である」 という仮定を置いていたが、実際の問題では クラスの分布が重なる場合 があり、そのような場合訓練データを完全に分離する解が汎化能力に優れるとは限らない（というより、過学習する。） そこで、各学習データ $(\\mathbf{x}_n,t_n)$ に対して、 スラック変数 (slack variable) $\\xi_n\\geq 0$ を導入して、 $$ t_ny(\\mathbf{x}_n) \\geq 1 \\Longrightarrow t_ny(\\mathbf{x}_n) \\geq 1 - \\xi_n \\qquad (7.20)$$ と条件を緩める。 （ハードマージンの制約のソフトマージンへの緩和） つまり、 $\\xi_n > 1$ となるデータは誤識別している事になる。 ここでの目標は 『マージンよりも内側（$\\xi_n>0$）のデータ $n$ に対してソフトにペナルティを与えつつマージンを最大化する』 ことである。したがって、次の目的関数を最小化する。 $$C\\sum_{n=1}&#94;N\\xi_n + \\frac{1}{2}\\|\\mathbf{x}_n\\| \\qquad (7.21)$$ なお、$C>0$ は スラック変数を用いて表されるペナルティとマージンの大きさの間の トレードオフを制御するパラメータ である。 したがって、この最小化問題のラグランジュ関数は、新たにラグランジュ乗数 $\\{\\mu_n\\}$ を導入して以下のようになる。 $$L(\\mathbf{w},b,\\boldsymbol{\\xi},\\mathbf{a},\\boldsymbol{\\mu}) = \\frac{1}{2}\\|\\mathbf{w}\\|&#94;2 + C\\sum_{n=1}&#94;N\\xi_n - \\sum_{n=1}&#94;{N}a_n\\left\\{t_n\\left(\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n) + b\\right) - 1 + \\xi_n\\right\\} - \\sum_{n=1}&#94;N\\mu_n\\xi_n\\qquad (7.22)$$ 先程同様 $\\mathbf{w},b,\\xi_n$ について微分して、 $$ \\begin{aligned} \\frac{\\partial L}{\\partial \\mathbf{w}} &= \\mathbf{w}-\\sum_{n=1}&#94;N a_nt_n\\phi(\\mathbf{x}_n) =0 \\quad \\therefore \\mathbf{w}&#94;{\\ast}=\\sum_{n=1}&#94;N a_nt_n\\phi(\\mathbf{x}_n) & (7.29)\\\\ \\frac{\\partial L}{\\partial b} &= -\\sum_{n=1}&#94;N a_nt_n = 0 \\quad\\therefore\\sum_{n=1}&#94;Na_n&#94;{\\ast}t_n = 0 & (7.30)\\\\ \\frac{\\partial L}{\\partial \\xi_n} &= C-a_n-\\mu_n \\quad\\therefore a_n = C-\\mu_n & (7.31) \\end{aligned} $$ が得られる。これらの結果を $(7.22)$ に代入すると、以下の 双対形のラグランジュ関数 が得られる。 $$ \\tilde{L}(\\mathbf{a}) =\\sum_n&#94;Na_n - \\frac{1}{2}\\sum_{n=1}&#94;{N}\\sum_{m=1}&#94;Na_na_mt_nt_mk(\\mathbf{x}_n,\\mathbf{x}_m)\\qquad (7.32)$$ これは、先程の $(7.10)$ と同様の形である。なお、制約式は $$ \\begin{aligned} &a;_n \\geq 0,\\mu_n\\geq 0 \\quad n=1,\\ldots,N\\\\ &\\therefore 0\\leq a_n \\leq C & (7.33)\\\\ &\\sum_{n=1}&#94;Na_nt_n = 0 & (7.34) \\end{aligned} $$ である。 なお、バイアスパタメータ $b$ は、サポートベクトルは $a_n>0$ を満たすが、KKT条件より $a_n$ $\\mu_n$ $\\xi_n$ 説明 $a_n=0$ 識別関数に影響を及ぼさない。 $a_n $\\mu_n>0$ $\\xi_n=0$ ちょうどマージン境界上ある。 $a_n=C$ $\\mu_n=0$ $\\xi_n>0$ マージン内に侵入している。 となることから、$0 $$ \\begin{aligned} &t;_n\\left(\\sum_{m\\in\\mathcal{S}}a_mt_mk(\\mathbf{x}_n,\\mathbf{x}_m) + b\\right) = 1 & (7.36)\\\\ &\\therefore b&#94;{\\ast}= \\frac{1}{N_{\\mathcal{M}}}\\sum_{n\\in\\mathcal{M}}\\left(t_n-\\sum_{n\\in\\mathcal{S}}a_mt_mk(\\mathbf{x}_n,\\mathbf{x}_m)\\right)&(7.37) \\end{aligned} $$ として求めることができる。 In [9]: from kerasy.ML.svm import SVC In [10]: train_x = np . concatenate ([ np . random . RandomState ( seed ) . normal ( loc = [ 0.2 , 0.2 ], scale = [ 0.2 , 0.4 ], size = ( n_cls1 , 2 )), np . random . RandomState ( seed ) . normal ( loc = [ - 0.2 , - 0.2 ], scale = [ 0.3 , 0.2 ], size = ( n_cls2 , 2 )) ]) train_y = np . concatenate ([ np . ones ( shape = n_cls1 ), - np . ones ( shape = n_cls2 ) ]) In [11]: params = [ ( 1e-2 , 1e-2 ),( 1e-2 , 1e0 ),( 1e-2 , 1e2 ), ( 1e1 , 1e-2 ),( 1e1 , 1e0 ),( 1e1 , 1e2 ), ( 1e4 , 1e-2 ),( 1e4 , 1e0 ),( 1e4 , 1e2 ), ] In [12]: n_fig = len ( params ) n_col = 3 n_row = n_fig // n_col if n_fig % n_col ==0 else n_fig//n_col+1 fig = plt . figure ( figsize = ( 4 * n_col , 4 * n_row )) for i ,( C , sigma ) in enumerate ( params ): ax = fig . add_subplot ( n_row , n_col , i + 1 ) model = SVC ( kernel = \"gaussian\" , C = C , sigma = sigma ) model . fit ( train_x , train_y , max_iter = 1500 , sparse_memorize = False ) Z = np . vectorize ( lambda x , y : model . predict ( np . array ([ x , y ]) . reshape ( 1 , - 1 )))( X , Y ) == 1 ax . pcolor ( X , Y , Z , alpha = 0.3 ) for i in range ( N ): alpha = 1 if i in model . isSV () else 0.3 color = \"red\" if train_y [ i ] == 1 else \"blue\" ax . plot ( train_x [ i , 0 ], train_x [ i , 1 ], marker = \"o\" , color = color , markersize = 10 , alpha = alpha ) ax . set_title ( f \"gaussian kernel (C= {C} , $\\sigma= {sigma} $)\" ) ax . set_xlim ( - 1 , 1 ), ax . set_ylim ( - 1 , 1 ) plt . tight_layout () plt . show () 多クラスSVM SVMは本来2クラス識別の為の分類器であるが、これを複数組み合わせるなどの方法によって $K>2$クラスの識別に利用する事が出来る。最もよく用いられる方法は、 one-versus-the-rest方式 と呼ばれる方法であり、「データ $\\mathbf{x}$ が クラス $k$ かそれ以外であるか を識別するSVM $y_k(\\mathbf{x})$ を $K$ クラスそれぞれについて構築し、$ y(\\mathbf{x}) = \\mathop{\\rm arg~max}\\limits_{k}y_k(\\mathbf{x})$ によって $\\mathbf{x}$ のクラスを決定する」 SVM回帰 単純な線形回帰問題においては、次の式で定義される正則化された誤差関数を最小化する。 $$\\frac{1}{2}\\sum_{n=1}&#94;N\\{y_n-t_n\\}&#94;2 + \\frac{\\lambda}{2}\\|\\mathbf{w}\\|&#94;2\\qquad (7.50)$$ 疎な解を得るために、二条誤差関数を $\\epsilon$ 許容誤差関数($\\epsilon$-insentive error function) で置き換える。つまり、予測値 $y(\\mathbf{x})$ と観測値 $t$ の差が $\\epsilon(>0)$ 未満のときは、$\\epsilon$ 許容誤差関数の値は $0$ となる。$\\epsilon$ 許容誤差関数の簡単な例は、 「許容範囲外の値に関しては線形のコストを生じさせる」 ものである。 $$ \\begin{aligned} E_{\\epsilon}\\left(y(\\mathbf{x})-t\\right) = \\begin{cases} 0 & (\\text{ when }|y(\\mathbf{x} - t)| < \\epsilon)\\\\ |y(\\mathbf{x} - t)| - \\epsilon & (\\text{ otherwise }) \\end{cases}\\qquad (7.51) \\end{aligned} $$ In [13]: squareError = lambda x , y_true : 1 / 2 * ( x - y_true ) ** 2 # Sum of Squares Error function epsilonError = lambda x , y_true , epsilon = 1 : 0 if abs ( x - y_true ) < epsilon else abs ( x - y_true ) - epsilon In [14]: X = np . linspace ( - 2 , 2 , 1000 ) plt . plot ( X ,[ squareError ( x , y_true = 0 ) for x in X ], color = \"black\" , label = \"sum of squares error function\" , linestyle = \"--\" ) plt . plot ( X ,[ epsilonError ( x , y_true = 0 ) for x in X ], color = \"black\" , label = \"$\\epsilon$-insentive error function\" ) plt . scatter ( 0 , 0 , marker = \"x\" , color = \"red\" , label = \"y_true\" ) plt . title ( \"Error function comparison\" , fontsize = 16 ), plt . xlim ( - 2 , 2 ), plt . ylim ( -. 1 , 2 ) plt . xlabel ( \"$x$\" , fontsize = 16 ), plt . ylabel ( \"$E(x)$\" , fontsize = 16 ) plt . legend () plt . show () この $\\epsilon$ 許容誤差関数を用いると、結局次の正則化された誤差関数を最小化することになる。 $$C\\sum_{n=1}&#94;NE_{\\epsilon}\\left(y(\\mathbf{x}_n)-t_n\\right) + \\frac{1}{2}\\|\\mathbf{w}\\|&#94;2\\qquad (7.52)$$ 分類問題と同様、この最適化問題をスラック変数 $\\xi_n,\\hat{\\xi}_n$ を導入して表現する。 $\\epsilon$ チューブの中に位置するという条件は $y_n-\\epsilon\\leq t_n \\leq y_n+\\epsilon$ と表せるので、チューブの外側にデータ点が存在することを許すような制約条件は以下のようにかける。 $$ \\begin{aligned} t_n&\\leq y(\\mathbf{x}_n) + \\epsilon + \\xi_n & (7.53)\\\\ t_n&\\geq y(\\mathbf{x}_n) - \\epsilon - \\xi_n & (7.54)\\\\ \\end{aligned} $$ よって、スラック変数を用いると、SVM回帰の誤差関数は次のようにかける。 $$C\\sum_{n=1}&#94;N\\left(\\xi_n + \\hat{\\xi}_n\\right) + \\frac{1}{2}\\|\\mathbf{w}\\|&#94;2\\qquad (7.55)$$ したがって、この最小化問題のラグランジュ関数は、ラグランジュ乗数 $a_n,\\hat{a}_n,\\mu_n,\\hat{\\mu}_n$ を導入して以下のようになる。（$y(\\mathbf{x}_n)= \\mathbf{w}&#94;T\\phi(\\mathbf{x}_n)+b$） $$ \\begin{aligned} L &=C\\sum_{n=1}&#94;N\\left(\\xi_n+\\hat{\\xi}_n\\right)+\\frac{1}{2}\\|\\mathbf{w}\\|&#94;2-\\sum_{n=1}&#94;N\\left(\\mu_n\\xi_n+\\hat{\\mu}_n\\hat{\\xi}_n\\right)\\\\ &-\\sum_{n=1}&#94;Na_n\\left(\\epsilon + \\xi_n + y_n - t_n \\right)-\\sum_{n=1}&#94;N\\hat{a}_n\\left(\\epsilon + \\hat{\\xi}_n - y_n + t_n\\right) \\qquad (7.56)\\\\ \\end{aligned} $$ これまで同様 $\\mathbf{w},b,\\xi_n,\\hat{\\xi}_n$ について微分して、 $$ \\begin{aligned} \\frac{\\partial L}{\\partial \\mathbf{w}} &= \\mathbf{w}-\\sum_{n=1}&#94;Na_n\\phi(\\mathbf{x}_n)-\\sum_{n=1}&#94;N\\hat{a}_n\\phi(\\mathbf{x}_n)=0 \\quad \\therefore \\mathbf{w}&#94;{\\ast}=\\sum_{n=1}&#94;N \\left(a_n-\\hat{a}_n\\right)\\phi(\\mathbf{x}_n) & (7.57)\\\\ \\frac{\\partial L}{\\partial b} &= -\\sum_{n=1}&#94;N a_n + \\sum_{n=1}&#94;N\\hat{a}_n = 0 \\quad\\therefore\\sum_{n=1}&#94;N\\left(a_n-\\hat{a}_n\\right) = 0 & (7.58)\\\\ \\frac{\\partial L}{\\partial \\xi_n} &= C-a_n-\\mu_n \\quad\\therefore a_n + \\mu_n = C & (7.59)\\\\ \\frac{\\partial L}{\\partial \\hat{\\xi}_n} &= C-\\hat{a}_n-\\hat{\\mu}_n \\quad\\therefore \\hat{a}_n + \\hat{\\mu}_n = C & (7.60)\\\\ \\end{aligned} $$ が得られる。これらの結果を $(7.56)$ に代入すると、以下の 双対形のラグランジュ関数 が得られる。 $$ \\begin{aligned} \\tilde{L}(\\mathbf{a},\\hat{\\mathbf{a}}) &= -\\frac{1}{2}\\sum_{n=1}&#94;N\\sum_{m=1}&#94;N\\left(a_n-\\hat{a}_n\\right)\\left(a_m-\\hat{a}_m\\right)k(\\mathbf{x}_n,\\mathbf{x}_m)\\\\ &- \\epsilon\\sum_{n=1}&#94;N\\left(a_n + \\hat{a}_n\\right) + \\sum_{n=1}&#94;N\\left(a_n-\\hat{a}_n\\right)t_n \\end{aligned} \\qquad (7.61) $$ なお、制約式は $$ \\begin{aligned} 0 \\leq a_n &\\leq C & (7.62)\\\\ 0 \\leq \\hat{a}_n &\\leq C & (7.63) \\end{aligned} $$ である。したがって、新しい入力に対する予測値は $$y(\\mathbf{x}) = \\sum_{n=1}&#94;N\\left(a_n-\\hat{a}_n\\right)k(\\mathbf{x},\\mathbf{x}_n) + b\\qquad (7.64)$$ とカーネル関数のみを用いて計算できることがわかる。 なお、バイアスパタメータ $b$ は次のように計算できる。 $C>a_n>0$ が成り立つデータ点についてはKKT条件より $\\xi_n = 0 \\quad \\therefore \\epsilon+y_n-t_n=0$ が成り立つ。よって、 $$ \\begin{aligned} b &= t_n - \\epsilon - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_n)\\\\ &= t_n - \\epsilon - \\sum_{m=1}&#94;N\\left(a_m-\\hat{a}_m\\right)k(\\mathbf{x}_n,\\mathbf{x}_m)\\qquad (7.69) \\end{aligned} $$ $C>\\hat{a}_n>0$ が成り立つデータ点についてはKKT条件より $\\hat{\\xi}_n = 0 \\quad \\therefore \\epsilon+y_n-t_n=0$ が成り立つ。よって、 $$ \\begin{aligned} b &= t_n - \\epsilon - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_n)\\\\ &= t_n - \\epsilon - \\sum_{m=1}&#94;N\\left(a_m-\\hat{a}_m\\right)k(\\mathbf{x}_n,\\mathbf{x}_m)\\qquad (7.69) \\end{aligned} $$ なお、このようにして得られた $b$ の値を全て平均した結果を用いると数値誤差の影響を小さくできる。 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-3.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-3.html"},{"title":"ラグランジュ未定乗数法","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) 条件なし最適化 ある関数 \\(f\\) が与えられた時、それが最小値を取る点を見つけ出す。 $$\\text{min : } f(\\mathbf{x})$$ したがって、微分をとって \\(0\\) になる点を見つければ良い。 $$\\frac{\\partial}{\\partial x}f(x) = 0\\Longrightarrow x&#94;{\\ast}$$ 等式制約付き最適化 $$ \\begin{aligned} \\text{min : } & f(\\mathbf{x})\\\\ \\text{subject to : } & g(\\mathbf{x})=0\\\\ \\end{aligned} $$ ラグランジュ乗数(Lagrangian multiplier) と呼ばれるパラメータ \\(\\lambda\\) を導入した ラグランジュ関数(Lagrangian function) $$L(\\mathbf{x},\\lambda) \\equiv f(\\mathbf{x})+\\lambda g(\\mathbf{x})\\qquad (E.4)$$ の \\(\\mathbf{x}\\) と \\(\\lambda\\) の両方に対する停留点（鞍点）を見つければ、制約付き問題の最適解が得られる。 理由 以下２つの理由より、 \\(\\nabla f\\) と \\(\\nabla g\\) は、 向きが逆の場合も含めて 平行なベクトルとなる。したがって、 あるパラメータ \\(\\lambda\\neq0\\) が存在して、 $$\\nabla f + \\lambda\\nabla g = 0\\qquad (E.3)$$ が成立しなければならない。これは、 \\(\\nabla_{\\mathbf{x}}L=0\\) と表されることがわかる。また、 \\(\\partial L/\\partial\\lambda = 0\\) より、制約式 \\(g(\\mathbf{x})=0\\) も導かれる。 1) \\(\\nabla g(\\mathbf{x})\\) が制約面 \\(g(\\mathbf{x})=0\\) に対して常に垂直 制約面 \\(g(\\mathbf{x})\\) 上の点 \\(\\mathbf{x}\\) と \\(\\mathbf{x}+\\boldsymbol{\\varepsilon}\\) を考える。 すると、 \\(\\mathbf{x}\\) の周りでの \\(g(\\mathbf{x})\\) のテイラー展開より、 $$g(\\mathbf{x} + \\boldsymbol{\\varepsilon}) \\sim g(\\mathbf{x}) + \\boldsymbol{\\varepsilon}&#94;T\\nabla g(\\mathbf{x})\\qquad (E.2)$$ いま、 \\(\\mathbf{x}\\) と \\(\\mathbf{x}+\\boldsymbol{\\varepsilon}\\) は共に制約面上に存在するので $$g(\\mathbf{x})=g(\\mathbf{x}+\\boldsymbol{\\varepsilon})=0$$ が成り立つ。ゆえに、 \\(\\|\\boldsymbol{\\varepsilon}\\|\\rightarrow0\\) の極限では \\(\\boldsymbol{\\varepsilon}&#94;T\\nabla g(\\mathbf{x})\\sim0\\) が成り立つ。 \\(\\boldsymbol{\\varepsilon}&#94;T\\) は制約面上の接線である。 より、ベクトル \\(\\nabla g(\\mathbf{x})\\) は制約面 \\(g(\\mathbf{x})=0\\) に対して垂直である。 2) \\(\\nabla f(\\mathbf{x}&#94;{\\ast})\\) も制約面に対して垂直 もし \\(\\nabla f(\\mathbf{x}&#94;{\\ast})\\) が制約面に対して垂直でないとすると、制約面にそって \\(f(\\mathbf{x})\\) の値がさらに大きくなるように点を動かすことができるはずである。 したがって、制約面上の点で \\(f(\\mathbf{x})\\) を最大化する点 \\(\\mathbf{x}&#94;{\\ast}\\) においては、ベクトル \\(\\nabla f(\\mathbf{x})\\) も制約面に対して垂直でなければならない。 不等式制約付き最適化 $$ \\begin{aligned} \\text{min : } & f(\\mathbf{x})\\\\ \\text{subject to : } & g(\\mathbf{x})\\leq0\\\\ \\end{aligned} $$ ここで、解 \\(\\mathbf{x}&#94;{\\ast}\\in\\Omega\\) には、 無効制約(inactive constraint) \\(\\overset{\\text{def}}{\\Longleftrightarrow}g(\\mathbf{x}&#94;{\\ast}) < 0\\) 有効制約(active constraint) \\(\\overset{\\text{def}}{\\Longleftrightarrow}g(\\mathbf{x}&#94;{\\ast}) = 0\\) の2つの可能性がある。 $$ \\Omega:= \\left\\{\\mathbf{x}\\in\\mathbb{R}&#94;D: g(\\mathbf{x})<0 \\right\\} $$ 無効制約の場合 無効制約 \\(\\left(g(\\mathbf{x})<0\\right)\\) の場合、関数 \\(g(\\mathbf{x})\\) は何も制約を課していないのと同様なので、停留条件は単に \\(\\nabla f(\\mathbf{x}) = 0\\) となる。 なお、これは上記の 等式制約におけるラグランジュ関数 \\((E.4)\\) において \\(\\lambda=0\\) とした場合の停留条件に等しい。 有効制約の場合 有効制約 \\(\\left(g(\\mathbf{x})=0\\right)\\) の場合、 等式制約におけるラグランジュ関数 \\((E.4)\\) において \\(\\lambda\\neq0\\) とした場合の停留条件に等しい。 ただし、 \\(-\\nabla f(\\mathbf{x}&#94;{\\ast})\\) は \\(g(\\mathbf{x})<0\\) の外側へと向かうはず だから、 あるパラメータ \\(\\lambda>0\\) が存在して、 $$\\nabla f(\\mathbf{x}) = -\\lambda\\nabla g (\\mathbf{x})$$ が成立しなければならない。 勾配 意味 最適化問題における問題における意味 \\(\\nabla f(\\mathbf{x})\\) \\(f\\) が大きくなる方向 目的とは別の方向 \\(\\nabla g(\\mathbf{x})\\) \\(g\\) が大きくなる方向 \\(g(\\mathbf{x})<0\\) の外側へと向かう方向 KKT条件 上記の無効制約・有効制約のどちらの場合にせよ、 \\(\\lambda g(\\mathbf{x})=0\\) が成立することがわかる。 したがって、 \\(g(\\mathbf{x})\\leq0\\) という制約の下で \\(f(\\mathbf{x})\\) を最小化するには、以下の Karush-Kuhn-Tucker(KKT)条件 のもとで、 \\(\\mathbf{x},\\lambda\\) に関して ラグランジュ関数 \\((E.4)\\) の停留点を求めれば良い。 $$ \\begin{aligned} \\begin{cases} \\text{Primal feasibility} &g(\\mathbf{x})\\leq0 & (E.9)\\\\ \\text{Dual feasibility} &\\lambda \\geq 0 & (E.10)\\\\ \\text{Complementary slackness} &\\lambda g(\\mathbf{x}) = 0 & (E.11) \\end{cases} \\end{aligned} $$ なお、当然ではあるが、「制約条件の符号の向き」と「目的関数の最大化・最小化」には以下の関係がある。（ \\(\\lambda\\geq0\\) ） 目的関数 \\(f(\\mathbf{x})\\) 制約条件 \\(g(\\mathbf{x})\\) ラグランジュ関数 \\(L(\\mathbf{x},\\lambda)\\) \\(\\min f(\\mathbf{x})\\) \\(g(\\mathbf{x})\\leq0\\) \\(L(\\mathbf{x},\\lambda) = f(\\mathbf{x}) + \\lambda g(\\mathbf{x})\\) \\(\\min f(\\mathbf{x})\\) \\(g(\\mathbf{x})\\geq0\\) \\(L(\\mathbf{x},\\lambda) = f(\\mathbf{x}) - \\lambda g(\\mathbf{x})\\) \\(\\max f(\\mathbf{x})\\) \\(g(\\mathbf{x})\\leq0\\) \\(L(\\mathbf{x},\\lambda) = f(\\mathbf{x}) - \\lambda g(\\mathbf{x})\\) \\(\\max f(\\mathbf{x})\\) \\(g(\\mathbf{x})\\geq0\\) \\(L(\\mathbf{x},\\lambda) = f(\\mathbf{x}) + \\lambda g(\\mathbf{x})\\) 一般化 $$ \\begin{aligned} \\text{min : } & f(\\mathbf{x})\\\\ \\text{subject to : } & g_j(\\mathbf{x})=0 & (j=1,\\ldots,J)\\\\ & h_k(\\mathbf{x})\\leq0 & (k=1,\\ldots,K)\\\\ \\end{aligned} $$ 以下のラグランジュ関数を最適化する。 $$L\\left(\\mathbf{x},\\{\\lambda_j\\},\\{\\mu_k\\}\\right) = f(\\mathbf{x}) + \\sum_{j=1}&#94;J\\lambda_jg_j(\\mathbf{x}) + \\sum_{k=1}&#94;K\\mu_kh_k(\\mathbf{x})\\qquad (E.12)$$ ここで、KKT条件は、以下となる。 $$ \\begin{aligned} \\begin{cases} \\text{Primal feasibility} &g_j(\\mathbf{x})=0,h_k(\\mathbf{x})\\leq0 \\\\ \\text{Dual feasibility} &\\mu_k \\geq 0\\\\ \\text{Complementary slackness} &\\mu_kh_k(\\mathbf{x}) = 0 \\end{cases} \\end{aligned} $$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-2.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-2.html"},{"title":"カーネル法","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) In [1]: import numpy as np import matplotlib.pyplot as plt 講義の構成 パターン認識 カーネル法の紹介 最適化理論の復習 サポートベクターマシーン パターン認識 対象を識別するルールを訓練データより、自動的に取得する。 各対象を全データ共通次元のベクトルで表現すれば、識別関数 $f(\\mathbf{x})$ は、特徴空間上に定義される。 元の空間 （入力空間） を非線形に写像すれば、写像先 （特徴空間） で線形識別することで非線形識別が達成される。 $$\\phi:\\mathbf{X}\\rightarrow\\mathbb{R}&#94;m$$ どのように写像を定めるかは難しい問題。 カーネル法の紹介 上で紹介した写像を、 類似度関数（カーネル関数） に基づいて決める手法。（例：ガウシアンカーネル $K(\\mathbf{x},\\mathbf{x}&#94;{\\prime}) = \\exp\\left(-\\frac{\\|\\mathbf{x}-\\mathbf{x}&#94;{\\prime}\\|}{\\sigma}\\right)$） 類似度さえ定義できればどのような対象（例：生物学的ネットワーク上のタンパク質の分類）にでも適用できる。 複雑な問題になると非常に高い次元に写像する必要があるが、カーネル関数さえ求められれば写像 $\\phi$ を陽に求める必要はない （カーネルトリック） 。 $k(\\mathbf{x},\\mathbf{x}&#94;{\\prime})$ が有効なカーネル関数であるための必要十分条件は、任意の $\\{\\mathbf{x}_n\\}$ に対して、要素が $k(\\mathbf{x}_n,\\mathbf{x}_m)$ で与えられるグラム行列 $\\mathbf{K}$ が半正定値であること。 新しいカーネル関数を定義してそれが有効な関数かを確認するのは大変なので、次の性質を用いて新たな関数を定義することが多い。 新たなカーネル関数を構築するための方法 有効なカーネルとして $k_1(\\mathbf{x},\\mathbf{x}&#94;{\\prime})$ と $k_2(\\mathbf{x},\\mathbf{x}&#94;{\\prime})$ が与えられた時、次の関数もやはりカーネル関数として有効である。 $$\\begin{aligned} k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=c k_{1}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) & (6.13)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=f(\\mathbf{x}) k_{1}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) f\\left(\\mathbf{x}&#94;{\\prime}\\right) & (6.14)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=q\\left(k_{1}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right)\\right) & (6.15)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=\\exp \\left(k_{1}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right)\\right) & (6.16)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=k_{1}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right)+k_{2}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right)& (6.17)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=k_{1}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) k_{2}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) & (6.18)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=k_{3}\\left(\\phi(\\mathbf{x}), \\phi\\left(\\mathbf{x}&#94;{\\prime}\\right)\\right) & (6.19)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=\\mathbf{x}&#94;{\\mathrm{T}} \\mathbf{A} \\mathbf{x}&#94;{\\prime}& (6.20) \\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=k_{a}\\left(\\mathbf{x}_{a}, \\mathbf{x}_{a}&#94;{\\prime}\\right)+k_{b}\\left(\\mathbf{x}_{b}, \\mathbf{x}_{b}&#94;{\\prime}\\right) & (6.21)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=k_{a}\\left(\\mathbf{x}_{a}, \\mathbf{x}_{a}&#94;{\\prime}\\right) k_{b}\\left(\\mathbf{x}_{b}, \\mathbf{x}_{b}&#94;{\\prime}\\right) & (6.22) \\end{aligned}$$ ※ ここで、それぞれの変数は以下の意味を持つ。 変数 説明 $c>0$ 定数 $f(\\cdot)$ 任意の関数 $q(\\cdot)$ 非負の係数を持つ多項式 $\\phi(\\mathbf{x})$ $\\mathbf{x}$ から $\\mathbb{R}&#94;{M}$ への関数 $k_3(\\cdot,\\cdot)$ $\\mathbb{R}&#94;{M}$ で定義された有効なカーネル $\\mathbf{A}$ 対象な半正定値行列 $\\mathbf{x}_a,\\mathbf{x}_b$ $\\mathbf{x}=(\\mathbf{x}_a,\\mathbf{x}_b)$ であるような変数（必ずしも互いに素である必要はない） $k_a,k_b$ それぞれの特徴空間において有効なカーネル関数 カーネル関数の例 $$k(x,x&#94;{\\prime}) = \\boldsymbol{\\phi}(x)&#94;T\\boldsymbol{\\phi}(x&#94;{\\prime}) = \\sum_{i=1}&#94;M\\phi_i(x)\\phi_i(x&#94;{\\prime})\\qquad (6.10)$$ # 多項式 ガウス シグモイド 基底関数 $$\\phi_j(x) = cx&#94;j$$ $$\\phi_j(x) = \\exp\\left\\{-\\frac{(x-\\mu_j)&#94;2}{2s&#94;2}\\right\\}\\qquad(3.4)$$ $$\\begin{aligned}\\phi_j(x) &= \\sigma\\left(\\frac{x-\\mu_j}{s}\\right) & (3.5)\\\\\\sigma(a) &=\\frac{1}{1+\\exp(-a)} & (3.6)\\end{aligned}$$ In [2]: # mapping function def polynomial ( x , d , c = 1 ): return c * x ** d def gaussian ( x , mu , s = 0.1 ): return np . exp ( - (( x - mu ) ** 2 ) / ( 2 * s ** 2 ) ) def logistic ( x , mu , s = 0.1 ): return 1 / ( 1 + np . exp ( - ( x - mu ) / s )) In [3]: # mapping function kernel = lambda phi , x_prime , X , key = None , ** params : np . array ([ sum ([ phi ( x_prime , ** { key : val }) * phi ( x , ** { key : val }) for val in params [ key ]]) for x in X ]) In [4]: params = [ ( polynomial , - 0.5 , \"d\" , np . linspace ( 1 , 11 , 11 )), ( gaussian , 0 , \"mu\" , np . linspace ( - 1 , 1 , 11 )), ( logistic , 0 , \"mu\" , np . linspace ( - 1 , 1 , 11 )), ] In [5]: X = np . linspace ( - 1 , 1 , 1000 ) In [6]: ncol = len ( params ) fig = plt . figure ( figsize = ( 12 , 6 )) for i , param in enumerate ( params ): phi , x_prime , key , vals = param ax_base = plt . subplot2grid (( 5 , ncol ),( 0 , i ), rowspan = 3 ) for val in vals : Y = phi ( X , ** { key : val }) ax_base . plot ( X , Y ) ax_base . set_title ( phi . __name__ ) ax_kernel = plt . subplot2grid (( 5 , ncol ),( 3 , i ), rowspan = 2 ) ax_kernel . plot ( X , kernel ( phi , x_prime , X , key , ** { key : vals })) ax_kernel . scatter ( x_prime , min ( ax_kernel . get_ylim ()), marker = \"x\" , color = \"black\" , label = \"$x&#94;{\\prime}$\" ) ax_kernel . set_xlabel ( \"$x$\" ), ax_kernel . set_title ( \"$k(x,x&#94;{\\prime})$\" ), ax_kernel . legend () plt . tight_layout () plt . show () 様々なカーネル 生物学的配列のカーネル Spectrum kernel (Leslie et al., 2002) Marginalized kernel (Tsuda et al., 2002) Profile kernel (Kuang et al., 2004) Local alignment kernel (Saigo et al., 2004) 木構造に関するカーネル Kernel for phylogenetic profiles (Vert, 2002) Kernel for natural language (Suzuki et al., 2003) Kernel for RNA sequences (Kin et al., 2002) ※ 詳しくは、 Kernel Methods in Computational Biology, MIT Press, 2004 を参照 最適化理論の復習 ラグランジュ未定乗数法 に記載。 サポートベクターマシーン マージン最大化 に基づく線形識別器 カーネル関数と組み合わせることによって非線形な識別も可能 サンプル間の類似度にしか依存しない （→非ベクトルデータの分類にも適用可能） 詳しくは サポートベクターマシン(SVM) に記載。 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-1.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-1.html"},{"title":"生物統計論 第3回","text":"In [1]: import numpy as np import matplotlib.pyplot as plt Section3.1 Multiple Test Correction \"The more inferences are made, the more likely erroneous inferences are to occur.\" (ex. Even if the type1 error rate is 1% for each data, 10 out of 1000 sample will be rejected on average.) Terminology FWER(Family-wise error rate) : the probability of making at least one type I error (FP) in the family. FDR(False discovery rate) : the expected type I error (FP) rate in rejected data. FDR(False discovery rate) Null hypotheses: $H_1,\\ldots,H_{g_j}$ Alternative hypotheses: $H_{g_j+1},\\ldots,H_g$ Procedure to reject hypotheses : $d_{\\alpha}: \\left(P_1,P_2,\\ldots,P_g\\right)\\rightarrow\\left\\{H_{i_1},\\ldots,H_{i_K}\\right\\}$ Expected ratio of FP in rejected hypotheses: $\\mathrm{FP}=\\sum_{k=1}&#94;K\\mathbb{I}(1\\leq i_k\\leq g_j),\\quad \\mathrm{TP}=K-\\mathrm{FP}$ $\\mathcal{Q} = \\begin{cases}0 & \\text{if }K=(\\mathrm{FP+TP})=0\\\\\\frac{\\mathrm{FP}}{\\mathrm{FP}+\\mathrm{TP}} & \\text{if }K>0\\end{cases}$ $$\\mathrm{FDR}(d_{\\alpha})=\\mathbb{E}\\left(\\mathcal{Q}|H_1,\\ldots,H_g\\right)$$ Methods to counteract this problem Bonferroni Correction Set $\\alpha\\left(=s_{\\alpha}\\leq S_h|H_0\\right)\\leftarrow 1/g\\cdot\\alpha_{\\mathrm{FWER}}$ ($g$: sample size) Therefore, we have: $$\\mathbb{P}\\left(\\{s_{\\alpha}\\leq S_1\\}\\cup\\cdots\\cup\\{s_{\\alpha}\\leq S_g\\}|H_0\\right)\\leq\\sum_{h=1}&#94;g\\mathbb{P}\\left(s_{\\alpha}\\leq S_h|H_0\\right) = g\\cdot\\left(\\frac{1}{g}\\alpha_{\\mathrm{FWER}}\\right) = \\alpha_{\\mathrm{FWER}}$$ Benjamini-Hochberg Procedure (B-H Procedure) If we assume data are distributed independently, we have: $$\\left(P_1,\\ldots,P_g\\right)\\sim\\mathrm{Unif}\\left(0,1\\right)&#94;{\\times g_j}\\times\\mathbb{P}\\left(P|H_{\\text{alternative}}\\right)&#94;{\\times\\left(g-g_j\\right)}$$ We sort the p-value as $p_1\\leq\\cdots\\leq p_g$ Then, $$ \\begin{aligned} d_{\\alpha_{\\mathrm{FDR}}}&#94;{\\mathrm{B-H}}(p_1,\\cdots,p_g) &:=\\mathrm{Reject}\\left\\{H_i|1\\leq i\\max\\left\\{n|p_n\\leq\\left(\\frac{n}{g}\\alpha_{\\mathrm{FDR}}\\right)\\right\\}\\right\\}\\\\ &\\Rightarrow \\mathrm{FDR}\\left(d_{\\alpha_{\\mathrm{FDR}}&#94;{\\mathrm{B-H}}}\\right)\\leq\\alpha_{\\mathrm{FDR}} \\end{aligned} $$ Example. $H_i$ $G_1$ $G_2$ $G_3$ $G_4$ $G_5$ $G_6$ $G_7$ $G_8$ $G_9$ $G_{10}$ $p_i$ $0.1$ $0.4$ $0.8$ $0.035$ $0.9$ $0.04$ $0.001$ $0.002$ $0.6$ $0.7$ In [2]: alpha_FDR = 0.1 g = 10 In [3]: idx = np . array ([ i + 1 for i in range ( g )]) p_value = data = np . array ([ 0.1 , 0.4 , 0.8 , 0.035 , 0.9 , 0.04 , 0.001 , 0.002 , 0.6 , 0.7 ]) q = np . array ([( i + 1 ) / g * alpha_FDR for i in range ( g )]) In [4]: p_value_rank = np . argsort ( p_value ) In [5]: for i in reversed ( range ( g )): if q [ i ] >= p_value [ p_value_rank [ i ]]: break In [6]: print ( f \"Reject: {[f'G {idx} ' for idx in idx[p_value_rank[:i+1]]]}\" ) Reject: ['G7', 'G8', 'G4', 'G6'] Quantile-Quantile plot In [7]: x = - np . log10 ( np . array ([( i + 1 ) / g for i in range ( g )])) y = - np . log10 ( p_value [ p_value_rank ]) In [8]: plt . plot ( x , y , color = \"red\" , label = \"observed\" ) plt . plot (( 0 , min ( x [ 0 ], y [ 0 ])),( 0 , min ( x [ 0 ], y [ 0 ])), color = \"black\" , label = \"$y=x$\" ) plt . title ( \"Quantile-Quantile plot\" ) plt . xlabel ( \"$-\\log_ {10} $ expected P-value\" ) plt . ylabel ( \"$-\\log_ {10} $ observed P-value\" ) plt . legend () plt . grid () plt . show () Section3.2 Probabilistic Models Hypothesis Testing Probabilistic Modeling Models data generation processes in uninteresting scenarios $H_0$ Models data generation processes under interesting biological scenario $H_1$ (possibly as well as $H_0$) Show inconsistency with $H_0$ Check fit of the model to the data Problems of Hypothesis Testing Approaches Difficult to model satisfactory, uninteresting scenarios Does not model interesting biological scenarios A rejected hypothesis does not necessarily tell anything interesting Still useful for many small parts of a full analysis probabilistic Modeling Strong regularity from the probability condition Can include various biological knowledge Adjustable to the quality, amount, randomness of the data Conditional probability makes it easy to integrate multiple models Once a satisfactory model is obtained, we can extract various information from expectation values Powerful general tools are available Maximal Likelihood EM algorithms Bayesian inference MCMC sampling etc... Section3.3 Likelihood Q. How to adjust parameters?? A. Maximize the Likelihood likelihood observed data: $\\mathbf{D} = \\left\\{x&#94;{(h)}|h=1,\\cdots,n\\right\\}$ parametrized model distribution: $\\mathbb{P}(x|\\theta)$ Likelihood: $L(\\theta|D) = \\mathbb{P}(D|\\theta) = \\prod_{h=1}&#94;n\\mathbb{P}\\left(x&#94;{(h)}|\\theta\\right)$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物統計論","url":"https://iwasakishuto.github.io/University/3A/生物統計論-3.html","loc":"https://iwasakishuto.github.io/University/3A/生物統計論-3.html"},{"title":"レポート課題2(10/10出題)","text":"P262e/9z9Q+n3SlpIFrWOw==;;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-report2.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-report2.html"},{"title":"連続最適化(1)制約なし最適化","text":"講師： 佐藤一誠 参考書： 最適化手法 参考書： 機械学習のための連続最適化 In [1]: import numpy as np import matplotlib.pyplot as plt 講義概要 凸最適化問題 最急降下法 ニュートン法 準ニュートン法 凸最適化問題 凸関数 任意の $x,x&#94;{\\prime}\\in\\mathcal{X}$、任意の $\\theta\\in[0,1]$ に対して、以下が成り立つような関数を 凸関数(convex function) と呼ぶ。 $$f\\left(\\left(1-\\theta\\right)x + \\theta x&#94;{\\prime}\\right)\\leq\\left(1-\\theta\\right)f(x) + \\theta f\\left(x&#94;{\\prime}\\right)$$ $f$ が一階微分可能の時、$f$ が凸関数になるための必要十分条件は、感覚的には接戦が常に関数の下に来ることで、 $$\\forall x,x&#94;{\\prime}\\in\\mathcal{X},\\quad f\\left(x&#94;{\\prime}\\right)\\geq f(x) + \\nabla f(x)&#94;T\\left(x&#94;{\\prime}-x\\right)$$ $f$ が二階微分可能の時、$f$ が凸関数になるための必要十分条件は、 ヘッセ行列(Hessian matrix) $\\nabla&#94;2f(x)$ が 半正定値(positive semi-definite) ↔︎$\\nabla&#94;2f(x)$ の 固有値(eigenvalue) が全て非負 任意の $x,x&#94;{\\prime}\\in\\mathcal{X}$、任意の $\\theta\\in[0,1]$ に対して、$(1-\\theta)x+\\theta x&#94;{\\prime}$ も $\\mathcal{X}$ に属するとき、$\\mathcal{X}$ を 凸集合(convex set) と呼ぶ。$x$ と $x&#94;{\\prime}$ を結ぶ線分上の全ての点が $\\mathcal{X}$ に属するということ。 最適化 最適化問題(optimization problem)： $\\mathcal{X}\\subset\\mathbb{R}&#94;d$ 上に定義される関数 $f:\\mathcal{X}\\rightarrow\\mathbb{R}$ の最小値 $\\underset{\\mathbf{x}\\in\\mathcal{X}}{\\min}f(\\mathbf{x})$ を求めよ。 最適化アルゴリズム(optimization algorithm)： 収束する点列の生成アルゴリズム 最適性条件：最適化問題の最適解であるための必要条件 制約なし最適化問題(unconstrained optimization problem)： $\\mathcal{X}\\subset\\mathbb{R}&#94;d$ 上に定義される関数 $f:\\mathcal{X}\\rightarrow\\mathbb{R}$ の最小値 $\\underset{\\mathbf{x}\\in\\mathcal{X}}{\\min}f(\\mathbf{x})$ を求めよ。 $f$ を 目的関数(objective function) と呼ぶ。 目的関数は 微分可能(differentiable) と仮定する。 最適性条件：$\\mathbf{x}&#94;{\\star}$ が最適解のとき $$\\nabla f(\\mathbf{x}&#94;{\\star}) = 0$$ 凸最適化問題(convex optimization problem)： 関数 $f$ が凸で集合 $\\mathcal{X}$ も凸 最適解（の集合）が 一意に定まる。 最適解の必要十分条件： 勾配(gradient) がゼロ（凸でない場合は 必要条件 ） 最急降下法 最急降下法(steepest descent method) ※ 勾配法(gradient method)とも。 適当に初期値 $\\mathbf{x}_0$ を定める。 $k=0,1,2,\\ldots$ に対して、収束するまで以下を繰り返す。 $$\\mathbf{x}_{k+1} = \\mathbf{x}_k - \\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)\\quad (\\varepsilon_k>0\\text{ : step size})$$ 凸最適化問題の場合、 大域的最適解(global optimization solution) が求まる 非凸最適化問題の場合、 局所最適解(local optimization solution) しか求められず、様々な初期値から何回か学習して最適解を採用する、ことしかできない。 ステップ幅(step size)の選択 焼きなまし(annealing) ：「最初は大きく、徐々に小さく」。しかし、適切に実装することは容易でない。 正規化(normalization) ：$\\varepsilon_k = \\varepsilon_k&#94;{\\prime}/\\|\\nabla f(\\mathbf{x}_k)\\|$ 勾配が大きいとき安定するが、勾配が小さいときは不安定 厳密直線探索(exact line search) 目的関数の値を最小にするステップ幅を求める。 $$\\underset{\\varepsilon_k>0}{\\min}f\\left(\\mathbf{x}_k-\\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)\\right)$$ $f$ が 単峰関数(unimodal function) の場合は、 二分探索法(binary search) や 黄金分割探索(golden section search) などの探索によって最小値を探す。 一般に、一次元の非線形最小化問題を解く必要があるため、最適なステップ幅の探索に時間がかかる。 厳密直線探索を用いた最急降下法は、 一次収束(linear convergence) する。 $$\\text{Q-linear convergence: }\\|\\mathbf{x}_{k+1}-\\mathbf{x}&#94;{\\star}\\| c\\leq \\|\\mathbf{x}_k-\\mathbf{x}&#94;{\\star}\\|&#94;q,\\quad 0 In [2]: ITERATION = 10 N = 100 fsize = 4 In [3]: a = 10 ; b = 1 A = 2 * np . diag ([ a , b ]) func = lambda x , y : a * x ** 2 + b * y ** 2 In [4]: x1min =- 5 ; x1max = 5 ; x2min =- 5 ; x2max = 5 initialX = np . array ([ x1min + 1 , x2max - 2 ]) x1 = np . linspace ( x1min , x1max , N ) x2 = np . linspace ( x2min , x2max , N ) X1 , X2 = np . meshgrid ( x1 , x2 ) Z = func ( X1 , X2 ) In [5]: def find_step_size ( method , f , X , A , ** kwargs ): df = A . dot ( X ) if method == \"fixed\" : epsilon = 1e-1 elif method == \"exact line search\" : epsilon = np . sum ( np . square ( df )) / np . sum ( np . square ( df ) * A . diagonal ()) elif method == \"backtracking line search\" : epsilon = 1 alpha = kwargs [ \"alpha\" ]; beta = kwargs [ \"beta\" ] while True : newX = X - epsilon * df if f ( newX [ 0 ], newX [ 1 ]) - f ( X [ 0 ], X [ 1 ]) <= - alpha * epsilon * np . sum ( np . square ( df )): break epsilon = beta * epsilon return epsilon In [6]: methods = [ \"fixed\" , \"exact line search\" ] n_methods = len ( methods ) In [7]: fig = plt . figure ( figsize = ( fsize * n_methods , fsize * 2 )) for i , method in enumerate ( methods ): X = initialX ; pX = initialX objective_functions = [] ax_t = fig . add_subplot ( 2 , n_methods , i + 1 ) ax_t . contour ( X1 , X2 , Z , 30 ) ax_t . scatter ( X [ 0 ], X [ 1 ], color = \"red\" , s = 100 , marker = \"*\" , label = \"initial\" ) objective_functions . append ( func ( X [ 0 ], X [ 1 ])) for it in range ( ITERATION ): epsilon = find_step_size ( method , func , X , A , alpha = 0.5 , beta = 0.8 ) df = A . dot ( X ) X = X - epsilon * df ax_t . plot (( X [ 0 ], pX [ 0 ]), ( X [ 1 ], pX [ 1 ]), color = \"black\" , linestyle = \":\" ) ax_t . scatter ( X [ 0 ], X [ 1 ], color = \"black\" , s = 100 , marker = \"*\" ) objective_functions . append ( func ( X [ 0 ], X [ 1 ])) pX = X ax_t . set_title ( method , fontsize = 18 ), ax_t . set_xlabel ( \"x1\" ), ax_t . set_ylabel ( \"x2\" ) ax_t . legend () sharey = ax_b if i != 0 else None ax_b = fig . add_subplot ( 2 , n_methods , n_methods + i + 1 , sharey = sharey ) ax_b . plot ( objective_functions , color = \"black\" ) ax_b . set_xlabel ( \"iteration\" ), ax_b . set_ylabel ( \"objective function\" ) plt . tight_layout () plt . show () 例：$f(x) = 1/2\\mathbf{x}&#94;T\\mathbf{Ax}$ $$ \\begin{aligned} \\frac{\\partial f\\left(\\mathbf{x}_k-\\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)\\right)}{\\partial\\varepsilon_k} &= \\frac{\\partial}{\\partial\\varepsilon_k}\\frac{1}{2}\\left(\\mathbf{x}_k-\\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)\\right)&#94;T\\mathbf{A}\\left(\\mathbf{x}_k - \\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)\\right)\\\\ &= \\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)&#94;T\\mathbf{A}\\nabla f\\left(\\mathbf{x}_k\\right) - \\nabla f\\left(\\mathbf{x}_k\\right)&#94;T\\mathbf{Ax}_k\\\\ &=0\\\\ \\therefore \\varepsilon_k&#94;{\\star} &= \\frac{\\|\\nabla f\\left(\\mathbf{x}_k\\right)\\|&#94;2}{\\nabla f\\left(\\mathbf{x}_k\\right)&#94;T\\mathbf{A}\\nabla f\\left(\\mathbf{x}_k\\right)}\\qquad (\\nabla f\\left(\\mathbf{x}_k\\right) = \\mathbf{Ax}) \\end{aligned} $$ バックトラック直線探索(backtracking line search) $\\varepsilon_k=1$ に初期化 アルミホ基準(Armijo rule) ： $$f\\left(\\mathbf{x}_k-\\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right) - f\\left(\\mathbf{x}_k\\right)\\right) \\leq\\alpha\\|\\nabla f\\left(\\mathbf{x}_k\\right)\\|&#94;2$$ が成り立つまで $\\varepsilon_k$ を $\\varepsilon_k\\leftarrow\\beta\\varepsilon_k$ と減衰させる。（$0<\\alpha, \\beta<1$） 目的関数の減少量の線形予測値の $\\alpha$ 倍の減少を保証している。 $f$ の真の減少量： $$g\\left(\\varepsilon_k\\right) = f\\left(\\mathbf{x}_k-\\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)\\right) - f\\left(\\mathbf{x}_k\\right)$$ $f$ の減少量の 線形予測値 $$\\begin{aligned}\\varepsilon_kg&#94;{\\prime}(0) &=\\varepsilon_k\\cdot\\left( -\\nabla f\\left(\\mathbf{x}_k\\right)&#94;T\\nabla f\\left(\\mathbf{x}_k-0\\cdot\\nabla f\\left(\\mathbf{x}_k\\right)\\right)\\right)\\\\&=-\\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)&#94;T\\nabla f\\left(\\mathbf{x}_k\\right)\\\\&=-\\varepsilon_k\\|\\nabla f\\left(\\mathbf{x}_k\\right)\\|&#94;2 \\end{aligned}$$ In [8]: methods = [ \"fixed\" , \"exact line search\" ] n_methods = len ( methods ) In [9]: fig = plt . figure ( figsize = ( fsize * n_methods , fsize * 2 )) for i , method in enumerate ( methods ): X = initialX ; pX = initialX objective_functions = [] ax_t = fig . add_subplot ( 2 , n_methods , i + 1 ) ax_t . contour ( X1 , X2 , Z , 30 ) ax_t . scatter ( X [ 0 ], X [ 1 ], color = \"red\" , s = 100 , marker = \"*\" , label = \"initial\" ) objective_functions . append ( func ( X [ 0 ], X [ 1 ])) for it in range ( ITERATION ): epsilon = find_step_size ( method , func , X , A , alpha = 0.5 , beta = 0.8 ) df = A . dot ( X ) X = X - epsilon * df ax_t . plot (( X [ 0 ], pX [ 0 ]), ( X [ 1 ], pX [ 1 ]), color = \"black\" , linestyle = \":\" ) ax_t . scatter ( X [ 0 ], X [ 1 ], color = \"black\" , s = 100 , marker = \"*\" ) objective_functions . append ( func ( X [ 0 ], X [ 1 ])) pX = X ax_t . set_title ( method , fontsize = 18 ), ax_t . set_xlabel ( \"x1\" ), ax_t . set_ylabel ( \"x2\" ) ax_t . legend () sharey = ax_b if i != 0 else None ax_b = fig . add_subplot ( 2 , n_methods , n_methods + i + 1 , sharey = sharey ) ax_b . plot ( objective_functions , color = \"black\" ) ax_b . set_xlabel ( \"iteration\" ), ax_b . set_ylabel ( \"objective function\" ) plt . tight_layout () plt . show () 微分不可能な場合 目的関数 $f$ が 微分不可能(non-differentiable) の場合は、微分の概念を一般化した 劣微分 を用いる。 凸関数 $f$ の $\\mathbf{x}&#94;{\\prime}$ での 劣勾配(sub-gradient) とは、全ての $\\mathbf{x}\\in\\mathcal{X}$ に対して次式を満たす $\\mathbf{\\xi}$ $$f(\\mathbf{x})\\geq f\\left(\\mathbf{x}&#94;{\\prime}\\right) + \\mathbf{\\xi}&#94;T\\left(\\mathbf{x}-\\mathbf{x}&#94;{\\prime}\\right)$$ $f$ が微分可能な時、$\\mathbf{\\xi} = \\nabla f\\left(\\mathbf{x}&#94;{\\prime}\\right)$ 上式を満たす $\\mathbf{\\xi}$ 全体を $\\partial f\\left(\\mathbf{x}&#94;{\\prime}\\right)$ で表し、 劣微分(sub-differential) と呼ぶ。 微分不可能な点では、劣微分のどれかの値を用いる。 ニュートン法 一般にニュートン法という名称は、方程式の解を求めるアルゴリズムを指すが、以下を表すことが多い。 適当に初期値 $\\mathbf{x}_0$ を定める。 $k=0,1,2,\\ldots$ に対して、収束するまで以下を繰り返す。 $$\\mathbf{x}_{k+1} = \\mathbf{x}_k - \\varepsilon_k\\left(\\nabla&#94;2f\\left(\\mathbf{x}_k\\right)\\right)&#94;{-1}\\nabla f\\left(\\mathbf{x}_k\\right)$$ 勾配法では一階微分しか用いていないので、二階微分も用いることで反復回数を減らすことが狙い。実際 $k$ が十分大きい時、最適解 $\\mathbf{x}&#94;{\\star}$ の近傍で 二次収束(quadratic convergence) するが、逆行列を求める計算コストが大きい。 二次の テーラー展開(Taylor expansion) を用いて $f$ を現在の解 $\\mathbf{x}_k$ の周りで近似 $\\left(f(\\mathbf{x})\\approx f_k(\\mathbf{x})\\right)$ し、その二次近似を最小にする $\\mathbf{x}_k$ に更新する。 $$f_k(\\mathbf{x}) = f(\\mathbf{x}_k) + \\nabla f(\\mathbf{x}_k)&#94;T\\left(\\mathbf{x}-\\mathbf{x}_k\\right) + \\frac{1}{2}\\left(\\mathbf{x}-\\mathbf{x}_k\\right)&#94;T\\nabla&#94;2f(\\mathbf{x}_k)(\\mathbf{x}-\\mathbf{x}_k)$$ $f_k$ の勾配をゼロと置いた方程式 $$\\nabla f_k(\\mathbf{x}) = \\frac{\\partial f_k(\\mathbf{x})}{\\partial \\mathbf{x}}= \\nabla f(\\mathbf{x}_k) + \\nabla&#94;2f(\\mathbf{x}_k)\\left(\\mathbf{x}-\\mathbf{x}_k\\right) = \\mathbf{0}$$ を解けば、$f_k$ の最小解が以下のように求まる $$\\mathbf{x}&#94;{\\star} = \\mathbf{x}_k - \\left(\\nabla&#94;2 f\\left(\\mathbf{x}_k\\right)\\right)&#94;{-1}\\nabla f\\left(\\mathbf{x}_k\\right)$$ なお、ヘッセ行列が逆行列を持たない時は、 単位行列の定数倍を加えて対処する（正則化, regularization） らしい。 $$\\left(\\nabla&#94;2f\\left(\\mathbf{x}_k\\right) + \\mu\\mathbf{I}\\right)&#94;{-1},\\quad\\mu>0$$ 準ニュートン法 ニュートン法の近似。ニュートン法ではヘッセ行列の逆行列を求めるのに計算コストがかかるので、勾配ベクトル $\\nabla f(\\mathbf{x})$ を用いて近似計算する。 BFGSアルゴリズムを用いたヘッセ行列の更新式が有名 なお、 レポート課題 で詳しく記述しているが、BFGSアルゴリズムのヘッセ行列の更新式は以下で表される。 $$ \\mathbf{H}_{k+1} =\\mathbf{H}_k+\\frac{\\mathbf{t}_k\\mathbf{t}_k&#94;T}{\\mathbf{s}_k&#94;T\\mathbf{t}_k}-\\frac{\\mathbf{H}_k\\mathbf{s}_k\\mathbf{s}_k&#94;T\\mathbf{H}_k}{\\mathbf{s}_k&#94;T\\mathbf{H}_k\\mathbf{s}_k} $$ なお、この時 $$ \\begin{aligned} \\begin{cases} \\mathbf{s}_k &= \\mathbf{x}_{k+1} - \\mathbf{x}_k\\\\ \\mathbf{t}_k &= \\nabla f(\\mathbf{x}_{k+1}) - \\nabla f(\\mathbf{x}_k) \\end{cases} \\end{aligned} $$ まとめ 凸最適化問題 目的関数が凸関数で定義域が凸集合 最適解が一意に定まる 最急降下法 勾配を降下するように値を更新 ステップ幅の選択が重要 目的関数が微分不可能な場合は、劣勾配法や近接勾配法を用いる ニュートン法 二階微分の情報を利用する ヘッセ行列の近似を用いる準ニュートン法が実用的 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-2.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-2.html"},{"title":"Zuker Algorithm","text":"Free energy minimization of RNA seconary structure. In cells, RNAs are likely to form energetically stable secondary structure. The correctness of secondary structure should be evaluated based on the free energy, rather than the number of base-pairs ( Nussinov Algorithm ) We first describe a way to calculate the free energy of a particular RNA secondary structure. We describe the Zuker algorithm which calculates the RNA secondary structure with the minimum free energy (MFE). Free energy of RNA secondary structure The free energy of a secondary structure is approximated as the sum of the free energy of \"loops\". $$E = \\sum_iE_i$$ The free energy of individual loop is given by experimental data. (ex. $\\mathrm{C-G: }-3.4\\mathrm{kcal/mol}$, $\\mathrm{U-A: }-0.9\\mathrm{kcal/mol}$) Five types of \"loops\" hairpin loop stacking bulge loop internal loop multi-loop F1(i,j) F2(i,j,h,l) Fm=a+bk+cu a,b,c: constant k: the number of base-pairs in a multi-loop u: the number of single stranded nucleotides in a multi-loop Algorithm variable meaning $W(i,j)$ the minimum free energy of subsequence from $i$ to $j$. $V(i,j)$ the minimum free energy of subsequence from $i$ to $j$ when $i$ to $j$ forms a base-pair. $M(i,j)$ the minimum free energy of subsequence closed by two or more base pairs. $M1(i,j)$ the minimum free energy of subsequence closed by one or more base pairs. Recursion $$ \\begin{aligned} W(i,j) &= \\min \\begin{cases} W(i+1,j)\\\\W(i,j-1)\\\\V(i,j)\\\\\\min_{i\\leq k Initialization In [1]: from kerasy.Bio.structure import Zuker from kerasy.utils.bio import readMonoSeq In [2]: model = Zuker () In [3]: # 以下の形のパラメタファイルを受け取ります。 ! cat params.json { \"inf\": 1e3, \"type\": \"RNA\", \"Watson_Crick\": true, \"Wobble\": true, \"hairpin\": [Infinity, Infinity, 4.4, 4.6, 4.7, 4.4, 5.0, 4.5, 5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 5.9, 6.0, 6.1, 6.1, 6.2, 6.2, 6.3, 6.3, 6.4, 6.4, 6.5, 6.5, 6.5, 6.6, 6.6, 6.7, Infinity], \"internal\": [Infinity, 1.0, 1.0, 1.1, 2.0, 2.0, 2.1, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 2.9, 3.0, 3.1, 3.1, 3.2, 3.3, 3.3, 3.4, 3.4, 3.5, 3.5, 3.5, 3.6, 3.6, 3.7, 3.7, Infinity], \"buldge\": [1.0, 1.0, 1.0, 1.1, 2.0, 2.0, 2.1, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 2.9, 3.0, 3.1, 3.1, 3.2, 3.3, 3.3, 3.4, 3.4, 3.5, 3.5, 3.5, 3.6, 3.6, 3.7, 3.7, Infinity], \"a\": 6.0, \"b\": -1.0, \"c\": 0.1, \"stacking_cols\": [\"CG\", \"AU\", \"GU\"], \"stacking_score\": [[-3.0, -2.0, -2.0], [-2.0, -0.5, -0.5], [-2.0, -0.5, -0.5]] } In [4]: model . load_params ( \"params.json\" ) In [5]: model . params () | parameter |value | --------------------- |a | 6.0| |b | -1.0| |c | 0.1| |inf |1000.0| |type | RNA| |Watson_Crick| 1| |Wobble | 1| In [6]: model . stacking_cols Out[6]: array(['CG', 'AU', 'GU'], dtype=' In [7]: model . stacking_score Out[7]: array([[-3.e+00, -2.e+00, -2.e+00, 1.e+03], [-2.e+00, -5.e-01, -5.e-01, 1.e+03], [-2.e+00, -5.e-01, -5.e-01, 1.e+03], [ 1.e+03, 1.e+03, 1.e+03, 1.e+03]]) In [8]: # サンプル配列 sequence = readMonoSeq ( path = \"sample_seq4.fasta\" ) In [9]: print ( sequence ) ['CCACCUCGCCGCGAAGAUUGGAUGUAAUGUUCACUUAAGCCUAGGCGUUCGCAAAGAAAUACCUAUGGUAAUUUGACUAGCGGUAACAAUGAAAGAAAAGGUGUAGGCGAGGUGGG'] In [10]: # 最大ペアの配列 model . predict ( sequence [ 0 ]) Zuker Algorithm Score: -37.5 ================================================================= seq: CCACCUCGCCGCGAAGAUUGGAUGUAAUGUUCACUUAAGCCUAGGCGUUCGCAAAGAAAU : ((((((((((((((((..((((((...)))))))))..((((....((((((..(((((( seq: ACCUAUGGUAAUUUGACUAGCGGUAACAAUGAAAGAAAAGGUGUAGGCGAGGUGGG : (((...))))))))..)).))))..))...........)))))).)))))))))). ================================================================= In [11]: model . W Out[11]: array([[ 0. , 0. , 0. , ..., -34.5, -37.5, -37.5], [ 0. , 0. , 0. , ..., -34.5, -34.5, -34.5], [ 0. , 0. , 0. , ..., -32.5, -32.5, -32.5], ..., [ 0. , 0. , 0. , ..., 0. , 0. , 0. ], [ 0. , 0. , 0. , ..., 0. , 0. , 0. ], [ 0. , 0. , 0. , ..., 0. , 0. , 0. ]]) In [12]: model . M Out[12]: array([[1000. , 999. , 999. , ..., -35.4, -38.5, -38.4], [1000. , 1000. , 999. , ..., -35.5, -35.4, -35.3], [1000. , 1000. , 1000. , ..., -33.4, -33.3, -33.2], ..., [1000. , 1000. , 1000. , ..., 1000. , 999. , 999. ], [1000. , 1000. , 1000. , ..., 1000. , 1000. , 999. ], [1000. , 1000. , 1000. , ..., 1000. , 1000. , 1000. ]]) In [13]: model . V Out[13]: array([[1000. , 1000. , 1000. , ..., -31.5, -37.5, -34.5], [1000. , 1000. , 1000. , ..., -34.5, -31.5, -31.5], [1000. , 1000. , 1000. , ..., 1000. , 1000. , 1000. ], ..., [1000. , 1000. , 1000. , ..., 1000. , 1000. , 1000. ], [1000. , 1000. , 1000. , ..., 1000. , 1000. , 1000. ], [1000. , 1000. , 1000. , ..., 1000. , 1000. , 1000. ]]) if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-9.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-9.html"},{"title":"生物物理学 第3回","text":"タンパク質の構造と安定性 タンパク質の定義 特定のアミノ酸（20種類）が重合した重合体である。 特定の立体構造をとる。 （これがないと ポリペプチド ） 機能 説明 分子認識 ミオグロビンは酸素を結合。抗体は抗原と結合。 触媒（酵素） 化学反応の反応速度は \\(10&#94;8\\) ~ \\(10&#94;{17}\\) 倍にも加速される。 制御 基質の結合や環境の変化に伴い構造を変化し、タンパク質の反応を制御する。 エネルギー変換 光を電位に換え、ATP分解を力に換える。 構造形成・維持 タンパク質重合体は細胞や細胞内器官の構造を支える。 タンパク質を構成するアミノ酸 d-グリセルアルデヒドの立体配置を基準として、この立体配置を崩さずにできる化合物をD-体、その鏡像異性体がL-体。 ※ タンパク質はL体 構造 名前 略（三文字） 略（一文字） アラニン Ala A アルギニン Arg R アスパラギン Asn N アスパラギン酸 Asp D システイン Cys C グルタミン酸 Glu E グルタミン Gln Q グリシン Gly G ヒスチジン His H イソロイシン Ile I ロイシン Leu L リシン Lys K メチオニン Met M フェニルアラニン Phe F プロリン Pro P セリン Ser S トレオニン Thr T トリプトファン Trp W チロシン Tyr Y バリン Val V # 上記の表は以下のコードを応用して作成した。 url = \"https://ja.wikipedia.org/wiki/タンパク質を構成するアミノ酸\" soup = BeautifulSoup ( requests . get ( url ) . content , 'lxml' ) for li in soup . findAll ( \"li\" , { \"class\" : \"gallerybox\" }): text = str ( li ) . replace ( ' \\n ' , '' ) src = re . findall ( r '<img.*src=\"(.+?)\".*>' , text )[ 0 ] name , l3 , l1 = re . findall ( r '<p>.*title=\"(.+?)\".*<br/>\\((.+?)\\xa0\\/\\xa0(.+?)\\)</p>' , text )[ 0 ] 理論的構造決定法 アミノ酸配列→量子力学→タンパク質の構造とエネルギー状態を決定 シュレディンガー方程式は水素原子のみ解析的に解くことができ、それ以外は近似を行う必要がある。 現在、高精度に計算（第一原理分子動力学法）できるのは1つの構造に対して100原子程度である。 水分子を考慮しなければ、タンパク質の構造や電子軌道を精度よく求めることはできない。 アミノ酸がポリペプチド結合した重合体から機能を持つ立体構造を創り構造を維持するためには、 立体構造が熱力学的に安定でなければならない。 → Gibbs自由エネルギー \\(G\\) を見る。 準安定なのは、 \\(G\\) が極小の時。 最も安定なのは、 \\(G\\) が最小の時。 まとめ 生体の機能を主に担っているのは、タンパク質である。（RNAも機能に重要である。） タンパク質は分子認識・触媒・制御・エネルギー変換・構造形成維持などの機能を有している。 アミノ酸配列から計算によってタンパク質構造を決定することに成功していない。（部分構造はできている。） 酵素機能を行うとき、酵素の多くの場所が構造変化を行う。 第7回目の講義(11/6)の小テスト 指定課題： 第1,2,3回の講義の中で、最も興味のある事柄について300~500字でまとめる。 この事柄と関連する内容を調べるなどして、自分の意見を300~500字で述べる。 図や式を使いわかりやすく説明すること。図や式は文字数に含めない。 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物物理学","url":"https://iwasakishuto.github.io/University/3A/生物物理学-3.html","loc":"https://iwasakishuto.github.io/University/3A/生物物理学-3.html"},{"title":"領域分割","text":"講師： 山崎俊彦 参考書： CG-ARTS協会発行「ディジタル画像処理」 参考書： R. Szeliski, Computer Vision Algorithms and Applications, Springer (PDF版はインターネット上で無料公開) In [1]: import cv2 import numpy as np import matplotlib.pyplot as plt import matplotlib.patches as patches # 円を描画 領域分割 色によるクラス分け（画像のみ） k-means法 mean-shift法 色によるクラス分け（画像のみ） 例えば、画素(RGB)や位置(x,y)の似たものをグループ分けする。 二値分類(FG/BG分類)で有名なのが クロマキー （ 青色・緑色 背景） k-means法 予めクラス数 $k$ を指定してクラスタリング。 $k$ 個の代表点をランダムにサンプリング（$k$ 個をデータの中からとってきても良いし、完全にランダムでばらまいても良い。） 全てのデータ点から一番近い代表点を $1$ つ探す。 $k$ 個のグループの重心を計算し、それを新たな代表点とする。 2,3を繰り返す。 In [2]: from kerasy.ML.KMeans import KMeans In [3]: def decomposeImg ( path , K ): imgsize = 4 fig = plt . figure ( figsize = ( imgsize * 2 , imgsize * 1 )) bgr_img = cv2 . imread ( path ) rgb_img = cv2 . cvtColor ( bgr_img , cv2 . COLOR_BGR2RGB ) img_shape = rgb_img . shape # Original Image. ax_org = fig . add_subplot ( 1 , 2 , 1 ) ax_org . imshow ( rgb_img ) ax_org . set_title ( f \"Original\" ), ax_org . set_xticks ([]), ax_org . set_yticks ([]) #=== KMeans === x = rgb_img . reshape ( - 1 , 3 ) model = KMeans ( K = K , random_state = 0 ) model . fit ( x ) cls , mu = model . predict ( x ) mu = mu . astype ( int ) for k in range ( K ): x [ cls == k ] = mu [ k ] # KMeansed Image. ax_K = fig . add_subplot ( 1 , 2 , 2 ) ax_K . imshow ( x . reshape ( img_shape )) ax_K . set_title ( f \"K= {K} \" ), ax_K . set_xticks ([]), ax_K . set_yticks ([]) n_col = 4 n_row = K // n_col if K % n_col ==0 else K//n_col+1 fig = plt . figure ( figsize = ( imgsize * n_col , imgsize * n_row )) for i , k in enumerate ( range ( K )): ax = fig . add_subplot ( n_row , n_col , i + 1 ) data = np . zeros ( shape = x . shape ) data [ cls == k ] = mu [ k ] ax . imshow ( data . astype ( int ) . reshape ( img_shape )) ax . set_title ( f \"Color No.{i+1:<0{len(str(K))}}, rgb=({','.join(mu[k].astype(int).astype(str))})\" ) ax . set_xticks ([]), ax . set_yticks ([]) plt . tight_layout () plt . show () In [4]: decomposeImg ( path = \"lenna.png\" , K = 8 ) mean-shift法 画像領域の分割や対象画像の追跡に用いられる手法。 $d$ 次元の特徴量（ex. $\\mathrm{R,G,B},x,y$）を持った $N$ 個のデータ点 $\\mathbf{x}_i$ が分布しているときに、この点群 $\\mathbf{x}_i$ を標本点として得られるような確率密度関数 $f(\\mathbf{x})$ を考え、その標本点から確率密度関数 $f(\\mathbf{x})$ の極大点を探索する手法。 点群が集中している場所は確率密度関数 $f(\\mathbf{x})$ の値が高く、まばらな場所は低くなる。 ある任意の観測点 $\\mathbf{y}_j$ から半径 $h$ の超球を考え、その範囲にある点群 $\\mathbf{x}_i$ の平均 $\\mathbf{x}_c$ を計算し、その位置に観測点 $\\mathbf{y}_{j+1}$ を移動する。 この操作を繰り返すと観測点は最大勾配の方向に移動し、やがて極大点に収束する。 このように、 「近傍の点群の平均(mean)位置に移動(shift)を繰り返し、極大点を求める方法」 から ミーンシフト法(mean-shift) と呼ばれる。 In [5]: fig , ax = plt . subplots ( figsize = ( 6 , 6 )) # Circle r = 0.7 c = patches . Circle ( xy = ( 0 , 0 ), radius = r , ec = 'black' , fill = False ) ax . add_patch ( c ) # Sample Data X , Y = np . random . RandomState ( 123 ) . uniform ( low =- 0.3 , high = 1 , size = ( 2 , 50 )) cls = np . sqrt ( X ** 2 + Y ** 2 ) < r ax . scatter ( X , Y , c = cls , cmap = \"Set1_r\" , alpha = 0.7 ) # Center ax . scatter ( 0 , 0 , color = \"black\" , s = 100 ) ax . text ( 0.05 , - 0.05 , \"$\\mathbf {y} _ {j} $\" , fontsize = 12 ) # Mean mux , muy = np . mean ( X [ cls ]), np . mean ( Y [ cls ]) ax . scatter ( mux , muy , color = \"black\" , marker = '*' , s = 100 ) ax . text ( mux + 0.05 , muy , \"$\\mathbf {x} _c(=\\mathbf {y} _{j+1})$\" , fontsize = 12 ) # Arrow ax . annotate ( '' , xy = ( mux , muy ), xytext = ( 0 , 0 ), arrowprops = dict ( width = 2 , headwidth = 8 , headlength = 10 , connectionstyle = 'arc3' , facecolor = 'blue' , edgecolor = 'blue' ) ) # Radius ax . plot (( 0 , 0 ),( 0 , - r ), color = \"black\" ) ax . text ( 0.05 , - r / 2 , \"r\" , fontsize = 12 ) ax . set_xlim ( - 1 , 1 ) ax . set_ylim ( - 1 , 1 ) plt . show () カーネル密度関数を用いた確率密度関数の推定 $d$ 次元空間内の $N$ 個の点群 $\\mathbf{x}_i$ を考える。この点群をある確率分布に従う標本と考えたとき、$d$ 次元空間内の任意の点 $\\mathbf{x}$ における確率密度関数 $f(\\mathbf{x})$ は、以下の方法で推定される。 $$f(\\mathbf{x}) = \\frac{c_{kd}}{Nh&#94;{d}}\\sum_{i=1}&#94;Nk\\left(\\left|\\frac{\\mathbf{x}-\\mathbf{x}_i}{h}\\right|&#94;2\\right)$$ $c_{hd}$ は、確率密度関数 $f(\\mathbf{x})$ 全体の積分を $1$ にするための正規化係数。 $k(t)$ は、カーネル関数 $K(t)$ の プロファイル で、$K(t)=k(|t|&#94;2)$ 以下の２つのカーネルが代表的である。 ガウシアンカーネル(Gaussian) エパネックニコフカーネル(Epanechnikov) $$K(t) = \\exp\\left(-\\frac{\\mid t\\mid&#94;2}{2}\\right)$$ $$K(t) = \\begin{cases}1- \\mid t\\mid&#94;2 & (\\mid t\\mid\\leq1)\\\\0 & (\\text{otherwise})\\end{cases}$$ 確率密度関数の勾配 勾配法(gradient method) を用いて極大点を逐次的に求めるために、確率密度関数の勾配 $\\nabla f(\\mathbf{x})$ を求める。 $$ \\begin{aligned} \\nabla f(\\mathbf{x}) &= \\frac{2c_{kd}}{Nh&#94;{d+2}}\\sum_{i=1}&#94;Nk'\\left(\\left|\\frac{\\mathbf{x}-\\mathbf{x}_i}{h}\\right|&#94;2\\right)\\left(\\mathbf{x}-\\mathbf{x}_i\\right)\\\\ &= \\frac{2c_{kd}}{Nh&#94;{d+2}}\\sum_{i=1}&#94;N\\left(g_i\\mathbf{x}_i-g_i\\mathbf{x}\\right), \\quad g(t) = -k'(t),g'(t)=g\\left(\\left|\\frac{\\mathbf{x}-\\mathbf{x}_i}{h}\\right|\\right)&#94;2\\\\ &= \\frac{2c_{kd}}{Nh&#94;{d+2}}\\left\\{\\sum_{i=1}&#94;Ng_i\\right\\}\\left\\{\\frac{\\sum_{i=1}&#94;Ng_i\\mathbf{x}_i}{\\sum_{i=1}&#94;Ng_i}-\\mathbf{x}\\right\\} \\end{aligned} $$ 項 説明 $$\\frac{2c_{kd}}{Nh&#94;{d+2}}\\left\\{\\sum_{i=1}&#94;Ng_i\\right\\}$$ ガウシアンカーネルやエパネックニコフカーネルを用いた場合、正になる。 $$\\left\\{\\frac{\\sum_{i=1}&#94;Ng_i\\mathbf{x}_i}{\\sum_{i=1}&#94;Ng_i}-\\mathbf{x}\\right\\}$$ ミーンシフト と呼ばれる項で、観測点 $\\mathbf{x}$ の近傍のデータ点群 $\\mathbf{x}_i$ の加重平均位置と $\\mathbf{x}$ 自身の差分ベクトルを示す。 勾配法を用いた極大点探索（ミーンシフト法） 初期化：$\\mathbf{y}_0\\leftarrow\\mathbf{x}$ 更新（ミーンシフト） $$\\mathbf{y}_{j+1}\\leftarrow \\mathbf{y}_j + \\left(\\frac{\\sum_{i=1}&#94;Ng_i\\mathbf{x}_i}{\\sum_{i=1}&#94;Ng_i}-\\mathbf{y}_j\\right) = \\frac{\\sum_{i=1}&#94;Ng_i\\mathbf{x}_i}{\\sum_{i=1}&#94;Ng_i}$$ $|\\mathbf{y}_{j+1}-\\mathbf{y}_j|<\\text{threshold}$ となるまで2を繰り返す。 収束した $\\mathbf{y}_{j+1}$ を極大点として出力する。 ※ 一般的な勾配法では、更新式 $\\mathbf{y}_{j+1}\\rightarrow\\mathbf{y}_i + \\alpha\\nabla f$ のステップ数 $\\alpha$ を与える必要があるが、ミーンシフト法では ベクトルの大きさは自動的に計算される ので、$\\alpha$ を与える必要がない（らしい…）。 ミーンシフト法を用いたクラスタリングへの応用 $d$ 次元空間中の $N$ 個の点群 $\\mathbf{x}_i$ が与えられた時に、密に分布する点群をクラスタとして分割する。 各点にミーンシフト法を適用し、収束位置 $\\mathbf{x}_i&#94;c$ を計算する。 任意の2個の点 $\\mathbf{x}_i,\\mathbf{x}_j$ について、その収束位置が閾値以下なら（$|\\mathbf{x}_i-\\mathbf{x}_j|<\\text{threshold}$）、この2点を同じ極大点として同じクラスタに入れる。 1,2より、全ての点群 $\\mathbf{x}_i$ を 同じ収束位置（極大点）に属するものごとにクラスタに識別する。 全ての点 $\\mathbf{x}_i$ でこの処理を行わなければならないが、並行化できる。 k-means手法とは異なり、クラスタの数を予め指定する必要がない。 ミーンシフト法を用いたカラー画像の領域分割 カラー画像の $N$ 個の各画素の位置 $\\mathbf{x}_i$ とその画素値 $\\mathbf{v}_i=\\left(R_i,G_i,B_i\\right)$ とし、画素位置-画素値を結合した5次元空間内の点 $\\mathbf{z}_i=(\\mathbf{x}_i,\\mathbf{v}_i)$ を考える。 「距離および色が近い画素が5次元空間内でクラスタを形成している」 とみて、ミーンシフト法で各画素をクラスタリングする。 画素位置に関するバンド幅 $h_s$、画素値に関するバンド幅 $h_r$ を与え、全ての $z_i$ にミーンシフトを行い、収束位置 $\\mathbf{z}&#94;c=(\\mathbf{x}&#94;c,\\mathbf{v}&#94;c)$ を計算する。 $\\mathbf{x}_i$ の画素値を、収束位置の画素の値 $(R&#94;c,G&#94;c,B&#94;c)$ に置き換えることによって、画像の平滑化ができる。 ミーンシフトは、以下の通り計算する。 $$f(\\mathbf{x}) = \\frac{c}{Nh_s&#94;2h_r&#94;3}\\sum_{i=1}&#94;Nk\\left(\\left|\\frac{\\mathbf{x}&#94;s-\\mathbf{x}&#94;s_i}{h_s}\\right|&#94;2\\right)k\\left(\\left|\\frac{\\mathbf{x}&#94;r-\\mathbf{x}&#94;r_i}{h_r}\\right|&#94;2\\right)$$ したがって、以下のとおりに位置を更新する。 $$\\mathbf{y}&#94;{s}_{j+1} = \\frac{\\sum_{i=1}&#94;Ng_{i}&#94;s\\mathbf{x}_i&#94;s}{\\sum_{i=1}&#94;Ng_i&#94;s},\\quad\\mathbf{y}&#94;{r}_{j+1} = \\frac{\\sum_{i=1}&#94;Ng_{i}&#94;r\\mathbf{x}_i&#94;r}{\\sum_{i=1}&#94;Ng_i&#94;r}$$ $(h_s,h_r)$ のパラメータを大きくすると、より大きな領域に同色が統合され、大まかに分割される。 In [6]: from sklearn.cluster import MeanShift In [7]: import time s = time . time () imgsize = 4 fig = plt . figure ( figsize = ( imgsize * 2 , imgsize * 1 )) path = \"lenna.png\" bgr_img = cv2 . imread ( path ) rgb_img = cv2 . cvtColor ( bgr_img , cv2 . COLOR_BGR2RGB ) img_shape = rgb_img . shape # Original Image. ax_org = fig . add_subplot ( 1 , 2 , 1 ) ax_org . imshow ( rgb_img ) ax_org . set_title ( f \"Original\" ), ax_org . set_xticks ([]), ax_org . set_yticks ([]) #=== MeanShift === x = rgb_img . reshape ( - 1 , 3 ) model = MeanShift () model . fit ( x ) cls = model . predict ( x ) mu = model . cluster_centers_ . astype ( int ) K = max ( cls ) + 1 for k in range ( K ): x [ cls == k ] = mu [ k ] # MeanShifted Image. ax_Mean = fig . add_subplot ( 1 , 2 , 2 ) ax_Mean . imshow ( x . reshape ( img_shape )) ax_Mean . set_title ( f \"n_cluster= {K} \" ), ax_Mean . set_xticks ([]), ax_Mean . set_yticks ([]) n_col = 4 n_row = K // n_col if K % n_col ==0 else K//n_col+1 fig = plt . figure ( figsize = ( imgsize * n_col , imgsize * n_row )) for i , k in enumerate ( range ( K )): ax = fig . add_subplot ( n_row , n_col , i + 1 ) data = np . zeros ( shape = x . shape ) data [ cls == k ] = mu [ k ] ax . imshow ( data . astype ( int ) . reshape ( img_shape )) ax . set_title ( f \"Color No.{i+1:<0{len(str(K))}}, rgb=({','.join(mu[k].astype(int).astype(str))})\" ) ax . set_xticks ([]), ax . set_yticks ([]) plt . tight_layout () e = time . time () print ( f \"Processing time: {int((e-s)//60):>02}m {(e-s)%60:.3f}s\" ) plt . show () Processing time: 31m 13.287s In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"映像メディア工学","url":"https://iwasakishuto.github.io/University/3A/映像メディア工学-2-2.html","loc":"https://iwasakishuto.github.io/University/3A/映像メディア工学-2-2.html"},{"title":"領域処理のための特徴量","text":"講師： 山崎俊彦 参考書： CG-ARTS協会発行「ディジタル画像処理」 参考書： R. Szeliski, Computer Vision Algorithms and Applications, Springer (PDF版はインターネット上で無料公開) 領域の特徴量 フーリエ変換 ガボールフィルタ(Gabor Filter) 同時生起確率 In [1]: import cv2 import numpy as np import matplotlib.pyplot as plt （２次元）フーリエ変換 画像は、フーリエ変換によって周波数領域における別の形で表現される。 フーリエ変換の結果は、画像に含まれるそれぞれの周波数成分を表している。 フーリエ変換後の各周波数成分の大きさを成分ごとに変えることにより、元の画像の性質を変えることができる。 （周波数フィルタリング(frequency filtering)） ローパスフィルタ(lowpass fileter) ：画像に含まれる空間周波数成分のうち、低周波数成分は残し、高周波数成分は除去するようなフィルタ。 ハイパスフィルタ(highpass filter) ：上の逆。高周波数成分は残し、低周波数成分を除去するようなフィルタ。 バンドパスフィルタ(bandpass filter) ：ある中間的な周波数の範囲を残すようなフィルタ。 高域強調フィルタ(high-emphasis filter) ：画像の低周波数成分はそのまま保ちつつ、高周波数成分を強調するフィルタ。 $1$ 次元フーリエ変換 簡単のため、まずは一次元フーリエ変換をみる。 名前 数式 説明 フーリエ変換 $$F(\\omega) = \\int_{-\\infty}&#94;{\\infty}f(t)e&#94;{-i\\omega t}dt$$ 数直線上の表現 （空間領域） から周波数による表現 （周波数領域） への変換 逆フーリエ変換 $$f(x) = \\int_{-\\infty}&#94;{\\infty}F(\\omega)e&#94;{i\\omega x}d\\omega$$ 周波数領域にある関数を元の空間領域に戻す変換 実装 二つの正弦波を重ねた波から、それぞれの成分を取り出すことができるか確かめる。なお、ここでは numpy.fft.fft を利用しています。 これは、 高速フーリエ変換(Fast Fourier Transform) と呼ばれる、 高速に「離散フーリエ変換」を行うアルゴリズム を実装したものです。 In [2]: N = 10000 dt = 0.01 time = np . arange ( 0 , N * dt , dt ) freq = np . linspace ( 0 , 1.0 / dt , N ) In [3]: def sin ( A , f , p ): \"\"\" @param A: Amplitude @param f: Frequency[Hz] @param p: phase \"\"\" func = lambda t : A * np . sin ( 2 * np . pi * f * t + p1 ) return func In [4]: # parameters f1 , f2 = 5 , 8 # frequency[Hz] A1 , A2 = 5 , 3 # Amplitude p1 , p2 = 0 , 1 / 2 * np . pi # phase In [5]: y1 = sin ( A1 , f1 , p1 )( time ) y2 = sin ( A2 , f2 , p2 )( time ) y = y1 + y2 # superposition In [6]: # Computes the discrete Fourier transform (DFT) of a sequence yf = np . fft . fft ( y ) / ( N / 2 ) # Fast Fourier transform. In [7]: fig = plt . figure ( figsize = ( 8 , 4 )) ax1 = fig . add_subplot ( 2 , 1 , 1 ) ax1 . set_ylabel ( \"amplitude\" ) ax1 . set_xlabel ( \"time\" ) ax1 . set_xlim ( 0 , 1 ) ax1 . plot ( time , y , label = \"y(y1+y2)\" , color = \"blue\" ) ax1 . plot ( time , y1 , label = f \"y1(A= {A1} ,f= {f1} )\" , alpha = 0.3 , color = \"green\" ) ax1 . plot ( time , y2 , label = f \"y2(A= {A2} ,f= {f2} )\" , alpha = 0.3 , color = \"red\" ) ax1 . axhline ( 0 , alpha = 0.3 , color = \"black\" ) ax1 . legend () ax2 = fig . add_subplot ( 2 , 1 , 2 ) ax2 . set_ylabel ( \"amplitude\" ) ax2 . set_xlabel ( \"frequency\" ) ax2 . set_xlim ( 0 , 10 ) ax2 . plot ( freq , abs ( yf ), color = \"blue\" ) plt . tight_layout () plt . show () 見事に、二つの周波数成分を取り出すことができました。 $2$ 次元フーリエ変換 ※ 一般に画像は2次元空間で定義されたある関数 $f(x,y)$ として表現することができる！ 名前 数式 フーリエ変換 $$F(u,v) = \\int_{-\\infty}&#94;{\\infty}\\int_{-\\infty}&#94;{\\infty}f(x,y)\\exp\\left\\{-j2\\pi\\left(ux+vy\\right)\\right\\}dxdy$$ 逆フーリエ変換 $$f(x,y) = \\int_{-\\infty}&#94;{\\infty}\\int_{-\\infty}&#94;{\\infty}F(u,v)\\exp\\left\\{j2\\pi\\left(ux+vy\\right)\\right\\}dudv$$ ここで、以下の値に注目することがよくある。 名前 数式 説明 振幅スペクトル(amplitude spectrum) $$\\mid F(u,v)\\mid = \\sqrt{\\mathrm{Re}\\left\\{F(u,v)\\right\\}&#94;2 + \\mathrm{Im}\\left\\{F(u,v)\\right\\}&#94;2}$$ 絶対値 位相スペクトル(phase spectrum) $$\\arg\\left\\{F(u,v)\\right\\} = \\tan&#94;{-1}\\frac{\\mathrm{Im}\\left\\{F(u,v)\\right\\}}{\\mathrm{Re}\\left\\{F(u,v)\\right\\}}$$ 偏角 パワースペクトル(power spectrum) $$\\mid F(u,v)\\mid&#94;2$$ In [8]: img = cv2 . imread ( 'lenna.png' , 0 ) f = np . fft . fft2 ( img ) fshift = np . fft . fftshift ( f ) magnitude_spectrum = 20 * np . log ( np . abs ( fshift )) plt . subplot ( 121 ), plt . imshow ( img , cmap = 'gray' ) plt . title ( 'Input Image' ), plt . xticks ([]), plt . yticks ([]) plt . xlabel ( 'x' ), plt . ylabel ( 'y' ) plt . subplot ( 122 ), plt . imshow ( magnitude_spectrum , cmap = 'gray' ) plt . title ( 'Magnitude Spectrum' ), plt . xticks ([]), plt . yticks ([]) plt . xlabel ( 'u' ), plt . ylabel ( 'v' ) plt . show () ガボールフィルタ(Gabor Filter) 正弦波とガウス関数の積で表される。（例：2次元ガボールフィルタ） $$g(x,y,\\lambda,\\phi) = \\exp\\left(-\\frac{x&#94;2+y&#94;2}{2\\sigma&#94;2}\\right)\\exp\\left(2\\pi\\lambda i\\left(x\\cos\\phi + y\\sin\\phi\\right)\\right)$$ 実数部： $$\\mathrm{Re}\\left\\{g(x,y,\\lambda,\\phi)\\right\\} = \\exp\\left(-\\frac{x&#94;2+y&#94;2}{2\\sigma&#94;2}\\right)\\cos\\left(2\\pi\\lambda i\\left(x\\cos\\phi + y\\sin\\phi\\right)\\right)$$ 虚数部： $$\\mathrm{Im}\\left\\{g(x,y,\\lambda,\\phi)\\right\\} = \\exp\\left(-\\frac{x&#94;2+y&#94;2}{2\\sigma&#94;2}\\right)\\sin\\left(2\\pi\\lambda i\\left(x\\cos\\phi + y\\sin\\phi\\right)\\right)$$ フーリエ変換では、所望の周波数成分が領域のどこにあるのかわからないのに対し、ガボールフィルタは、 「領域のどの位置にどの方向の周波数が、どの強度であるか」 を知ることができる。 パラメータを操作して様々な方向と強度を持つフィルタ （フィルタバンク(filter bank)） を多数準備 し、特徴抽出を行う。また、ここで抽出された特徴量群は texton と呼ばれる。 入力された画像に対してガボールフィルタを畳み込んで（たたみ込み＝二次元の内積＝類似度を反映）、特徴量 $G(x,y,\\lambda,\\phi)$ を求める式は以下となる。 $$G(x,y,\\lambda,\\phi) = \\sum_u\\sum_vI(x,y)\\ast g(x-u, y-v, \\lambda, \\phi)$$ OpenCVの cv2.getGaborKerne を用いることで簡単にガボールフィルタを生成することができる、 引数 説明 ksize Size of the filter returned. sigma Standard deviation of the gaussian envelope. theta Orientation of the normal to the parallel stripes of a Gabor function. lambd Wavelength of the sinusoidal factor. gamma Spatial aspect ratio. psi Phase offset. In [9]: default_gabor = { \"ksize\" : ( 50 , 50 ), \"sigma\" : 4 , \"theta\" : 0 , \"lambd\" : 10 , \"gamma\" : 0.5 , \"psi\" : 0 , } In [10]: gabor = cv2 . getGaborKernel ( ** default_gabor ) plt . imshow ( gabor , cmap = \"gray\" ) plt . title ( \"default\" ) plt . show () In [11]: def argsGaborRelation ( key , vals ): global default_gabor defaul_val = default_gabor [ key ] N = len ( vals ) n_col = 4 n_row = N // n_col if N % n_col ==0 else N//n_col+1 fig = plt . figure ( figsize = ( 4 * n_col , 4 * n_row )) for i , val in enumerate ( vals ): ax = fig . add_subplot ( n_row , n_col , i + 1 ) default_gabor [ key ] = val gabor = cv2 . getGaborKernel ( ** default_gabor ) ax . imshow ( gabor , cmap = \"gray\" ) ax . set_title ( f \" {key} = {val} \" ) ax . set_xticks ([]), ax . set_yticks ([]) plt . show () default_gabor [ key ] = defaul_val In [12]: argsGaborRelation ( key = \"ksize\" , vals = [( 30 , 30 ),( 20 , 40 ),( 40 , 20 ),( 50 , 50 )]) In [13]: argsGaborRelation ( key = \"sigma\" , vals = [ x for x in range ( 8 )]) In [14]: argsGaborRelation ( key = \"theta\" , vals = [ np . radians ( x ) for x in range ( 0 , 180 , 45 )]) In [15]: argsGaborRelation ( key = \"gamma\" , vals = [ x for x in range ( 4 )]) In [16]: argsGaborRelation ( key = \"psi\" , vals = [ np . radians ( x ) for x in range ( 0 , 360 , 45 )]) In [17]: img = cv2 . imread ( 'lenna.png' , 0 ) color_img = cv2 . imread ( 'lenna.png' ) In [18]: def argsGaborSuperposition ( key , vals ): global default_gabor , img defaul_val = default_gabor [ key ] N = len ( vals ) * 2 n_col = 8 n_row = N // n_col if N % n_col ==0 else N//n_col+1 fig = plt . figure ( figsize = ( 4 * n_col , 4 * n_row )) dests = 0 for i , val in enumerate ( vals ): default_gabor [ key ] = val gabor = cv2 . getGaborKernel ( ** default_gabor ) dest = cv2 . filter2D ( img , cv2 . CV_32F , gabor ) dests += dest ax_dst = fig . add_subplot ( n_row , n_col , 2 * i + 1 ) ax_dst . imshow ( np . power ( dest , 2 ), cmap = \"gray\" ), ax_dst . set_xticks ([]), ax_dst . set_yticks ([]) ax_gab = fig . add_subplot ( n_row , n_col , 2 * i + 2 ) ax_gab . imshow ( gabor , cmap = \"gray\" ), ax_gab . set_xticks ([]), ax_gab . set_yticks ([]) # Superposition fig = plt . figure ( figsize = ( 8 , 16 )) ax_org = fig . add_subplot ( 1 , 2 , 1 ) ax_org . imshow ( cv2 . cvtColor ( color_img , cv2 . COLOR_BGR2RGB )) ax_org . set_title ( \"original image\" ), ax_org . set_xticks ([]), ax_org . set_yticks ([]) ax_dst = fig . add_subplot ( 1 , 2 , 2 ) ax_dst . imshow ( dests , cmap = \"gray\" ) ax_dst . set_title ( f \"Superposition of dst (key= {key} )\" ), ax_dst . set_xticks ([]), ax_dst . set_yticks ([]) plt . show () default_gabor [ key ] = defaul_val In [19]: argsGaborSuperposition ( key = \"theta\" , vals = [ np . radians ( x ) for x in np . linspace ( 0 , 180 , 8 )]) ※ 入力画像の８分割した全ての方向のエッジを重ね合わせると、元の画像をかなり高い精度で復元していることがわかる。 同時生起確率 テクスチャの統計的特徴量を求める。 離れた２つの場所にある画素対の値から、画素値の 一様性 ・ 方向性 ・ コントラスト などの性質を表す特徴量を求める。 ある画素 $i$ と、$i$ から離れた位置にある画素 $j$ の画素対を考え、画素 $i$ と画素 $j$ の相対的な位置を $\\delta=\\langle d,\\theta\\rangle$ とする。 それぞれの画素値を $L_i,L_j$ とし、画素値の対 $(L_i,L_j)$ が生じる出現頻度で、ある同時生起行列 $\\mathbf{H}_{\\delta}(L_i,L_j)$ を考える。ここで、出現頻度の総数で $\\mathbf{H}_{\\delta}(L_1,L_2)$ を正規化し、確率に変換した同時生起行列を $\\mathbf{P}_{\\delta}(L_i,L_j)$ とする。 確率に変換した同時生起行列を用いて計算する主な特徴量には次の $7$ 種類がある。（ここで、画素値のレベル数は $L$ である。）他にも様々な統計量を計算できるが、テクスチャの物理的な意味と直接には結びつかない数値もある。 $$ \\begin{aligned} \\mathrm{ENR} &= \\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}\\left\\{P_{\\delta}(L_i,L_j)\\right\\}&#94;2 & (\\text{energy})\\\\ \\mathrm{CNT} &= \\sum_{k=0}&#94;{L-1}k&#94;2P_{x-y}(k) & (\\text{contrast})\\\\ \\mathrm{CRR} &= \\frac{\\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}L_iL_jP_{\\delta}(L_i,L_j) - \\mu_x\\mu_y}{\\delta_x\\delta_y} & (\\text{correlation})\\\\ \\mathrm{VAR} &= \\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}\\left(L_i-\\mu_x\\right)&#94;2P_{\\delta}(L_i,L_j) & (\\text{variance})\\\\ \\mathrm{EPY} &= -\\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}P_{\\delta}(L_i,L_j)\\log\\left\\{P_{\\delta}(L_i,L_j)\\right\\} & (\\text{entropy})\\\\ \\mathrm{SEP} &= -\\sum_{k=0}&#94;{2L-2}P_{x+y}(k)\\log\\left\\{P_{x+y}(k)\\right\\} & (\\text{sum entropy})\\\\ \\mathrm{IDM} &= \\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}\\frac{1}{1+(L_i-L_j)&#94;2}P_{\\delta}(L_i,L_j) & (\\text{inverse difference moment})\\\\ \\end{aligned} $$ ただし、 $$ \\mu_x = \\sum_{L_i=0}&#94;{L-1}L_iP_x(L_i), \\quad \\mu_y = \\sum_{L_j=0}&#94;{L-1}L_jP_y(L_j)\\\\ \\delta_x&#94;2 = \\sum_{L_i=0}&#94;{L-1}(L_i-\\mu_x)&#94;2P_x(L_i), \\quad \\delta_y&#94;2 = \\sum_{L_j=0}&#94;{L-1}(L_j-\\mu_y)&#94;2P_y(L_j)\\\\ P_x(L_i) = \\sum_{L_j=0}&#94;{L-1}P_{\\delta}(L_i,L_j), \\quad P_y(L_j) = \\sum_{L_i=0}&#94;{L-1}P_{\\delta}(L_i,L_j)\\\\ P_{x-y}(k) = \\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}P_{\\delta}(L_i,L_j)\\quad |L_i-L_j|= k\\\\ P_{x+y}(k) = \\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}P_{\\delta}(L_i,L_j)\\quad |L_i+L_j|= k\\\\ $$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"映像メディア工学","url":"https://iwasakishuto.github.io/University/3A/映像メディア工学-2-1.html","loc":"https://iwasakishuto.github.io/University/3A/映像メディア工学-2-1.html"},{"title":"主成分分析(PCA)","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) 主成分分析(PCA) 次元削減・非可逆データ圧縮・特徴抽出・データの可視化などに使われる。 主部分空間(principal subspace) と呼ばれる低次元の線形空間の上への、データ点の直交射影として、以下の2つの定義方法がある。 「射影されたデータの分散が最大化されるような直交射影」 として定義。→ 分散最大化による定式化 「データ点と射影した点の間の2乗距離の平均値で定義される 射影コスト関数 の期待値を最小化するような線形射影」 として定義。（要はデータ点からの距離を最小化）→ 誤差最小化による定式化 Pythonによる実装 分散最大化による定式化 次元 $D$ のユークリッド空間内のデータ集合 $\\{\\mathbf{x}_n\\}(n=1,\\ldots,N)$ を考える。ここで、 「射影されたデータ点の分散を最大化しながら、データを次元 $M ことを考える。 1次元空間の上への射影（$M=1$） この空間の方向を $D$ 次元ベクトル $\\mathbf{u}_1$ として表す。ここで、興味があるのは $\\mathbf{u}_1$ の方向だけであるので、$\\mathbf{u}_1&#94;T\\mathbf{u}_1 = 1$ としても一般性を失わない。 したがって、各データ点 $\\mathbf{x}_n$ は スカラー値 $\\mathbf{u}_1&#94;T\\mathbf{x}_n$ の上に射影される。ここで、射影されたデータの平均・分散は以下のようになる。 統計量 平均値 $$\\mathbf{u}_1&#94;T\\bar{\\mathbf{x}}\\qquad\\bar{\\mathbf{x}} = \\frac{1}{N}\\sum_{n=1}&#94;N\\mathbf{x}_n\\qquad (12.1)$$ 分散 $$\\mathbf{u}_1&#94;T\\mathbf{Su}_1\\qquad\\mathbf{S} = \\frac{1}{N}\\sum_{n=1}&#94;N\\left(\\mathbf{x}_n-\\bar{\\mathbf{x}}\\right)\\left(\\mathbf{x}_n-\\bar{\\mathbf{x}}\\right)&#94;T\\qquad (12.3)$$ ここで、 射影されたデータの分散を、$\\mathbf{u}_1$ に関して最大化 することを考える。 制約条件 $\\mathbf{u}_1&#94;T\\mathbf{u}_1 = 1$ をラグランジュ乗数 $\\lambda_1$ を利用して導入して $$\\mathbf{u}_1&#94;T\\mathbf{Su}_1 + \\lambda_1\\left(1-\\mathbf{u}&#94;T_1\\mathbf{u}_1\\right)\\qquad (12.4)$$ を最大化すれば良い。$\\mathbf{u}_1$ に関する微分を $0$ とおくことにより、停留条件は $$\\mathbf{Su}_1 = \\lambda_1\\mathbf{u}_1\\qquad (12.5)$$ となることがわかる。これは、 $\\mathbf{u}_1$ が $\\mathbf{S}$ の固有ベクトルであること を示している。左から $\\mathbf{u}&#94;T_1$ をかけると、 $$\\text{Variance} = \\mathbf{u}&#94;T_1\\mathbf{Su}_1 = \\lambda_1 \\qquad (12.6)$$ となる。よって、 分散は $\\mathbf{u}_1$ を、最大固有値 $\\lambda_1$ に属する固有ベクトルに選んだ時に最大になる ことがわかる。 $M$ 次元空間の上への射影（一般解） 演習12.1 帰納法を用いて、 射影されたデータの分散を最大化するようなM次元部分空間の上への線形写像が、データ共分散行列Sの上位M個の固有値に属するM本の固有ベクトルによって定義される ことを示す。 仮定 $M$ に対して上記が成り立つ。 データ空間に対する新しい方向ベクトル $\\mathbf{u}_{M+1}$ は、次を満たす。 $\\mathbf{u}_{M+1}$ は、$\\mathbf{u}_1,\\ldots,\\mathbf{u}_M$ と直交する。（$\\mathbf{u}_{M+1}&#94;T\\mathbf{u}_{j}=0$） 単位長に規格化されている。（$\\mathbf{u}_{M+1}&#94;T\\mathbf{u}_{M+1}=1$） 制約条件を踏まえると、 $$L = \\sum_{i=1}&#94;{M+1}\\mathbf{u}&#94;T_i\\mathbf{Su}_i + \\lambda_{M+1}\\left(1-\\mathbf{u}&#94;T_{M+1}\\mathbf{u}_{M+1}\\right) + \\sum_{j=1}&#94;M\\lambda&#94;{\\prime}_j\\mathbf{u}_{M+1}&#94;T\\mathbf{u}_j$$ 両辺を $\\mathbf{u}_{M+1}$ で微分すると、 $$0 = \\frac{\\partial L}{\\partial \\mathbf{u}_{M+1}} = 2\\left(\\mathbf{Su}_{M+1} - \\lambda_{M+1}\\mathbf{u}_{M+1}\\right) + \\sum_{j=1}&#94;M\\lambda&#94;{\\prime}_j\\mathbf{u}_j\\cdots(\\ast)$$ これに左から $\\mathbf{u}&#94;T_{j}$ をかけると、 $$0 = \\lambda&#94;{\\prime}_j\\quad(\\because \\mathbf{u}_{M+1}&#94;T\\mathbf{u}_{j}=0)$$ となるので、これを $(\\ast)$ に代入して、 $$\\mathbf{Su}_{M+1} = \\lambda_{M+1}\\mathbf{u}_{M+1}$$ また、この時分散は $$\\begin{aligned} \\sum_{i=1}&#94;{M+1}\\mathbf{u}&#94;T_i\\mathbf{Su}_i &= \\sum_{i=1}&#94;{M}\\mathbf{u}&#94;T_i\\mathbf{Su}_i + \\mathbf{u}&#94;T_{M+1}\\mathbf{Su}_{M+1}\\\\ &= \\sum_{i=1}&#94;{M}\\lambda_i + \\lambda_{M+1} \\end{aligned}$$ ここで、仮定より $\\lambda_i$ は、データ共分散行列 $\\mathbf{S}$ の上位 $M$ 個の固有値なので、この分散を最大する $\\lambda_{M+1}$ は、$M+1$ 番目に大きい固有値となる。 誤差最小化による定式化 続いて、射影誤差の最小化に基づいた主成分分析の定式化を考える。 まず、$D$ 次元の基底ベクトル $\\{\\mathbf{u}_i\\}$ から成る完全正規直交系を導入する。（$\\mathbf{u}_i&#94;T\\mathbf{u}_i = \\delta_{ij}$） すると、各データ点はこれらの基底ベクトルの線形結合なので、以下の形で表すことができる。 $$\\mathbf{x}_n = \\sum_{i=1}&#94;D\\alpha_{ni}\\mathbf{u}_i\\qquad (12.8)$$ なお、ここで式 $(12.8)$ は、各データ点 $\\{\\mathbf{x}_n\\}$ を、もともとの座標系から $\\{\\mathbf{u}_i\\}$ で表される新しい座標系への回転を表していると解釈できる （もともと $D$ 個の成分 $\\{x_{n1},\\ldots,x_{nD}\\}$ が、等価な集合 $\\{a_{n1},\\ldots,a_{nD}\\}$ に置き換えられている） 。 上式と $\\mathbf{u}_j$ との内積を取り、正規直交性を使うと、$\\alpha_{nj} = \\mathbf{x}_n&#94;T\\mathbf{u}_j$ を得るので、 $$\\mathbf{x}_n = \\sum_{i=1}&#94;D\\left(\\mathbf{x}_n&#94;T\\mathbf{u}_i\\right)\\mathbf{u}_i\\qquad (12.9)$$ $D$ 次元から $M$ 次元への近似 ここで、$M （$M$ 次元空間で完全に $\\mathbf{x}_n$ を表現するのは一般に不可能なので、近似する。） したがって、各データ点を $$\\tilde{\\mathbf{x}}_n = \\sum_{i=1}&#94;Mz_{ni}\\mathbf{u}_i+\\sum_{i=M+1}&#94;Db_i\\mathbf{u}_i\\qquad (12.10)$$ $\\{z_{ni}\\}$ は特定のデータ点に依存。 $\\{b_i\\}$ は全てのデータ点に共通な定数。 と近似して表す。つまり、 $\\{\\mathbf{u}_i\\}$ と $\\{z_{ni}\\}$ と $\\{b_i\\}$ を調整することで、次元が減ることによってもたらされる歪みを最小化すること がここでの目的となる。 近似による歪み尺度 $J$ 近似による歪みの尺度として、元々のデータ点 $\\mathbf{x}_n$ とその近似 $\\tilde{\\mathbf{x}}_n$ の間の2乗距離をデータ集合に渡って平均したものを採用する。 $$\\begin{aligned} J &= \\frac{1}{N}\\sum_{n=1}&#94;N\\|\\mathbf{x}_n-\\tilde{\\mathbf{x}}_n\\|&#94;2\\qquad (12.11)\\\\ &= \\frac{1}{N}\\sum_{n=1}&#94;N\\left\\|\\mathbf{x}_n-\\left(\\sum_{i=1}&#94;Mz_{ni}\\mathbf{u}_i+\\sum_{i=M+1}&#94;Db_i\\mathbf{u}_i\\right)\\right\\|&#94;2 \\end{aligned}$$ そこで、各変数についての微分を $0$ としてこれを最小化する変数を求める。 $\\{z_{ni}\\}$ に対する最小化 $$ \\begin{aligned} \\frac{\\partial J}{\\partial z_{ni}} &= \\frac{1}{N}\\sum_{n=1}&#94;N\\frac{\\partial}{\\partial z_{ni}}\\left\\{\\left\\|\\sum_{i=1}&#94;Mz_{ni}\\mathbf{u}_i\\right\\|&#94;2 -2\\left(\\mathbf{x}_n-\\sum_{i=M+1}&#94;Db_i\\mathbf{u}_i\\right)&#94;T\\left(\\sum_{i=1}&#94;Mz_{ni}\\mathbf{u}_i\\right) + C \\right\\}\\\\ &= \\frac{1}{N}\\sum_{n=1}&#94;N\\frac{\\partial}{\\partial z_{ni}}\\left\\{\\sum_{i=1}&#94;Mz_{ni}&#94;2-2\\sum_{i=1}&#94;Mz_{ni}\\mathbf{x}_n&#94;T\\mathbf{u}_i\\right\\}\\\\ &= \\frac{1}{N}\\sum_{n=1}&#94;N\\sum_{i=1}&#94;M2\\left\\{z_{ni}-\\mathbf{x}_n&#94;T\\mathbf{u}_i\\right\\} = 0\\\\ \\therefore z_{ni}&#94;{\\star} &= \\mathbf{x}_n&#94;T\\mathbf{u}_i \\qquad (12.12) \\end{aligned} $$ $b_i$ に対する最小化 $$ \\begin{aligned} \\frac{\\partial J}{\\partial b_{i}} &= \\frac{1}{N}\\sum_{n=1}&#94;N\\frac{\\partial}{\\partial b_{i}}\\left\\{\\left\\|\\sum_{i=M+1}&#94;Db_{i}\\mathbf{u}_i\\right\\|&#94;2 -2\\left(\\mathbf{x}_n-\\sum_{i=1}&#94;Mz_{ni}\\mathbf{u}_i\\right)&#94;T\\left(\\sum_{i=M+1}&#94;Db_{i}\\mathbf{u}_i\\right) + C \\right\\}\\\\ &= \\frac{1}{N}\\sum_{n=1}&#94;N\\frac{\\partial}{\\partial b_{i}}\\left\\{\\sum_{i=M+1}&#94;Db_{i}&#94;2-2\\sum_{i=M+1}&#94;Db_{i}\\mathbf{x}_n&#94;T\\mathbf{u}_i\\right\\}\\\\ &= \\frac{1}{N}\\sum_{n=1}&#94;N\\sum_{i=M+1}&#94;D2\\left\\{b_{i}-\\mathbf{x}_n&#94;T\\mathbf{u}_i\\right\\} = 0\\\\ \\therefore b_{i}&#94;{\\star} &= \\bar{\\mathbf{x}}_n&#94;T\\mathbf{u}_i \\qquad (12.13) \\end{aligned} $$ $J$ の整頓 ここで、$(12.10)$ の $z_{ni},b_i$ を置き換えると、 $$ \\begin{aligned} \\mathbf{x}_n-\\tilde{\\mathbf{x}}_n &= \\mathbf{x}_n-\\left(\\sum_{i=1}&#94;M\\mathbf{x}_n&#94;T\\mathbf{u}_i\\mathbf{u}_i + \\sum_{i=M+1}&#94;D\\bar{\\mathbf{x}}&#94;T\\mathbf{u}_i\\mathbf{u}_i\\right)\\\\ &= \\sum_{i=1}&#94;D\\mathbf{x}_n&#94;T\\mathbf{u}_i\\mathbf{u}_i - \\left(\\sum_{i=1}&#94;M\\mathbf{x}_n&#94;T\\mathbf{u}_i\\mathbf{u}_i + \\sum_{i=M+1}&#94;D\\bar{\\mathbf{x}}&#94;T\\mathbf{u}_i\\mathbf{u}_i\\right)\\\\ &= \\sum_{i=M+1}&#94;D\\left\\{\\left(\\mathbf{x}_n-\\bar{\\mathbf{x}}\\right)&#94;T\\mathbf{u}_i\\right\\}\\mathbf{u}_i\\qquad (12.14) \\end{aligned} $$ と表すことができる。この式から、 $\\tilde{\\mathbf{x}}_n$ から $\\mathbf{x}_n$ への変位を表すベクトルは、主部分空間に直交する空間にあることがわかる。 以上より、歪み尺度 $J$ に対する表現を、純粋に $\\{\\mathbf{u}_i\\}$ の関数として、以下のような形で得られることがわかる。 $$J = \\frac{1}{N}\\sum_{n=1}&#94;N\\sum_{i=M+1}&#94;D\\left(\\mathbf{x}_n&#94;T\\mathbf{u}_i-\\bar{\\mathbf{x}}&#94;T\\mathbf{u}_i\\right)&#94;2 = \\sum_{i=M+1}&#94;D\\mathbf{u}&#94;T_i\\mathbf{Su}_i\\qquad (12.15)$$ したがって、あとは$J$ を $\\{\\mathbf{u}_i\\}$ に対して最小化すれば良い。 $M=1,D=2$ の場合 $M=1,D=2$ の場合、 「規格化条件 $\\mathbf{u}&#94;T_2\\mathbf{u}_2 = 1$ の下で、方向 $\\mathbf{u}_2$ を、$J=\\mathbf{u}&#94;T_2\\mathbf{Su}_2$ が最小化されるように選ぶ」 問題となる。 つまり、ラグランジュ乗数を用いて、 $$\\tilde{J} =\\mathbf{u}&#94;T_2\\mathbf{Su}_2 + \\lambda_2\\left(1-\\mathbf{u}&#94;T_2\\mathbf{u}_2\\right)\\qquad (12.16)$$ を最小化する問題となる。 $\\mathbf{u}_i$ についての微分を $0$ とおくと、$\\mathbf{Su}_2 = \\lambda_2\\mathbf{u}_2$ を得る。つまり、$\\mathbf{u}_2$ は固有値 $\\lambda_2$ に属する $\\mathbf{S}$ の固有ベクトルであるので、 任意の固有ベクトルは、この歪み尺度の停留点を定義することとなる。 $(12.16)$ に $\\mathbf{Su}_2 = \\lambda_2\\mathbf{u}_2$ を代入すると、$J=\\lambda_2$ となる。ゆえに、 「$\\mathbf{u}_2$ を、2つある固有値のうち小さい方に対応した固有ベクトルを選ぶことにより、$J$ の最小値を得ることができる」 （↔︎ 主部分空間では大きい方 ） 任意の $D$ と任意の $M 任意の $D$ と任意の $M $$\\mathbf{Su}_i = \\lambda_i\\mathbf{u}_i\\qquad (12.17)$$ で与えられる共分散行列の固有ベクトルに選ぶことによって得られる。ここで $i=1,\\ldots,D$ であり、固有ベクトル $\\{\\mathbf{u}_i\\}$ は正規直交するように選ばれる。 また、対応する歪み尺度の値は、 $$J = \\sum_{i=M+1}&#94;D\\lambda_i\\qquad (12.18)$$ のように、 主部分空間に直交する固有ベクトルの固有値についての単なる和 で与えられる。したがって、$J$ の最小値は、小さい順から $D-M$ 個の固有値に対応する固有ベクトルを選ぶことによって得られ、つまり主部分空間を定義する固有ベクトルは大きい順から $M$ 個の固有値に対応する固有ベクトルになる。 実装 Wine Data Set (UCI Machine Learning Repository) のデータを利用し、13次元、178データ、3種類のワインの属性データから、2つの主成分を取って可視化を行います。 また、PCAは自作のモジュール （ kerasy.ML.decomposition.PCA ） を用います。 In [1]: # データ取得。 ! wget https://raw.githubusercontent.com/maskot1977/ipython_notebook/master/toydata/wine.txt --2019-10-07 13:20:45-- https://raw.githubusercontent.com/maskot1977/ipython_notebook/master/toydata/wine.txt Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.228.133 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.228.133|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 12173 (12K) [text/plain] Saving to: `wine.txt' wine.txt 100%[===================>] 11.89K --.-KB/s in 0s 2019-10-07 13:20:45 (40.4 MB/s) - `wine.txt' saved [12173/12173] In [2]: from kerasy.ML.decomposition import PCA In [3]: import numpy as np import pandas as pd import matplotlib.pyplot as plt from matplotlib.colors import LinearSegmentedColormap In [4]: colors = [( 1 , 0 , 0 ), ( 0 , 0 , 1 ), ( 0 , 1 , 0 )] n_bin = len ( colors ) cmap_name = 'my_list' cm = LinearSegmentedColormap . from_list ( cmap_name , colors , N = n_bin ) In [5]: df = pd . read_csv ( \"wine.txt\" , sep = \" \\t \" , index_col = 0 ) In [6]: df . head ( 3 ) Out[6]: .dataframe thead tr:only-child th { text-align: right; } .dataframe thead th { text-align: left; } .dataframe tbody tr th { vertical-align: top; } class Alcohol Malic acid Ash Alcalinity of ash Magnesium Total phenols Flavanoids Nonflavanoid phenols Proanthocyanins Color intensity Hue OD280/OD315 of diluted wines Proline 0 1 14.23 1.71 2.43 15.6 127 2.80 3.06 0.28 2.29 5.64 1.04 3.92 1065 1 1 13.20 1.78 2.14 11.2 100 2.65 2.76 0.26 1.28 4.38 1.05 3.40 1050 2 1 13.16 2.36 2.67 18.6 101 2.80 3.24 0.30 2.81 5.68 1.03 3.17 1185 class カラムがワインの種類を表しているので、この列は主成分分析から取り除きます。 In [7]: cls = df . iloc [:, 0 ] . values In [8]: df_use = df . iloc [:, 1 :] また、 データの標準化 を行います。 In [9]: df_std = df_use . apply ( lambda x : ( x - x . mean ()) / x . std (), axis = 0 ) In [10]: data = np . array ( df_std ) データの準備ができたので、主成分分析を行います。 In [11]: pca = PCA () pca . fit ( data ) features = pca . transform ( data ) In [12]: plt . figure ( figsize = ( 6 , 6 )) plt . scatter ( features [:, 0 ], features [:, 1 ], c = cls , cmap = cm , edgecolors = 'black' ) plt . title ( \"Same fig with slide :)\" ) plt . xlabel ( \"PC1\" ) plt . ylabel ( \"PC2\" ) plt . grid () plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-2.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-2.html"},{"title":"Nussinov Algorithm","text":"Nussinov Algorithmは、最もシンプルな二次構造予測アルゴリズムである。 「最大いくつの塩基対を作ることができるか」 を調べる。 動的計画法を用いて効率的に調べるために、以下のような Pseudoknot は無視している。様々な重要なRNAが、Pseudoknotの形をとることが確認されているが、相対的にこのような構造をとる確率は低いので、計算の効率を優先し、これらを無視する。 Algorithm ※「$i$ から $j$ までの部分塩基配列で最大幾つの塩基対が作れるか」 を $\\gamma(i,j)$ が保持している。 今回の実装では $j-i-1<3$ の時は、$i,j$ が塩基対を作れないものとしている。 ポイントはRecursionの最後の式で、 「$i$ から $k$ までの部分塩基配列」 と 「$k+1$ から $j$ までの部分塩基配列」 を足し合わせる操作を行う。 （Bifurcation） Initialization: $$\\begin{aligned} \\gamma(i,i)&=0&\\text{ for }i=1\\text{ to }L\\\\ \\gamma(i,i-1)&=0&\\text{ for }i=2\\text{ to }L \\end{aligned}$$ Recursion: $$ \\gamma(i,j) = \\max \\begin{cases} \\gamma(i+1,j)\\\\ \\gamma(i,j-1)\\\\ \\gamma(i+1,j-1)+\\delta(i,j)\\\\ \\max_{i\\leq k\\verb|<|j}\\left[\\gamma(i,k) + \\gamma(k+1,j)\\right] \\end{cases} $$ TraceBack 基本的なアルゴリズムは同じですが、 Bifurcationが起きた際にトレースバックポインターを複数用意する必要があることには注意が必要です。 bp = [] stack = [( 0 , N - 1 )] while ( stack ): i , j = stack . pop ( 0 ) delta = 1 if self . _is_bp ( sequence [ i ], sequence [ j ]) and ( j - i > 3 ) else 0 if ( i >= j ): continue elif gamma [ i + 1 ][ j ] == gamma [ i ][ j ]: stack . append (( i + 1 , j )) elif gamma [ i ][ j - 1 ] == gamma [ i ][ j ]: stack . append (( i , j - 1 )) elif gamma [ i + 1 ][ j - 1 ] + delta == gamma [ i ][ j ]: bp . append (( i , j )); stack . append (( i + 1 , j - 1 )) else : # Bifurcation for k in range ( i , j ): if gamma [ i ][ k ] + gamma [ k + 1 ][ j ] == gamma [ i ][ j ]: stack . append (( k + 1 , j )) stack . append (( i , k )) break 自作のモジュール （kerasy.Bio.structure.Nussinov） を使って実装します。 In [1]: from kerasy.Bio.structure import Nussinov In [2]: model = Nussinov () In [3]: # 以下の形のパラメタファイルを受け取ります。 ! cat params.json { \"type\": \"DNA\", \"Watson_Crick\": true, \"Wobble\": true } In [4]: model . load_params ( \"params.json\" ) In [5]: model . params () | parameter |value| -------------------- |type | DNA| |Watson_Crick| 1| |Wobble | 1| In [6]: # サンプル配列 sequence = \"GCGGAAACGGGGTCA\" In [7]: # 最大ペアの配列 model . predict ( sequence , memorize = True , traceback = True ) Nussinov Algorithm Score: 3 ================================================================= seq: GCGGAAACGGGGTCA : ( (( ))) ================================================================= In [8]: gamma = model . gamma In [9]: # DP行列は以下のようになっています。 model . _printAsTerai ( gamma , sequence ) \\ G C G G A A A C G G G G T C A G 0 0 0 0 0 0 0 1 2 2 2 2 2 3 3 C - 0 0 0 0 0 0 1 2 2 2 2 2 3 3 G - - 0 0 0 0 0 1 1 1 1 1 2 3 3 G - - - 0 0 0 0 1 1 1 1 1 2 3 3 A - - - - 0 0 0 0 0 0 0 1 2 2 2 A - - - - - 0 0 0 0 0 0 1 2 2 2 A - - - - - - 0 0 0 0 0 1 2 2 2 C - - - - - - - 0 0 0 0 1 1 1 1 G - - - - - - - - 0 0 0 0 0 1 1 G - - - - - - - - - 0 0 0 0 1 1 G - - - - - - - - - - 0 0 0 0 0 G - - - - - - - - - - - 0 0 0 0 T - - - - - - - - - - - - 0 0 0 C - - - - - - - - - - - - - 0 0 A - - - - - - - - - - - - - - 0 $i,j$ が塩基対を組むときの塩基対最大化 塩基 $i,j$ が塩基対を組むという制約がある場合を考えます。これは、「$i$ から $j$ までの部分塩基配列を除いた残りで最大幾つの塩基対が作れるか」 を保持した $\\omega(i,j)$ と $\\gamma(i,j)$ を組み合わせることで効率的に求めることができます。 Algorithm 「$i$ から $j$ までの部分塩基配列で最大幾つの塩基対が作れるか」 を $\\gamma(i,j)$ が保持している。 「$i$ から $j$ までの部分塩基配列を除いた残りで最大幾つの塩基対が作れるか」 を $\\omega(i,j)$ が保持している。 Initialization: $$\\omega(i,L) = 0$$ Recursion: $$ \\omega(i,j) = \\max \\begin{cases} \\omega(i-1,j)\\\\ \\omega(i,j+1)\\\\ \\omega(i-1,j+1)+\\delta(i-1,j+1)\\\\ \\max_{1\\leq k\\verb|<|i}\\left[\\omega(k,j) + \\gamma(k,i-1)\\right]\\\\ \\max_{j\\verb|<| k\\leq L}\\left[\\omega(j+1,k) + \\gamma(i,k)\\right] \\end{cases} $$ In [10]: model . outside ( sequence , memorize = True ) In [11]: omega = model . omega In [12]: # DP行列は以下のようになっています。 model . _printAsTerai ( omega , sequence ) \\ G C G G A A A C G G G G T C A G 3 3 3 2 2 2 1 1 1 0 0 0 0 0 0 C - 3 3 3 3 3 2 1 1 1 1 1 1 0 0 G - - 3 3 3 3 2 2 2 2 2 1 1 0 0 G - - - 3 3 3 2 2 2 2 2 1 1 0 0 A - - - - 3 3 2 2 2 2 2 1 1 0 0 A - - - - - 3 3 2 2 2 2 2 1 0 0 A - - - - - - 3 2 2 2 2 2 1 0 0 C - - - - - - - 2 2 2 2 2 1 0 0 G - - - - - - - - 3 3 3 2 2 1 1 G - - - - - - - - - 3 3 3 3 2 2 G - - - - - - - - - - 3 3 3 2 2 G - - - - - - - - - - - 3 3 2 2 T - - - - - - - - - - - - 3 2 2 C - - - - - - - - - - - - - 2 2 A - - - - - - - - - - - - - - 3 $Z(i,j)$ の計算 variable definition $\\gamma\\left(i,j\\right)$ the maximum number of base-pairs for subsequence from $i$ to $j$. $\\omega\\left(i,j\\right)$ the maximum number of base-pairs excluding subsequence from $i$ to $j$. 上記の定義より、$\\gamma,\\omega$ を用いて $Z(i,j)$ が以下のように求まることがわかります。 $$Z(i,j) = \\begin{cases} \\gamma\\left(i+1,j-1\\right) + 1 + \\omega\\left(i,j\\right) & (\\text{if }i\\text{ and }j\\text{-th nucleotides can form a base-pair})\\\\ 0 & (\\text{otherwise}) \\end{cases}$$ In [13]: model . ConstrainedMaximize ( sequence , memorize = False ) \\ G C G G A A A C G G G G T C A G 0 0 0 0 0 0 0 2 0 0 0 0 0 3 0 C - 0 0 0 0 0 0 0 3 3 3 3 0 0 0 G - - 0 0 0 0 0 3 0 0 0 0 0 3 0 G - - - 0 0 0 0 3 0 0 0 0 0 3 0 A - - - - 0 0 0 0 0 0 0 0 3 0 0 A - - - - - 0 0 0 0 0 0 0 3 0 0 A - - - - - - 0 0 0 0 0 0 3 0 0 C - - - - - - - 0 0 0 0 3 0 0 0 G - - - - - - - - 0 0 0 0 0 2 0 G - - - - - - - - - 0 0 0 0 3 0 G - - - - - - - - - - 0 0 0 0 0 G - - - - - - - - - - - 0 0 0 0 T - - - - - - - - - - - - 0 0 0 C - - - - - - - - - - - - - 0 0 A - - - - - - - - - - - - - - 0 備忘録 Nussinov Algorithmでは、これまでの動的計画法とは異なり、 $i,j$ を斜め方向に舐める必要がありました。 そこで、その際に使用したコードを備忘録として残しておきます。 In [14]: import numpy as np In [15]: N = 4 In [16]: # Nussinov Algorithm (γ) idx = 1 arr = np . zeros ( shape = ( N , N ), dtype = int ) for ini_i in reversed ( range ( N )): diff = N - ini_i for i in reversed ( range ( ini_i )): arr [ i ][ i + diff ] = idx idx += 1 print ( arr ) [[0 3 5 6] [0 0 2 4] [0 0 0 1] [0 0 0 0]] In [17]: # Nussinov outsie (ω) idx = 1 arr = np . zeros ( shape = ( N , N ), dtype = int ) for j in reversed ( range ( N )): for i in range ( N - j ): arr [ i ][ j + i ] = idx idx += 1 print ( arr ) [[ 7 4 2 1] [ 0 8 5 3] [ 0 0 9 6] [ 0 0 0 10]] In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-8.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-8.html"},{"title":"Pair HMM の最尤推定","text":"Baum-Welch Pair HMMとは、二本の配列を受け取ってペアワイズアラインメントを出力するHMMで、 「アラインメントの確率的な解釈が可能になる」 （アラインメントのどの部分が信頼できるかを確率的に評価できる） という利点があります。 このPair HMMは、一般的なHMMと同様にBaum-Welchアルゴリズムによってパラメータを最尤推定していきます。 \\(\\xi\\) HMM 一般的なHMMでは、例えば 遷移確率 \\(A_{jk}\\) （状態 \\(j\\) から状態 \\(k\\) に遷移する確率） を最尤推定する際は、 直感的には 「状態 \\(j\\) から状態 \\(k\\) に遷移する回数」 を、 「状態 \\(j\\) から遷移する回数」 で割れば最尤解が求まる。 実際の隠れ状態の遷移が確定していないので、 「 期待される 状態 \\(j\\) から状態 \\(k\\) に遷移する回数」 を、 「 期待される 状態 \\(j\\) から遷移する回数」 で割れば良い。 \\(\\mathbf{z}_{n-1}\\) で状態 \\(j\\) におり、 \\(\\mathbf{z}_n\\) で状態 \\(k\\) にいる確率 \\(\\xi\\left(z_{n-1,j},z_{nk}\\right)\\) は、forward-backward algorithmの \\(\\alpha,\\beta\\) を用いれば以下のように求めることができる。 $$\\xi_n\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right)=\\frac{\\alpha\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})}\\qquad (13.43)$$ \\(\\xi\\) を用いて、最尤推定を行う。 $$A_{j k}= \\frac{\\sum_{n=2}&#94;{N} \\xi\\left(z_{n-1, j}, z_{n k}\\right)}{\\sum_{l=1}&#94;{K} \\sum_{n=2}&#94;{N} \\xi\\left(z_{n-1, j}, z_{n l}\\right)} \\qquad (13.19)$$ という様に行いますが、Pair HMMは、 挿入・欠失を考えるため、 \\(n\\) で配列 \\(\\mathbf{X,Y}\\) のどの要素（ \\(\\mathbf{x}_u,\\mathbf{y}_v\\) ）を考えているのか一意に定まらない という点で普通のHMMとは異なります。 Pair HMM そこで、 「 \\(n\\) ではなく \\(u,v\\) に注目する」 ことで、 \\((13.43)\\) の式を以下のように書き換えます。 $$\\xi_{u,v}\\left(i,j\\right)=\\frac{f_i\\left(u,v\\right)A_{ij}\\phi_j\\left(\\diamond_1\\right)b_j\\left(\\diamond_2,\\diamond_3\\right)}{\\sum_{k=1}&#94;Kf_k\\left(u,v\\right)b_k\\left(u,v\\right)}$$ ここで、分子に注目すると、各変数の意味が variable meaning \\(f_i\\left(u,v\\right)\\) The probability of ending up in state \\(i\\) after aligning the two sequences \\(\\mathbf{X,Y}\\) up to observation \\(u\\) and \\(v\\) respectively. \\(A_{ij}\\) the transition probability from state \\(i\\) to state \\(j\\) . \\(\\phi_j\\left(\\diamond_1\\right)\\) the emission probability of emitting \\(\\diamond_1\\) in state \\(j\\) . \\(b_j\\left(\\diamond_2,\\diamond_3\\right)\\) the probability of being in state \\(j\\) , given the sequences \\(\\mathbf{X,Y}\\) are aligned from observation \\(\\diamond_2+1\\) and \\(\\diamond_3+1\\) to the end of the sequences respectively. であるので、 \\(\\diamond\\) は状態によって異なり、具体的に書き下すと以下のようになります。 state\\variable \\(\\phi_j\\left(\\diamond_1\\right)\\) \\(b_j\\left(\\diamond_2,\\diamond_3\\right)\\) \\(M\\) \\(e\\left(x_{u+1},y_{v+1}\\right)\\) \\(b_j\\left(u+1,v+1\\right)\\) \\(X\\) \\(e\\left(x_{u+1}\\right)\\) \\(b_j\\left(u+1,v\\right)\\) \\(Y\\) \\(e\\left(y_{v+1}\\right)\\) \\(b_j\\left(u,v+1\\right)\\) \\(\\gamma\\) 同様に \\(\\gamma\\) も考えると、 $$ \\gamma_n\\left(\\mathbf{z}_{n}\\right)= \\frac{\\alpha\\left(\\mathbf{z}_{n}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} \\qquad(13.33)$$ から、 $$\\gamma_i\\left(u,v\\right)=\\frac{f_i\\left(u,v\\right)b_j\\left(u,v\\right)}{\\sum_{k=1}&#94;Kf_k\\left(u,v\\right)b_k\\left(u,v\\right)}$$ のように書き換えることになります。 Maximization step ここまでで \\(\\gamma,\\xi\\) が求まったので、M stepで各パラメータを更新します。なお、以下で \\(w\\) は全ての記号の組を表します。 $$w\\in\\left\\{(k_x,k_y)|k_x,k_y\\in\\left\\{A,T,G,C,\\epsilon \\right\\}\\right\\}\\setminus(\\epsilon,\\epsilon)$$ \\(\\pi_k\\) $$\\pi&#94;{\\star}_i = \\sum_w\\gamma_i&#94;w(0,0)$$ \\(A_{ij}\\) $$A&#94;{\\star}_{ij} = \\frac{\\sum_w\\sum_{u=0}&#94;{\\tilde{U}}\\sum_{v=0}&#94;{\\tilde{V}}\\xi_{u,v}&#94;{w}\\left(i,j\\right)}{\\sum_w\\sum_{u=0}&#94;{\\tilde{U}}\\sum_{v=0}&#94;{\\tilde{V}}\\sum_{j}&#94;{K}\\xi_{u,v}&#94;{w}\\left(i,j\\right)}$$ final emitting state \\(\\tilde{U}\\) \\(\\tilde{V}\\) \\(M\\) \\(U-1\\) \\(V-1\\) \\(X\\) \\(U-1\\) \\(V\\) \\(Y\\) \\(U\\) \\(V-1\\) \\(\\phi_{i}(k)\\) $$\\phi_i\\left(k\\right) = \\frac{\\sum_w\\sum_{u=0}&#94;{U\\ast1}\\sum_{v=0}&#94;{V\\ast2}\\gamma_i&#94;w\\left(u,v\\right)}{\\sum_w\\sum_{u=0}&#94;U\\sum_{v=0}&#94;V\\gamma_i&#94;w\\left(u,v\\right)}$$ \\(\\ast1\\) ： \\(x_u=k_x\\) and state \\(i\\) equals the state \\(M\\) or \\(X\\) . (in the state \\(Y\\) , a gap is present in observation stream \\(x\\) therefore \\(k_x\\) is not present.) \\(\\ast2\\) ： \\(y_v=k_y\\) and state \\(j\\) equals the state \\(M\\) or \\(Y\\) . Reference Wahle, Johannes and Armin Buch. \"Alignment and word comparison with Pair Hidden Markov Models.\" (2013). pp.22-31 Martijn B. Wieling. \"Comparison of Dutch Dialects\" (2007) pp.36-50 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-7.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-7.html"},{"title":"生物統計論 第2回","text":"In [1]: import numpy as np import matplotlib.pyplot as plt Section2.1 Central Limit Theorem Law of Large Numbers Estimation is accurate with many samples. Foundation of repeated measurement. Regardless of true distribution. Assuming independence. Theorem Let $\\mathbf{X}_1,\\mathbf{X}_2,\\ldots,\\mathbf{X}_n$ be an independent trials process, with finite expected value $\\mu = \\mathbb{E}\\left(\\mathbf{X}_i\\right)$ Let $\\bar{\\mathbf{X}}_n = \\frac{1}{n}\\left(\\mathbf{X}_1,\\mathbf{X}_2+\\cdots+\\mathbf{X}_n\\right)$ be a sample mean. Weak law : $$\\lim_{n\\rightarrow\\infty}P\\left(|\\bar{\\mathbf{X}}_n-\\mu|>\\varepsilon\\right) = 0 \\quad\\left(\\forall\\varepsilon>0\\right)$$ Strong law $$P\\left(\\lim_{n\\rightarrow\\infty}\\bar{\\mathbf{X}}_n = \\mu\\right) = 1$$ Proof. We assume that $\\bar{\\mathbf{X}}_n$ have the \"finite\" variance $\\sigma&#94;2$ Since $\\mathbf{X}_1,\\mathbf{X}_2,\\ldots,\\mathbf{X}_n$ are independent and have the same distributions, we can apply Chebyshev Inequality . We obtain $$0\\leq P\\left(|\\bar{\\mathbf{X}}_n - \\mu|>\\varepsilon\\right)\\leq\\frac{1}{\\varepsilon&#94;2}\\mathbb{V}(\\bar{\\mathbf{X}}_n) = \\frac{1}{\\varepsilon&#94;2}\\frac{\\sigma&#94;2}{n}\\rightarrow0\\quad(n\\rightarrow\\infty)$$ Chebyshev Inequality Let $\\mathbf{X}$ be a discrete random variable with expected value $\\mu=\\mathbb{E}\\left(\\mathbf{X}\\right)$ $$ P \\left(|\\mathbf{X}-\\mu|>\\varepsilon\\right)\\leq\\frac{\\mathbb{V}\\left(\\mathbf{X}\\right)}{\\varepsilon&#94;2}$$ Example In [2]: N = 1000 seed = 0 In [3]: trials = np . arange ( 1 , N + 1 ) In [4]: dices = np . random . RandomState ( seed ) . randint ( low = 1 , high = 6 + 1 , size = N ) ave_dices = np . cumsum ( dices ) / trials In [5]: plt . axhline ( 3.5 , color = \"blue\" , label = \"Theoretical mean\" ) plt . plot ( trials , ave_dices , label = \"Observed average\" , color = \"green\" ) plt . ylim ( 1 , 6 ) plt . title ( \"Average dice roll by number of rolls\" ) plt . ylabel ( \"Average\" ) plt . xlabel ( \"Number of trials\" ) plt . grid () plt . legend () plt . show () If we keep rolling the dice over and over again, the sample average of dice roll will converge to the true average. Exception The law of large numbers assumes the existance of expected values . Therefore, it will not hold when there is no expected value. (ex. Cauchy distribution ) Cauchy distribution $$ \\begin{aligned} f(x;x_0,\\gamma) &= \\frac{1}{\\pi\\gamma\\left[1 + \\left(\\frac{x-x_0}{\\gamma}\\right)&#94;2\\right]} = \\frac{1}{\\pi}\\frac{\\gamma}{\\left(x-x_0\\right)&#94;2 + \\gamma&#94;2} & \\begin{cases}x_0: \\text{Location paramete}\\\\\\gamma: \\text{Scale parameter}\\end{cases}\\\\ f(x;0,1) &= \\frac{1}{\\pi\\left(1+x&#94;2\\right)} & (\\text{standard cauchy distribution}) \\end{aligned} $$ In [6]: N = 5000 K = 3 seed = 1 In [7]: trials = np . arange ( 1 , N + 1 ) In [8]: samples = np . random . RandomState ( seed ) . standard_cauchy ( size = ( K * N )) . reshape (( K , N )) ave_samples = np . cumsum ( samples , axis = 1 ) / trials In [9]: for k in range ( K ): plt . plot ( trials , ave_samples [ k ], label = f \"Observation {k+1}\" ) plt . ylabel ( \"$(\\mathbf {X} _1+\\cdots+\\mathbf {X} _n)/n$\" ) plt . xlabel ( \"n\" ) plt . legend () plt . grid () Central Limit Theorem Sample mean follows normal distribution. Foundation of many statistical tests. Regardless of true distribution. Assuming independence. Theorem Let $\\{\\mathbf{X}_1,\\ldots,\\mathbf{X}_n\\}$ be a random sample of size $n$, which is a sequence of independent and identically distributed random variables drawn from a distribution. expected value given by $\\mu$. finite variance given by $\\sigma&#94;2$. Let $S_n:=\\sum_{k=1}&#94;n\\mathbf{X}_k$ $$P\\left(\\frac{S_n-n\\mu}{\\sqrt{n}\\sigma}\\leq\\alpha\\right)\\rightarrow\\frac{1}{\\sqrt{2\\pi}}\\int_{-\\infty}&#94;{\\alpha}e&#94;{-\\frac{x&#94;2}{2}}dx\\quad(n\\rightarrow\\infty)$$ Therefore: $$ \\begin{aligned} S_n&\\sim\\mathcal{N}\\left(n\\mu, n\\sigma&#94;2\\right) & (n\\rightarrow\\infty)\\\\ \\bar{\\mathbf{X}}_n = \\left(\\mathbf{X}_1+\\cdots+\\mathbf{X}_n\\right)/n&\\sim\\mathcal{N}\\left(\\mu,\\sigma&#94;2/n\\right) & (n\\rightarrow\\infty) \\end{aligned} $$ Proof. We assume that $\\bar{\\mathbf{X}}_n$ have the \"finite\" variance $\\sigma&#94;2$ Since $\\mathbf{X}_1,\\mathbf{X}_2,\\ldots,\\mathbf{X}_n$ are independent and have the same distributions, we can apply Chebyshev Inequality . We obtain $$0\\leq P\\left(|\\bar{\\mathbf{X}}_n - \\mu|>\\varepsilon\\right)\\leq\\frac{1}{\\varepsilon&#94;2}\\mathbb{V}(\\bar{\\mathbf{X}}_n) = \\frac{1}{\\varepsilon&#94;2}\\frac{\\sigma&#94;2}{n}\\rightarrow0\\quad(n\\rightarrow\\infty)$$ Example In [10]: N = 10000 ns = [ 10 , 100 , 1000 , 10000 ] roll = 4 seed = 0 In [11]: fig = plt . figure ( figsize = ( 12 , 6 )) ax_all = plt . subplot2grid (( 2 , len ( ns )), ( 0 , 0 ), colspan = len ( ns )) for i , n in enumerate ( ns ): ax = plt . subplot2grid (( 2 , len ( ns )), ( 1 , i )) dices = np . random . RandomState ( seed ) . randint ( low = 1 , high = 6 + 1 , size = ( n , N )) rate_dice_eq_4 = np . count_nonzero ( dices == roll , axis = 1 ) / N freqs , bins , patches = ax . hist ( rate_dice_eq_4 , bins = 20 , density = True ) cent_bins = [ np . mean ( bins [ i : i + 2 ]) for i in range ( len ( bins ) - 1 )] ax_all . plot ( cent_bins , freqs , label = f \"n= {n} \" ) ax . set_title ( f \"n= {n} \" ) ax . set_xlabel ( f \"Probability of {roll} roll.\" ) ax . set_ylabel ( \"freq\" ) ax_all . set_title ( \"Central Limit Theorem\" ) ax_all . legend () plt . tight_layout () plt . show () Section2.2 ChIP-seq Peak Detection ChIP-sequencing, also known as ChIP-seq, is a method used to analyze protein interactions with DNA. ChIP-seq combines chromatin immunoprecipitation (ChIP) with massively parallel DNA sequencing to identify the binding sites of DNA-associated proteins. It can be used to map global binding sites precisely for any protein of interest. Previously, ChIP-on-chip was the most common technique utilized to study these protein–DNA relations. Peak calling Problem: How to identify transcription factor binding sites and histone modification enriched regions? Random Read Model Assume that read appears with equal probability in any region. Calcurate the p-value (the Probability of obtaining more or equally extreme value than observed value under the random model.) → Smaller is more significant. Setting the threshold (p-value) manually. We could calcurate the threshold ($n_{obs}$) → If the $n_{obs}$ exceeds this threshold, it is determined as the peak region. In [12]: from scipy.special import comb In [13]: g = 10000 # total DNA length n = 1000 # total number of reads l = 100 # bin size q = l / g n_bins = g / l lambda_ = n * q # mean read count seed = 0 xmax = 30 In [14]: fig = plt . figure ( figsize = ( 12 , 4 )) axL = fig . add_subplot ( 1 , 2 , 1 ) read_points = np . random . RandomState ( seed ) . randint ( 0 , g , size = n ) axL . scatter ( read_points , np . zeros ( shape = n ), s = 3 , label = \"read\" , color = \"black\" ) ledge = 0 read_counts = [] for edge in range ( l , g + 1 , l ): middl = ( ledge + edge ) / 2 count = np . count_nonzero ([( ledge <= read_points ) & ( read_points < edge )]) read_counts . append ( count ) if edge <= l * 10 : axL . axvline ( edge , color = \"red\" ) axL . text ( x = middl , y = 1e-3 , s = count , horizontalalignment = 'center' ) ledge = edge axL . set_xlim ( 0 , l * 10 ) axL . set_ylim ( - 1e-3 , 2e-3 ) axL . set_yticks ([]) axL . legend () Poisson = [ comb ( n , i , exact = True ) * ( q ** i ) * (( 1 - q ) ** ( n - i )) for i in range ( n )] axR = fig . add_subplot ( 1 , 2 , 2 ) axR . plot ( Poisson , color = \"black\" , label = \"Pois($\\lambda$)\" ) axR . plot ([ read_counts . count ( i ) / n_bins for i in range ( n )], color = \"red\" , label = \"Observed\" ) axR . set_xlim ( 0 , xmax ) axR . set_xlabel ( \"Read count for each bin\" ) axR . set_ylabel ( \"Frequency\" ) axR . legend () plt . show () In [15]: n_obs = 15 p_values = np . cumsum ( Poisson [:: - 1 ])[:: - 1 ] # Calcurate p-value for each n_obs. thresh_p = 1e-2 bp = np . argmax ( p_values <= thresh_p ) In [16]: fig = plt . figure ( figsize = ( 12 , 4 )) axL = fig . add_subplot ( 1 , 2 , 1 ) axL . plot ( Poisson , color = \"black\" , label = \"Pois($\\lambda$)\" ) axL . fill_between ( np . arange ( n_obs , xmax ), y1 = Poisson [ n_obs : xmax ], y2 = 0 , facecolor = 'red' ) axL . annotate ( 'p-value \\n = $\\mathbb {P} (n_ {obs} \\leq N)$ \\n $=\\sum_{i=n_ {obs} }&#94;{\\infty}(\\lambda&#94;i/i!)\\cdot e&#94;{-\\lambda}$' , xy = ( 17 , 1e-2 ), xytext = ( 20 , 4e-2 ), fontsize = 12 , arrowprops = dict ( width = 1 , headwidth = 8 , headlength = 10 , connectionstyle = 'arc3' , facecolor = 'black' ) ) axL . set_xlim ( 0 , 30 ) axL . set_title ( \"Poisson distribution\" ) axL . set_xlabel ( \"N\" ) axL . set_ylabel ( \"Freq\" ) axR = fig . add_subplot ( 1 , 2 , 2 ) axR . plot ( p_values , color = \"black\" ) axR . scatter ( n_obs , p_values [ n_obs ], color = \"red\" , label = \"pvalue($n_ {obs} $=\" + f \" {n_obs} )\" ) axR . scatter ( bp , p_values [ bp ], color = \"blue\" , label = \"Boundary point\" ) axR . axhline ( thresh_p , color = \"blue\" , label = f \"threshold(p_value= {thresh_p} )\" ) axR . axvspan ( xmin = bp , xmax = xmax , color = \"blue\" , alpha = 0.3 ) axR . set_xlim ( 0 , xmax ) axR . set_title ( \"The relationship between p-value and $n_ {obs} $\" ) axR . set_xlabel ( \"$n_ {obs} $\" ) axR . set_ylabel ( \"p-value\" ) axR . legend () plt . show () In this case, we could say the threshold($n_{obs}$) = 19(=bp). ※ In ChIP-seq, we have to do \"Tag shift\" due to the DNA strand asymmetry. （→ more: MACS ） Section2.3 Hypothesis Testing Terminology In [17]: fig , ax = plt . subplots ( figsize = ( 6 , 4 )) X = np . arange ( 10 , 100 , 1 ) Y = 1 / X # Null distribution ax . plot ( X , Y , color = \"red\" ), ax . text ( x = 15 , y = 8e-2 , s = \"Null distribution \\n $f_S(s|H)$\" , fontsize = 15 ) # Thereshold: Sα ax . plot (( 50 , 50 ),( 0 , 7e-2 ), color = \"black\" ), ax . text ( x = 48 , y = 7.5e-2 , s = \"$S_ {α} $\" , fontsize = 12 ) # Reject & Accept ax . annotate ( '' , xy = ( 75 , 5e-2 ), xytext = ( 52 , 5e-2 ), arrowprops = dict ( arrowstyle = \"->\" , connectionstyle = 'arc3' )), ax . text ( x = 55 , y = 5.5e-2 , s = \"reject\" , fontsize = 12 ) # Reject ax . annotate ( '' , xy = ( 25 , 5e-2 ), xytext = ( 48 , 5e-2 ), arrowprops = dict ( arrowstyle = \"->\" , connectionstyle = 'arc3' )), ax . text ( x = 35 , y = 5.5e-2 , s = \"accept\" , fontsize = 12 ) # Accept # Observation sample. ax . plot (( 70 , 70 ),( 0 , 1 / 70 ), color = \"black\" ), ax . scatter ( 70 , 1 / 70 , color = \"black\" ), ax . text ( x = 68 , y = 2e-2 , s = \"$S_ {obs} $\" , fontsize = 12 ) ax . set_xticks ([]), ax . set_yticks ([]) ax . set_xlabel ( \"S\" ), ax . set_ylabel ( \"freq\" ) ax . set_xlim ( min ( X ), max ( X )), ax . set_ylim ( min ( Y ), max ( Y )) plt . show () Null Hypothesis $H_0$ Alternative Hypothesis $H_1$ Test Static $S$ Null distribution Significance threshold Reject/Accept $H_0$ Null hypothesis is True Null hypothesis is False Do not reject Null hypothesis ($H_0$) Correct Type2 error (False negative) Reject Null hypothesis ($H_0$) Type1 error (False positive) Correct P-value distribute uniformly under $H_0$ Proof. p-value is the probability of obtaining more or equally extreme value than observed value under the null distribution. $$p = \\mathbb{P}\\left(S\\geq s|H_0\\right) = 1-\\mathbb{P}\\left(S By noting $F_0$ the cumulative distribution function of $S$ under $H_0$, we obtain: $$p = 1-F_0(s)$$ Thanks to the fact that the cdf is monotonic, increasing and (left-)continuous: $$\\mathbb{P}\\left(S\\geq s|H_0\\right) = \\mathbb{P}\\left(F_0\\left(S\\right)\\geq F_0\\left(s\\right)\\right) = 1-\\mathbb{P}\\left(F_0\\left(S\\right)< F_0\\left(s\\right)\\right)$$ Therefore, we have: $$\\mathbb{P}\\left(F_0\\left(S\\right) Which means that $F_0\\left(S\\right)$ is following a uniform distribution. And, as this means also that $1-F_0\\left(S\\right)$ is following a uniform distributed, then we can conclude that p-value are uniformly distributed under the null hypothesis. In [18]: from scipy.stats import norm In [19]: N = 10000 loc = 0 scale = 1 seed = 0 In [20]: obs = np . random . RandomState ( seed ) . normal ( loc = loc , scale = scale , size = N ) # observation sample \"s\". p_value = 1 - norm . cdf ( x = obs , loc = loc , scale = scale ) # p-value = 1 - F(s) In [21]: fig = plt . figure ( figsize = ( 12 , 4 )) axL = fig . add_subplot ( 1 , 2 , 1 ) freqs , bins , patches = axL . hist ( obs , bins = 50 , density = True , color = \"blue\" , alpha = 0.7 ) cent_bins = [ np . mean ( bins [ i : i + 2 ]) for i in range ( len ( bins ) - 1 )] axL . plot ( cent_bins , freqs , color = \"blue\" ) axL . set_title ( \"Histogram of observation sample s \\n under the null distribution (This time: Normal distribution)\" ), axL . set_xlabel ( \"observation s\" ), axL . set_ylabel ( \"Frequency\" ) axR = fig . add_subplot ( 1 , 2 , 2 ) axR . hist ( p_value , bins = 20 , edgecolor = \"black\" ) axR . set_title ( \"Histogram of p-value\" ), axR . set_xlabel ( \"p-value\" ), axR . set_ylabel ( \"Frequency\" ) plt . tight_layout () plt . show () ※ We could argue about the p-value under the null hypothesis, but we could not confirm whether null hypothesis is true or not. Section2.4 Hypothesis Test Example $\\chi&#94;2$-test Any statistical hypothesis test where the sampling distribution of the test statistic is a chi-squared distribution when the null hypothesis is true. Used to determine whether there is a significant difference between the expected frequencies and the observed frequencies in one or more categories. $\\chi&#94;2$-distribution $Y_i\\sim\\mathcal{N}\\left(0,1\\right), i=1,\\ldots,\\nu$: i.i.d. $X=Y_1&#94;2+\\cdots+Y_{\\nu}$ $\\rightarrow X\\sim\\chi&#94;2(\\nu), X\\in \\mathbb{R}_{\\geq0}$ $$ \\begin{aligned} f_X(x) &= \\frac{1}{2&#94;{\\nu/2}\\Gamma(\\nu/2)}x&#94;{\\nu/2-1}e&#94;{-x/2}\\\\ \\Gamma(z) &= \\int_{0}&#94;{\\infty}t&#94;{z-1}e&#94;{-t}dt(\\mathrm{Re}(z)>0)\\\\ \\mathbb{E}(X) &= \\nu\\\\ \\mathbb{V}(X) &= 2\\nu \\end{aligned} $$ In [22]: from scipy.stats import chi2 In [23]: K = 5 In [24]: fig = plt . figure ( figsize = ( 6 , 4 )) X = np . linspace ( 0 , 8 , 1000 ) for k in range ( 1 , K + 1 ): plt . plot ( X , chi2 . pdf ( X , k ), label = f \"$k= {k} $\" ) plt . xlim ( 0 , 8 ), plt . ylim ( 0 , 1.0 ) plt . title ( \"$\\chi&#94;2$-distribution\" ), plt . xlabel ( \"X\" ), plt . ylabel ( \"P(X)\" ) plt . legend () plt . show () Pearson's chi-square test goodness of fit test # $C_1$ $C_2$ $\\cdots$ $C_k$ total Observation frequency $n_1$ $n_2$ $\\cdots$ $n_k$ $n$ Theoretical probability (under $H_0$) $p_1$ $p_2$ $\\cdots$ $p_k$ $1$ Theoretical frequency $m_1=np_1$ $m_2=np_2$ $\\cdots$ $m_k=np_k$ $n$ Null Hypothesis($H_0$): $P(C_i) = p_i\\quad(i=1,2,\\ldots,k)$ If null hypothesis is true, $U$ are distributed as $\\chi&#94;2(k-1)$. $$ U=\\sum_{i=1}&#94;k\\frac{(n_i-m_i)&#94;2}{m_i}\\\\ \\begin{cases} U&>\\chi_{\\alpha}&#94;2(k-1) &\\Rightarrow \\text{Reject }H_0\\\\ U&\\leq\\chi_{\\alpha}&#94;2(k-1) &\\Rightarrow \\text{Accept }H_0 \\end{cases} $$ test for independence A\\B $B_1$ $B_2$ $\\cdots$ $B_b$ total $A_1$ $n_{11}$ $n_{12}$ $\\cdots$ $n_{1b}$ $n_{1\\cdot}$ $A_2$ $n_{21}$ $n_{22}$ $\\cdots$ $n_{2b}$ $n_{2\\cdot}$ $\\vdots$ $\\vdots$ $\\vdots$ $\\cdots$ $\\ddots$ $\\vdots$ $A_a$ $n_{a1}$ $n_{a2}$ $\\cdots$ $n_{ab}$ $n_a$ total $n_{\\cdot1}$ $n_{\\cdot2}$ $\\cdots$ $n_{\\cdot b}$ $n_{a\\cdot}$ $P(A_i) = p_i,P(B_j)=q_j,\\quad (1\\leq i\\leq a,1\\leq j\\leq b)$ Null Hypothesis($H_0$): $A$ and $B$ are independence. $$P(A_i\\cap B_j) = p_iq_j$$ If null hypothesis is true, we could presume: $\\bar{p_i}=n_{i\\cdot}/n$, $\\bar{q_j}=n_{\\cdot j}/n$. $m_{ij} = n\\bar{p_i}\\bar{q_j}$ (Theoretical frequency) $$ U=\\sum_{i=1}&#94;a\\sum_{j=1}&#94;b\\frac{(n_{ij}-m_{ij})&#94;2}{m_{ij}}\\\\ \\begin{cases} U&>\\chi_{\\alpha}&#94;2\\left((a-1)(b-1)\\right) &\\Rightarrow \\text{Reject }H_0\\\\ U&\\leq\\chi_{\\alpha}&#94;2\\left((a-1)(b-1)\\right) &\\Rightarrow \\text{Accept }H_0 \\end{cases} $$ t-test One-sample test: Determine whether a sample of observations could have been generated by a process with a specific mean $\\mu$. Two-sample test: Compare the average values of the two data sets and determine if they came from the same population. t-distribution $$ \\begin{aligned} f_{t(\\nu)}(x) &= \\frac{\\Gamma\\left(\\frac{\\nu+1}{2}\\right)}{\\sqrt{\\nu\\pi}\\Gamma\\left(\\frac{\\nu}{2}\\right)}\\left(1+\\frac{x&#94;2}{\\nu}\\right)&#94;{-\\frac{\\nu+1}{2}}\\\\ \\mathbb{E}(X) &= 0(\\nu>1)\\\\ \\mathbb{V}(X) &= \\begin{cases}\\infty&(1<\\nu\\leq2)\\\\\\frac{\\nu}{\\nu-2}&(2<\\nu)\\end{cases} \\end{aligned} $$ In [25]: from scipy.stats import t as tdist In [26]: fig = plt . figure ( figsize = ( 6 , 4 )) X = np . linspace ( - 6 , 6 , 1000 ) nus = [ 1 , 2 , 5 , 1000 ] for nu in nus : plt . plot ( X , tdist . pdf ( X , nu ), label = f \"$ν= {nu} $\" ) plt . plot ( X , norm . pdf ( X , 0 , 1 ), linestyle = ':' , linewidth = 5 , label = \"Standard Normal Distribution\" ) plt . xlim ( - 6 , 6 ), plt . ylim ( 0 , 0.4 ) plt . title ( \"t-distribution\" ), plt . xlabel ( \"X\" ), plt . ylabel ( \"P(X)\" ) plt . legend () plt . show () Student's t-test One-sample test: $$ X_1,\\ldots,X_n\\sim\\mathcal{N}(\\mu,\\sigma)\\text{: i.i.d.}\\\\ \\bar{X} = \\frac{X_1,\\ldots,X_n}{n}, S = \\frac{\\left(X_1-\\bar{X}\\right)&#94;2 + \\cdots+\\left(X_n-\\bar{X}\\right)&#94;2}{n-1}\\\\ \\rightarrow T=\\frac{\\left(\\bar{X}-\\mu\\sqrt{n}\\right)}{S}\\sim t(n-1) $$ Two-sample test (when we know two groups have equal variance) : $$ X_{11},\\ldots,X_{1m}\\sim\\mathcal{N}(\\mu,\\sigma_1)\\text{: i.i.d.}, \\bar{X}_1 = \\frac{X_{11}+\\cdots+X_{1m}}{m}\\\\ X_{21},\\ldots,X_{2n}\\sim\\mathcal{N}(\\mu,\\sigma_2)\\text{: i.i.d.}, \\bar{X}_2 = \\frac{X_{21}+\\cdots+X_{2n}}{n}\\\\ S=\\frac{\\sum_{i=1}&#94;m\\left(X_{1i}-\\bar{X}_1\\right)&#94;2 + \\sum_{i=1}&#94;n\\left(X_{2i}-\\bar{X}_2\\right)&#94;2}{m+n-2}\\\\ \\rightarrow T=\\frac{\\left(\\bar{X}_1-\\bar{X}_2\\right)\\sqrt{mn}}{S\\sqrt{m+n}}\\sim t(m+n-2) $$ Two-sample test (when we know two groups have equal variance) : $$ X_{11},\\ldots,X_{1m}\\sim\\mathcal{N}(\\mu,\\sigma_1)\\text{: i.i.d.}, \\bar{X}_1 = \\frac{\\sum_{i=1}&#94;mX_{1i}}{m}, S_1 = \\frac{\\sum_{i=1}&#94;m\\left(X_{1i} - \\bar{X}_1\\right)&#94;2}{m-1}, A=S_1/m\\\\ X_{21},\\ldots,X_{2n}\\sim\\mathcal{N}(\\mu,\\sigma_2)\\text{: i.i.d.}, \\bar{X}_2 = \\frac{\\sum_{i=1}&#94;mX_{2i}}{n}, S_1 = \\frac{\\sum_{i=1}&#94;m\\left(X_{2i} - \\bar{X}_2\\right)&#94;2}{n-1}, B=S_2/n\\\\ \\rightarrow T=\\frac{\\left(\\bar{X}_1-\\bar{X}_2\\right)}{S\\sqrt{A+B}}\\approx t(\\nu), \\nu=\\frac{(A+B)&#94;2}{A&#94;2/(m-1)+B&#94;2/(n-1)} $$ In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物統計論","url":"https://iwasakishuto.github.io/University/3A/生物統計論-2.html","loc":"https://iwasakishuto.github.io/University/3A/生物統計論-2.html"},{"title":"レポート課題1(10/3出題)","text":"AexzdwYnt7Tu4r/rgRkvGw==;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;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-report1.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-report1.html"},{"title":"イントロダクション","text":"講義計画 確率と統計の基礎 ： 最先端の機械学習技術の数学的基盤 探索と最適化 ： 広大な探索空間から最適解を効率よく探索 機械学習 ： データの背後に潜む知識を発見 自然言語処理 ： 人工知能技術の応用例 # 日付 内容 担当 1 10/3 概要 杉山 2 10/10 最適化（連続1） 佐藤 3 10/17 最適化（連続2） 佐藤 4 10/24 最適化（探索） 本多 5 10/31 確率と統計 本多 6 11/14 確率と統計 本多 7 11/21 確率と統計 本多 8 11/28 機械学習（教師付き学習） 本多 9 12/5 機械学習（教師付き学習） 佐藤 10 12/12 自然言語処理 宮尾 11 12/19 自然言語処理 宮尾 12 12/26 自然言語処理 宮尾 13 1/9 機械学習（強化学習） 杉山 1 1/16 試験 佐藤 人工知能とは 1956年：\"The Dartmouth Summer Research Project on Artificial Intelligence\" にて Artificial Intelligence という言葉が提唱された。 Watoson Nature AlphaGo 人工知能関連分野の発展 人工知能研究 1960年頃(1次ブーム)：記号処理、論理推論 1980年頃(2次ブーム)：エキスパートシステム ニューラルネット研究 1960年頃(1次ブーム)：パーセプトロン（１層） 1990年頃(2次ブーム)：誤差逆伝播ほう（多層） 機械学習研究 1995年頃〜：統計・凸最適化 1995年頃〜：ベイズ推論 2010年頃〜：深層学習 3種類の機械学習 教師付き学習 ：人間が教師となり、コンピュータの学習を手伝う。 教師なし学習 ：コンピュータが人間の手を介さずに自発的に学習する。 強化学習 ：ロボットが人間の手を介さずに自発的に意思決定を行う。 まとめ 人工知能 ： 知的なコンピュータシステムを作る 数学・プログラミング・実世界応用をつなぐ架け橋 探索 ： 広大な探索空間を効率よく探索 機械学習 ： データの背後に潜む知識を発見","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-1.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-1.html"},{"title":"Pair HMM","text":"※実装時のパラメータ PairHMMによるアラインメントを実装していく。なお、 （ kerasy.Bio.alignment.PairHMM ） に定義してあります。 In [1]: from kerasy.Bio.alignment import PairHMM In [2]: # サンプル配列 seqX = \"CCAGAGCTGTGGCAGACAGTGGCT\" seqY = \"CCAGCTGTGCAGACACTGGCTT\" In [3]: model = PairHMM () In [4]: ! cat params.json { \"delta\": \"1/10\", \"epsilon\": \"1/5\", \"tau\": \"1/30\", \"px_e_y\": \"1/8\", \"px_ne_y\": \"1/24\", \"qx\": \"1/4\", \"qy\": \"1/4\" } In [5]: model . set_params ( path = \"params.json\" ) Pair HMM とその利点 HMMのために開発されたアルゴリズムを使える。（らしい←正解ラベルの無いアラインメントでBaum-Welchアルゴリズムをどのように使うのかは現在考察中です。） アラインメントの確率的な解釈が可能になる。 グローバルアラインメントを出力する Pair-HMM Mは $x$ と $y$ がマッチした状態。（$x_i$ と $y_j$ がアライン） Iは $x$ に挿入が起きている状態。（$x_i$ と $-$ がアライン） Dは $x$ に欠失が起きている状態。（$-$ と $y_j$ がアライン） （以下では上から $V&#94;M,V&#94;X,V&#94;Y$ と記述している。） Pair HMMのためのViterbiアルゴリズム 2本数の配列 $x,y$ を与えると確率最大のアラインメントを求めるアルゴリズム。 Initialization: $$ \\begin{cases} V&#94;M(0,0)=1, V&#94;M(i,0)=V&#94;M(0,j)=0\\text{ for }i\\neq0,j\\neq0\\\\ V&#94;X(0,0)=0, V&#94;X(1,0)=\\delta q_{x_1} V&#94;X(i,0)=\\varepsilon q_{x_i}V&#94;X(i-1,0) \\text{ for }i=2,\\ldots,n\\\\ V&#94;Y(0,0)=0, V&#94;Y(0,1)=\\delta q_{y_1} V&#94;Y(0,j)=\\varepsilon q_{y_j}V&#94;Y(0,j-1) \\text{ for }j=2,\\ldots,m\\\\ \\end{cases} $$ Recursion: $i=1,\\ldots,n,\\quad j=1,\\ldots,m$ $$ \\begin{aligned} V&#94;M(i,j) &= p_{x_iy_j}\\max\\begin{cases}(1-2\\delta-\\tau)V&#94;M(i-1,j-1)\\\\(1-\\varepsilon-\\tau)V&#94;X(i-1,j-1)\\\\(1-\\varepsilon-\\tau)V&#94;Y(i-1,j-1)\\end{cases}\\\\ V&#94;X(i,j) &= q_{x_i}\\max\\begin{cases}\\delta V&#94;M(i-1,j)\\\\\\varepsilon V&#94;X(i-1,j)\\end{cases}\\\\ V&#94;Y(i,j) &= q_{y_j}\\max\\begin{cases}\\delta V&#94;M(i,j-1)\\\\\\varepsilon V&#94;X(i,j-1)\\end{cases}\\\\ \\end{aligned} $$ Termination: $$v_e = \\tau\\max\\left(V&#94;M(n,m),V&#94;X(n,m),V&#94;Y(n,m)\\right)$$ In [6]: P_optimal = model . align ( seqX , seqY , return_score = True ) Pair HMM (Viterbi) Alignment score: 3.551370651291424e-30 |parameter| value | -------------------------------- |delta | 0.1| |epsilon | 0.2| |tau | 0.03333333333333333| |px_e_y | 0.125| |px_ne_y |0.041666666666666664| |qx | 0.25| |qy | 0.25| =============================================================== X: CCAGAGCTGTGGCAGACAGTGGC-T Y: CC--AGCTGT-GCAGACACTGGCTT =============================================================== In [7]: print ( f \"π*= {P_optimal} \" ) π*=3.551370651291424e-30 アラインメントの信頼性 配列 $x,y$ が与えられた時、アラインメント $\\pi$ が得られる条件付き確率を考えることができ、それが アラインメントの信頼度 を表していると考ることができる。 $$ P(\\pi|x,y) = \\frac{P(x,y,\\pi)}{P(x,y)}\\\\ P(x,y) = \\sum_{\\text{alignments }\\pi}P(x,y,\\pi) $$ ※ なお、ここで $P(x,y)$ は $x,y$ に関する全ての可能なアラインメントについて確率を足し合わせたもの であり、Forwardアルゴリズムで計算することができる。 Pair HMMのためのForwardアルゴリズム ※ Viterbiの $\\max$ を $\\text{sum}$ に変更しただけ。 Initialization: $$ \\begin{cases} F&#94;M(0,0)=1, F&#94;M(i,0)=F&#94;M(0,j)=0\\text{ for }i\\neq0,j\\neq0\\\\ F&#94;X(0,0)=0, F&#94;X(1,0)=\\delta q_{x_1} F&#94;X(i,0)=\\varepsilon q_{x_i}F&#94;X(i-1,0) \\text{ for }i=2,\\ldots,n\\\\ F&#94;Y(0,0)=0, F&#94;Y(0,1)=\\delta q_{y_1} F&#94;Y(0,j)=\\varepsilon q_{y_j}F&#94;Y(0,j-1) \\text{ for }j=2,\\ldots,m\\\\ \\end{cases} $$ Recursion: $i=1,\\ldots,n,\\quad j=1,\\ldots,m$ $$ \\begin{aligned} F&#94;M(i,j) &= p_{x_iy_j}\\text{sum}\\begin{cases}(1-2\\delta-\\tau)F&#94;M(i-1,j-1)\\\\(1-\\varepsilon-\\tau)F&#94;X(i-1,j-1)\\\\(1-\\varepsilon-\\tau)F&#94;Y(i-1,j-1)\\end{cases}\\\\ F&#94;X(i,j) &= q_{x_i}\\text{sum}\\begin{cases}\\delta F&#94;M(i-1,j)\\\\\\varepsilon F&#94;X(i-1,j)\\end{cases}\\\\ F&#94;Y(i,j) &= q_{y_j}\\text{sum}\\begin{cases}\\delta F&#94;M(i,j-1)\\\\\\varepsilon F&#94;X(i,j-1)\\end{cases}\\\\ \\end{aligned} $$ Termination: $$F_e = \\tau\\ \\text{sum}\\left(F&#94;M(n,m),F&#94;X(n,m),F&#94;Y(n,m)\\right)$$ In [8]: F , P_all = model . forward ( seqX , seqY ) In [9]: print ( f \"𝐹&#94;𝐸(𝑛,𝑚)=𝑃(𝑥,𝑦)=Σalignments𝜋𝑃(𝑥,𝑦,𝜋)= {P_all} \" ) 𝐹&#94;𝐸(𝑛,𝑚)=𝑃(𝑥,𝑦)=Σalignments𝜋𝑃(𝑥,𝑦,𝜋)=2.0457988072916236e-28 In [10]: print ( f \"P(π*|x, y)={P_optimal/P_all}\" ) P(π*|x, y)=0.017359334840912267 $x_i$ と $y_j$ がアラインされる確率 次の式で表される。 $$ \\begin{aligned} P(x_i\\diamondsuit y_i|x,y) &= \\frac{\\sum_{\\pi\\in\\Omega_{ij}}P(x,y,\\pi)}{P(x,y)}\\\\ &= \\frac{F&#94;M(i,j)\\cdot B&#94;M(i,j)}{P(x,y)} \\end{aligned}$$ ※ $\\Omega_{ij}$：$x_i$ と $y_j$ がアラインされるアラインメントの集合 Pair HMMのためのBackwardアルゴリズム Needleman-Wunsh-Gotoh のBackwardアルゴリズムとの類似性に注目！ Initialization: $$ \\begin{cases} B&#94;M(n,m)=B&#94;X(n,m)=B&#94;Y(n,m)=\\tau\\\\ B&#94;X(i,m)=\\varepsilon q_{x_{i+1}}B&#94;X(i+1,m)\\text{ for }i=n-1,\\ldots,1\\\\ B&#94;Y(i,m)=\\varepsilon q_{y_{j+1}}B&#94;X(n,j+1)\\text{ for }j=m-1,\\ldots,1\\\\ B&#94;M(i,m)=\\delta q_{x_{i+1}}B&#94;X(i+1,m)\\text{ for }i=n-1,\\ldots,1\\\\ B&#94;M(n,j)=\\delta q_{y_{j+1}}B&#94;Y(n,j+1)\\text{ for }j=m-1,\\ldots,1\\\\ \\end{cases} $$ Recursion: $i=n-1,\\ldots,1,\\quad j=m-1,\\ldots,1$ $$ \\begin{aligned} B&#94;M(i,j) &= \\text{sum}\\begin{cases}(1-2\\delta-\\tau)p_{x_iy_j}B&#94;M(i+1,j+1)\\\\\\delta q_{x_{i+1}}B(i+1,j)\\\\\\delta q_{y_{j+1}}B&#94;Y(i,j+1)\\end{cases}\\\\ B&#94;X(i,j) &= (1-\\varepsilon-\\tau)p_{x_{i+1},y_{j+1}}B&#94;M(i+1,j+1) + \\varepsilon q_{x_{i+1}}B&#94;X(i+1,j)\\\\ B&#94;Y(i,j) &= (1-\\varepsilon-\\tau)p_{x_{i+1},y_{j+1}}B&#94;M(i+1,j+1) + \\varepsilon q_{y_{j+1}}B&#94;Y(i,j+1)\\\\ \\end{aligned} $$ In [11]: B = model . backward ( seqX , seqY ) In [12]: Pij = ( F * B ) / P_all In [13]: import seaborn as sns import matplotlib.pyplot as plt In [14]: sns . heatmap ( Pij ) plt . show () In [15]: # 可視化のために pandas を使用。 import pandas as pd r , c = Pij . shape pd . set_option ( 'display.max_rows' , r ) pd . set_option ( 'display.max_columns' , c ) In [16]: df = pd . DataFrame ( Pij ) In [17]: df Out[17]: .dataframe thead tr:only-child th { text-align: right; } .dataframe thead th { text-align: left; } .dataframe tbody tr th { vertical-align: top; } 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 0 1.139605e+00 1.145169e-02 1.061625e-04 9.380071e-06 7.330898e-07 1.256616e-08 5.467340e-10 2.910714e-11 5.763005e-12 3.410212e-13 5.102192e-15 2.187247e-16 1.988821e-17 1.147484e-18 1.367416e-20 6.720910e-22 4.976161e-24 7.098501e-26 9.237930e-28 2.211060e-29 3.898762e-32 1.763484e-40 1 1.002452e-01 9.915333e-01 6.192125e-03 1.868999e-04 4.332564e-05 9.546525e-07 4.066396e-08 2.157028e-09 9.465879e-11 4.846141e-11 4.058759e-13 3.267685e-14 8.754145e-16 1.928520e-16 1.373420e-18 1.082830e-19 9.927246e-22 1.394016e-23 1.508549e-25 4.777080e-27 9.963503e-30 8.788027e-38 2 2.530997e-02 1.110298e-01 7.189425e-01 4.724160e-03 2.510915e-04 4.961792e-05 1.187062e-06 1.017255e-07 3.970235e-09 2.068131e-10 9.703401e-11 7.255597e-13 1.565563e-13 2.611280e-15 3.254769e-16 2.694314e-18 1.079695e-19 1.562036e-21 1.545424e-23 1.735256e-25 1.265060e-27 2.215960e-35 3 1.439692e-03 1.313691e-01 9.101842e-02 4.446381e-01 5.912097e-03 3.126913e-04 8.585244e-05 1.538885e-06 1.919091e-07 8.250641e-09 2.393023e-10 1.283784e-10 1.387610e-12 2.250638e-13 4.821068e-15 2.111543e-16 4.457287e-18 2.448800e-19 3.227733e-21 1.284984e-23 8.240296e-26 3.335362e-33 4 3.517101e-05 3.000139e-03 4.131934e-01 8.504087e-02 1.663724e-01 9.561056e-03 2.917045e-04 9.039141e-05 1.788740e-06 1.312414e-07 2.869640e-08 4.101759e-10 1.507867e-10 3.456004e-12 5.959996e-13 5.757530e-15 2.024716e-16 4.111221e-18 7.279991e-20 1.060049e-21 6.121304e-24 4.843531e-31 5 9.934762e-06 1.458875e-04 3.927027e-03 6.740773e-01 8.441291e-02 7.234362e-02 1.094905e-02 1.879103e-04 1.252776e-04 1.454564e-06 1.059818e-07 2.729047e-08 9.494833e-10 8.082013e-11 1.033243e-11 3.411004e-13 6.554134e-15 3.958672e-16 8.201302e-18 3.482706e-20 2.714352e-22 4.461969e-29 6 5.322130e-07 6.381400e-05 4.257593e-04 6.688387e-03 9.174344e-01 4.917686e-02 4.329939e-02 3.819221e-03 1.763480e-04 1.328334e-04 1.940120e-06 9.105133e-08 1.541103e-08 2.609538e-09 8.150731e-11 2.404569e-11 1.889654e-13 3.985572e-15 1.024288e-16 6.839760e-18 1.341414e-20 4.476503e-27 7 5.863612e-10 7.892422e-07 1.012986e-04 1.397365e-03 1.342858e-02 1.002812e+00 2.593641e-02 3.890025e-02 1.670263e-03 1.614886e-04 8.871868e-05 1.756325e-06 1.155298e-07 1.122902e-08 2.203971e-09 1.028948e-10 2.509711e-11 1.531285e-13 2.099939e-15 4.258022e-17 2.374690e-18 1.208869e-24 8 1.171184e-11 2.035729e-09 3.700419e-07 2.397639e-04 4.844063e-03 2.599346e-02 9.949710e-01 1.502418e-02 2.712144e-02 1.478651e-03 1.433184e-04 6.712671e-05 1.454730e-06 9.766789e-08 9.072910e-09 2.328874e-09 6.340026e-11 1.502027e-11 1.916941e-13 1.314758e-15 1.242412e-17 4.691715e-23 9 3.005919e-13 6.399055e-11 5.515662e-09 3.748097e-07 1.153167e-04 1.497122e-02 6.310820e-02 8.863944e-01 1.030851e-02 1.491223e-02 2.002265e-03 8.941933e-05 3.530505e-05 1.470719e-06 9.754840e-08 8.043302e-09 3.375435e-09 3.679377e-11 2.917845e-12 5.484419e-14 1.471719e-15 4.178025e-21 10 1.792807e-15 1.557812e-12 1.844985e-10 1.289502e-08 7.545128e-07 6.340240e-05 2.061627e-02 1.787166e-01 5.419262e-01 1.188051e-02 1.024380e-02 2.347055e-03 7.577232e-05 1.796622e-05 1.114937e-06 7.069534e-08 8.011504e-09 2.756012e-09 4.374664e-11 6.704524e-13 1.075503e-14 1.217530e-19 11 1.923711e-17 4.362099e-15 1.941124e-12 6.147024e-10 1.551641e-08 5.550653e-07 1.380449e-04 9.537258e-03 5.398937e-01 1.863598e-01 1.452105e-02 9.548898e-03 1.837989e-03 5.136835e-05 1.397535e-05 6.835406e-07 5.429499e-08 8.819330e-09 1.851138e-09 1.231506e-11 1.775772e-13 2.576473e-18 12 5.638842e-19 1.455168e-16 9.139939e-15 1.547158e-12 1.037887e-09 2.248539e-08 1.151600e-06 9.872926e-05 5.973776e-03 8.862574e-01 6.786997e-02 1.624026e-02 4.029496e-03 2.179139e-03 2.921118e-05 1.601828e-05 5.561847e-07 3.123249e-08 2.978327e-09 9.604760e-10 3.744283e-12 9.636167e-17 13 3.331427e-21 7.494769e-19 2.963338e-16 6.987305e-15 4.315679e-12 6.087761e-10 3.497465e-08 3.604967e-06 8.639915e-05 5.915526e-03 9.923696e-01 2.749764e-02 2.345296e-02 2.411435e-03 1.600356e-03 2.967960e-05 1.263876e-05 5.535990e-07 1.777340e-08 1.086922e-09 1.497803e-10 4.715717e-15 14 8.334075e-23 3.113616e-20 1.885485e-18 4.096232e-16 1.085250e-14 2.877122e-12 9.801182e-10 2.465783e-08 7.111413e-06 1.332057e-04 5.532024e-03 1.019408e+00 1.546140e-02 2.230611e-02 1.326417e-03 7.657518e-04 3.756285e-05 1.397395e-05 7.084890e-07 8.614586e-09 3.251784e-10 1.560898e-13 15 2.761536e-24 1.577325e-22 1.652226e-19 6.855680e-18 4.640406e-16 1.789313e-14 1.881340e-12 7.696555e-10 3.721167e-08 3.131924e-06 2.768933e-04 5.432195e-03 1.019385e+00 1.220031e-02 2.678270e-02 1.012065e-03 4.234835e-04 2.691482e-05 8.312535e-06 2.735984e-07 4.296980e-09 1.264609e-12 16 1.125679e-25 3.526855e-23 5.295754e-22 1.029758e-19 2.954167e-17 8.415539e-16 3.337555e-14 1.886064e-12 3.708635e-10 8.103999e-08 2.979865e-06 2.717052e-04 5.867388e-03 1.008690e+00 1.398136e-02 2.796359e-02 1.094449e-03 2.222028e-04 1.653854e-05 6.727102e-06 7.321521e-08 3.095212e-11 17 5.314132e-29 1.371847e-25 1.002377e-22 1.431441e-21 2.329882e-19 2.824449e-17 1.264033e-15 1.039492e-13 1.896385e-12 2.117496e-10 8.676212e-08 1.428983e-06 4.224040e-04 7.551663e-03 9.828098e-01 2.577489e-02 2.154489e-02 1.348560e-03 1.271999e-04 1.123527e-05 1.554246e-06 1.061734e-09 18 1.311292e-30 3.344026e-28 1.039987e-25 1.917693e-22 4.842995e-21 2.644625e-19 5.424283e-17 1.016892e-15 2.466777e-13 3.876336e-12 1.412328e-10 6.644843e-08 1.307534e-06 2.267450e-04 1.352321e-02 9.236001e-01 4.123399e-02 2.242045e-02 1.780378e-03 1.137684e-04 4.658387e-06 2.707169e-08 19 3.685034e-32 1.308860e-29 1.727006e-27 1.846830e-25 9.168694e-23 2.025241e-20 2.015727e-19 7.009128e-17 1.110761e-15 2.135974e-13 8.991483e-12 3.294862e-10 2.170110e-08 1.342768e-06 1.738901e-04 1.366663e-02 9.157034e-01 5.085192e-02 1.134612e-02 1.333942e-03 1.601513e-04 7.755075e-07 20 2.627187e-34 3.307561e-31 6.412082e-29 8.638204e-27 5.130913e-25 5.421429e-23 2.735844e-20 4.581117e-19 4.673008e-17 1.996269e-15 1.567873e-13 2.425635e-11 7.144030e-10 2.339911e-08 4.401237e-07 1.583398e-04 8.993801e-03 8.715290e-01 1.032744e-01 9.301698e-03 8.040002e-04 1.264439e-05 21 3.712503e-36 1.248259e-33 7.484327e-31 4.015876e-28 1.275117e-26 7.126689e-25 1.294296e-22 1.126902e-20 1.562753e-18 3.245370e-17 8.822502e-16 3.618329e-13 1.719160e-11 9.436607e-10 3.634534e-08 4.567520e-07 2.489897e-05 1.031566e-02 8.313752e-01 1.337435e-01 9.529909e-03 1.755113e-04 22 1.081603e-37 4.975375e-35 3.859345e-33 1.396911e-30 8.994506e-28 2.233130e-26 1.907603e-24 1.395483e-22 7.223861e-21 2.385762e-18 3.020013e-17 1.437842e-15 1.876938e-13 2.135337e-11 5.432165e-10 7.346489e-08 4.608162e-07 1.776497e-05 2.915009e-03 7.255898e-01 2.520881e-01 4.862597e-03 23 7.053935e-40 3.695478e-37 9.639089e-35 1.470014e-32 2.795455e-30 1.235666e-27 2.213410e-26 7.771768e-24 1.829949e-22 1.539068e-20 1.623359e-18 3.985091e-17 3.521057e-15 1.986472e-13 1.486597e-11 3.334896e-10 7.576041e-08 5.116867e-07 2.834710e-05 1.528768e-03 3.676275e-01 6.239253e-01 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-6.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-6.html"},{"title":"生物物理学 第2回","text":"講師： 樋口秀男 生命体（生物）の一般的定義 生物とは、以下の四つの条件を満たす物質システム 自己と外界との境界 エネルギーと物質の代謝 自己複製 恒常性 電子 分子 細胞数 整体の階層性 $10&#94;{28}$ $10&#94;{23}$ $10&#94;{13}$ ヒト 意識・運動・代謝 $10&#94;{24}$ $10&#94;{19}$ $10&#94;{9}$ 心臓 循環・拡散 $10&#94;{15}$ $10&#94;{10}$ $10&#94;{0}$ 心筋細胞 生理的なリズム単位 $10&#94;{5}$ $10&#94;{5}$ 筋節 ゆらぎを制した振動 $10&#94;{0}$ タンパク質 反応のゆらぎ $10&#94;{2}$ アミノ酸 タンパク質の性質の起源 $10&#94;{0}$ 電子 量子力学の支配領域 生命科学を覆う謎 生命誕生の謎（+生命の進化、分化の謎） タンパク質構造の決定と機能との関係の謎 細胞が超多種分子（タンパク質、脂質、小分子、イオン、…）の濃度・種類・機能の制御を行う謎 個体（臓器、器官等）の構造と機能構築の謎 生命誕生の謎 元素誕生は超新星の爆発→重金属ができる。 現宇宙の元素の割合と人体内の元素比が非常に似通っている。 RNAワールド プロテインワールド 原始地球上に存在したと仮定される、RNA からなる自己複製系のこと。また、これがかつて存在し、現生生物へと進化したという仮説。 まずアミノ酸ができ、重合してポリペプチド、さらにタンパク質が作り出され、これが触媒として働いて生命を作り出したという仮説。 生命誕生を示唆した実験事実 ミラーの放電によるアミノ酸合成(1953) $\\mathrm{CH_3,NH_3,H_2,H_2O}$ を含む気体に放電（落雷を模した）をする。 実験２週間後に以下の化合物 （アミノ酸） ができた。 グリシン アラニン グルタル酸 酢酸（脂肪酸） 塩基や糖（リボース）、核酸基、RNA、タンパク質なども化学合成可能。 生命基本物質の化学合成が成功した理由 地球には、エネルギーの高い（海底火山、紫外線、雷、高音）場所と低く安定な場所が共存していたので、分子は 高エネルギー環境で合成され、低エネルギー環境で安定化する ことができた。 $$A\\overset{k_1}{{\\longrightarrow}}B\\overset{k_2}{{\\longrightarrow}}C$$ In [1]: import numpy as np import matplotlib.pyplot as plt In [2]: def simulate ( ax , color , tp , A = 1 , B = 0 , C = 0 , dt = 1e-3 , k1 = 0.07 , k2 = 0.02 , K = 1 ): time = np . arange ( 0 , 100 , dt ) As = np . zeros ( shape = len ( time )) Bs = np . zeros ( shape = len ( time )) Cs = np . zeros ( shape = len ( time )) for i , t in enumerate ( time ): dA = ( - k1 * A ) * dt * K dB = ( k1 * A - k2 * B ) * dt * K dC = ( k2 * B ) * dt * K A += dA ; B += dB ; C += dC As [ i ] = A ; Bs [ i ] = B ; Cs [ i ] = C if t > tp : K = 1e-6 # 温度を下げ、反応速度が1e-6倍になったことをシミュレーション ax . plot ( time , As , color = color ) ax . plot ( time , Bs , color = color ) ax . plot ( time , Cs , color = color ) if tp < 100 : ax . vlines ( x = tp , ymin = 0 , ymax = 1 , linestyle = \":\" ) return ax In [3]: fig , ax = plt . subplots () ax = simulate ( ax = ax , color = \"red\" , tp = 20 ) ax = simulate ( ax = ax , color = \"black\" , tp = 100 ) ax . set_xlabel ( \"Time\" ) ax . set_ylabel ( \"RQ\" ) ax . set_title ( \"Simulation Result\" ) plt . show () 上記のシミュレーション結果から、$A,B$ 分子を得るためには、 途中で（温度が下がるなどの結果）反応速度が下がる必要がある ことがわかる。 生体分子が濃縮され、多次反応による分子合成速度が上がった。 地球は巨大で多様な反応槽であったため、合成確率が上がった。 考えられる生物 地球型炭素生物 地球環境のように水と二酸化炭素（あるいはメタン）が豊富な惑星であるなら、情報記憶（DNA）→伝令（mRNA）→機能（タンパク質、RNA）のような地球型の仕事を分担した炭素生物が生まれる可能性は高い。 炭素生物 vs ケイ素生物 常温常圧で安定な炭素ー炭素結合 とは違い、 ケイ素ーケイ素結合はパイ結合やシグマ結合による二重三重結合を作る傾向がほとんど無く、非常に不安定 である。 炭素ーケイ素結合は安定 なので、炭素生物の中にケイ素が含まれるだろう。したがって、ケイ素生物の存在する確率は非常に低い。 金属生物 常温において金属結合が安定であり、分子としての機能を持つことは困難であるため、生物の中心にはならないだろう。ただし、金属イオンや錯体として、炭素生物やケイ素生物に利用されることはありうる。 講義のまとめ 生命分子や細胞の種類は多く、構造や機能をどのように理解するかが、 生命科学全体の 課題である。 生命は 宇宙の元素を効率よく利用した。 地球上の 高↔︎低エネルギーを行き交い 、多様な環境や濃縮により高確率かつ安定的に生体分子が合成された。 これが生命の誕生の確率を大きくした。 初めにRNAが合成され、それを鋳型としてタンパク質が合成され、原子生命が誕生したと想像される。 系外惑星にも、炭素生命体が存在する可能性がある。 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物物理学","url":"https://iwasakishuto.github.io/University/3A/生物物理学-2.html","loc":"https://iwasakishuto.github.io/University/3A/生物物理学-2.html"},{"title":"ペアワイズアラインメント","text":"ペアワイズアラインメントとは 2本のDNAの塩基配列（タンパク質のアミノ酸配列）を比較する方法の一つ バイオインフォマティクスでは最も基本的な解析手法 なぜDNA配列の比較をするのか DNAの機能を知りたい （∵ DNAの配列が似ていると機能が似ている） DNAのどの部分が重要かを知りたい。 （∵ 「保存されている＝重要」だと考えられる） 生物の進化系統樹を知りたい 新型シーケンサーで読まれたDNAの由来を知りたい DNAの変異や新型シークエンサーの読み取りエラーでは 長さが異なる ことがあるので、 長さの変化を考慮し効率の良い動的計画法 を用いる アラインメントの種類 説明 例 グローバルアラインメント 2本の配列の 全体 をアラインメントする。 Needleman-Wunsch ローカルアラインメント 2本の配列の 似ている部分を検出 し、その部分をアランメントする Smith-Waterman 実装 各種アラインメントを実装していく。なお、全て Affine gap penalty を利用する。 In [1]: from kerasy.Bio.alignment import NeedlemanWunshGotoh , SmithWaterman , BackwardNeedlemanWunshGotoh In [2]: # サンプル配列 seqX = \"GGAGTGAGGGGAGCAGTTGGGCTGAAGATGGTCAACGCCGAGGGAACGGTAAAGGCGACGGAGCTGTGGCAGACCTGGCTTCCTAACCACGTCCCGTGTTTTGCGGCTCCGCGAGGACTG\" seqY = \"CGCATGCGGAGTGAGGGGAGCAGTTGGGAACAGATGGTCCCGCCGAGGGACCGGTGGGCAGACGGGGCCAGCTGTGGCAGACACTGGCTTCTAACCACCGAACGTTCTTTCCGCTCCGC\" Needleman-Wunsch-Gotoh 自作のモジュール （ kerasy.Bio.alignment.NeedlemanWunshGotoh ） を使ってアラインメントをします。 In [3]: model = NeedlemanWunshGotoh () In [4]: model . align ( seqX , seqY ) Needleman-Wunsh-Gotoh Alignment score: 14.0 |parameter |value| ----------------------------- |match | 1| |mimatch | -1| |gap opening penalty | 5| |gap extension penalty| 1| =============================================================== X: -------GGAGTGAGGGGAGCAGTTGGGCTGAAGATGGTCAACGCCGAGGGAACGGTAAA Y: CGCATGCGGAGTGAGGGGAGCAGTTGGG-AACAGATGGTC-CCGCCGAGGGACCGGT-GG X: GGCGACGG----AGCTGTGGCAGAC-CTGGCTTCCTAACCACGTCCCGTGTTTTGCGGCT Y: GCAGACGGGGCCAGCTGTGGCAGACACTGGCTT-CTAACCACCGAACGT-TCTTTCCGCT X: CCGCGAGGACTG Y: CCGC-------- =============================================================== Smith-Waterman 自作のモジュール （ kerasy.Bio.alignment.SmithWaterman ） を使ってアラインメントをします。 In [5]: model = SmithWaterman () In [6]: model . align ( seqX , seqY ) Smith-Waterman Alignment score: 37.0 |parameter |value| ----------------------------- |match | 1| |mimatch | -1| |gap opening penalty | 5| |gap extension penalty| 1| =============================================================== Aligned positions: X[0,111] Y[7,118] X: GGAGTGAGGGGAGCAGTTGGGCTGAAGATGGTCAACGCCGAGGGAACGGTAAAGGCGACG Y: GGAGTGAGGGGAGCAGTTGGG-AACAGATGGTC-CCGCCGAGGGACCGGT-GGGCAGACG X: G----AGCTGTGGCAGAC-CTGGCTTCCTAACCACGTCCCGTGTTTTGCGGCTCCGC Y: GGGCCAGCTGTGGCAGACACTGGCTT-CTAACCACCGAACGT-TCTTTCCGCTCCGC =============================================================== 制約付きアラインメント $x_i$ と $y_j$ がアラインされるという制約下で最大のアラインメントスコアを求める。 全てのパターンを列挙すると $\\mathcal{O}(n&#94;2m&#94;2)$ の時間がかかるが、 後ろ向きアラインメント と組み合わせることで全てのパターンを $\\mathcal{O}(nm)$ で計算可能。 前向き：xiとyjがアラインされる時の、iまでとjまでの配列の最大アラインメントスコアを保持。 後ろ向き：xiとyjがアラインされる時の、i+1以降とj+1以降の配列の最大アラインメントスコアを保持。 Needleman-Wunsch-Gotohの逆向きアラインメントは （ kerasy.Bio.alignment.BackwardNeedlemanWunshGotoh ） に定義してあります。 In [7]: model_forward = NeedlemanWunshGotoh () model_backward = BackwardNeedlemanWunshGotoh () In [8]: model_forward . align ( seqX , seqY , memorize = True ) Needleman-Wunsh-Gotoh Alignment score: 14.0 |parameter |value| ----------------------------- |match | 1| |mimatch | -1| |gap opening penalty | 5| |gap extension penalty| 1| =============================================================== X: -------GGAGTGAGGGGAGCAGTTGGGCTGAAGATGGTCAACGCCGAGGGAACGGTAAA Y: CGCATGCGGAGTGAGGGGAGCAGTTGGG-AACAGATGGTC-CCGCCGAGGGACCGGT-GG X: GGCGACGG----AGCTGTGGCAGAC-CTGGCTTCCTAACCACGTCCCGTGTTTTGCGGCT Y: GCAGACGGGGCCAGCTGTGGCAGACACTGGCTT-CTAACCACCGAACGT-TCTTTCCGCT X: CCGCGAGGACTG Y: CCGC-------- =============================================================== In [9]: model_backward . align ( seqX , seqY , memorize = True ) Backward Needleman-Wunsh-Gotoh Alignment score: 14.0 |parameter |value| ----------------------------- |match | 1| |mimatch | -1| |gap opening penalty | 5| |gap extension penalty| 1| =============================================================== X: -------GGAGTGAGGGGAGCAGTTGGGCTGAAGATGGTCAACGCCGAGGGAACGGTAAA Y: CGCATGCGGAGTGAGGGGAGCAGTTGGGAACA-GATGGTCC-CGCCGAGGGACCGGTGG- X: GGCGACGG----AGCTGTGGCAGAC-CTGGCTTCCTAACCACGTCCCGTGTTTTGCGGCT Y: GCAGACGGGGCCAGCTGTGGCAGACACTGGCTTC-TAACCACCGAACGTTCTTTCCG-CT X: CCGCGAGGACT Y: CCGC------- =============================================================== In [10]: k = 3 n = len ( seqX ) + 1 m = len ( seqY ) + 1 In [11]: M = model_forward . DP . reshape (( k , n , m ))[ 0 , 1 :, 1 :] bM = model_backward . DP . reshape (( k , n , m ))[ 0 , 1 :, 1 :] In [12]: A = M + bM In [13]: # 上の配列を見れば、seqX[0] と seqY[7] がアラインされている時に最大スコア14を取ることがわかるので、それを確かめる。 print ( A [ 0 , 7 ]) 14.0 In [14]: # 可視化のために pandas を使用。 import pandas as pd pd . set_option ( 'display.max_rows' , m ) pd . set_option ( 'display.max_columns' , n ) In [15]: df = pd . DataFrame ( A ) In [16]: df Out[16]: .dataframe thead tr:only-child th { text-align: right; } .dataframe thead th { text-align: left; } .dataframe tbody tr th { vertical-align: top; } 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 0 12.0 10.0 8.0 8.0 8.0 10.0 8.0 14.0 7.0 2.0 1.0 -4.0 -5.0 -10.0 -11.0 -14.0 -17.0 -20.0 -25.0 -26.0 -31.0 -34.0 -35.0 -38.0 -39.0 -40.0 -41.0 -44.0 -49.0 -50.0 -51.0 -54.0 -55.0 -60.0 -63.0 -64.0 -67.0 -70.0 -71.0 -72.0 -75.0 -76.0 -79.0 -76.0 -81.0 -80.0 -83.0 -84.0 -89.0 -92.0 -93.0 -94.0 -95.0 -98.0 -101.0 -100.0 -103.0 -106.0 -111.0 -112.0 -113.0 -118.0 -117.0 -118.0 -119.0 -122.0 -125.0 -128.0 -129.0 -132.0 -133.0 -138.0 -141.0 -142.0 -147.0 -148.0 -150.0 -156.0 -156.0 -159.0 -160.0 -163.0 -164.0 -167.0 -170.0 -171.0 -174.0 -177.0 -180.0 -181.0 -184.0 -187.0 -190.0 -193.0 -194.0 -197.0 -198.0 -201.0 -200.0 -203.0 -206.0 -209.0 -210.0 -211.0 -214.0 -217.0 -218.0 -221.0 -224.0 -225.0 -228.0 -229.0 -230.0 -235.0 -238.0 -241.0 -242.0 -243.0 -246.0 1 5.0 12.0 8.0 6.0 6.0 8.0 8.0 8.0 14.0 5.0 2.0 -1.0 -4.0 -7.0 -10.0 -11.0 -14.0 -17.0 -22.0 -25.0 -26.0 -33.0 -34.0 -35.0 -38.0 -39.0 -40.0 -41.0 -44.0 -49.0 -50.0 -53.0 -54.0 -57.0 -62.0 -63.0 -64.0 -67.0 -70.0 -71.0 -72.0 -75.0 -76.0 -79.0 -76.0 -81.0 -80.0 -83.0 -84.0 -89.0 -92.0 -93.0 -94.0 -95.0 -98.0 -101.0 -100.0 -103.0 -106.0 -111.0 -112.0 -113.0 -118.0 -117.0 -118.0 -119.0 -122.0 -125.0 -128.0 -131.0 -132.0 -135.0 -140.0 -141.0 -144.0 -147.0 -148.0 -150.0 -157.0 -156.0 -159.0 -160.0 -163.0 -166.0 -169.0 -170.0 -171.0 -174.0 -179.0 -180.0 -183.0 -186.0 -189.0 -192.0 -193.0 -194.0 -197.0 -200.0 -201.0 -200.0 -203.0 -206.0 -211.0 -210.0 -211.0 -216.0 -217.0 -220.0 -223.0 -224.0 -227.0 -228.0 -229.0 -232.0 -237.0 -240.0 -243.0 -242.0 -243.0 2 2.0 3.0 10.0 8.0 6.0 6.0 6.0 6.0 6.0 14.0 3.0 0.0 -3.0 -4.0 -9.0 -12.0 -13.0 -16.0 -17.0 -24.0 -27.0 -26.0 -31.0 -34.0 -35.0 -38.0 -41.0 -42.0 -41.0 -44.0 -47.0 -48.0 -53.0 -54.0 -59.0 -60.0 -65.0 -64.0 -67.0 -68.0 -69.0 -70.0 -75.0 -76.0 -79.0 -76.0 -83.0 -80.0 -85.0 -84.0 -89.0 -90.0 -91.0 -96.0 -95.0 -98.0 -101.0 -100.0 -105.0 -106.0 -111.0 -112.0 -113.0 -116.0 -117.0 -118.0 -121.0 -122.0 -125.0 -126.0 -131.0 -134.0 -137.0 -140.0 -143.0 -146.0 -149.0 -150.0 -150.0 -157.0 -156.0 -159.0 -158.0 -163.0 -166.0 -169.0 -172.0 -171.0 -176.0 -177.0 -180.0 -183.0 -184.0 -187.0 -190.0 -193.0 -192.0 -197.0 -198.0 -201.0 -200.0 -203.0 -204.0 -209.0 -210.0 -213.0 -214.0 -217.0 -220.0 -221.0 -224.0 -225.0 -228.0 -231.0 -234.0 -237.0 -238.0 -241.0 -242.0 3 -1.0 2.0 3.0 8.0 6.0 6.0 4.0 6.0 6.0 4.0 14.0 1.0 0.0 -5.0 -4.0 -9.0 -12.0 -13.0 -18.0 -17.0 -24.0 -29.0 -26.0 -31.0 -34.0 -35.0 -38.0 -41.0 -42.0 -41.0 -44.0 -49.0 -48.0 -55.0 -56.0 -59.0 -60.0 -65.0 -64.0 -67.0 -68.0 -69.0 -70.0 -75.0 -76.0 -79.0 -76.0 -83.0 -80.0 -85.0 -84.0 -89.0 -90.0 -91.0 -96.0 -95.0 -98.0 -101.0 -100.0 -105.0 -106.0 -111.0 -112.0 -113.0 -116.0 -117.0 -118.0 -121.0 -122.0 -127.0 -126.0 -133.0 -136.0 -137.0 -142.0 -143.0 -146.0 -150.0 -151.0 -150.0 -157.0 -156.0 -159.0 -160.0 -165.0 -166.0 -169.0 -172.0 -171.0 -176.0 -179.0 -182.0 -185.0 -186.0 -187.0 -192.0 -193.0 -192.0 -197.0 -198.0 -201.0 -202.0 -205.0 -204.0 -209.0 -212.0 -213.0 -216.0 -217.0 -220.0 -223.0 -224.0 -225.0 -230.0 -233.0 -236.0 -239.0 -238.0 -241.0 4 -4.0 -3.0 0.0 1.0 8.0 4.0 4.0 2.0 4.0 4.0 2.0 14.0 1.0 -2.0 -5.0 -6.0 -11.0 -14.0 -15.0 -20.0 -19.0 -22.0 -27.0 -26.0 -29.0 -34.0 -35.0 -38.0 -41.0 -42.0 -41.0 -46.0 -49.0 -50.0 -53.0 -58.0 -61.0 -60.0 -63.0 -64.0 -67.0 -66.0 -69.0 -68.0 -75.0 -76.0 -79.0 -76.0 -83.0 -80.0 -85.0 -84.0 -87.0 -92.0 -91.0 -94.0 -95.0 -100.0 -103.0 -100.0 -105.0 -106.0 -109.0 -112.0 -113.0 -116.0 -119.0 -118.0 -121.0 -124.0 -127.0 -128.0 -131.0 -136.0 -137.0 -142.0 -145.0 -148.0 -148.0 -153.0 -150.0 -155.0 -156.0 -159.0 -160.0 -165.0 -168.0 -169.0 -170.0 -171.0 -176.0 -177.0 -182.0 -185.0 -186.0 -189.0 -190.0 -193.0 -192.0 -197.0 -198.0 -201.0 -202.0 -205.0 -204.0 -207.0 -210.0 -211.0 -214.0 -215.0 -220.0 -221.0 -224.0 -227.0 -228.0 -233.0 -234.0 -237.0 -238.0 5 -7.0 -4.0 -3.0 -2.0 -1.0 8.0 2.0 4.0 4.0 2.0 4.0 2.0 14.0 1.0 0.0 -3.0 -6.0 -9.0 -14.0 -15.0 -20.0 -21.0 -20.0 -25.0 -26.0 -29.0 -32.0 -33.0 -36.0 -39.0 -40.0 -43.0 -44.0 -49.0 -52.0 -53.0 -56.0 -59.0 -60.0 -61.0 -64.0 -65.0 -64.0 -67.0 -66.0 -73.0 -74.0 -77.0 -76.0 -81.0 -78.0 -83.0 -84.0 -85.0 -90.0 -91.0 -92.0 -95.0 -98.0 -101.0 -98.0 -103.0 -106.0 -107.0 -110.0 -111.0 -114.0 -117.0 -118.0 -121.0 -122.0 -127.0 -130.0 -131.0 -136.0 -137.0 -140.0 -144.0 -147.0 -146.0 -151.0 -150.0 -153.0 -156.0 -159.0 -160.0 -163.0 -166.0 -169.0 -170.0 -173.0 -176.0 -179.0 -182.0 -183.0 -184.0 -187.0 -190.0 -191.0 -190.0 -195.0 -198.0 -201.0 -200.0 -203.0 -206.0 -207.0 -210.0 -213.0 -214.0 -217.0 -218.0 -219.0 -224.0 -227.0 -230.0 -233.0 -232.0 -235.0 6 -10.0 -9.0 -6.0 -3.0 -4.0 -1.0 6.0 2.0 2.0 4.0 2.0 2.0 2.0 14.0 1.0 -2.0 -5.0 -8.0 -9.0 -14.0 -17.0 -18.0 -23.0 -20.0 -23.0 -28.0 -31.0 -34.0 -33.0 -34.0 -37.0 -38.0 -43.0 -44.0 -49.0 -52.0 -55.0 -56.0 -57.0 -58.0 -61.0 -64.0 -66.0 -62.0 -65.0 -66.0 -71.0 -74.0 -77.0 -76.0 -79.0 -76.0 -81.0 -84.0 -85.0 -88.0 -91.0 -94.0 -97.0 -96.0 -99.0 -98.0 -101.0 -104.0 -107.0 -110.0 -113.0 -114.0 -115.0 -116.0 -121.0 -124.0 -127.0 -130.0 -133.0 -136.0 -139.0 -141.0 -142.0 -147.0 -146.0 -149.0 -148.0 -153.0 -156.0 -159.0 -162.0 -163.0 -166.0 -167.0 -170.0 -173.0 -174.0 -177.0 -180.0 -183.0 -182.0 -187.0 -188.0 -191.0 -190.0 -193.0 -196.0 -199.0 -200.0 -203.0 -204.0 -207.0 -210.0 -211.0 -214.0 -215.0 -218.0 -221.0 -224.0 -227.0 -228.0 -231.0 -232.0 7 -13.0 -10.0 -9.0 -8.0 -5.0 -2.0 -1.0 6.0 2.0 0.0 4.0 0.0 2.0 1.0 14.0 3.0 0.0 -3.0 -8.0 -9.0 -14.0 -17.0 -18.0 -22.0 -18.0 -21.0 -26.0 -29.0 -32.0 -33.0 -34.0 -37.0 -38.0 -43.0 -46.0 -47.0 -50.0 -53.0 -54.0 -55.0 -58.0 -59.0 -64.0 -64.0 -60.0 -63.0 -66.0 -69.0 -72.0 -75.0 -76.0 -77.0 -74.0 -79.0 -82.0 -83.0 -86.0 -89.0 -94.0 -95.0 -96.0 -97.0 -98.0 -99.0 -102.0 -105.0 -108.0 -111.0 -112.0 -115.0 -116.0 -121.0 -124.0 -125.0 -130.0 -131.0 -134.0 -139.0 -139.0 -142.0 -145.0 -146.0 -147.0 -150.0 -153.0 -154.0 -157.0 -160.0 -163.0 -164.0 -167.0 -170.0 -173.0 -176.0 -177.0 -180.0 -181.0 -184.0 -185.0 -186.0 -189.0 -192.0 -193.0 -194.0 -197.0 -200.0 -201.0 -204.0 -207.0 -208.0 -211.0 -212.0 -213.0 -218.0 -221.0 -224.0 -225.0 -226.0 -229.0 8 -16.0 -13.0 -12.0 -11.0 -10.0 -5.0 -4.0 -1.0 6.0 0.0 2.0 2.0 2.0 0.0 3.0 14.0 3.0 0.0 -5.0 -6.0 -11.0 -14.0 -15.0 -18.0 -21.0 -16.0 -21.0 -26.0 -29.0 -30.0 -31.0 -34.0 -35.0 -40.0 -41.0 -44.0 -47.0 -50.0 -51.0 -52.0 -55.0 -56.0 -59.0 -64.0 -62.0 -60.0 -61.0 -66.0 -69.0 -72.0 -75.0 -74.0 -75.0 -74.0 -79.0 -80.0 -83.0 -86.0 -91.0 -92.0 -93.0 -96.0 -95.0 -96.0 -99.0 -102.0 -105.0 -108.0 -109.0 -112.0 -113.0 -118.0 -121.0 -122.0 -127.0 -128.0 -131.0 -135.0 -138.0 -137.0 -142.0 -143.0 -144.0 -147.0 -150.0 -151.0 -154.0 -157.0 -160.0 -161.0 -164.0 -167.0 -170.0 -173.0 -174.0 -177.0 -178.0 -179.0 -182.0 -183.0 -186.0 -189.0 -190.0 -191.0 -194.0 -197.0 -198.0 -201.0 -204.0 -205.0 -208.0 -209.0 -210.0 -215.0 -218.0 -221.0 -222.0 -223.0 -226.0 9 -19.0 -16.0 -15.0 -14.0 -13.0 -8.0 -7.0 -4.0 -1.0 4.0 2.0 0.0 2.0 0.0 2.0 3.0 14.0 3.0 -2.0 -3.0 -8.0 -11.0 -12.0 -17.0 -16.0 -19.0 -16.0 -21.0 -26.0 -27.0 -28.0 -31.0 -32.0 -37.0 -40.0 -39.0 -44.0 -47.0 -48.0 -49.0 -52.0 -53.0 -58.0 -57.0 -62.0 -62.0 -58.0 -61.0 -66.0 -69.0 -72.0 -73.0 -72.0 -75.0 -74.0 -77.0 -80.0 -83.0 -88.0 -89.0 -90.0 -95.0 -94.0 -93.0 -96.0 -99.0 -102.0 -105.0 -106.0 -109.0 -110.0 -115.0 -118.0 -119.0 -124.0 -125.0 -128.0 -132.0 -133.0 -136.0 -137.0 -140.0 -141.0 -144.0 -147.0 -148.0 -151.0 -154.0 -157.0 -158.0 -161.0 -164.0 -167.0 -170.0 -171.0 -174.0 -175.0 -178.0 -177.0 -180.0 -183.0 -186.0 -187.0 -188.0 -191.0 -194.0 -195.0 -198.0 -201.0 -202.0 -205.0 -206.0 -207.0 -212.0 -215.0 -218.0 -219.0 -220.0 -223.0 10 -22.0 -19.0 -18.0 -17.0 -16.0 -11.0 -10.0 -7.0 -4.0 -3.0 4.0 0.0 0.0 0.0 0.0 2.0 3.0 14.0 1.0 0.0 -5.0 -8.0 -9.0 -14.0 -15.0 -14.0 -19.0 -16.0 -21.0 -24.0 -25.0 -28.0 -29.0 -34.0 -37.0 -38.0 -39.0 -44.0 -45.0 -46.0 -49.0 -50.0 -55.0 -58.0 -55.0 -62.0 -60.0 -58.0 -61.0 -66.0 -69.0 -70.0 -71.0 -72.0 -77.0 -72.0 -77.0 -80.0 -83.0 -88.0 -87.0 -90.0 -93.0 -92.0 -93.0 -96.0 -99.0 -102.0 -103.0 -106.0 -107.0 -112.0 -115.0 -116.0 -121.0 -122.0 -125.0 -129.0 -130.0 -131.0 -136.0 -135.0 -138.0 -141.0 -144.0 -145.0 -148.0 -151.0 -154.0 -155.0 -158.0 -161.0 -162.0 -167.0 -168.0 -169.0 -172.0 -175.0 -176.0 -175.0 -180.0 -183.0 -186.0 -185.0 -188.0 -191.0 -192.0 -195.0 -198.0 -199.0 -202.0 -203.0 -204.0 -209.0 -212.0 -213.0 -218.0 -217.0 -220.0 11 -22.0 -24.0 -21.0 -18.0 -19.0 -16.0 -12.0 -12.0 -9.0 -4.0 -5.0 2.0 -2.0 0.0 -2.0 -2.0 0.0 1.0 14.0 1.0 -2.0 -3.0 -8.0 -11.0 -12.0 -13.0 -14.0 -19.0 -16.0 -19.0 -22.0 -23.0 -28.0 -29.0 -34.0 -37.0 -38.0 -39.0 -42.0 -43.0 -46.0 -49.0 -52.0 -55.0 -58.0 -55.0 -60.0 -60.0 -58.0 -61.0 -66.0 -67.0 -68.0 -71.0 -74.0 -75.0 -72.0 -79.0 -82.0 -81.0 -86.0 -87.0 -88.0 -91.0 -92.0 -93.0 -96.0 -99.0 -100.0 -101.0 -106.0 -109.0 -112.0 -115.0 -118.0 -120.0 -124.0 -127.0 -127.0 -128.0 -131.0 -134.0 -133.0 -138.0 -141.0 -142.0 -147.0 -148.0 -151.0 -152.0 -155.0 -158.0 -159.0 -160.0 -165.0 -168.0 -167.0 -172.0 -173.0 -176.0 -175.0 -178.0 -181.0 -184.0 -185.0 -188.0 -189.0 -192.0 -195.0 -196.0 -199.0 -200.0 -203.0 -206.0 -209.0 -212.0 -211.0 -216.0 -217.0 12 -28.0 -22.0 -24.0 -23.0 -20.0 -17.0 -16.0 -12.0 -10.0 -9.0 -4.0 -4.0 2.0 -4.0 0.0 -2.0 -2.0 0.0 1.0 14.0 1.0 -2.0 -3.0 -8.0 -9.0 -10.0 -11.0 -12.0 -17.0 -16.0 -19.0 -22.0 -23.0 -28.0 -31.0 -32.0 -35.0 -36.0 -37.0 -40.0 -43.0 -44.0 -49.0 -52.0 -53.0 -56.0 -55.0 -58.0 -58.0 -56.0 -61.0 -64.0 -65.0 -66.0 -71.0 -72.0 -73.0 -70.0 -79.0 -80.0 -81.0 -84.0 -87.0 -86.0 -89.0 -90.0 -91.0 -94.0 -97.0 -100.0 -101.0 -106.0 -109.0 -110.0 -115.0 -116.0 -118.0 -124.0 -126.0 -127.0 -126.0 -131.0 -132.0 -135.0 -138.0 -139.0 -140.0 -145.0 -148.0 -149.0 -152.0 -155.0 -158.0 -159.0 -160.0 -165.0 -166.0 -167.0 -170.0 -171.0 -174.0 -177.0 -180.0 -179.0 -182.0 -183.0 -186.0 -189.0 -192.0 -193.0 -194.0 -197.0 -198.0 -203.0 -206.0 -209.0 -212.0 -209.0 -214.0 13 -29.0 -30.0 -22.0 -26.0 -25.0 -22.0 -17.0 -17.0 -12.0 -12.0 -10.0 -6.0 -4.0 0.0 -4.0 -2.0 -4.0 -3.0 -2.0 2.0 14.0 1.0 -2.0 -5.0 -6.0 -9.0 -12.0 -11.0 -12.0 -15.0 -14.0 -19.0 -22.0 -25.0 -28.0 -31.0 -34.0 -35.0 -34.0 -35.0 -38.0 -43.0 -44.0 -47.0 -50.0 -53.0 -54.0 -55.0 -58.0 -60.0 -54.0 -59.0 -64.0 -65.0 -68.0 -71.0 -72.0 -75.0 -70.0 -77.0 -78.0 -81.0 -82.0 -85.0 -88.0 -89.0 -92.0 -91.0 -92.0 -97.0 -100.0 -101.0 -106.0 -109.0 -112.0 -115.0 -118.0 -118.0 -123.0 -124.0 -127.0 -124.0 -129.0 -130.0 -135.0 -138.0 -141.0 -140.0 -145.0 -146.0 -147.0 -152.0 -155.0 -158.0 -157.0 -158.0 -163.0 -164.0 -165.0 -168.0 -171.0 -172.0 -175.0 -178.0 -179.0 -182.0 -181.0 -186.0 -189.0 -190.0 -191.0 -192.0 -197.0 -198.0 -203.0 -204.0 -207.0 -210.0 -209.0 14 -33.0 -30.0 -29.0 -22.0 -27.0 -25.0 -21.0 -18.0 -15.0 -10.0 -12.0 -8.0 -8.0 -2.0 -1.0 -5.0 -3.0 -6.0 -2.0 -2.0 4.0 14.0 1.0 -2.0 -3.0 -6.0 -7.0 -10.0 -9.0 -10.0 -13.0 -14.0 -19.0 -20.0 -25.0 -26.0 -31.0 -32.0 -33.0 -34.0 -37.0 -40.0 -43.0 -44.0 -49.0 -48.0 -51.0 -52.0 -53.0 -56.0 -58.0 -54.0 -59.0 -62.0 -65.0 -66.0 -69.0 -72.0 -73.0 -70.0 -75.0 -76.0 -79.0 -82.0 -83.0 -86.0 -89.0 -90.0 -91.0 -92.0 -97.0 -100.0 -103.0 -106.0 -109.0 -112.0 -115.0 -118.0 -118.0 -123.0 -122.0 -125.0 -124.0 -129.0 -132.0 -135.0 -136.0 -139.0 -142.0 -143.0 -146.0 -149.0 -150.0 -153.0 -156.0 -159.0 -158.0 -163.0 -164.0 -167.0 -166.0 -169.0 -170.0 -175.0 -176.0 -179.0 -180.0 -183.0 -186.0 -187.0 -190.0 -191.0 -194.0 -197.0 -200.0 -203.0 -204.0 -207.0 -208.0 15 -34.0 -33.0 -30.0 -29.0 -22.0 -25.0 -24.0 -21.0 -18.0 -13.0 -10.0 -10.0 -8.0 -9.0 -2.0 -1.0 -5.0 -3.0 -7.0 -2.0 -1.0 6.0 14.0 3.0 0.0 -1.0 -4.0 -5.0 -8.0 -9.0 -10.0 -13.0 -14.0 -19.0 -22.0 -23.0 -24.0 -29.0 -30.0 -31.0 -34.0 -35.0 -40.0 -41.0 -42.0 -47.0 -48.0 -49.0 -50.0 -51.0 -56.0 -57.0 -52.0 -57.0 -62.0 -63.0 -64.0 -67.0 -70.0 -73.0 -70.0 -73.0 -76.0 -77.0 -80.0 -81.0 -84.0 -87.0 -88.0 -91.0 -92.0 -97.0 -100.0 -101.0 -106.0 -107.0 -110.0 -115.0 -117.0 -118.0 -121.0 -122.0 -123.0 -126.0 -129.0 -130.0 -133.0 -134.0 -137.0 -140.0 -143.0 -146.0 -149.0 -152.0 -153.0 -156.0 -157.0 -160.0 -161.0 -162.0 -165.0 -168.0 -169.0 -168.0 -173.0 -176.0 -177.0 -178.0 -181.0 -184.0 -187.0 -188.0 -189.0 -194.0 -197.0 -200.0 -203.0 -202.0 -205.0 16 -37.0 -34.0 -33.0 -30.0 -29.0 -22.0 -25.0 -24.0 -21.0 -18.0 -13.0 -10.0 -10.0 -8.0 -9.0 -2.0 -1.0 -5.0 -3.0 -5.0 -2.0 1.0 8.0 14.0 5.0 2.0 -3.0 -4.0 -5.0 -6.0 -7.0 -10.0 -13.0 -14.0 -17.0 -22.0 -23.0 -24.0 -27.0 -28.0 -31.0 -34.0 -37.0 -40.0 -39.0 -42.0 -45.0 -48.0 -49.0 -50.0 -49.0 -54.0 -55.0 -52.0 -57.0 -62.0 -63.0 -66.0 -67.0 -70.0 -71.0 -70.0 -71.0 -74.0 -79.0 -80.0 -83.0 -84.0 -85.0 -88.0 -91.0 -94.0 -95.0 -100.0 -101.0 -106.0 -109.0 -112.0 -114.0 -117.0 -118.0 -119.0 -120.0 -123.0 -124.0 -129.0 -132.0 -133.0 -132.0 -135.0 -140.0 -141.0 -146.0 -149.0 -150.0 -153.0 -154.0 -157.0 -158.0 -161.0 -162.0 -165.0 -168.0 -167.0 -168.0 -171.0 -174.0 -175.0 -176.0 -179.0 -184.0 -185.0 -188.0 -191.0 -192.0 -197.0 -200.0 -201.0 -202.0 17 -38.0 -37.0 -32.0 -33.0 -30.0 -29.0 -22.0 -25.0 -23.0 -19.0 -19.0 -11.0 -11.0 -8.0 -8.0 -9.0 -2.0 -3.0 -5.0 -3.0 -5.0 0.0 1.0 10.0 14.0 5.0 4.0 -1.0 -2.0 -3.0 -4.0 -7.0 -10.0 -13.0 -12.0 -17.0 -22.0 -21.0 -24.0 -25.0 -28.0 -31.0 -34.0 -35.0 -38.0 -37.0 -40.0 -43.0 -46.0 -47.0 -48.0 -47.0 -52.0 -53.0 -50.0 -57.0 -60.0 -63.0 -64.0 -65.0 -68.0 -69.0 -68.0 -69.0 -72.0 -77.0 -80.0 -81.0 -82.0 -85.0 -88.0 -91.0 -92.0 -97.0 -98.0 -103.0 -106.0 -108.0 -111.0 -114.0 -115.0 -116.0 -117.0 -120.0 -121.0 -126.0 -129.0 -130.0 -131.0 -132.0 -137.0 -138.0 -143.0 -146.0 -147.0 -150.0 -151.0 -154.0 -155.0 -158.0 -159.0 -162.0 -163.0 -166.0 -165.0 -168.0 -171.0 -172.0 -175.0 -176.0 -181.0 -182.0 -185.0 -188.0 -189.0 -194.0 -195.0 -198.0 -199.0 18 -39.0 -38.0 -37.0 -32.0 -35.0 -30.0 -27.0 -22.0 -23.0 -22.0 -19.0 -18.0 -11.0 -12.0 -8.0 -8.0 -7.0 -2.0 -3.0 -5.0 -3.0 -3.0 2.0 3.0 10.0 14.0 7.0 6.0 1.0 0.0 -1.0 -4.0 -5.0 -10.0 -13.0 -12.0 -15.0 -20.0 -21.0 -22.0 -25.0 -26.0 -31.0 -34.0 -33.0 -36.0 -35.0 -38.0 -41.0 -46.0 -45.0 -46.0 -45.0 -50.0 -51.0 -50.0 -55.0 -58.0 -61.0 -62.0 -63.0 -68.0 -67.0 -66.0 -67.0 -70.0 -75.0 -78.0 -79.0 -82.0 -83.0 -88.0 -91.0 -92.0 -96.0 -98.0 -101.0 -106.0 -106.0 -109.0 -112.0 -113.0 -114.0 -117.0 -118.0 -121.0 -124.0 -127.0 -130.0 -131.0 -134.0 -137.0 -140.0 -143.0 -144.0 -147.0 -148.0 -151.0 -152.0 -153.0 -156.0 -159.0 -160.0 -161.0 -164.0 -167.0 -168.0 -171.0 -174.0 -175.0 -178.0 -179.0 -180.0 -185.0 -188.0 -189.0 -192.0 -193.0 -196.0 19 -40.0 -39.0 -38.0 -37.0 -32.0 -33.0 -30.0 -27.0 -22.0 -24.0 -22.0 -19.0 -18.0 -11.0 -12.0 -8.0 -8.0 -7.0 -2.0 -3.0 -7.0 -2.0 -1.0 2.0 5.0 12.0 14.0 7.0 6.0 3.0 2.0 -1.0 -2.0 -7.0 -10.0 -11.0 -12.0 -15.0 -18.0 -19.0 -22.0 -23.0 -28.0 -31.0 -32.0 -33.0 -34.0 -35.0 -38.0 -41.0 -44.0 -43.0 -44.0 -45.0 -50.0 -49.0 -50.0 -55.0 -58.0 -59.0 -60.0 -65.0 -66.0 -65.0 -66.0 -67.0 -70.0 -75.0 -76.0 -79.0 -80.0 -85.0 -88.0 -89.0 -94.0 -94.0 -98.0 -103.0 -105.0 -104.0 -109.0 -110.0 -111.0 -114.0 -117.0 -116.0 -121.0 -124.0 -127.0 -128.0 -131.0 -134.0 -137.0 -140.0 -141.0 -142.0 -145.0 -148.0 -149.0 -150.0 -153.0 -156.0 -157.0 -158.0 -161.0 -164.0 -165.0 -168.0 -171.0 -172.0 -175.0 -176.0 -177.0 -182.0 -185.0 -188.0 -187.0 -190.0 -193.0 20 -45.0 -40.0 -39.0 -40.0 -39.0 -30.0 -33.0 -30.0 -27.0 -22.0 -24.0 -22.0 -19.0 -18.0 -11.0 -12.0 -8.0 -8.0 -9.0 -2.0 -5.0 -7.0 0.0 -1.0 4.0 7.0 12.0 14.0 7.0 8.0 5.0 2.0 1.0 -4.0 -7.0 -8.0 -11.0 -12.0 -13.0 -16.0 -19.0 -20.0 -25.0 -28.0 -29.0 -32.0 -31.0 -34.0 -35.0 -38.0 -39.0 -42.0 -41.0 -44.0 -45.0 -48.0 -49.0 -50.0 -55.0 -58.0 -57.0 -60.0 -63.0 -64.0 -65.0 -66.0 -67.0 -70.0 -73.0 -76.0 -77.0 -82.0 -85.0 -86.0 -91.0 -92.0 -94.0 -100.0 -102.0 -103.0 -104.0 -107.0 -108.0 -111.0 -114.0 -115.0 -116.0 -121.0 -124.0 -125.0 -128.0 -131.0 -134.0 -135.0 -138.0 -141.0 -140.0 -143.0 -146.0 -147.0 -150.0 -153.0 -154.0 -155.0 -158.0 -159.0 -162.0 -165.0 -168.0 -169.0 -170.0 -173.0 -174.0 -179.0 -182.0 -185.0 -188.0 -185.0 -190.0 21 -44.0 -45.0 -40.0 -39.0 -40.0 -37.0 -30.0 -33.0 -30.0 -27.0 -22.0 -25.0 -22.0 -19.0 -18.0 -11.0 -12.0 -8.0 -8.0 -9.0 -2.0 -5.0 -5.0 0.0 1.0 6.0 7.0 12.0 14.0 9.0 10.0 5.0 2.0 -1.0 -4.0 -7.0 -8.0 -11.0 -10.0 -11.0 -14.0 -19.0 -20.0 -23.0 -28.0 -29.0 -30.0 -31.0 -34.0 -37.0 -36.0 -37.0 -42.0 -41.0 -44.0 -43.0 -48.0 -51.0 -50.0 -55.0 -56.0 -59.0 -58.0 -61.0 -64.0 -65.0 -68.0 -67.0 -68.0 -73.0 -76.0 -77.0 -82.0 -85.0 -88.0 -91.0 -94.0 -94.0 -99.0 -100.0 -103.0 -102.0 -105.0 -106.0 -111.0 -114.0 -117.0 -116.0 -119.0 -122.0 -123.0 -128.0 -131.0 -134.0 -133.0 -136.0 -139.0 -138.0 -141.0 -146.0 -147.0 -150.0 -151.0 -152.0 -155.0 -158.0 -157.0 -162.0 -163.0 -166.0 -167.0 -168.0 -173.0 -174.0 -179.0 -180.0 -183.0 -186.0 -185.0 22 -47.0 -44.0 -45.0 -42.0 -39.0 -40.0 -35.0 -30.0 -33.0 -28.0 -29.0 -20.0 -25.0 -20.0 -19.0 -18.0 -11.0 -12.0 -8.0 -8.0 -9.0 -2.0 -5.0 -3.0 2.0 3.0 8.0 9.0 14.0 14.0 9.0 8.0 3.0 0.0 -1.0 -6.0 -9.0 -8.0 -11.0 -10.0 -13.0 -16.0 -21.0 -20.0 -25.0 -28.0 -29.0 -30.0 -31.0 -36.0 -37.0 -36.0 -37.0 -42.0 -41.0 -44.0 -43.0 -50.0 -51.0 -50.0 -55.0 -58.0 -59.0 -58.0 -61.0 -64.0 -67.0 -68.0 -67.0 -70.0 -75.0 -78.0 -77.0 -84.0 -85.0 -89.0 -93.0 -95.0 -94.0 -99.0 -100.0 -103.0 -102.0 -107.0 -106.0 -113.0 -116.0 -117.0 -116.0 -119.0 -124.0 -123.0 -130.0 -133.0 -134.0 -135.0 -136.0 -141.0 -138.0 -143.0 -146.0 -149.0 -150.0 -151.0 -152.0 -155.0 -158.0 -157.0 -162.0 -163.0 -168.0 -167.0 -170.0 -175.0 -174.0 -181.0 -180.0 -183.0 -186.0 23 -50.0 -47.0 -44.0 -45.0 -42.0 -39.0 -38.0 -35.0 -30.0 -31.0 -28.0 -27.0 -20.0 -23.0 -20.0 -19.0 -16.0 -11.0 -12.0 -8.0 -8.0 -9.0 -2.0 -5.0 -3.0 2.0 5.0 10.0 11.0 14.0 14.0 7.0 8.0 1.0 -2.0 -1.0 -6.0 -9.0 -8.0 -11.0 -12.0 -13.0 -18.0 -23.0 -20.0 -25.0 -28.0 -29.0 -30.0 -31.0 -36.0 -37.0 -36.0 -37.0 -44.0 -41.0 -44.0 -43.0 -50.0 -51.0 -50.0 -57.0 -58.0 -59.0 -58.0 -61.0 -64.0 -67.0 -68.0 -69.0 -70.0 -77.0 -80.0 -77.0 -86.0 -85.0 -89.0 -94.0 -95.0 -94.0 -99.0 -100.0 -103.0 -104.0 -109.0 -106.0 -113.0 -116.0 -119.0 -116.0 -121.0 -126.0 -125.0 -132.0 -133.0 -134.0 -135.0 -138.0 -141.0 -138.0 -143.0 -148.0 -151.0 -150.0 -151.0 -154.0 -155.0 -160.0 -159.0 -162.0 -165.0 -168.0 -167.0 -172.0 -177.0 -176.0 -183.0 -180.0 -183.0 24 -51.0 -50.0 -47.0 -44.0 -45.0 -42.0 -39.0 -38.0 -35.0 -30.0 -31.0 -28.0 -27.0 -20.0 -23.0 -20.0 -19.0 -16.0 -11.0 -12.0 -8.0 -8.0 -9.0 -2.0 -4.0 -1.0 2.0 5.0 10.0 11.0 14.0 14.0 5.0 8.0 -1.0 -4.0 -3.0 -6.0 -9.0 -8.0 -13.0 -14.0 -13.0 -20.0 -23.0 -20.0 -25.0 -28.0 -29.0 -30.0 -31.0 -36.0 -39.0 -36.0 -37.0 -44.0 -41.0 -46.0 -43.0 -50.0 -51.0 -50.0 -57.0 -58.0 -59.0 -58.0 -63.0 -64.0 -67.0 -68.0 -71.0 -72.0 -79.0 -82.0 -79.0 -86.0 -87.0 -89.0 -92.0 -93.0 -94.0 -97.0 -98.0 -103.0 -106.0 -109.0 -108.0 -113.0 -116.0 -117.0 -118.0 -123.0 -124.0 -125.0 -130.0 -131.0 -132.0 -135.0 -138.0 -139.0 -138.0 -143.0 -148.0 -149.0 -150.0 -153.0 -154.0 -157.0 -160.0 -159.0 -164.0 -165.0 -168.0 -169.0 -174.0 -177.0 -178.0 -181.0 -180.0 25 -54.0 -53.0 -50.0 -47.0 -46.0 -45.0 -42.0 -41.0 -38.0 -33.0 -32.0 -31.0 -30.0 -25.0 -22.0 -25.0 -22.0 -21.0 -16.0 -13.0 -14.0 -8.0 -10.0 -9.0 -4.0 -4.0 -1.0 2.0 7.0 10.0 9.0 14.0 12.0 7.0 6.0 -1.0 -4.0 -3.0 -6.0 -7.0 -10.0 -13.0 -16.0 -13.0 -22.0 -21.0 -20.0 -25.0 -28.0 -29.0 -30.0 -29.0 -34.0 -37.0 -36.0 -37.0 -42.0 -43.0 -48.0 -43.0 -50.0 -49.0 -50.0 -55.0 -56.0 -59.0 -60.0 -63.0 -64.0 -65.0 -70.0 -73.0 -74.0 -79.0 -82.0 -81.0 -88.0 -89.0 -89.0 -94.0 -93.0 -94.0 -97.0 -100.0 -105.0 -108.0 -111.0 -108.0 -115.0 -116.0 -119.0 -120.0 -123.0 -124.0 -125.0 -132.0 -131.0 -134.0 -135.0 -138.0 -139.0 -138.0 -143.0 -148.0 -149.0 -152.0 -153.0 -156.0 -159.0 -160.0 -161.0 -164.0 -167.0 -170.0 -171.0 -176.0 -177.0 -178.0 -181.0 26 -57.0 -54.0 -52.0 -52.0 -49.0 -46.0 -45.0 -42.0 -39.0 -38.0 -33.0 -34.0 -31.0 -30.0 -25.0 -22.0 -23.0 -22.0 -23.0 -16.0 -15.0 -15.0 -8.0 -12.0 -10.0 -4.0 -2.0 1.0 2.0 5.0 8.0 7.0 14.0 10.0 5.0 6.0 -1.0 -4.0 -3.0 -6.0 -9.0 -10.0 -15.0 -18.0 -13.0 -22.0 -21.0 -20.0 -25.0 -28.0 -29.0 -32.0 -29.0 -34.0 -39.0 -36.0 -37.0 -42.0 -43.0 -48.0 -43.0 -50.0 -49.0 -50.0 -55.0 -56.0 -59.0 -60.0 -63.0 -66.0 -65.0 -72.0 -75.0 -74.0 -81.0 -82.0 -81.0 -89.0 -90.0 -89.0 -94.0 -93.0 -94.0 -99.0 -102.0 -105.0 -108.0 -111.0 -110.0 -115.0 -118.0 -121.0 -122.0 -125.0 -124.0 -125.0 -132.0 -133.0 -134.0 -135.0 -138.0 -141.0 -138.0 -143.0 -146.0 -149.0 -150.0 -153.0 -156.0 -157.0 -160.0 -161.0 -162.0 -167.0 -170.0 -173.0 -176.0 -175.0 -178.0 27 -60.0 -59.0 -56.0 -52.0 -54.0 -51.0 -48.0 -46.0 -44.0 -39.0 -39.0 -35.0 -35.0 -31.0 -31.0 -26.0 -24.0 -25.0 -22.0 -23.0 -18.0 -15.0 -15.0 -8.0 -12.0 -9.0 -6.0 -4.0 1.0 2.0 3.0 8.0 6.0 14.0 8.0 3.0 6.0 -1.0 -2.0 -3.0 -6.0 -9.0 -12.0 -13.0 -16.0 -13.0 -20.0 -21.0 -20.0 -25.0 -26.0 -31.0 -32.0 -29.0 -34.0 -37.0 -36.0 -37.0 -42.0 -43.0 -46.0 -43.0 -48.0 -49.0 -50.0 -55.0 -58.0 -59.0 -60.0 -61.0 -66.0 -67.0 -72.0 -75.0 -76.0 -81.0 -83.0 -83.0 -87.0 -92.0 -89.0 -94.0 -93.0 -96.0 -101.0 -104.0 -107.0 -108.0 -109.0 -110.0 -115.0 -118.0 -119.0 -122.0 -125.0 -126.0 -125.0 -132.0 -133.0 -136.0 -135.0 -136.0 -143.0 -138.0 -143.0 -148.0 -149.0 -152.0 -153.0 -156.0 -159.0 -160.0 -163.0 -164.0 -169.0 -172.0 -175.0 -176.0 -175.0 28 -62.0 -62.0 -59.0 -57.0 -52.0 -54.0 -50.0 -49.0 -44.0 -43.0 -41.0 -37.0 -36.0 -33.0 -32.0 -31.0 -26.0 -26.0 -26.0 -24.0 -24.0 -19.0 -17.0 -13.0 -8.0 -10.0 -7.0 -7.0 -4.0 -1.0 0.0 2.0 6.0 6.0 14.0 8.0 1.0 6.0 -1.0 -2.0 -5.0 -8.0 -11.0 -14.0 -13.0 -16.0 -13.0 -20.0 -21.0 -22.0 -25.0 -26.0 -31.0 -32.0 -29.0 -34.0 -37.0 -38.0 -37.0 -42.0 -43.0 -48.0 -43.0 -48.0 -49.0 -50.0 -57.0 -58.0 -59.0 -62.0 -63.0 -68.0 -67.0 -74.0 -75.0 -78.0 -83.0 -83.0 -84.0 -89.0 -92.0 -89.0 -94.0 -95.0 -96.0 -103.0 -106.0 -107.0 -108.0 -109.0 -112.0 -115.0 -120.0 -121.0 -122.0 -127.0 -126.0 -127.0 -132.0 -135.0 -136.0 -135.0 -136.0 -143.0 -138.0 -143.0 -148.0 -149.0 -152.0 -153.0 -158.0 -159.0 -162.0 -165.0 -164.0 -171.0 -172.0 -175.0 -176.0 29 -65.0 -62.0 -61.0 -60.0 -57.0 -52.0 -53.0 -50.0 -47.0 -42.0 -43.0 -42.0 -37.0 -36.0 -33.0 -32.0 -29.0 -26.0 -27.0 -26.0 -25.0 -22.0 -19.0 -18.0 -13.0 -8.0 -8.0 -5.0 -6.0 -5.0 -2.0 -1.0 2.0 5.0 6.0 14.0 8.0 1.0 6.0 1.0 -2.0 -3.0 -8.0 -11.0 -12.0 -11.0 -14.0 -13.0 -18.0 -23.0 -22.0 -25.0 -24.0 -29.0 -30.0 -29.0 -32.0 -35.0 -40.0 -37.0 -40.0 -45.0 -46.0 -43.0 -46.0 -47.0 -50.0 -55.0 -56.0 -59.0 -60.0 -65.0 -68.0 -67.0 -74.0 -75.0 -78.0 -83.0 -81.0 -84.0 -89.0 -90.0 -89.0 -94.0 -97.0 -96.0 -101.0 -104.0 -107.0 -108.0 -111.0 -114.0 -117.0 -120.0 -121.0 -124.0 -125.0 -128.0 -127.0 -130.0 -133.0 -136.0 -135.0 -136.0 -141.0 -140.0 -143.0 -148.0 -151.0 -152.0 -155.0 -156.0 -157.0 -162.0 -165.0 -166.0 -169.0 -170.0 -173.0 30 -64.0 -65.0 -64.0 -61.0 -60.0 -55.0 -52.0 -53.0 -50.0 -47.0 -42.0 -45.0 -42.0 -39.0 -36.0 -33.0 -32.0 -29.0 -26.0 -27.0 -28.0 -27.0 -22.0 -19.0 -18.0 -12.0 -8.0 -8.0 -5.0 -6.0 -5.0 -4.0 -1.0 2.0 3.0 8.0 14.0 8.0 2.0 6.0 -1.0 -2.0 -5.0 -10.0 -11.0 -12.0 -11.0 -14.0 -13.0 -20.0 -23.0 -22.0 -25.0 -24.0 -29.0 -30.0 -29.0 -32.0 -37.0 -40.0 -37.0 -42.0 -45.0 -46.0 -43.0 -46.0 -47.0 -50.0 -55.0 -58.0 -59.0 -62.0 -67.0 -68.0 -69.0 -74.0 -75.0 -80.0 -84.0 -81.0 -84.0 -89.0 -90.0 -91.0 -96.0 -97.0 -96.0 -101.0 -104.0 -107.0 -108.0 -113.0 -116.0 -117.0 -120.0 -123.0 -124.0 -125.0 -128.0 -127.0 -130.0 -135.0 -138.0 -135.0 -136.0 -143.0 -140.0 -145.0 -148.0 -151.0 -154.0 -155.0 -156.0 -159.0 -164.0 -167.0 -166.0 -169.0 -170.0 31 -67.0 -64.0 -65.0 -64.0 -61.0 -58.0 -55.0 -52.0 -53.0 -50.0 -47.0 -42.0 -45.0 -42.0 -39.0 -36.0 -33.0 -32.0 -29.0 -26.0 -27.0 -28.0 -27.0 -22.0 -19.0 -17.0 -12.0 -8.0 -8.0 -5.0 -6.0 -5.0 -4.0 -1.0 2.0 3.0 8.0 14.0 8.0 4.0 4.0 -2.0 -4.0 -7.0 -11.0 -11.0 -12.0 -11.0 -14.0 -13.0 -20.0 -23.0 -22.0 -27.0 -24.0 -29.0 -30.0 -29.0 -32.0 -37.0 -38.0 -37.0 -42.0 -45.0 -46.0 -43.0 -46.0 -47.0 -50.0 -55.0 -58.0 -61.0 -62.0 -67.0 -68.0 -71.0 -75.0 -76.0 -81.0 -82.0 -81.0 -84.0 -87.0 -90.0 -91.0 -96.0 -97.0 -96.0 -101.0 -102.0 -107.0 -106.0 -113.0 -114.0 -115.0 -120.0 -121.0 -122.0 -123.0 -128.0 -127.0 -132.0 -135.0 -136.0 -135.0 -136.0 -141.0 -140.0 -145.0 -146.0 -149.0 -152.0 -155.0 -158.0 -159.0 -164.0 -167.0 -166.0 -169.0 32 -68.0 -67.0 -62.0 -65.0 -64.0 -61.0 -56.0 -55.0 -52.0 -51.0 -50.0 -45.0 -42.0 -43.0 -42.0 -39.0 -36.0 -33.0 -32.0 -29.0 -26.0 -27.0 -28.0 -25.0 -22.0 -19.0 -15.0 -10.0 -8.0 -8.0 -5.0 -6.0 -3.0 -4.0 -1.0 2.0 3.0 10.0 14.0 9.0 6.0 2.0 0.0 -3.0 -6.0 -9.0 -10.0 -11.0 -10.0 -16.0 -13.0 -19.0 -22.0 -21.0 -26.0 -24.0 -28.0 -31.0 -29.0 -32.0 -36.0 -39.0 -36.0 -43.0 -44.0 -45.0 -45.0 -46.0 -47.0 -52.0 -56.0 -57.0 -62.0 -64.0 -68.0 -70.0 -73.0 -74.0 -76.0 -80.0 -81.0 -80.0 -84.0 -86.0 -91.0 -93.0 -97.0 -96.0 -98.0 -101.0 -102.0 -108.0 -106.0 -114.0 -113.0 -114.0 -119.0 -120.0 -121.0 -122.0 -127.0 -129.0 -131.0 -134.0 -135.0 -137.0 -136.0 -142.0 -142.0 -145.0 -146.0 -148.0 -153.0 -154.0 -159.0 -159.0 -163.0 -166.0 -165.0 33 -71.0 -68.0 -65.0 -62.0 -65.0 -62.0 -59.0 -56.0 -53.0 -50.0 -51.0 -48.0 -45.0 -42.0 -43.0 -42.0 -39.0 -36.0 -33.0 -32.0 -29.0 -26.0 -27.0 -26.0 -24.0 -21.0 -18.0 -13.0 -8.0 -8.0 -8.0 -5.0 -4.0 -3.0 -4.0 -1.0 2.0 5.0 12.0 14.0 7.0 4.0 1.0 -2.0 -3.0 -4.0 -7.0 -8.0 -9.0 -8.0 -15.0 -15.0 -19.0 -22.0 -19.0 -24.0 -24.0 -26.0 -29.0 -29.0 -31.0 -34.0 -37.0 -36.0 -41.0 -42.0 -43.0 -45.0 -46.0 -47.0 -53.0 -56.0 -59.0 -62.0 -65.0 -68.0 -71.0 -73.0 -74.0 -75.0 -78.0 -79.0 -80.0 -85.0 -88.0 -91.0 -94.0 -95.0 -98.0 -98.0 -102.0 -104.0 -106.0 -105.0 -112.0 -113.0 -114.0 -119.0 -120.0 -121.0 -120.0 -125.0 -130.0 -131.0 -132.0 -135.0 -136.0 -138.0 -142.0 -142.0 -146.0 -146.0 -150.0 -153.0 -154.0 -159.0 -159.0 -163.0 -164.0 34 -72.0 -71.0 -68.0 -65.0 -62.0 -63.0 -60.0 -59.0 -56.0 -51.0 -50.0 -49.0 -48.0 -43.0 -42.0 -43.0 -40.0 -39.0 -36.0 -33.0 -32.0 -29.0 -26.0 -27.0 -25.0 -22.0 -19.0 -16.0 -11.0 -8.0 -8.0 -8.0 -5.0 -4.0 -3.0 -2.0 1.0 4.0 7.0 14.0 12.0 5.0 2.0 -1.0 -4.0 -3.0 -4.0 -7.0 -8.0 -9.0 -8.0 -17.0 -15.0 -19.0 -22.0 -19.0 -24.0 -26.0 -26.0 -29.0 -29.0 -31.0 -34.0 -37.0 -36.0 -41.0 -42.0 -43.0 -45.0 -46.0 -49.0 -55.0 -58.0 -61.0 -64.0 -67.0 -70.0 -72.0 -73.0 -76.0 -75.0 -78.0 -79.0 -82.0 -87.0 -90.0 -91.0 -94.0 -97.0 -98.0 -100.0 -104.0 -104.0 -106.0 -105.0 -114.0 -113.0 -114.0 -119.0 -122.0 -121.0 -120.0 -127.0 -130.0 -131.0 -132.0 -135.0 -138.0 -140.0 -142.0 -142.0 -146.0 -148.0 -152.0 -155.0 -154.0 -161.0 -159.0 -163.0 35 -73.0 -74.0 -69.0 -70.0 -66.0 -64.0 -61.0 -62.0 -59.0 -56.0 -53.0 -52.0 -51.0 -48.0 -45.0 -44.0 -43.0 -42.0 -41.0 -38.0 -33.0 -34.0 -31.0 -28.0 -28.0 -25.0 -22.0 -19.0 -16.0 -13.0 -8.0 -10.0 -10.0 -7.0 -6.0 -5.0 -2.0 1.0 6.0 9.0 14.0 10.0 5.0 2.0 -1.0 -4.0 -3.0 -4.0 -7.0 -8.0 -9.0 -8.0 -17.0 -17.0 -19.0 -22.0 -19.0 -26.0 -26.0 -26.0 -29.0 -31.0 -31.0 -34.0 -37.0 -36.0 -41.0 -42.0 -43.0 -47.0 -48.0 -49.0 -57.0 -60.0 -63.0 -65.0 -69.0 -70.0 -72.0 -73.0 -76.0 -75.0 -78.0 -79.0 -84.0 -87.0 -92.0 -91.0 -96.0 -97.0 -98.0 -102.0 -106.0 -106.0 -106.0 -105.0 -114.0 -113.0 -114.0 -121.0 -122.0 -123.0 -120.0 -127.0 -130.0 -133.0 -132.0 -137.0 -138.0 -140.0 -142.0 -142.0 -148.0 -148.0 -154.0 -155.0 -154.0 -161.0 -159.0 36 -78.0 -73.0 -74.0 -71.0 -72.0 -66.0 -66.0 -61.0 -60.0 -59.0 -56.0 -55.0 -52.0 -51.0 -48.0 -45.0 -44.0 -43.0 -44.0 -39.0 -40.0 -35.0 -34.0 -33.0 -30.0 -26.0 -23.0 -20.0 -19.0 -18.0 -15.0 -10.0 -10.0 -12.0 -9.0 -6.0 -3.0 -2.0 1.0 4.0 7.0 14.0 8.0 3.0 2.0 -1.0 -4.0 -3.0 -4.0 -7.0 -8.0 -11.0 -8.0 -17.0 -17.0 -19.0 -22.0 -19.0 -26.0 -26.0 -26.0 -29.0 -31.0 -31.0 -34.0 -37.0 -36.0 -41.0 -42.0 -45.0 -47.0 -50.0 -51.0 -56.0 -61.0 -62.0 -64.0 -70.0 -71.0 -71.0 -73.0 -76.0 -75.0 -80.0 -81.0 -84.0 -86.0 -91.0 -93.0 -95.0 -98.0 -100.0 -102.0 -105.0 -106.0 -106.0 -105.0 -112.0 -113.0 -114.0 -119.0 -122.0 -125.0 -120.0 -127.0 -128.0 -131.0 -134.0 -137.0 -136.0 -139.0 -142.0 -142.0 -148.0 -148.0 -154.0 -155.0 -154.0 -159.0 37 -79.0 -80.0 -73.0 -76.0 -73.0 -71.0 -66.0 -68.0 -63.0 -62.0 -60.0 -58.0 -57.0 -54.0 -53.0 -49.0 -47.0 -46.0 -45.0 -44.0 -39.0 -39.0 -37.0 -36.0 -34.0 -31.0 -28.0 -25.0 -22.0 -21.0 -18.0 -17.0 -12.0 -12.0 -14.0 -11.0 -8.0 -5.0 0.0 3.0 4.0 5.0 14.0 8.0 1.0 0.0 -1.0 -4.0 -5.0 -4.0 -7.0 -8.0 -11.0 -8.0 -17.0 -17.0 -19.0 -22.0 -19.0 -24.0 -26.0 -26.0 -29.0 -33.0 -31.0 -36.0 -37.0 -36.0 -39.0 -44.0 -47.0 -47.0 -52.0 -53.0 -58.0 -62.0 -64.0 -64.0 -70.0 -71.0 -71.0 -73.0 -76.0 -75.0 -82.0 -83.0 -84.0 -86.0 -92.0 -93.0 -94.0 -99.0 -102.0 -101.0 -104.0 -106.0 -106.0 -105.0 -112.0 -115.0 -114.0 -119.0 -122.0 -125.0 -120.0 -125.0 -126.0 -131.0 -134.0 -135.0 -134.0 -137.0 -142.0 -142.0 -148.0 -147.0 -152.0 -153.0 -154.0 38 -81.0 -80.0 -78.0 -75.0 -77.0 -75.0 -69.0 -66.0 -68.0 -64.0 -64.0 -58.0 -59.0 -56.0 -55.0 -54.0 -49.0 -49.0 -47.0 -46.0 -44.0 -40.0 -39.0 -39.0 -37.0 -34.0 -30.0 -28.0 -25.0 -24.0 -21.0 -19.0 -19.0 -14.0 -14.0 -14.0 -11.0 -8.0 -3.0 0.0 3.0 2.0 5.0 14.0 6.0 -1.0 -1.0 1.0 -4.0 -5.0 -4.0 -7.0 -8.0 -11.0 -8.0 -17.0 -17.0 -19.0 -22.0 -19.0 -24.0 -26.0 -26.0 -29.0 -33.0 -31.0 -36.0 -37.0 -36.0 -41.0 -46.0 -47.0 -49.0 -54.0 -55.0 -60.0 -63.0 -64.0 -64.0 -72.0 -71.0 -71.0 -73.0 -76.0 -77.0 -84.0 -85.0 -84.0 -88.0 -92.0 -93.0 -96.0 -101.0 -104.0 -101.0 -104.0 -108.0 -106.0 -105.0 -114.0 -115.0 -116.0 -119.0 -122.0 -124.0 -122.0 -125.0 -128.0 -133.0 -134.0 -135.0 -134.0 -139.0 -142.0 -144.0 -148.0 -147.0 -152.0 -153.0 39 -86.0 -81.0 -80.0 -79.0 -76.0 -75.0 -74.0 -69.0 -66.0 -67.0 -64.0 -63.0 -58.0 -57.0 -56.0 -55.0 -52.0 -49.0 -50.0 -47.0 -46.0 -45.0 -40.0 -37.0 -39.0 -35.0 -32.0 -28.0 -28.0 -27.0 -25.0 -23.0 -19.0 -21.0 -16.0 -14.0 -12.0 -11.0 -8.0 -5.0 -2.0 3.0 0.0 4.0 14.0 4.0 0.0 -1.0 2.0 -3.0 -5.0 -4.0 -7.0 -7.0 -11.0 -8.0 -16.0 -17.0 -18.0 -22.0 -19.0 -23.0 -26.0 -26.0 -29.0 -33.0 -31.0 -36.0 -37.0 -38.0 -41.0 -47.0 -49.0 -49.0 -56.0 -55.0 -60.0 -62.0 -65.0 -64.0 -71.0 -70.0 -71.0 -75.0 -78.0 -77.0 -83.0 -85.0 -86.0 -88.0 -93.0 -95.0 -98.0 -102.0 -105.0 -101.0 -106.0 -108.0 -106.0 -105.0 -114.0 -117.0 -118.0 -119.0 -122.0 -125.0 -122.0 -127.0 -130.0 -133.0 -136.0 -135.0 -134.0 -141.0 -144.0 -146.0 -150.0 -147.0 -152.0 40 -87.0 -86.0 -81.0 -80.0 -79.0 -76.0 -75.0 -74.0 -69.0 -66.0 -67.0 -64.0 -63.0 -58.0 -57.0 -56.0 -55.0 -52.0 -49.0 -50.0 -47.0 -44.0 -45.0 -40.0 -36.0 -37.0 -36.0 -34.0 -28.0 -28.0 -29.0 -23.0 -25.0 -19.0 -22.0 -17.0 -16.0 -14.0 -11.0 -8.0 -6.0 -4.0 1.0 -1.0 4.0 14.0 2.0 -1.0 -2.0 2.0 -1.0 -4.0 -4.0 -7.0 -7.0 -10.0 -8.0 -16.0 -17.0 -16.0 -21.0 -19.0 -21.0 -24.0 -26.0 -29.0 -33.0 -31.0 -35.0 -36.0 -40.0 -43.0 -47.0 -50.0 -51.0 -56.0 -57.0 -61.0 -60.0 -67.0 -64.0 -69.0 -68.0 -73.0 -76.0 -79.0 -79.0 -83.0 -86.0 -86.0 -90.0 -93.0 -94.0 -97.0 -102.0 -103.0 -100.0 -106.0 -108.0 -108.0 -105.0 -112.0 -115.0 -118.0 -119.0 -122.0 -123.0 -124.0 -129.0 -130.0 -133.0 -134.0 -137.0 -136.0 -143.0 -146.0 -146.0 -150.0 -147.0 41 -90.0 -87.0 -86.0 -83.0 -82.0 -79.0 -76.0 -75.0 -72.0 -71.0 -66.0 -67.0 -64.0 -63.0 -58.0 -57.0 -56.0 -55.0 -54.0 -49.0 -52.0 -49.0 -44.0 -45.0 -42.0 -34.0 -35.0 -34.0 -33.0 -28.0 -29.0 -28.0 -23.0 -26.0 -19.0 -20.0 -17.0 -16.0 -13.0 -10.0 -9.0 -6.0 -5.0 0.0 1.0 6.0 14.0 3.0 1.0 -1.0 2.0 1.0 -2.0 -3.0 -6.0 -5.0 -8.0 -8.0 -14.0 -15.0 -16.0 -21.0 -19.0 -19.0 -22.0 -25.0 -28.0 -31.0 -31.0 -35.0 -36.0 -41.0 -44.0 -45.0 -50.0 -51.0 -54.0 -58.0 -59.0 -60.0 -65.0 -64.0 -67.0 -70.0 -73.0 -74.0 -77.0 -79.0 -83.0 -84.0 -87.0 -90.0 -93.0 -96.0 -99.0 -100.0 -103.0 -100.0 -105.0 -106.0 -108.0 -107.0 -112.0 -113.0 -116.0 -119.0 -120.0 -123.0 -126.0 -127.0 -130.0 -131.0 -132.0 -137.0 -138.0 -143.0 -144.0 -145.0 -148.0 42 -93.0 -90.0 -89.0 -88.0 -85.0 -82.0 -81.0 -76.0 -75.0 -74.0 -71.0 -66.0 -67.0 -66.0 -63.0 -58.0 -57.0 -56.0 -57.0 -54.0 -51.0 -52.0 -49.0 -46.0 -46.0 -41.0 -34.0 -35.0 -36.0 -33.0 -28.0 -29.0 -28.0 -25.0 -28.0 -19.0 -20.0 -19.0 -16.0 -13.0 -12.0 -9.0 -8.0 -5.0 0.0 -1.0 8.0 14.0 3.0 1.0 1.0 4.0 3.0 -2.0 -3.0 -4.0 -5.0 -8.0 -8.0 -12.0 -13.0 -18.0 -19.0 -18.0 -19.0 -22.0 -25.0 -28.0 -29.0 -32.0 -33.0 -38.0 -41.0 -42.0 -47.0 -48.0 -51.0 -55.0 -56.0 -57.0 -60.0 -63.0 -64.0 -67.0 -70.0 -71.0 -74.0 -77.0 -80.0 -81.0 -84.0 -87.0 -90.0 -93.0 -94.0 -97.0 -100.0 -101.0 -98.0 -103.0 -106.0 -109.0 -107.0 -111.0 -113.0 -117.0 -118.0 -121.0 -124.0 -125.0 -128.0 -129.0 -130.0 -134.0 -138.0 -140.0 -142.0 -143.0 -145.0 43 -96.0 -93.0 -90.0 -91.0 -90.0 -85.0 -84.0 -81.0 -76.0 -77.0 -74.0 -73.0 -66.0 -69.0 -66.0 -63.0 -58.0 -57.0 -58.0 -57.0 -54.0 -53.0 -52.0 -51.0 -48.0 -44.0 -41.0 -34.0 -35.0 -36.0 -33.0 -28.0 -29.0 -30.0 -27.0 -26.0 -19.0 -20.0 -19.0 -16.0 -15.0 -12.0 -9.0 -10.0 -3.0 -2.0 1.0 8.0 14.0 1.0 3.0 3.0 6.0 3.0 -2.0 -1.0 -4.0 -5.0 -8.0 -7.0 -10.0 -15.0 -16.0 -17.0 -18.0 -19.0 -22.0 -25.0 -26.0 -29.0 -30.0 -35.0 -38.0 -39.0 -44.0 -45.0 -48.0 -52.0 -53.0 -54.0 -57.0 -58.0 -61.0 -64.0 -67.0 -68.0 -71.0 -74.0 -77.0 -78.0 -81.0 -84.0 -87.0 -90.0 -91.0 -92.0 -97.0 -98.0 -99.0 -96.0 -103.0 -106.0 -109.0 -107.0 -111.0 -114.0 -115.0 -118.0 -121.0 -122.0 -125.0 -126.0 -127.0 -132.0 -135.0 -138.0 -141.0 -140.0 -143.0 44 -97.0 -96.0 -93.0 -90.0 -91.0 -88.0 -85.0 -84.0 -81.0 -76.0 -77.0 -74.0 -73.0 -66.0 -69.0 -66.0 -63.0 -58.0 -57.0 -58.0 -57.0 -54.0 -53.0 -52.0 -50.0 -47.0 -44.0 -41.0 -34.0 -35.0 -36.0 -31.0 -28.0 -29.0 -30.0 -27.0 -26.0 -19.0 -18.0 -17.0 -16.0 -15.0 -12.0 -9.0 -8.0 -3.0 -2.0 1.0 8.0 14.0 3.0 5.0 5.0 6.0 3.0 0.0 -1.0 -4.0 -5.0 -6.0 -5.0 -10.0 -13.0 -16.0 -17.0 -18.0 -19.0 -22.0 -23.0 -24.0 -29.0 -32.0 -35.0 -38.0 -41.0 -44.0 -47.0 -49.0 -50.0 -51.0 -54.0 -55.0 -56.0 -61.0 -64.0 -67.0 -70.0 -71.0 -74.0 -75.0 -78.0 -81.0 -82.0 -85.0 -90.0 -89.0 -90.0 -95.0 -98.0 -97.0 -96.0 -101.0 -106.0 -107.0 -107.0 -111.0 -112.0 -115.0 -118.0 -119.0 -122.0 -123.0 -126.0 -129.0 -132.0 -135.0 -136.0 -139.0 -140.0 45 -100.0 -97.0 -96.0 -93.0 -92.0 -89.0 -88.0 -85.0 -84.0 -79.0 -78.0 -77.0 -76.0 -71.0 -68.0 -71.0 -68.0 -65.0 -58.0 -57.0 -60.0 -57.0 -56.0 -53.0 -51.0 -50.0 -47.0 -44.0 -39.0 -34.0 -37.0 -34.0 -33.0 -28.0 -30.0 -32.0 -29.0 -24.0 -19.0 -16.0 -19.0 -16.0 -13.0 -14.0 -7.0 -6.0 -5.0 -2.0 1.0 10.0 14.0 5.0 7.0 7.0 8.0 5.0 0.0 1.0 -2.0 -3.0 -6.0 -3.0 -10.0 -11.0 -14.0 -17.0 -16.0 -17.0 -20.0 -21.0 -26.0 -29.0 -32.0 -35.0 -38.0 -41.0 -43.0 -46.0 -47.0 -52.0 -49.0 -54.0 -53.0 -58.0 -61.0 -64.0 -65.0 -68.0 -71.0 -72.0 -75.0 -78.0 -79.0 -82.0 -85.0 -88.0 -87.0 -90.0 -95.0 -96.0 -95.0 -96.0 -103.0 -104.0 -105.0 -106.0 -109.0 -112.0 -115.0 -116.0 -117.0 -120.0 -123.0 -126.0 -129.0 -130.0 -135.0 -134.0 -137.0 46 -99.0 -100.0 -95.0 -96.0 -93.0 -92.0 -87.0 -88.0 -83.0 -82.0 -79.0 -78.0 -77.0 -74.0 -71.0 -68.0 -69.0 -66.0 -65.0 -58.0 -57.0 -60.0 -57.0 -56.0 -52.0 -49.0 -48.0 -45.0 -42.0 -39.0 -34.0 -37.0 -34.0 -33.0 -28.0 -31.0 -30.0 -27.0 -22.0 -17.0 -16.0 -19.0 -14.0 -13.0 -12.0 -5.0 -6.0 -3.0 -2.0 3.0 10.0 14.0 5.0 7.0 7.0 8.0 5.0 -2.0 1.0 -2.0 -3.0 -8.0 -3.0 -10.0 -11.0 -14.0 -17.0 -16.0 -17.0 -22.0 -23.0 -26.0 -31.0 -34.0 -37.0 -40.0 -43.0 -43.0 -46.0 -49.0 -52.0 -49.0 -54.0 -53.0 -60.0 -63.0 -66.0 -65.0 -70.0 -71.0 -72.0 -77.0 -80.0 -81.0 -82.0 -85.0 -90.0 -87.0 -90.0 -95.0 -96.0 -95.0 -96.0 -103.0 -104.0 -107.0 -106.0 -111.0 -114.0 -115.0 -116.0 -117.0 -122.0 -123.0 -128.0 -129.0 -130.0 -135.0 -134.0 47 -104.0 -99.0 -100.0 -97.0 -98.0 -93.0 -92.0 -87.0 -86.0 -81.0 -82.0 -81.0 -78.0 -77.0 -74.0 -71.0 -68.0 -67.0 -68.0 -63.0 -60.0 -59.0 -60.0 -59.0 -55.0 -50.0 -47.0 -46.0 -45.0 -44.0 -41.0 -36.0 -37.0 -36.0 -35.0 -28.0 -31.0 -30.0 -27.0 -24.0 -17.0 -16.0 -17.0 -16.0 -13.0 -10.0 -3.0 -4.0 -1.0 0.0 5.0 10.0 14.0 7.0 9.0 9.0 10.0 7.0 0.0 1.0 0.0 -5.0 -6.0 -3.0 -8.0 -9.0 -12.0 -15.0 -16.0 -19.0 -20.0 -25.0 -28.0 -29.0 -34.0 -35.0 -38.0 -42.0 -43.0 -44.0 -49.0 -50.0 -49.0 -54.0 -55.0 -58.0 -61.0 -64.0 -67.0 -68.0 -71.0 -74.0 -77.0 -80.0 -83.0 -82.0 -87.0 -88.0 -87.0 -90.0 -93.0 -96.0 -95.0 -96.0 -101.0 -104.0 -105.0 -108.0 -111.0 -112.0 -115.0 -116.0 -117.0 -122.0 -125.0 -128.0 -129.0 -130.0 -133.0 48 -107.0 -104.0 -101.0 -102.0 -99.0 -96.0 -95.0 -92.0 -87.0 -86.0 -81.0 -82.0 -81.0 -80.0 -77.0 -74.0 -71.0 -68.0 -69.0 -66.0 -65.0 -62.0 -59.0 -62.0 -60.0 -53.0 -50.0 -47.0 -48.0 -45.0 -44.0 -41.0 -36.0 -39.0 -38.0 -35.0 -28.0 -33.0 -30.0 -27.0 -24.0 -17.0 -16.0 -17.0 -16.0 -13.0 -8.0 -3.0 -4.0 -3.0 2.0 5.0 10.0 14.0 5.0 11.0 9.0 10.0 7.0 2.0 3.0 -2.0 -3.0 -4.0 -3.0 -8.0 -9.0 -12.0 -13.0 -16.0 -17.0 -22.0 -25.0 -26.0 -31.0 -32.0 -35.0 -40.0 -40.0 -41.0 -44.0 -47.0 -48.0 -51.0 -54.0 -55.0 -58.0 -61.0 -62.0 -65.0 -68.0 -71.0 -74.0 -77.0 -80.0 -81.0 -84.0 -85.0 -86.0 -87.0 -90.0 -93.0 -96.0 -93.0 -96.0 -101.0 -102.0 -105.0 -106.0 -109.0 -112.0 -113.0 -114.0 -119.0 -122.0 -125.0 -128.0 -127.0 -130.0 49 -106.0 -107.0 -104.0 -101.0 -102.0 -99.0 -96.0 -95.0 -92.0 -89.0 -86.0 -81.0 -82.0 -83.0 -80.0 -77.0 -74.0 -71.0 -68.0 -69.0 -66.0 -65.0 -62.0 -59.0 -61.0 -58.0 -53.0 -50.0 -47.0 -48.0 -45.0 -42.0 -41.0 -38.0 -39.0 -40.0 -35.0 -28.0 -31.0 -28.0 -27.0 -24.0 -17.0 -16.0 -15.0 -16.0 -11.0 -8.0 -3.0 -4.0 -1.0 2.0 7.0 10.0 14.0 7.0 11.0 9.0 10.0 9.0 4.0 3.0 0.0 -3.0 -4.0 -5.0 -8.0 -9.0 -10.0 -13.0 -16.0 -19.0 -20.0 -25.0 -26.0 -31.0 -34.0 -36.0 -39.0 -38.0 -41.0 -42.0 -45.0 -48.0 -49.0 -54.0 -57.0 -58.0 -59.0 -60.0 -65.0 -66.0 -71.0 -74.0 -77.0 -78.0 -81.0 -82.0 -83.0 -84.0 -87.0 -90.0 -93.0 -94.0 -93.0 -96.0 -99.0 -100.0 -103.0 -104.0 -109.0 -110.0 -113.0 -116.0 -117.0 -122.0 -125.0 -126.0 -127.0 50 -111.0 -106.0 -105.0 -104.0 -101.0 -102.0 -97.0 -96.0 -93.0 -90.0 -89.0 -84.0 -81.0 -80.0 -83.0 -80.0 -77.0 -74.0 -71.0 -68.0 -69.0 -66.0 -65.0 -62.0 -59.0 -61.0 -56.0 -51.0 -48.0 -47.0 -48.0 -43.0 -42.0 -39.0 -38.0 -39.0 -38.0 -33.0 -28.0 -29.0 -28.0 -27.0 -22.0 -17.0 -16.0 -13.0 -14.0 -9.0 -6.0 -1.0 -2.0 -1.0 4.0 9.0 12.0 14.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 2.0 -1.0 -4.0 -5.0 -6.0 -7.0 -8.0 -13.0 -16.0 -19.0 -22.0 -25.0 -28.0 -30.0 -33.0 -34.0 -37.0 -36.0 -39.0 -40.0 -45.0 -48.0 -51.0 -54.0 -55.0 -58.0 -59.0 -62.0 -65.0 -66.0 -69.0 -74.0 -75.0 -76.0 -79.0 -80.0 -81.0 -82.0 -85.0 -90.0 -91.0 -92.0 -95.0 -96.0 -99.0 -102.0 -103.0 -106.0 -107.0 -110.0 -113.0 -116.0 -119.0 -122.0 -123.0 -124.0 51 -112.0 -111.0 -104.0 -105.0 -104.0 -101.0 -100.0 -97.0 -94.0 -91.0 -90.0 -89.0 -84.0 -81.0 -80.0 -83.0 -78.0 -75.0 -74.0 -71.0 -68.0 -69.0 -66.0 -65.0 -62.0 -59.0 -59.0 -54.0 -49.0 -48.0 -47.0 -46.0 -43.0 -40.0 -39.0 -38.0 -39.0 -36.0 -31.0 -26.0 -29.0 -28.0 -25.0 -22.0 -17.0 -14.0 -13.0 -12.0 -7.0 -4.0 -1.0 -2.0 1.0 6.0 11.0 14.0 14.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 2.0 -3.0 -4.0 -5.0 -6.0 -7.0 -10.0 -15.0 -18.0 -21.0 -24.0 -27.0 -30.0 -30.0 -33.0 -34.0 -37.0 -36.0 -39.0 -42.0 -47.0 -50.0 -53.0 -54.0 -57.0 -58.0 -61.0 -64.0 -65.0 -66.0 -69.0 -74.0 -75.0 -76.0 -81.0 -80.0 -81.0 -82.0 -87.0 -90.0 -91.0 -94.0 -95.0 -98.0 -101.0 -102.0 -105.0 -106.0 -109.0 -112.0 -115.0 -118.0 -121.0 -122.0 -123.0 52 -113.0 -112.0 -109.0 -104.0 -105.0 -104.0 -99.0 -100.0 -95.0 -92.0 -91.0 -90.0 -89.0 -82.0 -81.0 -80.0 -81.0 -76.0 -75.0 -74.0 -71.0 -68.0 -69.0 -66.0 -63.0 -61.0 -59.0 -57.0 -52.0 -49.0 -48.0 -47.0 -46.0 -43.0 -40.0 -39.0 -38.0 -37.0 -34.0 -29.0 -26.0 -29.0 -26.0 -25.0 -20.0 -15.0 -14.0 -11.0 -10.0 -5.0 -4.0 -1.0 0.0 3.0 8.0 13.0 14.0 12.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 2.0 -3.0 -4.0 -5.0 -6.0 -9.0 -12.0 -17.0 -20.0 -23.0 -25.0 -29.0 -31.0 -30.0 -35.0 -34.0 -37.0 -36.0 -41.0 -42.0 -49.0 -52.0 -53.0 -56.0 -57.0 -60.0 -63.0 -64.0 -65.0 -68.0 -69.0 -74.0 -75.0 -76.0 -81.0 -80.0 -81.0 -82.0 -87.0 -90.0 -93.0 -94.0 -97.0 -100.0 -101.0 -104.0 -105.0 -108.0 -111.0 -114.0 -115.0 -118.0 -121.0 -122.0 53 -112.0 -113.0 -112.0 -111.0 -104.0 -105.0 -102.0 -99.0 -98.0 -93.0 -92.0 -91.0 -90.0 -87.0 -82.0 -81.0 -80.0 -79.0 -76.0 -75.0 -76.0 -71.0 -68.0 -71.0 -66.0 -62.0 -59.0 -58.0 -55.0 -52.0 -51.0 -48.0 -47.0 -48.0 -43.0 -40.0 -39.0 -38.0 -35.0 -34.0 -29.0 -26.0 -29.0 -26.0 -23.0 -18.0 -15.0 -12.0 -9.0 -8.0 -7.0 -4.0 1.0 2.0 5.0 10.0 13.0 14.0 12.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 2.0 -3.0 -4.0 -7.0 -6.0 -11.0 -14.0 -17.0 -22.0 -23.0 -25.0 -31.0 -31.0 -30.0 -35.0 -34.0 -37.0 -38.0 -43.0 -42.0 -49.0 -52.0 -55.0 -56.0 -59.0 -62.0 -63.0 -66.0 -67.0 -68.0 -69.0 -74.0 -75.0 -76.0 -81.0 -82.0 -81.0 -82.0 -87.0 -92.0 -93.0 -96.0 -99.0 -100.0 -103.0 -104.0 -105.0 -110.0 -113.0 -116.0 -115.0 -118.0 -121.0 54 -117.0 -112.0 -113.0 -112.0 -111.0 -104.0 -105.0 -102.0 -99.0 -98.0 -93.0 -92.0 -91.0 -90.0 -87.0 -82.0 -81.0 -80.0 -79.0 -74.0 -75.0 -76.0 -71.0 -68.0 -69.0 -65.0 -62.0 -59.0 -58.0 -55.0 -52.0 -51.0 -48.0 -47.0 -48.0 -43.0 -40.0 -39.0 -36.0 -33.0 -34.0 -29.0 -26.0 -29.0 -24.0 -23.0 -16.0 -15.0 -12.0 -9.0 -6.0 -7.0 -2.0 1.0 2.0 7.0 10.0 13.0 14.0 12.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 2.0 -3.0 -6.0 -7.0 -8.0 -13.0 -14.0 -19.0 -22.0 -23.0 -25.0 -32.0 -31.0 -30.0 -35.0 -34.0 -39.0 -40.0 -43.0 -42.0 -49.0 -54.0 -55.0 -58.0 -61.0 -64.0 -63.0 -66.0 -67.0 -70.0 -69.0 -74.0 -75.0 -76.0 -81.0 -84.0 -81.0 -82.0 -87.0 -90.0 -93.0 -96.0 -97.0 -98.0 -101.0 -102.0 -107.0 -110.0 -111.0 -116.0 -113.0 -118.0 55 -116.0 -117.0 -112.0 -113.0 -112.0 -109.0 -104.0 -105.0 -102.0 -99.0 -98.0 -93.0 -92.0 -91.0 -90.0 -87.0 -82.0 -81.0 -80.0 -79.0 -74.0 -75.0 -76.0 -71.0 -68.0 -68.0 -65.0 -62.0 -59.0 -58.0 -55.0 -52.0 -51.0 -48.0 -47.0 -48.0 -43.0 -40.0 -37.0 -34.0 -33.0 -34.0 -29.0 -26.0 -27.0 -24.0 -21.0 -16.0 -15.0 -12.0 -7.0 -6.0 -5.0 -2.0 1.0 4.0 7.0 10.0 13.0 14.0 11.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 2.0 -3.0 -6.0 -7.0 -10.0 -15.0 -16.0 -21.0 -24.0 -23.0 -25.0 -32.0 -31.0 -30.0 -35.0 -34.0 -41.0 -42.0 -45.0 -42.0 -51.0 -52.0 -53.0 -58.0 -61.0 -64.0 -61.0 -66.0 -69.0 -70.0 -69.0 -74.0 -75.0 -78.0 -79.0 -84.0 -81.0 -84.0 -87.0 -92.0 -95.0 -96.0 -97.0 -98.0 -103.0 -102.0 -109.0 -110.0 -111.0 -116.0 -113.0 56 -121.0 -116.0 -117.0 -114.0 -113.0 -110.0 -109.0 -104.0 -103.0 -102.0 -99.0 -98.0 -93.0 -94.0 -91.0 -90.0 -87.0 -82.0 -83.0 -80.0 -81.0 -76.0 -75.0 -76.0 -73.0 -68.0 -66.0 -63.0 -60.0 -61.0 -60.0 -57.0 -52.0 -53.0 -50.0 -47.0 -46.0 -45.0 -42.0 -39.0 -36.0 -33.0 -34.0 -31.0 -26.0 -27.0 -22.0 -19.0 -14.0 -13.0 -12.0 -9.0 -6.0 -3.0 -2.0 3.0 4.0 7.0 8.0 11.0 14.0 11.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 0.0 -3.0 -8.0 -9.0 -10.0 -17.0 -16.0 -21.0 -25.0 -24.0 -25.0 -32.0 -31.0 -30.0 -37.0 -36.0 -41.0 -42.0 -45.0 -44.0 -49.0 -52.0 -55.0 -58.0 -61.0 -64.0 -61.0 -66.0 -71.0 -70.0 -69.0 -72.0 -77.0 -80.0 -79.0 -82.0 -83.0 -84.0 -89.0 -92.0 -93.0 -96.0 -97.0 -98.0 -103.0 -104.0 -109.0 -110.0 -111.0 -114.0 57 -124.0 -123.0 -118.0 -117.0 -116.0 -111.0 -112.0 -111.0 -106.0 -103.0 -104.0 -101.0 -98.0 -93.0 -94.0 -93.0 -92.0 -89.0 -82.0 -83.0 -82.0 -81.0 -78.0 -75.0 -74.0 -74.0 -70.0 -68.0 -63.0 -60.0 -63.0 -58.0 -59.0 -52.0 -55.0 -52.0 -49.0 -48.0 -43.0 -40.0 -41.0 -36.0 -33.0 -36.0 -31.0 -26.0 -27.0 -24.0 -21.0 -14.0 -11.0 -14.0 -11.0 -6.0 -3.0 -2.0 1.0 4.0 5.0 8.0 9.0 14.0 11.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 -2.0 -5.0 -8.0 -11.0 -12.0 -17.0 -17.0 -23.0 -23.0 -26.0 -25.0 -30.0 -29.0 -32.0 -37.0 -38.0 -41.0 -42.0 -47.0 -44.0 -51.0 -54.0 -55.0 -58.0 -63.0 -66.0 -61.0 -66.0 -71.0 -70.0 -69.0 -72.0 -79.0 -80.0 -79.0 -82.0 -83.0 -86.0 -91.0 -92.0 -93.0 -96.0 -99.0 -100.0 -105.0 -104.0 -111.0 -110.0 -111.0 58 -123.0 -126.0 -121.0 -118.0 -117.0 -116.0 -109.0 -112.0 -109.0 -106.0 -103.0 -102.0 -101.0 -96.0 -93.0 -94.0 -93.0 -90.0 -89.0 -84.0 -83.0 -82.0 -83.0 -78.0 -75.0 -73.0 -72.0 -71.0 -68.0 -65.0 -60.0 -61.0 -60.0 -57.0 -52.0 -55.0 -54.0 -51.0 -46.0 -41.0 -40.0 -43.0 -36.0 -33.0 -34.0 -29.0 -26.0 -25.0 -24.0 -21.0 -14.0 -11.0 -12.0 -9.0 -4.0 -1.0 -2.0 -1.0 4.0 5.0 6.0 9.0 14.0 11.0 10.0 13.0 11.0 12.0 11.0 4.0 3.0 -2.0 -7.0 -10.0 -13.0 -14.0 -19.0 -17.0 -24.0 -23.0 -26.0 -25.0 -30.0 -29.0 -34.0 -39.0 -40.0 -41.0 -44.0 -47.0 -44.0 -53.0 -56.0 -57.0 -58.0 -63.0 -66.0 -61.0 -66.0 -71.0 -70.0 -71.0 -72.0 -79.0 -80.0 -81.0 -82.0 -85.0 -88.0 -91.0 -92.0 -93.0 -98.0 -99.0 -102.0 -105.0 -104.0 -111.0 -110.0 59 -126.0 -123.0 -124.0 -121.0 -118.0 -117.0 -114.0 -109.0 -110.0 -107.0 -106.0 -103.0 -102.0 -99.0 -96.0 -93.0 -92.0 -91.0 -90.0 -87.0 -84.0 -83.0 -82.0 -83.0 -78.0 -74.0 -71.0 -70.0 -69.0 -68.0 -65.0 -60.0 -61.0 -60.0 -57.0 -52.0 -53.0 -52.0 -49.0 -46.0 -41.0 -40.0 -41.0 -36.0 -33.0 -32.0 -27.0 -24.0 -23.0 -22.0 -19.0 -14.0 -11.0 -10.0 -7.0 -2.0 -1.0 -2.0 -1.0 4.0 5.0 6.0 9.0 14.0 11.0 10.0 13.0 11.0 12.0 9.0 4.0 1.0 -4.0 -5.0 -10.0 -11.0 -14.0 -19.0 -17.0 -22.0 -23.0 -26.0 -25.0 -30.0 -31.0 -34.0 -37.0 -40.0 -43.0 -44.0 -47.0 -46.0 -53.0 -56.0 -59.0 -60.0 -63.0 -66.0 -61.0 -66.0 -69.0 -72.0 -71.0 -72.0 -77.0 -80.0 -81.0 -84.0 -87.0 -88.0 -91.0 -92.0 -93.0 -98.0 -101.0 -104.0 -105.0 -104.0 -109.0 60 -129.0 -126.0 -123.0 -124.0 -121.0 -118.0 -117.0 -114.0 -109.0 -110.0 -107.0 -106.0 -103.0 -102.0 -99.0 -96.0 -93.0 -92.0 -91.0 -88.0 -87.0 -84.0 -83.0 -82.0 -81.0 -77.0 -74.0 -71.0 -70.0 -69.0 -68.0 -65.0 -60.0 -61.0 -60.0 -57.0 -52.0 -53.0 -50.0 -47.0 -46.0 -41.0 -40.0 -41.0 -36.0 -33.0 -30.0 -27.0 -24.0 -23.0 -20.0 -19.0 -14.0 -11.0 -10.0 -5.0 -2.0 -1.0 -2.0 -1.0 4.0 5.0 6.0 9.0 14.0 11.0 10.0 13.0 13.0 10.0 9.0 2.0 -1.0 -4.0 -7.0 -10.0 -11.0 -15.0 -20.0 -17.0 -22.0 -23.0 -26.0 -27.0 -32.0 -31.0 -34.0 -37.0 -42.0 -43.0 -46.0 -49.0 -48.0 -55.0 -58.0 -59.0 -60.0 -63.0 -66.0 -61.0 -66.0 -71.0 -74.0 -71.0 -72.0 -79.0 -80.0 -83.0 -86.0 -87.0 -90.0 -91.0 -92.0 -95.0 -100.0 -101.0 -106.0 -105.0 -104.0 61 -132.0 -131.0 -128.0 -123.0 -126.0 -123.0 -120.0 -119.0 -116.0 -109.0 -112.0 -109.0 -108.0 -103.0 -104.0 -101.0 -98.0 -95.0 -92.0 -93.0 -90.0 -87.0 -86.0 -85.0 -84.0 -82.0 -79.0 -76.0 -71.0 -70.0 -71.0 -66.0 -67.0 -60.0 -63.0 -62.0 -59.0 -54.0 -53.0 -50.0 -49.0 -48.0 -43.0 -42.0 -41.0 -36.0 -35.0 -32.0 -29.0 -24.0 -23.0 -22.0 -19.0 -16.0 -13.0 -10.0 -7.0 -4.0 -3.0 -2.0 -3.0 4.0 3.0 4.0 7.0 12.0 9.0 8.0 11.0 14.0 8.0 7.0 0.0 -3.0 -6.0 -9.0 -12.0 -13.0 -15.0 -18.0 -17.0 -22.0 -21.0 -26.0 -29.0 -30.0 -33.0 -34.0 -39.0 -40.0 -43.0 -46.0 -47.0 -48.0 -55.0 -56.0 -57.0 -62.0 -61.0 -64.0 -61.0 -66.0 -69.0 -72.0 -71.0 -74.0 -77.0 -80.0 -83.0 -84.0 -87.0 -88.0 -91.0 -94.0 -97.0 -100.0 -99.0 -104.0 -105.0 62 -135.0 -132.0 -131.0 -130.0 -125.0 -124.0 -123.0 -120.0 -117.0 -116.0 -109.0 -112.0 -109.0 -108.0 -103.0 -104.0 -101.0 -98.0 -97.0 -92.0 -95.0 -92.0 -87.0 -88.0 -87.0 -83.0 -80.0 -77.0 -76.0 -73.0 -72.0 -71.0 -66.0 -67.0 -62.0 -63.0 -60.0 -59.0 -56.0 -53.0 -52.0 -49.0 -48.0 -45.0 -42.0 -41.0 -36.0 -33.0 -30.0 -29.0 -26.0 -25.0 -20.0 -17.0 -16.0 -11.0 -10.0 -7.0 -6.0 -5.0 -2.0 -5.0 2.0 3.0 4.0 7.0 12.0 7.0 6.0 9.0 14.0 6.0 5.0 0.0 -5.0 -6.0 -9.0 -14.0 -14.0 -15.0 -18.0 -17.0 -22.0 -23.0 -28.0 -29.0 -30.0 -33.0 -36.0 -39.0 -42.0 -45.0 -48.0 -49.0 -50.0 -57.0 -56.0 -57.0 -62.0 -61.0 -64.0 -63.0 -66.0 -69.0 -72.0 -71.0 -74.0 -79.0 -82.0 -83.0 -84.0 -87.0 -88.0 -93.0 -96.0 -99.0 -102.0 -99.0 -104.0 63 -136.0 -137.0 -132.0 -133.0 -132.0 -127.0 -124.0 -125.0 -122.0 -119.0 -118.0 -111.0 -114.0 -111.0 -110.0 -105.0 -106.0 -103.0 -100.0 -99.0 -92.0 -97.0 -94.0 -89.0 -90.0 -88.0 -85.0 -82.0 -79.0 -78.0 -73.0 -74.0 -73.0 -68.0 -69.0 -64.0 -65.0 -62.0 -57.0 -54.0 -53.0 -54.0 -49.0 -48.0 -47.0 -44.0 -41.0 -38.0 -35.0 -32.0 -27.0 -26.0 -25.0 -22.0 -19.0 -16.0 -13.0 -12.0 -7.0 -8.0 -7.0 -4.0 -3.0 0.0 1.0 2.0 5.0 12.0 8.0 6.0 7.0 14.0 4.0 3.0 -2.0 -6.0 -8.0 -9.0 -14.0 -16.0 -15.0 -17.0 -17.0 -21.0 -25.0 -29.0 -31.0 -30.0 -33.0 -36.0 -38.0 -43.0 -46.0 -49.0 -49.0 -50.0 -56.0 -55.0 -57.0 -61.0 -61.0 -63.0 -63.0 -66.0 -69.0 -73.0 -71.0 -76.0 -78.0 -81.0 -82.0 -83.0 -88.0 -88.0 -94.0 -95.0 -98.0 -101.0 -99.0 64 -141.0 -138.0 -137.0 -134.0 -133.0 -132.0 -129.0 -126.0 -125.0 -122.0 -121.0 -116.0 -113.0 -114.0 -113.0 -112.0 -107.0 -106.0 -105.0 -102.0 -101.0 -94.0 -98.0 -94.0 -89.0 -91.0 -88.0 -85.0 -82.0 -81.0 -80.0 -75.0 -76.0 -73.0 -68.0 -71.0 -66.0 -63.0 -62.0 -59.0 -56.0 -55.0 -54.0 -51.0 -50.0 -47.0 -44.0 -41.0 -38.0 -35.0 -32.0 -29.0 -28.0 -25.0 -20.0 -19.0 -18.0 -15.0 -14.0 -9.0 -10.0 -9.0 -6.0 -5.0 -2.0 -1.0 0.0 3.0 10.0 6.0 6.0 6.0 14.0 3.0 3.0 -3.0 -5.0 -9.0 -10.0 -14.0 -15.0 -15.0 -17.0 -19.0 -21.0 -26.0 -29.0 -30.0 -30.0 -32.0 -37.0 -38.0 -43.0 -46.0 -49.0 -51.0 -50.0 -56.0 -55.0 -57.0 -59.0 -62.0 -61.0 -63.0 -65.0 -68.0 -71.0 -71.0 -75.0 -76.0 -81.0 -82.0 -85.0 -88.0 -88.0 -94.0 -95.0 -98.0 -99.0 65 -144.0 -141.0 -140.0 -139.0 -136.0 -133.0 -132.0 -129.0 -126.0 -125.0 -122.0 -121.0 -116.0 -115.0 -114.0 -113.0 -110.0 -107.0 -108.0 -103.0 -104.0 -101.0 -94.0 -99.0 -96.0 -89.0 -89.0 -86.0 -85.0 -84.0 -83.0 -80.0 -75.0 -76.0 -75.0 -68.0 -69.0 -68.0 -65.0 -62.0 -61.0 -56.0 -57.0 -56.0 -51.0 -50.0 -45.0 -42.0 -39.0 -38.0 -35.0 -34.0 -29.0 -26.0 -23.0 -20.0 -19.0 -18.0 -17.0 -16.0 -9.0 -12.0 -11.0 -6.0 -5.0 -2.0 -1.0 0.0 3.0 8.0 6.0 4.0 4.0 14.0 1.0 3.0 -3.0 -5.0 -10.0 -10.0 -14.0 -15.0 -15.0 -17.0 -21.0 -21.0 -26.0 -29.0 -30.0 -30.0 -34.0 -39.0 -40.0 -45.0 -48.0 -51.0 -51.0 -50.0 -56.0 -55.0 -57.0 -61.0 -64.0 -61.0 -63.0 -67.0 -68.0 -73.0 -71.0 -75.0 -78.0 -81.0 -82.0 -87.0 -90.0 -90.0 -96.0 -95.0 -98.0 66 -147.0 -146.0 -143.0 -142.0 -139.0 -138.0 -135.0 -134.0 -131.0 -128.0 -127.0 -122.0 -123.0 -118.0 -117.0 -116.0 -115.0 -112.0 -109.0 -108.0 -105.0 -104.0 -103.0 -94.0 -97.0 -97.0 -91.0 -91.0 -88.0 -87.0 -86.0 -83.0 -82.0 -77.0 -76.0 -77.0 -70.0 -69.0 -68.0 -65.0 -64.0 -63.0 -58.0 -59.0 -56.0 -53.0 -50.0 -47.0 -44.0 -41.0 -38.0 -37.0 -34.0 -31.0 -26.0 -21.0 -22.0 -21.0 -20.0 -19.0 -18.0 -11.0 -14.0 -13.0 -8.0 -7.0 -4.0 -3.0 0.0 1.0 6.0 4.0 4.0 2.0 14.0 1.0 1.0 -5.0 -3.0 -10.0 -10.0 -12.0 -13.0 -16.0 -15.0 -22.0 -23.0 -26.0 -27.0 -28.0 -32.0 -34.0 -39.0 -42.0 -43.0 -46.0 -49.0 -50.0 -50.0 -54.0 -55.0 -58.0 -59.0 -62.0 -61.0 -63.0 -67.0 -68.0 -71.0 -71.0 -77.0 -78.0 -81.0 -84.0 -85.0 -88.0 -90.0 -94.0 -95.0 67 -150.0 -147.0 -146.0 -145.0 -144.0 -139.0 -138.0 -135.0 -132.0 -131.0 -128.0 -127.0 -122.0 -123.0 -118.0 -117.0 -116.0 -113.0 -114.0 -109.0 -110.0 -107.0 -104.0 -103.0 -96.0 -97.0 -95.0 -91.0 -91.0 -90.0 -89.0 -86.0 -83.0 -82.0 -79.0 -76.0 -75.0 -72.0 -71.0 -68.0 -67.0 -64.0 -63.0 -60.0 -57.0 -56.0 -51.0 -48.0 -45.0 -44.0 -41.0 -40.0 -35.0 -32.0 -31.0 -26.0 -21.0 -22.0 -23.0 -22.0 -19.0 -18.0 -13.0 -14.0 -11.0 -8.0 -7.0 -6.0 -3.0 -2.0 1.0 4.0 2.0 4.0 1.0 14.0 3.0 0.0 -4.0 -1.0 -8.0 -9.0 -10.0 -13.0 -16.0 -15.0 -20.0 -23.0 -26.0 -27.0 -30.0 -33.0 -36.0 -39.0 -42.0 -41.0 -44.0 -47.0 -48.0 -49.0 -52.0 -55.0 -56.0 -57.0 -60.0 -63.0 -63.0 -67.0 -70.0 -71.0 -73.0 -75.0 -76.0 -81.0 -84.0 -87.0 -86.0 -89.0 -92.0 68 -153.0 -150.0 -149.0 -148.0 -147.0 -142.0 -141.0 -138.0 -135.0 -134.0 -131.0 -130.0 -127.0 -124.0 -123.0 -118.0 -117.0 -116.0 -115.0 -112.0 -111.0 -110.0 -107.0 -106.0 -103.0 -96.0 -97.0 -95.0 -93.0 -91.0 -92.0 -89.0 -86.0 -85.0 -84.0 -79.0 -76.0 -77.0 -74.0 -71.0 -70.0 -67.0 -66.0 -65.0 -60.0 -59.0 -54.0 -51.0 -48.0 -47.0 -44.0 -43.0 -38.0 -35.0 -34.0 -29.0 -26.0 -21.0 -24.0 -25.0 -22.0 -21.0 -20.0 -13.0 -14.0 -11.0 -8.0 -8.0 -6.0 -5.0 -2.0 -1.0 2.0 2.0 2.0 3.0 14.0 2.0 1.0 -2.0 -1.0 -6.0 -7.0 -10.0 -13.0 -14.0 -15.0 -20.0 -23.0 -24.0 -27.0 -30.0 -33.0 -36.0 -37.0 -42.0 -39.0 -42.0 -45.0 -46.0 -49.0 -52.0 -55.0 -54.0 -57.0 -58.0 -61.0 -64.0 -67.0 -68.0 -69.0 -72.0 -73.0 -78.0 -81.0 -84.0 -87.0 -84.0 -89.0 69 -154.0 -155.0 -150.0 -151.0 -150.0 -147.0 -142.0 -143.0 -140.0 -137.0 -136.0 -133.0 -132.0 -129.0 -126.0 -125.0 -120.0 -119.0 -118.0 -117.0 -112.0 -113.0 -112.0 -109.0 -106.0 -105.0 -98.0 -99.0 -97.0 -95.0 -91.0 -92.0 -91.0 -88.0 -87.0 -86.0 -81.0 -78.0 -75.0 -72.0 -71.0 -72.0 -67.0 -66.0 -65.0 -62.0 -57.0 -56.0 -53.0 -50.0 -45.0 -44.0 -43.0 -40.0 -37.0 -34.0 -31.0 -28.0 -21.0 -26.0 -27.0 -24.0 -21.0 -22.0 -15.0 -16.0 -13.0 -8.0 -6.0 -8.0 -7.0 -2.0 -3.0 0.0 0.0 0.0 1.0 14.0 4.0 3.0 -2.0 1.0 -4.0 -5.0 -10.0 -13.0 -16.0 -15.0 -20.0 -21.0 -22.0 -27.0 -30.0 -33.0 -34.0 -35.0 -40.0 -37.0 -40.0 -43.0 -46.0 -49.0 -50.0 -53.0 -54.0 -57.0 -56.0 -61.0 -64.0 -65.0 -66.0 -67.0 -72.0 -73.0 -78.0 -79.0 -82.0 -85.0 -84.0 70 -159.0 -156.0 -155.0 -150.0 -153.0 -150.0 -147.0 -142.0 -143.0 -138.0 -139.0 -134.0 -135.0 -130.0 -131.0 -128.0 -125.0 -122.0 -119.0 -120.0 -119.0 -112.0 -115.0 -112.0 -109.0 -108.0 -103.0 -98.0 -98.0 -97.0 -97.0 -91.0 -94.0 -89.0 -90.0 -87.0 -86.0 -83.0 -80.0 -77.0 -72.0 -73.0 -72.0 -67.0 -68.0 -63.0 -62.0 -55.0 -56.0 -51.0 -50.0 -47.0 -46.0 -43.0 -40.0 -35.0 -36.0 -33.0 -30.0 -21.0 -28.0 -25.0 -26.0 -22.0 -20.0 -15.0 -18.0 -14.0 -10.0 -6.0 -10.0 -9.0 -4.0 -5.0 0.0 -2.0 -2.0 1.0 14.0 6.0 5.0 0.0 1.0 -4.0 -7.0 -10.0 -13.0 -14.0 -17.0 -18.0 -21.0 -24.0 -25.0 -28.0 -31.0 -36.0 -35.0 -40.0 -37.0 -40.0 -41.0 -44.0 -47.0 -50.0 -51.0 -54.0 -55.0 -58.0 -61.0 -62.0 -65.0 -66.0 -69.0 -72.0 -75.0 -78.0 -79.0 -82.0 -83.0 71 -160.0 -159.0 -156.0 -157.0 -150.0 -151.0 -150.0 -147.0 -142.0 -143.0 -138.0 -139.0 -134.0 -135.0 -130.0 -131.0 -128.0 -123.0 -122.0 -119.0 -120.0 -119.0 -112.0 -115.0 -112.0 -109.0 -106.0 -102.0 -98.0 -100.0 -97.0 -98.0 -91.0 -94.0 -91.0 -90.0 -85.0 -84.0 -81.0 -80.0 -77.0 -72.0 -75.0 -74.0 -67.0 -68.0 -63.0 -60.0 -53.0 -54.0 -53.0 -52.0 -47.0 -44.0 -43.0 -38.0 -35.0 -36.0 -33.0 -32.0 -21.0 -30.0 -27.0 -26.0 -22.0 -18.0 -15.0 -18.0 -12.0 -10.0 -6.0 -12.0 -11.0 -4.0 -7.0 0.0 -2.0 0.0 1.0 14.0 8.0 5.0 2.0 -1.0 -4.0 -5.0 -8.0 -11.0 -14.0 -15.0 -18.0 -21.0 -24.0 -27.0 -30.0 -29.0 -34.0 -37.0 -38.0 -35.0 -38.0 -43.0 -46.0 -45.0 -48.0 -51.0 -52.0 -55.0 -56.0 -59.0 -62.0 -63.0 -64.0 -69.0 -72.0 -75.0 -76.0 -77.0 -80.0 72 -161.0 -160.0 -159.0 -156.0 -157.0 -150.0 -151.0 -150.0 -147.0 -142.0 -143.0 -138.0 -139.0 -134.0 -135.0 -130.0 -131.0 -128.0 -123.0 -122.0 -119.0 -118.0 -119.0 -112.0 -113.0 -112.0 -109.0 -106.0 -102.0 -98.0 -100.0 -97.0 -98.0 -91.0 -94.0 -91.0 -90.0 -85.0 -82.0 -79.0 -80.0 -77.0 -72.0 -75.0 -72.0 -67.0 -66.0 -63.0 -60.0 -53.0 -52.0 -53.0 -50.0 -47.0 -44.0 -41.0 -38.0 -35.0 -36.0 -33.0 -32.0 -21.0 -29.0 -27.0 -26.0 -22.0 -18.0 -15.0 -16.0 -12.0 -10.0 -6.0 -11.0 -11.0 -4.0 -7.0 0.0 -2.0 2.0 3.0 14.0 10.0 7.0 2.0 -1.0 -4.0 -5.0 -8.0 -11.0 -12.0 -15.0 -18.0 -19.0 -22.0 -27.0 -28.0 -27.0 -32.0 -35.0 -36.0 -35.0 -36.0 -43.0 -44.0 -45.0 -46.0 -49.0 -52.0 -55.0 -54.0 -57.0 -60.0 -63.0 -66.0 -69.0 -72.0 -73.0 -74.0 -77.0 73 -162.0 -161.0 -158.0 -159.0 -156.0 -155.0 -150.0 -151.0 -148.0 -145.0 -142.0 -141.0 -138.0 -137.0 -134.0 -135.0 -130.0 -129.0 -128.0 -123.0 -122.0 -119.0 -118.0 -117.0 -112.0 -113.0 -110.0 -108.0 -105.0 -102.0 -98.0 -100.0 -97.0 -96.0 -91.0 -94.0 -91.0 -88.0 -83.0 -80.0 -79.0 -80.0 -75.0 -72.0 -73.0 -70.0 -67.0 -64.0 -61.0 -58.0 -53.0 -52.0 -51.0 -48.0 -45.0 -42.0 -41.0 -38.0 -35.0 -36.0 -33.0 -30.0 -21.0 -27.0 -27.0 -24.0 -22.0 -18.0 -15.0 -16.0 -12.0 -10.0 -6.0 -11.0 -9.0 -4.0 -7.0 0.0 -1.0 2.0 5.0 14.0 12.0 7.0 2.0 -1.0 -2.0 -3.0 -8.0 -9.0 -10.0 -15.0 -18.0 -21.0 -22.0 -25.0 -26.0 -27.0 -30.0 -33.0 -34.0 -37.0 -36.0 -41.0 -42.0 -43.0 -44.0 -49.0 -52.0 -53.0 -52.0 -55.0 -60.0 -61.0 -66.0 -67.0 -70.0 -71.0 -72.0 74 -165.0 -164.0 -159.0 -158.0 -161.0 -156.0 -153.0 -152.0 -151.0 -148.0 -145.0 -144.0 -141.0 -138.0 -137.0 -136.0 -133.0 -132.0 -129.0 -128.0 -123.0 -124.0 -121.0 -118.0 -117.0 -114.0 -113.0 -111.0 -108.0 -107.0 -102.0 -100.0 -100.0 -97.0 -98.0 -93.0 -94.0 -91.0 -86.0 -83.0 -80.0 -81.0 -78.0 -75.0 -74.0 -73.0 -70.0 -67.0 -64.0 -61.0 -56.0 -53.0 -54.0 -50.0 -47.0 -45.0 -44.0 -43.0 -38.0 -37.0 -36.0 -33.0 -28.0 -21.0 -27.0 -27.0 -26.0 -20.0 -18.0 -17.0 -18.0 -12.0 -12.0 -6.0 -12.0 -11.0 -6.0 -5.0 -2.0 -1.0 2.0 7.0 13.0 14.0 5.0 2.0 -1.0 0.0 -3.0 -6.0 -7.0 -12.0 -15.0 -18.0 -19.0 -22.0 -25.0 -24.0 -27.0 -30.0 -31.0 -34.0 -35.0 -36.0 -39.0 -42.0 -41.0 -46.0 -47.0 -50.0 -51.0 -52.0 -57.0 -58.0 -63.0 -64.0 -67.0 -70.0 -69.0 75 -166.0 -167.0 -166.0 -159.0 -158.0 -159.0 -154.0 -153.0 -152.0 -149.0 -148.0 -143.0 -144.0 -139.0 -138.0 -137.0 -136.0 -131.0 -132.0 -127.0 -128.0 -123.0 -126.0 -121.0 -116.0 -117.0 -114.0 -114.0 -111.0 -110.0 -107.0 -102.0 -100.0 -98.0 -97.0 -99.0 -93.0 -92.0 -91.0 -86.0 -84.0 -82.0 -83.0 -79.0 -77.0 -75.0 -72.0 -69.0 -67.0 -64.0 -60.0 -56.0 -54.0 -54.0 -48.0 -45.0 -46.0 -46.0 -45.0 -39.0 -39.0 -36.0 -32.0 -29.0 -21.0 -28.0 -29.0 -26.0 -20.0 -19.0 -19.0 -18.0 -12.0 -14.0 -6.0 -13.0 -13.0 -8.0 -6.0 -4.0 0.0 2.0 5.0 13.0 14.0 3.0 0.0 -1.0 0.0 -3.0 -8.0 -7.0 -14.0 -17.0 -20.0 -21.0 -22.0 -25.0 -24.0 -27.0 -30.0 -33.0 -34.0 -35.0 -36.0 -39.0 -42.0 -41.0 -46.0 -47.0 -52.0 -51.0 -54.0 -59.0 -58.0 -63.0 -64.0 -67.0 -70.0 76 -167.0 -166.0 -167.0 -166.0 -159.0 -158.0 -157.0 -154.0 -153.0 -150.0 -149.0 -146.0 -143.0 -142.0 -139.0 -138.0 -135.0 -134.0 -131.0 -130.0 -127.0 -126.0 -123.0 -124.0 -121.0 -116.0 -115.0 -113.0 -112.0 -111.0 -110.0 -105.0 -102.0 -100.0 -98.0 -97.0 -97.0 -93.0 -93.0 -90.0 -86.0 -84.0 -83.0 -84.0 -79.0 -78.0 -73.0 -70.0 -67.0 -66.0 -63.0 -60.0 -56.0 -54.0 -53.0 -48.0 -45.0 -46.0 -47.0 -44.0 -39.0 -38.0 -35.0 -30.0 -29.0 -21.0 -28.0 -28.0 -25.0 -20.0 -19.0 -20.0 -19.0 -12.0 -15.0 -6.0 -12.0 -12.0 -9.0 -4.0 -3.0 2.0 3.0 4.0 13.0 14.0 3.0 0.0 -3.0 0.0 -5.0 -10.0 -9.0 -16.0 -19.0 -22.0 -21.0 -24.0 -25.0 -24.0 -27.0 -30.0 -33.0 -34.0 -35.0 -36.0 -39.0 -44.0 -43.0 -46.0 -49.0 -52.0 -51.0 -56.0 -61.0 -60.0 -63.0 -64.0 -67.0 77 -172.0 -167.0 -166.0 -167.0 -166.0 -159.0 -158.0 -157.0 -154.0 -153.0 -150.0 -149.0 -146.0 -143.0 -142.0 -139.0 -138.0 -135.0 -134.0 -129.0 -130.0 -125.0 -126.0 -125.0 -124.0 -121.0 -116.0 -115.0 -113.0 -112.0 -113.0 -108.0 -105.0 -104.0 -100.0 -98.0 -97.0 -97.0 -91.0 -91.0 -92.0 -86.0 -84.0 -85.0 -82.0 -81.0 -76.0 -73.0 -70.0 -67.0 -64.0 -64.0 -58.0 -56.0 -56.0 -51.0 -48.0 -45.0 -47.0 -47.0 -42.0 -39.0 -38.0 -33.0 -30.0 -29.0 -21.0 -28.0 -28.0 -27.0 -20.0 -21.0 -20.0 -19.0 -14.0 -15.0 -6.0 -14.0 -12.0 -7.0 -4.0 -3.0 4.0 1.0 2.0 13.0 14.0 3.0 0.0 -1.0 -2.0 -7.0 -10.0 -9.0 -16.0 -19.0 -20.0 -21.0 -24.0 -23.0 -24.0 -27.0 -28.0 -31.0 -34.0 -35.0 -36.0 -41.0 -44.0 -43.0 -46.0 -49.0 -50.0 -53.0 -58.0 -61.0 -62.0 -61.0 -64.0 78 -171.0 -172.0 -167.0 -166.0 -167.0 -164.0 -159.0 -158.0 -157.0 -154.0 -153.0 -150.0 -149.0 -146.0 -143.0 -142.0 -139.0 -138.0 -135.0 -134.0 -129.0 -130.0 -125.0 -126.0 -125.0 -124.0 -121.0 -116.0 -115.0 -113.0 -112.0 -111.0 -108.0 -105.0 -104.0 -100.0 -98.0 -98.0 -95.0 -89.0 -91.0 -92.0 -86.0 -84.0 -85.0 -82.0 -79.0 -76.0 -73.0 -70.0 -65.0 -64.0 -62.0 -58.0 -56.0 -54.0 -51.0 -48.0 -45.0 -47.0 -45.0 -42.0 -37.0 -36.0 -33.0 -30.0 -29.0 -21.0 -26.0 -28.0 -27.0 -20.0 -21.0 -20.0 -19.0 -14.0 -15.0 -6.0 -12.0 -10.0 -7.0 -2.0 -1.0 4.0 1.0 2.0 13.0 14.0 5.0 2.0 1.0 -4.0 -7.0 -10.0 -9.0 -14.0 -17.0 -18.0 -19.0 -22.0 -23.0 -26.0 -25.0 -26.0 -31.0 -34.0 -33.0 -34.0 -39.0 -42.0 -43.0 -44.0 -49.0 -50.0 -55.0 -56.0 -59.0 -62.0 -61.0 79 -174.0 -173.0 -172.0 -167.0 -166.0 -167.0 -164.0 -161.0 -160.0 -157.0 -156.0 -151.0 -152.0 -149.0 -148.0 -145.0 -144.0 -141.0 -140.0 -137.0 -136.0 -131.0 -130.0 -123.0 -124.0 -125.0 -122.0 -120.0 -116.0 -115.0 -113.0 -112.0 -111.0 -106.0 -105.0 -104.0 -99.0 -96.0 -98.0 -95.0 -89.0 -91.0 -90.0 -86.0 -84.0 -83.0 -80.0 -77.0 -74.0 -71.0 -68.0 -65.0 -64.0 -60.0 -56.0 -54.0 -54.0 -51.0 -48.0 -45.0 -45.0 -43.0 -40.0 -37.0 -36.0 -33.0 -30.0 -29.0 -21.0 -26.0 -26.0 -25.0 -20.0 -21.0 -18.0 -19.0 -14.0 -13.0 -6.0 -10.0 -8.0 -5.0 -2.0 -1.0 4.0 1.0 4.0 13.0 14.0 7.0 2.0 1.0 -4.0 -7.0 -10.0 -9.0 -14.0 -17.0 -18.0 -19.0 -20.0 -23.0 -26.0 -25.0 -24.0 -29.0 -32.0 -33.0 -32.0 -37.0 -42.0 -43.0 -46.0 -49.0 -50.0 -55.0 -56.0 -59.0 -60.0 80 -177.0 -174.0 -175.0 -174.0 -167.0 -166.0 -167.0 -166.0 -161.0 -160.0 -159.0 -154.0 -153.0 -150.0 -149.0 -150.0 -147.0 -144.0 -141.0 -138.0 -137.0 -134.0 -133.0 -128.0 -123.0 -126.0 -123.0 -123.0 -118.0 -116.0 -117.0 -111.0 -114.0 -109.0 -106.0 -107.0 -104.0 -97.0 -96.0 -96.0 -96.0 -89.0 -91.0 -92.0 -86.0 -85.0 -83.0 -80.0 -77.0 -72.0 -69.0 -69.0 -67.0 -63.0 -58.0 -57.0 -54.0 -54.0 -53.0 -50.0 -47.0 -43.0 -43.0 -40.0 -39.0 -37.0 -33.0 -30.0 -29.0 -21.0 -26.0 -28.0 -25.0 -22.0 -21.0 -20.0 -17.0 -16.0 -13.0 -8.0 -9.0 -8.0 -3.0 -4.0 -1.0 2.0 3.0 3.0 13.0 14.0 5.0 4.0 -1.0 -2.0 -7.0 -8.0 -7.0 -12.0 -15.0 -16.0 -17.0 -18.0 -23.0 -24.0 -23.0 -24.0 -29.0 -30.0 -33.0 -32.0 -37.0 -40.0 -43.0 -46.0 -47.0 -52.0 -53.0 -54.0 -57.0 81 -178.0 -177.0 -172.0 -175.0 -174.0 -167.0 -164.0 -167.0 -164.0 -159.0 -160.0 -157.0 -154.0 -153.0 -150.0 -149.0 -148.0 -145.0 -144.0 -139.0 -138.0 -135.0 -134.0 -133.0 -128.0 -123.0 -126.0 -122.0 -121.0 -118.0 -116.0 -116.0 -111.0 -112.0 -109.0 -106.0 -108.0 -102.0 -97.0 -94.0 -96.0 -96.0 -89.0 -91.0 -90.0 -84.0 -83.0 -81.0 -78.0 -75.0 -70.0 -69.0 -67.0 -65.0 -61.0 -58.0 -57.0 -54.0 -54.0 -53.0 -50.0 -47.0 -41.0 -41.0 -40.0 -39.0 -35.0 -31.0 -28.0 -29.0 -21.0 -26.0 -28.0 -25.0 -22.0 -21.0 -20.0 -15.0 -14.0 -13.0 -8.0 -7.0 -6.0 -3.0 -4.0 -1.0 2.0 4.0 5.0 13.0 14.0 5.0 2.0 -1.0 0.0 -5.0 -6.0 -5.0 -10.0 -13.0 -14.0 -17.0 -16.0 -21.0 -22.0 -23.0 -24.0 -29.0 -32.0 -33.0 -32.0 -35.0 -40.0 -41.0 -46.0 -47.0 -50.0 -51.0 -52.0 82 -179.0 -178.0 -175.0 -172.0 -175.0 -172.0 -167.0 -164.0 -165.0 -162.0 -159.0 -158.0 -157.0 -154.0 -153.0 -150.0 -147.0 -146.0 -145.0 -142.0 -139.0 -138.0 -135.0 -132.0 -131.0 -128.0 -123.0 -125.0 -120.0 -121.0 -118.0 -116.0 -116.0 -109.0 -112.0 -109.0 -106.0 -107.0 -100.0 -97.0 -94.0 -97.0 -94.0 -89.0 -92.0 -89.0 -82.0 -81.0 -81.0 -78.0 -73.0 -70.0 -71.0 -65.0 -64.0 -59.0 -58.0 -57.0 -54.0 -55.0 -53.0 -50.0 -45.0 -41.0 -42.0 -42.0 -38.0 -33.0 -31.0 -30.0 -31.0 -21.0 -28.0 -30.0 -27.0 -24.0 -23.0 -18.0 -17.0 -16.0 -15.0 -8.0 -9.0 -6.0 -5.0 -6.0 -3.0 2.0 2.0 5.0 14.0 12.0 5.0 2.0 1.0 0.0 -7.0 -4.0 -5.0 -10.0 -11.0 -14.0 -15.0 -16.0 -19.0 -22.0 -21.0 -26.0 -27.0 -30.0 -31.0 -32.0 -37.0 -38.0 -43.0 -44.0 -47.0 -50.0 -49.0 83 -182.0 -179.0 -178.0 -175.0 -172.0 -173.0 -170.0 -167.0 -164.0 -163.0 -162.0 -157.0 -158.0 -155.0 -154.0 -153.0 -148.0 -145.0 -146.0 -143.0 -142.0 -139.0 -138.0 -133.0 -130.0 -131.0 -126.0 -122.0 -123.0 -120.0 -121.0 -118.0 -116.0 -116.0 -109.0 -112.0 -107.0 -104.0 -105.0 -100.0 -97.0 -94.0 -97.0 -94.0 -89.0 -90.0 -87.0 -80.0 -79.0 -80.0 -77.0 -74.0 -71.0 -70.0 -63.0 -62.0 -59.0 -58.0 -57.0 -54.0 -53.0 -52.0 -49.0 -46.0 -41.0 -42.0 -41.0 -36.0 -33.0 -33.0 -32.0 -32.0 -21.0 -28.0 -28.0 -29.0 -26.0 -23.0 -20.0 -19.0 -18.0 -15.0 -10.0 -11.0 -6.0 -7.0 -6.0 -4.0 2.0 4.0 5.0 14.0 10.0 3.0 0.0 1.0 0.0 -7.0 -4.0 -5.0 -10.0 -13.0 -16.0 -15.0 -16.0 -19.0 -22.0 -21.0 -26.0 -27.0 -32.0 -31.0 -34.0 -39.0 -38.0 -45.0 -46.0 -47.0 -50.0 84 -183.0 -182.0 -179.0 -178.0 -175.0 -174.0 -173.0 -172.0 -167.0 -162.0 -165.0 -162.0 -157.0 -156.0 -157.0 -156.0 -153.0 -146.0 -145.0 -146.0 -143.0 -140.0 -141.0 -138.0 -135.0 -130.0 -131.0 -125.0 -120.0 -123.0 -120.0 -119.0 -118.0 -115.0 -116.0 -109.0 -110.0 -105.0 -104.0 -103.0 -100.0 -97.0 -94.0 -97.0 -94.0 -89.0 -88.0 -85.0 -78.0 -77.0 -78.0 -77.0 -74.0 -71.0 -68.0 -63.0 -62.0 -59.0 -58.0 -55.0 -52.0 -51.0 -50.0 -47.0 -46.0 -41.0 -40.0 -39.0 -34.0 -33.0 -34.0 -33.0 -30.0 -21.0 -26.0 -29.0 -29.0 -26.0 -21.0 -21.0 -19.0 -18.0 -13.0 -12.0 -13.0 -8.0 -9.0 -7.0 -4.0 0.0 2.0 5.0 14.0 10.0 1.0 0.0 1.0 0.0 -7.0 -4.0 -5.0 -10.0 -15.0 -16.0 -15.0 -18.0 -19.0 -24.0 -21.0 -26.0 -29.0 -32.0 -33.0 -36.0 -41.0 -40.0 -45.0 -46.0 -47.0 85 -182.0 -183.0 -180.0 -179.0 -178.0 -175.0 -174.0 -173.0 -170.0 -165.0 -162.0 -163.0 -162.0 -157.0 -156.0 -157.0 -154.0 -151.0 -146.0 -145.0 -146.0 -141.0 -140.0 -139.0 -136.0 -135.0 -130.0 -130.0 -123.0 -120.0 -123.0 -118.0 -119.0 -116.0 -115.0 -116.0 -109.0 -108.0 -103.0 -102.0 -103.0 -100.0 -97.0 -94.0 -97.0 -92.0 -89.0 -88.0 -83.0 -76.0 -77.0 -78.0 -75.0 -72.0 -69.0 -66.0 -63.0 -62.0 -59.0 -56.0 -55.0 -50.0 -51.0 -48.0 -47.0 -46.0 -39.0 -38.0 -37.0 -34.0 -33.0 -34.0 -33.0 -28.0 -21.0 -26.0 -29.0 -29.0 -24.0 -22.0 -21.0 -21.0 -16.0 -15.0 -14.0 -15.0 -10.0 -10.0 -7.0 -3.0 -1.0 2.0 5.0 14.0 10.0 1.0 2.0 1.0 0.0 -5.0 -4.0 -5.0 -12.0 -13.0 -14.0 -15.0 -18.0 -21.0 -24.0 -21.0 -26.0 -29.0 -32.0 -35.0 -36.0 -41.0 -40.0 -43.0 -46.0 86 -185.0 -182.0 -181.0 -180.0 -179.0 -178.0 -173.0 -174.0 -171.0 -168.0 -165.0 -162.0 -163.0 -160.0 -157.0 -156.0 -155.0 -152.0 -151.0 -146.0 -145.0 -144.0 -141.0 -140.0 -137.0 -136.0 -133.0 -129.0 -128.0 -123.0 -120.0 -123.0 -118.0 -119.0 -116.0 -115.0 -114.0 -107.0 -106.0 -101.0 -102.0 -103.0 -98.0 -97.0 -94.0 -95.0 -92.0 -87.0 -86.0 -81.0 -76.0 -77.0 -76.0 -73.0 -70.0 -67.0 -66.0 -63.0 -62.0 -57.0 -56.0 -53.0 -50.0 -51.0 -48.0 -47.0 -44.0 -37.0 -36.0 -37.0 -34.0 -33.0 -34.0 -31.0 -28.0 -21.0 -26.0 -27.0 -27.0 -26.0 -22.0 -21.0 -21.0 -16.0 -16.0 -16.0 -15.0 -10.0 -10.0 -7.0 -1.0 1.0 1.0 3.0 14.0 10.0 1.0 2.0 1.0 0.0 -5.0 -6.0 -5.0 -12.0 -13.0 -14.0 -15.0 -20.0 -23.0 -24.0 -21.0 -26.0 -31.0 -32.0 -37.0 -36.0 -41.0 -40.0 -43.0 87 -182.0 -186.0 -180.0 -183.0 -180.0 -181.0 -176.0 -173.0 -172.0 -169.0 -170.0 -165.0 -162.0 -163.0 -160.0 -159.0 -158.0 -153.0 -152.0 -149.0 -146.0 -147.0 -146.0 -143.0 -140.0 -139.0 -136.0 -132.0 -127.0 -130.0 -123.0 -122.0 -123.0 -118.0 -121.0 -118.0 -115.0 -112.0 -105.0 -106.0 -101.0 -102.0 -101.0 -98.0 -97.0 -92.0 -93.0 -90.0 -85.0 -84.0 -79.0 -76.0 -77.0 -74.0 -71.0 -68.0 -67.0 -66.0 -63.0 -62.0 -55.0 -54.0 -51.0 -50.0 -51.0 -48.0 -45.0 -42.0 -37.0 -36.0 -37.0 -34.0 -33.0 -32.0 -31.0 -28.0 -21.0 -25.0 -27.0 -27.0 -27.0 -22.0 -21.0 -21.0 -18.0 -16.0 -18.0 -14.0 -11.0 -9.0 -5.0 -1.0 1.0 1.0 3.0 14.0 10.0 3.0 2.0 1.0 2.0 -5.0 -6.0 -5.0 -10.0 -13.0 -12.0 -17.0 -20.0 -21.0 -22.0 -21.0 -28.0 -29.0 -34.0 -35.0 -36.0 -41.0 -40.0 88 -189.0 -182.0 -187.0 -180.0 -183.0 -178.0 -179.0 -176.0 -173.0 -170.0 -169.0 -168.0 -165.0 -160.0 -163.0 -160.0 -159.0 -156.0 -153.0 -150.0 -149.0 -146.0 -147.0 -144.0 -141.0 -140.0 -137.0 -135.0 -130.0 -127.0 -130.0 -123.0 -122.0 -121.0 -118.0 -121.0 -118.0 -113.0 -110.0 -105.0 -106.0 -101.0 -102.0 -101.0 -98.0 -95.0 -90.0 -92.0 -90.0 -83.0 -82.0 -79.0 -78.0 -75.0 -72.0 -71.0 -70.0 -67.0 -66.0 -63.0 -62.0 -53.0 -52.0 -51.0 -50.0 -51.0 -46.0 -43.0 -42.0 -37.0 -36.0 -37.0 -34.0 -33.0 -32.0 -31.0 -28.0 -21.0 -25.0 -29.0 -27.0 -27.0 -22.0 -21.0 -22.0 -18.0 -16.0 -18.0 -15.0 -10.0 -7.0 -6.0 -1.0 1.0 3.0 2.0 14.0 10.0 1.0 2.0 1.0 3.0 -4.0 -6.0 -5.0 -9.0 -12.0 -14.0 -18.0 -19.0 -20.0 -22.0 -23.0 -29.0 -31.0 -33.0 -37.0 -36.0 -40.0 89 -188.0 -189.0 -182.0 -187.0 -180.0 -183.0 -176.0 -179.0 -176.0 -171.0 -170.0 -167.0 -168.0 -163.0 -160.0 -163.0 -158.0 -157.0 -156.0 -153.0 -150.0 -147.0 -146.0 -145.0 -142.0 -141.0 -138.0 -136.0 -133.0 -130.0 -127.0 -128.0 -123.0 -122.0 -121.0 -118.0 -119.0 -116.0 -111.0 -108.0 -105.0 -106.0 -101.0 -102.0 -101.0 -98.0 -95.0 -88.0 -91.0 -88.0 -83.0 -82.0 -79.0 -78.0 -73.0 -70.0 -71.0 -70.0 -67.0 -64.0 -63.0 -60.0 -53.0 -50.0 -51.0 -50.0 -49.0 -44.0 -41.0 -42.0 -37.0 -36.0 -35.0 -34.0 -33.0 -32.0 -31.0 -28.0 -21.0 -27.0 -29.0 -27.0 -25.0 -22.0 -21.0 -22.0 -18.0 -15.0 -18.0 -13.0 -8.0 -5.0 -6.0 -1.0 1.0 5.0 4.0 14.0 10.0 2.0 2.0 1.0 3.0 -2.0 -5.0 -7.0 -7.0 -10.0 -15.0 -16.0 -17.0 -18.0 -23.0 -23.0 -29.0 -30.0 -31.0 -36.0 -35.0 90 -189.0 -188.0 -187.0 -182.0 -189.0 -180.0 -183.0 -176.0 -177.0 -176.0 -171.0 -172.0 -167.0 -168.0 -163.0 -160.0 -161.0 -156.0 -159.0 -154.0 -153.0 -152.0 -147.0 -146.0 -145.0 -142.0 -139.0 -137.0 -134.0 -135.0 -132.0 -129.0 -128.0 -123.0 -124.0 -121.0 -116.0 -119.0 -116.0 -111.0 -110.0 -105.0 -108.0 -103.0 -102.0 -101.0 -96.0 -93.0 -86.0 -89.0 -88.0 -85.0 -82.0 -77.0 -78.0 -71.0 -70.0 -71.0 -70.0 -67.0 -62.0 -63.0 -60.0 -53.0 -50.0 -51.0 -48.0 -49.0 -44.0 -43.0 -42.0 -37.0 -38.0 -33.0 -34.0 -33.0 -32.0 -33.0 -30.0 -21.0 -27.0 -27.0 -27.0 -25.0 -23.0 -21.0 -22.0 -18.0 -15.0 -16.0 -11.0 -8.0 -5.0 -6.0 -1.0 1.0 5.0 6.0 14.0 10.0 4.0 3.0 0.0 3.0 0.0 -5.0 -6.0 -7.0 -8.0 -13.0 -16.0 -17.0 -18.0 -23.0 -25.0 -29.0 -30.0 -31.0 -34.0 91 -194.0 -189.0 -190.0 -187.0 -182.0 -187.0 -180.0 -183.0 -176.0 -177.0 -176.0 -171.0 -172.0 -167.0 -168.0 -163.0 -160.0 -161.0 -156.0 -157.0 -154.0 -151.0 -152.0 -147.0 -144.0 -145.0 -142.0 -139.0 -137.0 -134.0 -135.0 -132.0 -129.0 -128.0 -123.0 -124.0 -121.0 -116.0 -117.0 -114.0 -111.0 -110.0 -105.0 -108.0 -103.0 -102.0 -99.0 -96.0 -93.0 -86.0 -87.0 -88.0 -85.0 -82.0 -77.0 -76.0 -71.0 -70.0 -71.0 -68.0 -65.0 -62.0 -61.0 -58.0 -53.0 -50.0 -51.0 -48.0 -47.0 -44.0 -43.0 -42.0 -37.0 -38.0 -33.0 -34.0 -33.0 -32.0 -31.0 -30.0 -21.0 -27.0 -25.0 -28.0 -25.0 -23.0 -21.0 -22.0 -17.0 -13.0 -14.0 -9.0 -8.0 -5.0 -4.0 1.0 3.0 7.0 8.0 14.0 10.0 4.0 1.0 0.0 3.0 0.0 -5.0 -6.0 -7.0 -8.0 -13.0 -16.0 -19.0 -20.0 -23.0 -25.0 -29.0 -30.0 -31.0 92 -193.0 -194.0 -187.0 -190.0 -187.0 -182.0 -185.0 -180.0 -183.0 -176.0 -179.0 -174.0 -171.0 -170.0 -167.0 -168.0 -163.0 -160.0 -161.0 -156.0 -157.0 -156.0 -151.0 -150.0 -147.0 -146.0 -145.0 -143.0 -138.0 -137.0 -134.0 -133.0 -134.0 -131.0 -130.0 -125.0 -126.0 -121.0 -116.0 -115.0 -114.0 -111.0 -110.0 -105.0 -108.0 -105.0 -102.0 -99.0 -94.0 -91.0 -84.0 -87.0 -86.0 -83.0 -80.0 -77.0 -76.0 -71.0 -70.0 -71.0 -66.0 -63.0 -60.0 -59.0 -58.0 -53.0 -50.0 -49.0 -46.0 -49.0 -44.0 -43.0 -44.0 -39.0 -40.0 -35.0 -34.0 -33.0 -34.0 -33.0 -30.0 -21.0 -25.0 -25.0 -28.0 -25.0 -23.0 -20.0 -21.0 -17.0 -13.0 -12.0 -9.0 -8.0 -3.0 -2.0 3.0 5.0 9.0 8.0 14.0 10.0 4.0 1.0 0.0 3.0 0.0 -7.0 -8.0 -7.0 -8.0 -13.0 -18.0 -19.0 -20.0 -23.0 -25.0 -29.0 -30.0 93 -196.0 -193.0 -192.0 -187.0 -190.0 -185.0 -182.0 -185.0 -180.0 -181.0 -176.0 -177.0 -174.0 -171.0 -170.0 -167.0 -166.0 -161.0 -160.0 -159.0 -156.0 -157.0 -156.0 -149.0 -148.0 -147.0 -147.0 -144.0 -141.0 -138.0 -137.0 -134.0 -133.0 -133.0 -131.0 -130.0 -127.0 -124.0 -119.0 -116.0 -115.0 -114.0 -109.0 -110.0 -105.0 -108.0 -103.0 -102.0 -97.0 -92.0 -89.0 -84.0 -87.0 -84.0 -81.0 -80.0 -79.0 -78.0 -71.0 -72.0 -71.0 -64.0 -61.0 -62.0 -59.0 -60.0 -53.0 -48.0 -49.0 -46.0 -49.0 -44.0 -43.0 -42.0 -39.0 -40.0 -35.0 -34.0 -33.0 -34.0 -33.0 -28.0 -21.0 -25.0 -25.0 -28.0 -25.0 -23.0 -20.0 -19.0 -15.0 -13.0 -12.0 -9.0 -6.0 -3.0 -2.0 5.0 5.0 9.0 8.0 14.0 10.0 4.0 1.0 0.0 3.0 -2.0 -9.0 -8.0 -7.0 -8.0 -15.0 -18.0 -21.0 -20.0 -23.0 -25.0 -29.0 94 -197.0 -196.0 -193.0 -192.0 -187.0 -190.0 -183.0 -182.0 -185.0 -178.0 -181.0 -174.0 -177.0 -172.0 -171.0 -170.0 -165.0 -164.0 -161.0 -158.0 -159.0 -156.0 -157.0 -154.0 -147.0 -148.0 -145.0 -146.0 -142.0 -141.0 -138.0 -137.0 -134.0 -131.0 -133.0 -131.0 -128.0 -127.0 -122.0 -119.0 -116.0 -115.0 -114.0 -109.0 -110.0 -105.0 -106.0 -101.0 -100.0 -95.0 -90.0 -89.0 -84.0 -85.0 -82.0 -79.0 -80.0 -79.0 -78.0 -71.0 -72.0 -69.0 -62.0 -61.0 -62.0 -59.0 -60.0 -51.0 -48.0 -49.0 -46.0 -49.0 -44.0 -45.0 -42.0 -39.0 -42.0 -35.0 -34.0 -35.0 -36.0 -31.0 -28.0 -21.0 -25.0 -25.0 -26.0 -24.0 -24.0 -18.0 -17.0 -16.0 -13.0 -12.0 -9.0 -6.0 -3.0 0.0 5.0 4.0 9.0 8.0 14.0 10.0 4.0 0.0 1.0 1.0 -4.0 -7.0 -8.0 -7.0 -10.0 -15.0 -20.0 -21.0 -20.0 -23.0 -25.0 95 -202.0 -197.0 -198.0 -193.0 -194.0 -187.0 -188.0 -183.0 -182.0 -183.0 -178.0 -179.0 -174.0 -175.0 -172.0 -171.0 -168.0 -163.0 -164.0 -159.0 -158.0 -160.0 -156.0 -155.0 -154.0 -147.0 -146.0 -144.0 -144.0 -142.0 -141.0 -138.0 -137.0 -132.0 -131.0 -133.0 -129.0 -126.0 -127.0 -122.0 -121.0 -116.0 -115.0 -116.0 -109.0 -110.0 -103.0 -104.0 -99.0 -98.0 -93.0 -90.0 -89.0 -84.0 -83.0 -80.0 -79.0 -80.0 -79.0 -78.0 -71.0 -70.0 -67.0 -62.0 -61.0 -62.0 -57.0 -58.0 -51.0 -48.0 -49.0 -46.0 -49.0 -42.0 -45.0 -42.0 -39.0 -42.0 -35.0 -34.0 -35.0 -34.0 -31.0 -28.0 -21.0 -25.0 -25.0 -25.0 -24.0 -23.0 -16.0 -17.0 -16.0 -13.0 -10.0 -9.0 -6.0 -1.0 0.0 5.0 4.0 9.0 8.0 14.0 10.0 2.0 1.0 -1.0 1.0 -4.0 -9.0 -8.0 -7.0 -12.0 -17.0 -22.0 -23.0 -20.0 -23.0 96 -201.0 -202.0 -197.0 -198.0 -193.0 -194.0 -187.0 -188.0 -183.0 -182.0 -183.0 -178.0 -179.0 -174.0 -175.0 -172.0 -171.0 -168.0 -163.0 -162.0 -159.0 -156.0 -161.0 -156.0 -153.0 -154.0 -147.0 -146.0 -144.0 -144.0 -142.0 -139.0 -138.0 -137.0 -132.0 -131.0 -134.0 -129.0 -124.0 -125.0 -122.0 -121.0 -116.0 -115.0 -116.0 -109.0 -108.0 -103.0 -104.0 -99.0 -96.0 -93.0 -90.0 -89.0 -84.0 -81.0 -80.0 -79.0 -80.0 -77.0 -76.0 -71.0 -68.0 -65.0 -62.0 -61.0 -62.0 -57.0 -56.0 -51.0 -48.0 -49.0 -46.0 -47.0 -42.0 -45.0 -42.0 -39.0 -40.0 -35.0 -34.0 -35.0 -32.0 -31.0 -28.0 -21.0 -25.0 -25.0 -23.0 -22.0 -21.0 -14.0 -17.0 -16.0 -11.0 -8.0 -7.0 -4.0 1.0 0.0 5.0 4.0 9.0 10.0 14.0 10.0 4.0 3.0 0.0 1.0 -6.0 -7.0 -10.0 -9.0 -12.0 -19.0 -20.0 -23.0 -20.0 97 -200.0 -201.0 -200.0 -197.0 -200.0 -193.0 -194.0 -187.0 -186.0 -183.0 -182.0 -183.0 -178.0 -179.0 -174.0 -175.0 -172.0 -169.0 -170.0 -163.0 -162.0 -159.0 -156.0 -159.0 -156.0 -153.0 -152.0 -146.0 -145.0 -144.0 -144.0 -140.0 -139.0 -136.0 -137.0 -132.0 -129.0 -132.0 -129.0 -122.0 -125.0 -122.0 -121.0 -116.0 -115.0 -114.0 -109.0 -106.0 -101.0 -102.0 -97.0 -96.0 -91.0 -88.0 -89.0 -84.0 -81.0 -80.0 -79.0 -80.0 -75.0 -74.0 -69.0 -66.0 -65.0 -62.0 -61.0 -60.0 -55.0 -56.0 -51.0 -48.0 -49.0 -46.0 -49.0 -42.0 -45.0 -44.0 -39.0 -40.0 -37.0 -34.0 -35.0 -32.0 -33.0 -28.0 -21.0 -25.0 -24.0 -23.0 -22.0 -19.0 -14.0 -17.0 -14.0 -9.0 -6.0 -5.0 -2.0 1.0 0.0 5.0 4.0 9.0 12.0 14.0 10.0 6.0 3.0 0.0 -1.0 -4.0 -5.0 -10.0 -11.0 -14.0 -19.0 -18.0 -21.0 98 -205.0 -200.0 -201.0 -200.0 -197.0 -198.0 -193.0 -194.0 -187.0 -186.0 -183.0 -182.0 -183.0 -178.0 -179.0 -174.0 -175.0 -172.0 -169.0 -168.0 -163.0 -160.0 -159.0 -156.0 -157.0 -156.0 -153.0 -152.0 -146.0 -145.0 -144.0 -142.0 -140.0 -139.0 -136.0 -137.0 -132.0 -129.0 -130.0 -127.0 -122.0 -125.0 -122.0 -121.0 -116.0 -115.0 -112.0 -111.0 -106.0 -101.0 -102.0 -97.0 -94.0 -91.0 -88.0 -89.0 -84.0 -81.0 -80.0 -79.0 -78.0 -75.0 -72.0 -67.0 -68.0 -67.0 -62.0 -63.0 -60.0 -55.0 -58.0 -51.0 -48.0 -49.0 -46.0 -49.0 -42.0 -45.0 -44.0 -39.0 -40.0 -37.0 -32.0 -35.0 -32.0 -33.0 -28.0 -21.0 -24.0 -22.0 -21.0 -20.0 -19.0 -14.0 -17.0 -12.0 -7.0 -4.0 -4.0 -4.0 0.0 -2.0 3.0 4.0 9.0 14.0 14.0 10.0 6.0 3.0 -2.0 -1.0 -6.0 -7.0 -10.0 -13.0 -16.0 -19.0 -18.0 99 -206.0 -205.0 -198.0 -201.0 -200.0 -197.0 -196.0 -193.0 -192.0 -185.0 -186.0 -181.0 -182.0 -181.0 -178.0 -179.0 -174.0 -173.0 -172.0 -169.0 -168.0 -163.0 -160.0 -157.0 -156.0 -157.0 -154.0 -153.0 -151.0 -146.0 -145.0 -142.0 -142.0 -138.0 -139.0 -136.0 -135.0 -132.0 -129.0 -128.0 -127.0 -122.0 -123.0 -122.0 -119.0 -116.0 -113.0 -110.0 -109.0 -104.0 -99.0 -102.0 -95.0 -92.0 -89.0 -88.0 -89.0 -84.0 -81.0 -80.0 -77.0 -76.0 -73.0 -70.0 -67.0 -68.0 -67.0 -62.0 -61.0 -60.0 -55.0 -58.0 -51.0 -48.0 -49.0 -46.0 -47.0 -42.0 -45.0 -44.0 -39.0 -40.0 -37.0 -32.0 -35.0 -34.0 -31.0 -28.0 -21.0 -24.0 -22.0 -19.0 -20.0 -19.0 -14.0 -15.0 -10.0 -5.0 -2.0 -4.0 -4.0 0.0 -2.0 3.0 6.0 9.0 14.0 14.0 10.0 6.0 1.0 -2.0 -3.0 -8.0 -7.0 -12.0 -15.0 -16.0 -19.0 100 -207.0 -206.0 -203.0 -198.0 -201.0 -200.0 -197.0 -196.0 -193.0 -190.0 -185.0 -184.0 -181.0 -182.0 -181.0 -178.0 -179.0 -172.0 -175.0 -172.0 -169.0 -166.0 -163.0 -158.0 -157.0 -156.0 -157.0 -153.0 -152.0 -151.0 -146.0 -143.0 -142.0 -140.0 -138.0 -139.0 -136.0 -133.0 -132.0 -127.0 -128.0 -127.0 -120.0 -123.0 -120.0 -117.0 -114.0 -111.0 -108.0 -107.0 -102.0 -99.0 -100.0 -93.0 -90.0 -89.0 -88.0 -89.0 -84.0 -81.0 -80.0 -75.0 -74.0 -71.0 -70.0 -67.0 -68.0 -65.0 -60.0 -61.0 -60.0 -55.0 -56.0 -51.0 -48.0 -51.0 -48.0 -47.0 -42.0 -47.0 -44.0 -39.0 -40.0 -37.0 -32.0 -36.0 -36.0 -30.0 -27.0 -21.0 -24.0 -20.0 -19.0 -20.0 -17.0 -12.0 -13.0 -8.0 -3.0 -2.0 -4.0 -5.0 0.0 0.0 3.0 6.0 7.0 14.0 14.0 10.0 4.0 1.0 -2.0 -5.0 -6.0 -7.0 -14.0 -15.0 -16.0 101 -208.0 -209.0 -206.0 -205.0 -198.0 -203.0 -198.0 -197.0 -196.0 -191.0 -192.0 -183.0 -184.0 -181.0 -182.0 -181.0 -178.0 -177.0 -172.0 -173.0 -172.0 -167.0 -166.0 -161.0 -158.0 -157.0 -156.0 -156.0 -151.0 -152.0 -151.0 -144.0 -143.0 -140.0 -140.0 -138.0 -139.0 -134.0 -133.0 -130.0 -127.0 -128.0 -125.0 -120.0 -121.0 -118.0 -115.0 -112.0 -109.0 -106.0 -105.0 -102.0 -97.0 -98.0 -91.0 -90.0 -89.0 -88.0 -89.0 -84.0 -79.0 -78.0 -73.0 -72.0 -71.0 -70.0 -65.0 -66.0 -65.0 -60.0 -63.0 -62.0 -53.0 -56.0 -51.0 -48.0 -51.0 -48.0 -47.0 -42.0 -47.0 -42.0 -37.0 -40.0 -37.0 -32.0 -37.0 -35.0 -28.0 -27.0 -21.0 -22.0 -20.0 -19.0 -20.0 -15.0 -10.0 -11.0 -6.0 -3.0 -2.0 -4.0 -5.0 0.0 2.0 3.0 4.0 7.0 14.0 14.0 8.0 4.0 1.0 -2.0 -3.0 -8.0 -7.0 -12.0 -13.0 102 -213.0 -208.0 -207.0 -208.0 -207.0 -198.0 -201.0 -198.0 -195.0 -194.0 -191.0 -190.0 -183.0 -184.0 -181.0 -182.0 -179.0 -176.0 -177.0 -170.0 -173.0 -170.0 -167.0 -164.0 -161.0 -158.0 -157.0 -155.0 -154.0 -151.0 -152.0 -149.0 -144.0 -141.0 -140.0 -140.0 -138.0 -137.0 -134.0 -131.0 -132.0 -127.0 -126.0 -127.0 -118.0 -119.0 -116.0 -113.0 -110.0 -107.0 -104.0 -105.0 -100.0 -95.0 -96.0 -91.0 -90.0 -89.0 -88.0 -87.0 -82.0 -77.0 -76.0 -71.0 -72.0 -71.0 -68.0 -63.0 -64.0 -65.0 -60.0 -63.0 -60.0 -53.0 -56.0 -51.0 -48.0 -51.0 -48.0 -47.0 -42.0 -45.0 -40.0 -37.0 -40.0 -37.0 -32.0 -36.0 -33.0 -28.0 -27.0 -20.0 -22.0 -20.0 -19.0 -18.0 -13.0 -8.0 -9.0 -6.0 -3.0 -2.0 -4.0 -3.0 2.0 2.0 3.0 4.0 7.0 14.0 14.0 8.0 6.0 1.0 0.0 -3.0 -8.0 -5.0 -10.0 103 -210.0 -213.0 -208.0 -207.0 -208.0 -205.0 -198.0 -201.0 -198.0 -195.0 -194.0 -191.0 -190.0 -183.0 -184.0 -181.0 -182.0 -179.0 -176.0 -175.0 -170.0 -171.0 -170.0 -167.0 -162.0 -161.0 -158.0 -157.0 -155.0 -154.0 -151.0 -150.0 -149.0 -144.0 -141.0 -140.0 -141.0 -138.0 -135.0 -132.0 -131.0 -132.0 -127.0 -126.0 -125.0 -118.0 -117.0 -116.0 -113.0 -112.0 -105.0 -104.0 -103.0 -100.0 -95.0 -94.0 -91.0 -92.0 -89.0 -86.0 -87.0 -84.0 -75.0 -74.0 -71.0 -72.0 -73.0 -68.0 -61.0 -64.0 -65.0 -60.0 -61.0 -58.0 -53.0 -56.0 -51.0 -48.0 -51.0 -48.0 -47.0 -42.0 -43.0 -40.0 -37.0 -40.0 -37.0 -32.0 -34.0 -31.0 -26.0 -25.0 -20.0 -22.0 -20.0 -17.0 -16.0 -11.0 -6.0 -9.0 -6.0 -3.0 -2.0 -2.0 -3.0 4.0 2.0 2.0 2.0 5.0 14.0 14.0 6.0 6.0 -1.0 0.0 -3.0 -8.0 -5.0 104 -215.0 -210.0 -213.0 -210.0 -207.0 -206.0 -203.0 -198.0 -199.0 -196.0 -195.0 -192.0 -191.0 -188.0 -183.0 -184.0 -181.0 -180.0 -179.0 -176.0 -177.0 -170.0 -171.0 -170.0 -165.0 -162.0 -159.0 -158.0 -158.0 -157.0 -156.0 -151.0 -150.0 -149.0 -144.0 -141.0 -138.0 -141.0 -136.0 -137.0 -132.0 -131.0 -132.0 -129.0 -126.0 -123.0 -116.0 -115.0 -114.0 -111.0 -110.0 -105.0 -104.0 -101.0 -98.0 -93.0 -94.0 -91.0 -92.0 -89.0 -84.0 -85.0 -82.0 -75.0 -74.0 -71.0 -72.0 -71.0 -68.0 -61.0 -64.0 -67.0 -60.0 -59.0 -58.0 -53.0 -54.0 -53.0 -48.0 -51.0 -50.0 -47.0 -44.0 -45.0 -40.0 -37.0 -38.0 -37.0 -32.0 -32.0 -29.0 -26.0 -25.0 -20.0 -22.0 -20.0 -17.0 -14.0 -11.0 -6.0 -9.0 -6.0 -3.0 -2.0 0.0 -1.0 4.0 2.0 2.0 4.0 7.0 14.0 14.0 5.0 4.0 -1.0 0.0 -3.0 -6.0 105 -218.0 -215.0 -210.0 -213.0 -210.0 -205.0 -206.0 -203.0 -198.0 -199.0 -196.0 -195.0 -192.0 -191.0 -188.0 -183.0 -184.0 -181.0 -180.0 -177.0 -176.0 -175.0 -170.0 -171.0 -168.0 -165.0 -162.0 -159.0 -158.0 -158.0 -157.0 -154.0 -151.0 -150.0 -149.0 -144.0 -141.0 -138.0 -139.0 -134.0 -139.0 -132.0 -131.0 -134.0 -129.0 -128.0 -121.0 -116.0 -115.0 -116.0 -109.0 -112.0 -105.0 -104.0 -103.0 -96.0 -93.0 -94.0 -93.0 -92.0 -89.0 -84.0 -85.0 -80.0 -75.0 -74.0 -71.0 -72.0 -71.0 -70.0 -61.0 -64.0 -65.0 -60.0 -59.0 -58.0 -53.0 -54.0 -53.0 -48.0 -51.0 -50.0 -45.0 -44.0 -45.0 -40.0 -37.0 -38.0 -36.0 -31.0 -30.0 -27.0 -26.0 -25.0 -18.0 -22.0 -18.0 -15.0 -12.0 -11.0 -8.0 -9.0 -6.0 -1.0 -2.0 2.0 -1.0 4.0 2.0 4.0 6.0 5.0 14.0 12.0 5.0 4.0 -1.0 2.0 -3.0 106 -219.0 -220.0 -215.0 -210.0 -213.0 -212.0 -205.0 -208.0 -205.0 -200.0 -199.0 -198.0 -197.0 -194.0 -193.0 -190.0 -185.0 -186.0 -181.0 -182.0 -177.0 -178.0 -175.0 -170.0 -171.0 -170.0 -167.0 -164.0 -159.0 -160.0 -158.0 -157.0 -156.0 -151.0 -152.0 -151.0 -144.0 -141.0 -136.0 -137.0 -134.0 -139.0 -132.0 -131.0 -132.0 -129.0 -126.0 -121.0 -116.0 -115.0 -114.0 -109.0 -110.0 -105.0 -104.0 -101.0 -96.0 -93.0 -94.0 -93.0 -90.0 -91.0 -82.0 -85.0 -80.0 -75.0 -74.0 -71.0 -70.0 -71.0 -72.0 -61.0 -64.0 -63.0 -62.0 -61.0 -60.0 -53.0 -56.0 -55.0 -50.0 -51.0 -50.0 -45.0 -46.0 -47.0 -42.0 -37.0 -37.0 -36.0 -29.0 -30.0 -29.0 -26.0 -23.0 -16.0 -20.0 -16.0 -13.0 -12.0 -11.0 -8.0 -9.0 -6.0 -1.0 0.0 2.0 -1.0 6.0 2.0 6.0 6.0 5.0 14.0 10.0 5.0 4.0 -1.0 2.0 107 -220.0 -219.0 -218.0 -215.0 -210.0 -211.0 -210.0 -205.0 -206.0 -203.0 -200.0 -197.0 -198.0 -195.0 -194.0 -193.0 -190.0 -185.0 -186.0 -181.0 -182.0 -177.0 -178.0 -173.0 -170.0 -171.0 -168.0 -166.0 -163.0 -159.0 -160.0 -158.0 -157.0 -154.0 -151.0 -152.0 -149.0 -142.0 -139.0 -136.0 -137.0 -134.0 -137.0 -132.0 -131.0 -130.0 -127.0 -124.0 -119.0 -114.0 -113.0 -114.0 -109.0 -108.0 -103.0 -102.0 -101.0 -96.0 -93.0 -94.0 -93.0 -88.0 -89.0 -82.0 -85.0 -80.0 -75.0 -74.0 -71.0 -70.0 -71.0 -72.0 -61.0 -62.0 -63.0 -62.0 -61.0 -60.0 -53.0 -56.0 -55.0 -50.0 -51.0 -50.0 -45.0 -46.0 -45.0 -42.0 -37.0 -35.0 -34.0 -29.0 -30.0 -29.0 -24.0 -23.0 -16.0 -19.0 -16.0 -15.0 -12.0 -11.0 -10.0 -11.0 -4.0 1.0 0.0 2.0 1.0 8.0 2.0 6.0 6.0 6.0 14.0 8.0 5.0 4.0 -1.0 108 -223.0 -220.0 -219.0 -218.0 -217.0 -210.0 -209.0 -212.0 -205.0 -206.0 -203.0 -202.0 -197.0 -196.0 -195.0 -194.0 -193.0 -188.0 -187.0 -184.0 -181.0 -182.0 -179.0 -176.0 -173.0 -170.0 -171.0 -169.0 -166.0 -163.0 -159.0 -161.0 -160.0 -155.0 -154.0 -153.0 -152.0 -147.0 -142.0 -137.0 -136.0 -137.0 -134.0 -137.0 -132.0 -131.0 -128.0 -127.0 -122.0 -117.0 -112.0 -113.0 -114.0 -107.0 -106.0 -103.0 -102.0 -101.0 -96.0 -93.0 -94.0 -91.0 -86.0 -87.0 -82.0 -85.0 -80.0 -75.0 -72.0 -71.0 -70.0 -71.0 -70.0 -61.0 -62.0 -64.0 -64.0 -61.0 -58.0 -55.0 -56.0 -55.0 -50.0 -51.0 -50.0 -47.0 -48.0 -44.0 -41.0 -39.0 -35.0 -34.0 -29.0 -30.0 -27.0 -22.0 -21.0 -14.0 -17.0 -16.0 -15.0 -12.0 -11.0 -10.0 -9.0 -4.0 1.0 0.0 2.0 0.0 8.0 2.0 6.0 8.0 6.0 14.0 8.0 5.0 4.0 109 -222.0 -223.0 -218.0 -219.0 -218.0 -217.0 -210.0 -209.0 -210.0 -203.0 -206.0 -201.0 -202.0 -197.0 -196.0 -195.0 -192.0 -191.0 -188.0 -187.0 -184.0 -181.0 -182.0 -179.0 -174.0 -173.0 -170.0 -170.0 -167.0 -166.0 -163.0 -159.0 -161.0 -158.0 -155.0 -154.0 -153.0 -150.0 -145.0 -142.0 -137.0 -136.0 -137.0 -134.0 -137.0 -132.0 -129.0 -126.0 -125.0 -120.0 -115.0 -112.0 -113.0 -112.0 -105.0 -104.0 -103.0 -102.0 -101.0 -96.0 -93.0 -94.0 -89.0 -86.0 -87.0 -82.0 -83.0 -78.0 -75.0 -72.0 -71.0 -70.0 -71.0 -68.0 -61.0 -62.0 -64.0 -64.0 -61.0 -58.0 -55.0 -56.0 -55.0 -50.0 -51.0 -50.0 -49.0 -47.0 -44.0 -39.0 -38.0 -37.0 -34.0 -29.0 -28.0 -27.0 -22.0 -19.0 -14.0 -17.0 -16.0 -15.0 -12.0 -11.0 -10.0 -7.0 -4.0 1.0 2.0 2.0 2.0 8.0 2.0 8.0 8.0 6.0 14.0 8.0 5.0 110 -227.0 -222.0 -223.0 -218.0 -219.0 -216.0 -215.0 -210.0 -209.0 -208.0 -203.0 -204.0 -201.0 -200.0 -197.0 -196.0 -193.0 -190.0 -191.0 -186.0 -187.0 -184.0 -181.0 -180.0 -177.0 -174.0 -171.0 -169.0 -168.0 -167.0 -166.0 -163.0 -159.0 -159.0 -158.0 -155.0 -152.0 -151.0 -148.0 -145.0 -142.0 -137.0 -136.0 -137.0 -134.0 -135.0 -130.0 -127.0 -124.0 -123.0 -118.0 -115.0 -112.0 -111.0 -110.0 -103.0 -104.0 -103.0 -102.0 -101.0 -96.0 -91.0 -92.0 -89.0 -86.0 -87.0 -80.0 -81.0 -78.0 -77.0 -72.0 -71.0 -72.0 -69.0 -68.0 -61.0 -60.0 -64.0 -64.0 -61.0 -58.0 -55.0 -56.0 -55.0 -50.0 -51.0 -48.0 -49.0 -47.0 -42.0 -37.0 -38.0 -37.0 -34.0 -29.0 -28.0 -27.0 -20.0 -19.0 -14.0 -17.0 -16.0 -15.0 -12.0 -11.0 -8.0 -7.0 -4.0 1.0 4.0 4.0 2.0 8.0 4.0 8.0 8.0 4.0 14.0 8.0 111 -228.0 -229.0 -222.0 -225.0 -218.0 -221.0 -216.0 -215.0 -212.0 -211.0 -210.0 -203.0 -206.0 -201.0 -202.0 -199.0 -196.0 -195.0 -192.0 -191.0 -186.0 -187.0 -186.0 -183.0 -178.0 -179.0 -174.0 -173.0 -171.0 -170.0 -167.0 -164.0 -165.0 -161.0 -161.0 -160.0 -157.0 -154.0 -149.0 -146.0 -145.0 -144.0 -137.0 -136.0 -137.0 -134.0 -135.0 -130.0 -129.0 -124.0 -121.0 -118.0 -115.0 -112.0 -111.0 -110.0 -103.0 -104.0 -103.0 -100.0 -99.0 -96.0 -89.0 -90.0 -89.0 -86.0 -87.0 -80.0 -79.0 -78.0 -77.0 -72.0 -71.0 -72.0 -69.0 -68.0 -61.0 -60.0 -62.0 -64.0 -61.0 -58.0 -55.0 -56.0 -55.0 -50.0 -51.0 -48.0 -48.0 -45.0 -40.0 -35.0 -39.0 -39.0 -32.0 -27.0 -26.0 -25.0 -18.0 -19.0 -14.0 -19.0 -16.0 -17.0 -12.0 -11.0 -8.0 -7.0 -4.0 1.0 6.0 4.0 2.0 8.0 4.0 8.0 8.0 6.0 14.0 112 -233.0 -228.0 -227.0 -224.0 -227.0 -218.0 -221.0 -216.0 -213.0 -214.0 -211.0 -210.0 -203.0 -204.0 -201.0 -202.0 -199.0 -194.0 -197.0 -192.0 -191.0 -188.0 -187.0 -184.0 -181.0 -178.0 -177.0 -173.0 -172.0 -173.0 -170.0 -169.0 -164.0 -163.0 -163.0 -161.0 -158.0 -157.0 -154.0 -151.0 -148.0 -145.0 -146.0 -139.0 -136.0 -135.0 -134.0 -133.0 -128.0 -127.0 -122.0 -121.0 -118.0 -113.0 -112.0 -109.0 -110.0 -103.0 -104.0 -105.0 -98.0 -97.0 -94.0 -89.0 -90.0 -89.0 -86.0 -85.0 -80.0 -81.0 -78.0 -77.0 -72.0 -69.0 -72.0 -69.0 -66.0 -61.0 -60.0 -62.0 -64.0 -61.0 -58.0 -55.0 -56.0 -55.0 -50.0 -51.0 -48.0 -46.0 -43.0 -40.0 -35.0 -40.0 -37.0 -32.0 -27.0 -24.0 -25.0 -18.0 -19.0 -14.0 -19.0 -16.0 -15.0 -10.0 -11.0 -8.0 -5.0 -2.0 3.0 6.0 4.0 4.0 8.0 4.0 6.0 8.0 8.0 113 -234.0 -233.0 -228.0 -227.0 -224.0 -225.0 -218.0 -221.0 -216.0 -213.0 -214.0 -211.0 -210.0 -203.0 -204.0 -201.0 -202.0 -199.0 -194.0 -195.0 -192.0 -189.0 -188.0 -187.0 -182.0 -181.0 -178.0 -177.0 -173.0 -172.0 -173.0 -168.0 -169.0 -164.0 -163.0 -163.0 -161.0 -158.0 -155.0 -152.0 -151.0 -148.0 -145.0 -144.0 -139.0 -136.0 -133.0 -134.0 -133.0 -128.0 -125.0 -122.0 -121.0 -118.0 -113.0 -110.0 -109.0 -110.0 -103.0 -104.0 -105.0 -98.0 -95.0 -92.0 -89.0 -90.0 -89.0 -86.0 -83.0 -80.0 -81.0 -78.0 -77.0 -72.0 -69.0 -72.0 -69.0 -66.0 -61.0 -60.0 -62.0 -66.0 -61.0 -58.0 -55.0 -56.0 -55.0 -52.0 -52.0 -47.0 -44.0 -43.0 -40.0 -35.0 -38.0 -35.0 -30.0 -25.0 -22.0 -25.0 -18.0 -19.0 -14.0 -19.0 -16.0 -13.0 -10.0 -11.0 -8.0 -3.0 0.0 3.0 6.0 4.0 4.0 8.0 6.0 6.0 8.0 114 -235.0 -234.0 -233.0 -230.0 -227.0 -224.0 -223.0 -218.0 -219.0 -216.0 -213.0 -212.0 -211.0 -208.0 -203.0 -204.0 -201.0 -200.0 -199.0 -194.0 -197.0 -192.0 -189.0 -190.0 -185.0 -182.0 -179.0 -177.0 -178.0 -175.0 -174.0 -171.0 -168.0 -169.0 -164.0 -163.0 -162.0 -161.0 -158.0 -155.0 -152.0 -151.0 -150.0 -145.0 -144.0 -139.0 -136.0 -131.0 -132.0 -131.0 -128.0 -125.0 -120.0 -119.0 -116.0 -111.0 -110.0 -109.0 -110.0 -103.0 -104.0 -103.0 -98.0 -93.0 -92.0 -89.0 -90.0 -89.0 -84.0 -83.0 -80.0 -81.0 -78.0 -75.0 -72.0 -69.0 -70.0 -69.0 -66.0 -61.0 -60.0 -62.0 -64.0 -61.0 -58.0 -55.0 -56.0 -54.0 -52.0 -50.0 -45.0 -42.0 -43.0 -40.0 -35.0 -36.0 -33.0 -30.0 -23.0 -22.0 -25.0 -18.0 -19.0 -14.0 -17.0 -14.0 -13.0 -10.0 -9.0 -6.0 -1.0 0.0 5.0 8.0 4.0 4.0 8.0 8.0 8.0 115 -238.0 -235.0 -234.0 -233.0 -230.0 -227.0 -224.0 -223.0 -218.0 -219.0 -216.0 -213.0 -212.0 -211.0 -208.0 -203.0 -204.0 -201.0 -200.0 -197.0 -194.0 -195.0 -192.0 -189.0 -188.0 -185.0 -182.0 -179.0 -177.0 -178.0 -175.0 -174.0 -171.0 -168.0 -169.0 -164.0 -163.0 -162.0 -159.0 -156.0 -155.0 -152.0 -151.0 -148.0 -145.0 -144.0 -139.0 -136.0 -131.0 -132.0 -129.0 -128.0 -123.0 -120.0 -119.0 -114.0 -111.0 -110.0 -109.0 -110.0 -103.0 -104.0 -101.0 -96.0 -93.0 -92.0 -89.0 -90.0 -87.0 -84.0 -83.0 -80.0 -81.0 -76.0 -75.0 -72.0 -69.0 -70.0 -69.0 -66.0 -61.0 -60.0 -63.0 -64.0 -61.0 -58.0 -55.0 -56.0 -52.0 -51.0 -48.0 -43.0 -42.0 -43.0 -40.0 -33.0 -34.0 -31.0 -28.0 -23.0 -22.0 -23.0 -18.0 -19.0 -14.0 -15.0 -14.0 -13.0 -8.0 -7.0 -4.0 -1.0 2.0 5.0 8.0 4.0 6.0 8.0 8.0 116 -241.0 -240.0 -235.0 -234.0 -235.0 -230.0 -229.0 -226.0 -225.0 -218.0 -221.0 -218.0 -215.0 -212.0 -213.0 -210.0 -205.0 -206.0 -201.0 -200.0 -199.0 -194.0 -195.0 -194.0 -191.0 -190.0 -187.0 -184.0 -179.0 -177.0 -180.0 -175.0 -174.0 -171.0 -170.0 -171.0 -166.0 -165.0 -160.0 -159.0 -158.0 -155.0 -154.0 -151.0 -150.0 -145.0 -144.0 -141.0 -138.0 -131.0 -130.0 -131.0 -126.0 -125.0 -122.0 -119.0 -116.0 -111.0 -112.0 -109.0 -110.0 -103.0 -104.0 -101.0 -98.0 -95.0 -94.0 -89.0 -90.0 -87.0 -84.0 -85.0 -80.0 -81.0 -78.0 -77.0 -72.0 -71.0 -70.0 -71.0 -66.0 -63.0 -60.0 -63.0 -64.0 -61.0 -58.0 -55.0 -55.0 -50.0 -49.0 -46.0 -43.0 -42.0 -41.0 -38.0 -31.0 -32.0 -29.0 -28.0 -23.0 -22.0 -23.0 -18.0 -19.0 -14.0 -15.0 -14.0 -11.0 -6.0 -5.0 -4.0 1.0 2.0 5.0 8.0 4.0 8.0 8.0 117 -242.0 -243.0 -238.0 -235.0 -236.0 -233.0 -228.0 -231.0 -226.0 -225.0 -218.0 -221.0 -218.0 -215.0 -212.0 -213.0 -212.0 -205.0 -208.0 -203.0 -200.0 -201.0 -194.0 -193.0 -192.0 -191.0 -190.0 -188.0 -185.0 -181.0 -177.0 -180.0 -177.0 -172.0 -171.0 -172.0 -169.0 -168.0 -163.0 -158.0 -159.0 -160.0 -153.0 -152.0 -151.0 -148.0 -145.0 -144.0 -141.0 -138.0 -131.0 -130.0 -131.0 -124.0 -123.0 -120.0 -121.0 -118.0 -111.0 -114.0 -111.0 -108.0 -103.0 -102.0 -101.0 -100.0 -97.0 -94.0 -89.0 -92.0 -89.0 -84.0 -87.0 -80.0 -81.0 -80.0 -79.0 -72.0 -73.0 -72.0 -71.0 -66.0 -65.0 -60.0 -63.0 -66.0 -63.0 -57.0 -55.0 -55.0 -48.0 -49.0 -48.0 -45.0 -42.0 -39.0 -38.0 -31.0 -30.0 -31.0 -30.0 -23.0 -22.0 -23.0 -18.0 -19.0 -14.0 -15.0 -12.0 -11.0 -4.0 -5.0 -4.0 3.0 0.0 5.0 10.0 6.0 10.0 118 -243.0 -242.0 -241.0 -238.0 -235.0 -236.0 -231.0 -228.0 -229.0 -224.0 -225.0 -218.0 -221.0 -216.0 -215.0 -212.0 -211.0 -210.0 -205.0 -206.0 -203.0 -200.0 -201.0 -194.0 -191.0 -192.0 -189.0 -189.0 -186.0 -185.0 -181.0 -177.0 -180.0 -177.0 -172.0 -171.0 -172.0 -167.0 -166.0 -163.0 -158.0 -159.0 -158.0 -153.0 -152.0 -149.0 -146.0 -143.0 -142.0 -139.0 -136.0 -131.0 -130.0 -129.0 -122.0 -121.0 -120.0 -121.0 -118.0 -111.0 -114.0 -111.0 -106.0 -103.0 -102.0 -101.0 -100.0 -97.0 -94.0 -89.0 -92.0 -89.0 -84.0 -85.0 -80.0 -81.0 -80.0 -79.0 -72.0 -73.0 -72.0 -71.0 -66.0 -65.0 -60.0 -63.0 -64.0 -62.0 -57.0 -54.0 -53.0 -48.0 -49.0 -48.0 -45.0 -42.0 -39.0 -36.0 -31.0 -30.0 -31.0 -28.0 -23.0 -22.0 -21.0 -18.0 -19.0 -14.0 -13.0 -10.0 -9.0 -4.0 -5.0 -2.0 3.0 0.0 5.0 10.0 8.0 119 -246.0 -243.0 -242.0 -241.0 -238.0 -235.0 -234.0 -231.0 -228.0 -227.0 -224.0 -223.0 -218.0 -219.0 -216.0 -215.0 -212.0 -209.0 -210.0 -205.0 -206.0 -203.0 -200.0 -199.0 -194.0 -191.0 -190.0 -188.0 -187.0 -186.0 -185.0 -181.0 -177.0 -178.0 -177.0 -172.0 -171.0 -170.0 -167.0 -164.0 -163.0 -158.0 -159.0 -156.0 -153.0 -152.0 -147.0 -144.0 -141.0 -140.0 -137.0 -136.0 -131.0 -128.0 -127.0 -122.0 -121.0 -120.0 -121.0 -118.0 -111.0 -112.0 -109.0 -104.0 -103.0 -102.0 -99.0 -98.0 -95.0 -94.0 -89.0 -92.0 -89.0 -84.0 -85.0 -80.0 -79.0 -80.0 -77.0 -72.0 -73.0 -72.0 -71.0 -66.0 -65.0 -60.0 -63.0 -63.0 -60.0 -57.0 -54.0 -51.0 -48.0 -49.0 -46.0 -43.0 -40.0 -37.0 -34.0 -31.0 -30.0 -29.0 -28.0 -23.0 -22.0 -21.0 -18.0 -19.0 -14.0 -13.0 -10.0 -9.0 -4.0 -3.0 -2.0 3.0 2.0 7.0 12.0 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-5.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-5.html"},{"title":"混合ガウス分布のEMアルゴリズム","text":"クラスタリング で省略した、混合ガウス分布のEMアルゴリズムの計算過程を記述します。 EMアルゴリズム 観測データ \\(\\mathbf{X}=\\{\\mathbf{x}_1,\\ldots,\\mathbf{x}_N\\}\\) に対する対数尤度関数は、 \\((9.7)\\) から以下のように書けます。 （※明示的にパラメータを記載しています。） $$\\ln p\\left(\\mathbf{X}|\\boldsymbol{\\pi,\\mu,\\Sigma}\\right) = \\sum_{n=1}&#94;N\\ln\\left\\{\\sum_{k=1}&#94;K\\pi_k\\mathcal{N}\\left(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k\\right)\\right\\}\\qquad (9.14)$$ E step $$\\begin{aligned} p(z_{k}=1|\\mathbf{x}) &\\equiv \\frac{p(z_{k}=1)p(\\mathbf{x}|z_{k}=1)}{p(\\mathbf{x})}\\qquad (\\because\\text{Bayes' theorem})\\\\ &\\propto p(z_{k}=1)p(\\mathbf{x}|z_{k}=1) \\\\ &=\\pi_k\\mathcal{N}(\\mathbf{x}|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k) \\end{aligned}$$ なので、総和が \\(1\\) になるように正規化を行えば 負担率 が以下のように求まります。 $$\\gamma(z_{k})\\equiv p(z_{k}=1|\\mathbf{x}) =\\frac{\\pi_{k}\\mathcal{N}(\\mathbf{x}|\\mathbf{\\mu_{\\rm{k}}}, \\mathbf{\\Sigma_{\\rm{k}}})}{\\sum_{j=1}&#94;{K}\\pi_{j}\\mathcal{N}(\\mathbf{x}|\\mathbf{\\mu_{\\rm{j}}}, \\mathbf{\\Sigma_{\\rm{j}}})}\\qquad (9.13)$$ ※ なお、この時分母である \\(\\sum_{j=1}&#94;{K}\\pi_{j}\\mathcal{N}(\\mathbf{x}|\\mathbf{\\mu_{\\rm{j}}}, \\mathbf{\\Sigma_{\\rm{j}}})\\) が \\(p(\\mathbf{x})\\) であることは有用です。 （ 生物データマイニング論 第1回 では、これを用いて可視化していました。） Maximization step ※ 対数尤度関数 \\((9.14)\\) を \\(\\ln L\\) と記述します。 \\(\\boldsymbol{\\mu}_k\\) 対数尤度 \\((9.14)\\) を \\(\\boldsymbol{\\mu}_k\\) で微分します。この時 正規分布は \\(e&#94;{\\text{hoge}}\\) という形をしており、微分しても形が変わらないので、 $$\\begin{aligned} \\frac{\\partial\\ln L}{\\partial\\boldsymbol{\\mu}_k} &= \\sum_{i=n}&#94;N \\frac{\\pi_k\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)}{\\sum_j \\pi_j \\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_j,\\boldsymbol{\\Sigma}_j)}\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\\\ &= \\boldsymbol{\\Sigma}_k&#94;{-1}\\sum_{n=1}&#94;N \\gamma_{nk}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\\\ &= 0\\\\ \\therefore\\boldsymbol{\\mu}_k&#94;{\\star} &= \\frac{\\sum_{n=1}&#94;N\\gamma(z_{nk})\\mathbf{x}_n}{\\sum_{n=1}&#94;N\\gamma(z_{nk})} \\qquad (9.17)\\\\ \\end{aligned}$$ と最適解が求まりました。 \\(\\pi_k\\) パラメータ \\(\\pi_k\\) については、 \\(\\sum_{k=1}&#94;K \\pi_k = 1\\) という制約に注意する必要があります。ですが、 隠れマルコフモデルの最尤推定 で行なった能登同様に、ラグランジュの未定乗数 \\(\\lambda\\) を導入すればこの問題は解けます。 $$L_{\\lambda} = \\log L + \\lambda\\left(\\sum_{c=1}&#94;K \\pi_c - 1\\right)$$ の導関数が \\(0\\) となる条件を求める事になるので、 $$\\begin{aligned} \\frac{\\partial L_{\\lambda}}{\\partial\\pi_k} &= \\sum_{n=1}&#94;N \\frac{\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)}{\\sum_k \\pi_k \\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)} + \\lambda\\\\ &= \\sum_{n=1}&#94;N \\frac{\\gamma_{nk}}{\\pi_k} + \\lambda = 0 &\\therefore \\pi_k = -\\frac{1}{\\lambda}\\sum_{n=1}&#94;N \\gamma_{ic}\\\\ \\frac{\\partial L_{\\lambda}}{\\partial\\lambda} &= \\sum_{k=1}&#94;K \\pi_k - 1\\\\ &= \\left(-\\frac{1}{\\lambda}\\sum_{k=1}&#94;K\\sum_{n=1}&#94;N \\gamma_{nk}\\right) - 1 = 0 &\\therefore \\lambda = -n \\end{aligned}$$ より、 $$\\pi_k&#94;{\\star} = \\frac{\\sum_{n=1}&#94;N\\gamma(z_{nk})}{N} \\qquad(9.22)$$ と最適解が求まりました。 \\(\\boldsymbol{\\Sigma}_k\\) \\(\\boldsymbol{\\mu}_k\\) と同様に、対数尤度 \\((9.14)\\) を \\(\\boldsymbol{\\Sigma}_k\\) で微分します。すると、 $$\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\log L = \\sum_{n=1}&#94;N\\frac{\\pi_k\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)}{\\sum_j \\pi_j \\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_j,\\boldsymbol{\\Sigma}_j)}$$ となります。ここで、 \\(\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)\\) を計算すると、 $$\\begin{aligned} &\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)\\\\ =&\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\frac{1}{(2\\pi)&#94;{D/2}}\\frac{1}{|\\boldsymbol{\\Sigma}_k|&#94;{1/2}}\\exp\\left\\{-\\frac{1}{2}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;T\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\right\\}\\\\ =&\\frac{1}{(2\\pi)&#94;{D/2}}\\biggl(\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\frac{1}{|\\boldsymbol{\\Sigma}_k|&#94;{1/2}}\\biggr)\\exp\\left\\{-\\frac{1}{2}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;T\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\right\\}\\\\ &+\\frac{1}{(2\\pi)&#94;{D/2}}\\frac{1}{|\\boldsymbol{\\Sigma}_k|&#94;{1/2}}\\left(\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\exp\\left\\{-\\frac{1}{2}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;T\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\right\\}\\right)\\\\ =&\\frac{1}{(2\\pi)&#94;{D/2}}\\biggl(-\\frac{1}{2}\\biggr)|\\boldsymbol{\\Sigma}_k|&#94;{-1/2}\\boldsymbol{\\Sigma}_k&#94;{-1}\\exp\\left\\{-\\frac{1}{2}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;T\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\right\\}\\quad (\\ast1)\\\\ &+\\frac{1}{(2\\pi)&#94;{D/2}}\\frac{1}{|\\boldsymbol{\\Sigma}_k|&#94;{1/2}}\\frac{1}{2}\\exp\\left\\{-\\frac{1}{2}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;T\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\right\\}\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;{T}\\boldsymbol{\\Sigma}_k&#94;{-1}\\quad (\\ast2)\\\\ =&-\\frac{1}{2}\\boldsymbol{\\Sigma}_k&#94;{-1}\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)+\\frac{1}{2}\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;{T}\\boldsymbol{\\Sigma}_k&#94;{-1}\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)\\\\ =&\\frac{1}{2}\\left\\{\\boldsymbol{\\Sigma}_k&#94;{-1}-\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;{T}\\boldsymbol{\\Sigma}_k&#94;{-1}\\right\\}\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k) \\end{aligned}$$ したがって、 $$ \\boldsymbol{\\Sigma}_k&#94;{\\star}= \\frac{\\sum_{n=1}&#94;N\\gamma(z_{nk})\\left(\\mathbf{x}_n-\\boldsymbol{\\mu}_k\\right)\\left(\\mathbf{x}_n-\\boldsymbol{\\mu}_k\\right)&#94;{\\mathrm{T}}}{\\sum_{n=1}&#94;N\\gamma(z_{nk})} \\qquad (9.19) $$ と最適解が求まりました。 ※ \\(\\ast1,\\ast2\\) の式変形は以下でより詳細に説明します。 が、その前にいくつか基本事項の定義を振り返ります。 行列式 $$\\det A=\\displaystyle\\sum_{\\sigma\\in S_n}\\mathrm{sgn}(\\sigma)\\prod_{i=1}&#94;na_{i\\sigma(i)}=\\displaystyle\\sum_{\\sigma\\in S_n}\\mathrm{sgn}(\\sigma)a_{1\\sigma(1)}a_{2\\sigma(2)}\\cdots a_{n\\sigma(n)}$$ \\(\\sigma\\) は \\(1\\) から \\(n\\) の置換（順列）を表す。 \\(\\mathrm{sgn}(\\sigma)\\) は置換の符号を表す。なお、\b置換の符号は 互\b換の数 に注目しており、奇置換（互換の数が奇数個）なら \\(-1\\) 、偶置換なら \\(+1\\) \b\b 余韻子 \\(n\\) 次正方行列 \\(A := (a_{ij})\\) に対し、 \\(i\\) 行と \\(i\\) 列を \\(1\\) つずつ取り去って作られる小行列を \\(M_{ij}\\) とする。つまり、 $$ M_{ij} = \\small \\left[ \\begin{array}{ccc} a_{11} & \\cdots &a_{1\\hspace{1mm}j-1} & a_{1\\hspace{1mm}j+1} & \\cdots & a_{1n} \\\\ \\vdots & &\\vdots & \\vdots & &\\vdots \\\\ a_{i-1 \\hspace{1mm} 1} & \\cdots &a_{i-1\\hspace{1mm}j-1} & a_{i-1\\hspace{1mm}j+1} & \\cdots & a_{i-1 \\hspace{1mm}n} \\\\ a_{i+1 \\hspace{1mm} 1} & \\cdots &a_{i+1\\hspace{1mm}j-1} & a_{i+1\\hspace{1mm}j+1} & \\cdots & a_{i+1 \\hspace{1mm}n} \\\\ \\vdots & &\\vdots & \\vdots & &\\vdots \\\\ a_{n1} &\\cdots &a_{n\\hspace{1mm}j-1} & a_{n\\hspace{1mm}j+1} &\\cdots &a_{nn} \\end{array} \\right] $$ です。ここで、 \\(\\Delta_{ij}=(-1)&#94;{i+j}|M_{ij}|\\) とすると、以下の 余因子展開 ができます。 \\(A\\) の行列式は \\(j\\) 列に関して、以下のように展開されます。 $$\\det A=\\Delta_{1j}a_{1j}+\\Delta_{2j}a_{2j}+\\cdots+\\Delta_{nj}a_{nj}$$ \\(A\\) の行列式は \\(i\\) 行に関して、以下のように展開されます。 $$\\det A=\\Delta_{i1}a_{i1}+\\Delta_{i2}a_{i2}+\\cdots+\\Delta_{in}a_{in}$$ \b 余韻子行列 \\(n\\) 次正方行列 \\(A := (a_{ij})\\) に対し、 \\((i, j)\\) 余因子を \\((j, i)\\) 成分に持つ行列 $$\\tilde{A} := \\begin{pmatrix}&\\Delta_{11}&\\Delta_{21}&\\cdots&\\Delta_{n1}\\\\&\\Delta_{21}&\\Delta_{22}&\\ldots&\\Delta_{n2}\\\\&\\vdots&\\vdots&\\ddots&\\vdots\\\\&\\Delta_{n1}&\\Delta_{n2}&\\cdots&\\Delta_{nn}\\end{pmatrix}$$ を 余韻子行列 と呼びます。ここで、余韻子展開を考えれば、余韻子行列に関して、 $$\\tilde{A}A=A\\tilde{A}=\\det(A)I_n$$ が成り立つことがわかります。 \\(\\ast1\\) の変形 以上を踏まえると、 \\(\\frac{\\partial\\det(A)}{\\partial a_{ij}} = \\Delta_{ij}\\) なので、 $$\\frac{\\partial|\\Sigma|}{\\partial\\Sigma} =\\tilde\\Sigma = |\\Sigma|\\Sigma&#94;{-1}$$ が成り立ち、 $$\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\frac{1}{|\\boldsymbol{\\Sigma}_k|&#94;{1/2}} =-\\frac{1}{2}|\\boldsymbol{\\Sigma}_k|&#94;{-\\frac{3}{2}}\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\boldsymbol{\\Sigma_k}=-\\frac{1}{2}|\\boldsymbol{\\Sigma}_k|&#94;{-1/2}\\boldsymbol{\\Sigma_k}&#94;{-1}$$ となることがわかります。 トレースと固有値の関係性 【命題】 トレースには、 \\(Tr(A) = \\sum_{k=1}&#94;{n}\\lambda_{k}\\) という関係がある。 トレース： \\(n\\times n\\) の正方行列 \\(A\\) に対して、\b対角成分の和 \\(\\sum_{k=1}&#94;{n}a_{kk}\\) を \\(A\\) のトレースと呼び、 \\(\\mathrm{Tr}(A),\\mathrm{tr}A\\) \b と表す。 【証明】 まず、固有方程式は、 $$\\phi(t) = |A-tI| = \\left|\\begin{array}{cccc} a_{11}-t & a_{12} & \\ldots & a_{1n} \\\\ a_{21} & a_{22}-t & \\ldots & a_{2n} \\\\ \\vdots & \\vdots & \\ddots & \\vdots \\\\ a_{n1} & a_{n2} & \\ldots & a_{nn}-t \\end{array} \\right|$$ である。ここで、 \\(t\\) の係数に着目する。 \\(t&#94;n\\) の係数 これは、対角成分を全て掛け合わせた次の多項式 $$(a_{11}-t)(a_{22}-t)\\ldots(a_{nn}-t)$$ における \\(t&#94;n\\) の係数と等しくなる。よって、係数は「 \\((-1)&#94;n\\) 」 \\(t&#94;{n-1}\\) の係数 これも\b、先ほどの多項式の \\(t&#94;{n-1}\\) の係数と等しくなる。（ \\(\\because\\) 余韻子展開を考える。 \\(\\sigma\\) が全単射のため、１行（列）対角成分ではないものがあると、\b少なくともあと１つは体格成分でないものがあることがわかる。） 定数項 これは、\b余韻子展開を考えれば \\(|A|\\) そのもの。 よって、係数は「 \\((-1)&#94;{n-1}(a_{11}+a_{22}+\\ldots+a_{nn})\\) 」であり、これは対角和を用いて「 $(-1)&#94;{n-1}\\mathrm{Tr}(A) $ 」とも書ける。 一方先ほどの固有方程式は固有値を解に持つ。 つまり、 \\(A\\) の固有値を \\(\\lambda_1\\) 〜 \\(\\lambda_n\\) として、 $$\\phi(t)=(-1)&#94;n(t-\\lambda_1)(t-\\lambda_2)\\cdots(t-\\lambda_n)$$ とかける。（ \\((-1)&#94;n\\) によって、 \\(t&#94;n\\) の係数を合わせている。） この式を展開すると、 \\(t&#94;{n-1}\\) の係数が「 \\((-1)&#94;{n-1}(\\lambda_1+\\lambda_2+\\ldots+\\lambda_n)\\) 」であることから $$\\mathrm{Tr}(A) = \\lambda_1+\\lambda_2+\\ldots+\\lambda_n$$ ※ちなみに、 \\(\\phi(t)=(-1)&#94;n(t-\\lambda_1)(t-\\lambda_2)\\cdots(t-\\lambda_n)\\) の定数項を考えることで、 $$|A| = \\lambda_1\\lambda_2\\ldots\\lambda_n$$ であることもわかる。 トレースの循環性 \\(A\\) を \\(m \\times n\\) 、 \\(B\\) を \\(n \\times m\\) の行列とすると、 \\(AB\\) は \\(m \\times m\\) の行列であり、 $$ \\begin{aligned} \\mathrm{Tr}[AB]&= \\sum_{i=1}&#94;{m} (AB)_{ii} \\\\&= \\sum_{i=1}&#94;{m}\\sum_{j=1}&#94;{n} A_{ij}B_{ji} \\\\&= \\sum_{j=1}&#94;{n} \\sum_{i=1}&#94;{m} B_{ji} A_{ij} \\\\&= \\sum_{j=1}&#94;{n} (BA)_{jj} \\\\&= \\mathrm{Tr}[BA] \\end{aligned} $$ となる。これを応用すれば、以下の 循環性 が証明できる。 \\(A,B,C\\) をそれぞれ \\(m\\times n,n \\times l,l \\times m\\) の行列とするとき、 $$\\begin{aligned} \\mathrm{Tr}[ABC] =& \\mathrm{Tr}[BCA] \\\\=& \\mathrm{Tr}[CAB] \\end{aligned} $$ が成り立つ。（ \\(\\because\\) ２つの\b行列積をセットで考えれば明らか） 逆行列の微分 正則行列 \\(A\\) に対して、 \\(A&#94;{-1}A=I\\) が成立するので、\bこの等式の両辺を \\(A\\) で微分して、 $$\\begin{aligned} \\biggr(\\frac{\\partial }{\\partial A}A&#94;{-1}\\biggl)A + A&#94;{-1}\\biggr(\\frac{\\partial }{\\partial A}A\\biggl) = 0\\\\ \\biggr(\\frac{\\partial A&#94;{-1}}{\\partial A}\\biggl) = -A&#94;{-1}\\biggr(\\frac{\\partial }{\\partial A}A\\biggl)A&#94;{-1} \\end{aligned}$$ シングルエントリ行列 \\((i,j)\\) 成分のみが \\(1\\) で、残りが全て \\(0\\) の行列 \\(\\mathbf{J}&#94;{ij}\\) を シングルエントリ行列 と呼ぶ。なお、\b以下の式が成り立つ。 $$\\mathrm{Tr}\\bigr(\\mathbf{AJ}&#94;{ij}\\bigl)=\\mathbf{A}_{ji}$$ \b \\(2 \\times 2\\) の行列でこれを示す。 $$\\begin{aligned} \\mathrm{Tr}\\bigr(\\mathbf{AJ}&#94;{12}\\bigl)&=\\mathrm{Tr}\\biggr(\\begin{pmatrix}a_{11}&a_{12}\\\\a_{21}&a_{22}\\end{pmatrix}\\begin{pmatrix}0&1\\\\0&0\\end{pmatrix}\\biggl)\\\\ &=\\mathrm{Tr}\\begin{pmatrix}0&a_{11}\\\\0&a_{21}\\end{pmatrix}\\\\ &=a_{21}\\\\ &=\\mathbf{A}_{21} \\end{aligned}$$ \\(\\ast2\\) の変形 以上を踏まえれば、 $$\\begin{aligned} \\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_{ij}}(\\mathbf{x}-\\boldsymbol{\\mu})&#94;T\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu}) &=\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_{ij}}\\mathrm{Tr}\\biggr((\\mathbf{x}-\\boldsymbol{\\mu})&#94;T\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})\\biggl)\\\\ &=\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_{ij}}\\mathrm{Tr}\\biggr(\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\biggl)\\\\ &=\\mathrm{Tr}\\biggr(\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_{ij}}\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\biggl)\\\\ &=\\mathrm{Tr}\\biggr(-\\boldsymbol{\\Sigma}&#94;{-1}\\frac{\\partial\\boldsymbol{\\Sigma}}{\\partial\\boldsymbol{\\Sigma}_{ij}}\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\biggl)\\\\ &=\\mathrm{Tr}\\biggr(-\\boldsymbol{\\Sigma}&#94;{-1}\\mathbf{J}&#94;{ij}\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\biggl)\\\\ &=-\\mathrm{Tr}\\biggr(\\boldsymbol{\\Sigma}&#94;{-1}\\mathbf{J}&#94;{ij}\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\biggl)\\\\ &=-\\mathrm{Tr}\\biggr(\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\boldsymbol{\\Sigma}&#94;{-1}\\mathbf{J}&#94;{ij}\\biggl)\\\\ &=-\\left\\{\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\boldsymbol{\\Sigma}&#94;{-1}\\right\\}_{ji}\\\\ &=-\\left\\{\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\boldsymbol{\\Sigma}&#94;{-1}\\right\\}_{ij}\\\\ \\end{aligned}$$ よって、 $$\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}}(\\mathbf{x}-\\boldsymbol{\\mu})&#94;T\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})=-\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\boldsymbol{\\Sigma}&#94;{-1}$$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-1-2.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-1-2.html"},{"title":"クラスタリング","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) 講義の方針 データ解析アルゴリズムは、生物学の研究に不可欠 R や python のパッケージとして、すぐダウンロードして使うことができる。 しかし、原理を知らずに使うと、アルゴリズムの出す結果を盲信することになり危険。 正しい理解：結果を疑えるようになること。 階層的クラスタリング クラスタリング データ点を クラスタ（互いに類似したグループ） に分割する。 距離尺度：ユークリッド距離、コサイン距離など。 階層的クラスタリング 最初は各点がクラスタとなる。 二つのクラスタを選んで合併していく。 Single Link ：二つのクラスタをまたぐ最近点の距離 chaining により、ゆるいクラスタができる （非推奨） Complete Link ：二つのクラスタをまたぐ最遠点の距離 最も固いクラスタができるが、細かく分け過ぎる傾向がある。 Average Link ：二つのクラスタをまたぐ点対の平均距離 最もバランスがとれており、通常はこれを用いる。 最後は一つのクラスタになる。 デンドログラム ：合併の過程を樹形図の形で表したもの。 K-Means 分割的クラスタリング の一手法。$K$ クラスにデータ点を分割する。 以下を繰り返す。 各データ点 $\\mathbf{x}$ を最も近い中心点 $\\mu_k$ に割り当てて、クラスタ $c_1,\\ldots,c_K$ を作成する。 割当を元に中心点を計算しなおす。 $$\\mu_k = \\sum_{j\\in C_i} \\mathbf{x}_j$$ 実装 In [1]: import numpy as np import matplotlib.pyplot as plt Data. In [2]: np . random . seed ( 0 ) In [3]: N = 30 ; K = 5 vmin = 0 ; vmax = 1 In [4]: # Training Data. data = np . random . uniform ( vmin , vmax , ( N , 2 )) x , y = data . T In [5]: plt . scatter ( x , y ) plt . title ( \"Training Data.\" ) plt . show () In [6]: # Background Color Xs , Ys = np . meshgrid ( np . linspace ( vmin , vmax , 100 ), np . linspace ( vmin , vmax , 100 )) XYs = np . c_ [ Xs . ravel (), Ys . ravel ()] Training. 自作のモジュール （ kerasy.ML.KMeans.KMeans ） を使って学習させます。 In [7]: from kerasy.ML.KMeans import KMeans In [8]: model = KMeans ( K = K , random_state = 0 ) In [9]: model . fit ( data ) Visualization. In [10]: Nfig = len ( model . history ) col = 3 row = Nfig // col + 1 if Nfig % col != 0 else Nfig//col In [11]: # For Visualization. plt_model = KMeans ( K = K ) In [12]: fig = plt . figure ( figsize = ( 6 * col , 4 * row )) for i ,( idx , mu ) in enumerate ( model . history ): # Plot Training Data with respective class color. ax = fig . add_subplot ( row , col , i + 1 ) ax . scatter ( x , y , c = idx ) # Plot Representative points(µk) of each class. mux , muy = mu . T ax . scatter ( mux , muy , marker = 'x' , c = \"red\" , s = 200 ) # Background. plt_model . mu = mu Z , _ = plt_model . predict ( XYs ) Zs = Z . reshape ( Xs . shape ) ax . pcolor ( Xs , Ys , Zs , alpha = 0.2 ) ax . set_xlim ( vmin , vmax ) ax . set_ylim ( vmin , vmax ) ax . set_title ( f \"Iteration. {i:>02} \" ) plt . show () 混合ガウス分布 混合ガウス分布は、次のように混合係数 $\\pi_k$ でガウス分布を線形重ね合わせした形でかける。 $$p(\\mathbf{x}) = \\sum_{k=1}&#94;K\\pi_k\\mathcal{N}\\left(\\mathbf{x}|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k\\right)\\qquad (9.7)$$ ここで、 二値ベクトル（1-of-K符号化法） $\\mathbf{z}$ の周辺分布は、$0\\leq\\pi_k\\leq1$ と $\\sum_{k=1}&#94;K\\pi_k = 1 $ を満たす $\\pi_k$ を用いて、 $$p\\left(\\mathbf{z}\\right) = \\prod_{k=1}&#94;K\\pi_k&#94;{z_k}\\qquad (9.9)$$ と書ける。また、$\\mathbf{z}$ が与えられた時の $\\mathbf{x}$ の事後分布は当然ながら次のガウス分布である。 $$p\\left(\\mathbf{x}|\\mathbf{z}\\right) = \\prod_{k=1}&#94;K\\mathcal{N}\\left(\\mathbf{x}|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k\\right)&#94;{z_k}\\qquad(9.11)$$ EMアルゴリズム 観測データ $\\mathbf{X}=\\{\\mathbf{x}_1,\\ldots,\\mathbf{x}_N\\}$ に対する対数尤度関数は、$(9.7)$ から以下のように書ける。 （※明示的にパラメータを記載しています。） $$\\ln p\\left(\\mathbf{X}|\\boldsymbol{\\pi,\\mu,\\Sigma}\\right) = \\sum_{n=1}&#94;N\\ln\\left\\{\\sum_{k=1}&#94;K\\pi_k\\mathcal{N}\\left(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k\\right)\\right\\}\\qquad (9.14)$$ Expectation step M stepで必要となる $\\gamma(z_{nk})$ を求める。 この値は、$\\mathbf{x}$ が与えられた下での $\\mathbf{z}$ の条件付き確率であり、混合要素 $k$ が $\\mathbf{x}$ の観測を 「説明する」 度合いを表す 負担率(responsibility) として解釈することもできる。 $$ \\begin{aligned} \\gamma(z_{k})\\equiv p(z_{k}=1|\\mathbf{x}) &=\\frac{p(z_{k}=1)p(\\mathbf{x}|z_{k}=1)}{\\sum_{j=1}&#94;{K}p(z_{j}=1)p(\\mathbf{x}|z_{j}=1)}\\\\ &=\\frac{\\pi_{k}\\mathcal{N}(\\mathbf{x}|\\mathbf{\\mu_{\\rm{k}}}, \\mathbf{\\Sigma_{\\rm{k}}})}{\\sum_{j=1}&#94;{K}\\pi_{j}\\mathcal{N}(\\mathbf{x}|\\mathbf{\\mu_{\\rm{j}}}, \\mathbf{\\Sigma_{\\rm{j}}})}\\qquad (9.13) \\end{aligned} $$ Maximization step M stepでは、尤度関数を最大化するように各パラメータの値を更新する。 ※ 導出過程は 混合ガウス分布のEMアルゴリズム に載せています。 $$ \\begin{aligned} \\boldsymbol{\\mu}_k &= \\frac{\\sum_{n=1}&#94;N\\gamma(z_{nk})\\mathbf{x}_n}{\\sum_{n=1}&#94;N\\gamma(z_{nk})} & (9.17)\\\\ \\boldsymbol{\\Sigma}_k &= \\frac{\\sum_{n=1}&#94;N\\gamma(z_{nk})\\left(\\mathbf{x}_n-\\boldsymbol{\\mu}_k\\right)\\left(\\mathbf{x}_n-\\boldsymbol{\\mu}_k\\right)&#94;{\\mathrm{T}}}{\\sum_{n=1}&#94;N\\gamma(z_{nk})} & (9.19)\\\\ \\pi_k &= \\frac{\\sum_{n=1}&#94;N\\gamma(z_{nk})}{N} & (9.22) \\end{aligned} $$ 実装 Data. In [13]: np . random . seed ( 0 ) In [14]: N = 150 ; K = 3 In [15]: # Train Data. data = np . concatenate ([ np . random . multivariate_normal ( mean = [ 0 , 0 ], cov = np . eye ( 2 ), size = int ( N / 3 )), np . random . multivariate_normal ( mean = [ 0 , 5 ], cov = np . eye ( 2 ), size = int ( N / 3 )), np . random . multivariate_normal ( mean = [ 3 , 2 ], cov = np . eye ( 2 ), size = int ( N / 3 )), ]) x , y = data . T In [16]: plt . scatter ( x , y ) plt . title ( \"Training Data.\" ) plt . show () In [17]: # Background Color xmin , ymin = np . min ( data , axis = 0 ) xmax , ymax = np . max ( data , axis = 0 ) Xs , Ys = np . meshgrid ( np . linspace ( xmin , xmax , 100 ), np . linspace ( ymin , ymax , 100 )) XYs = np . c_ [ Xs . ravel (), Ys . ravel ()] Training. 自作のモジュール （ kerasy.ML.MixedDistribution.MixedGaussian ） を使って学習させます。 In [18]: from kerasy.ML.MixedDistribution import MixedGaussian In [19]: model = MixedGaussian ( K = K , random_state = 1234 ) In [20]: model . fit ( data , span = 20 ) Visualization. In [21]: Nfig = len ( model . history ) col = 3 row = Nfig // col + 1 if Nfig % col != 0 else Nfig//col In [22]: # For Visualization. plt_model = MixedGaussian ( K = K ) plt_model . N , plt_model . M = data . shape In [23]: fig = plt . figure ( figsize = ( 6 * col , 4 * row )) for i ,( epoch , idx , mu , S , pi ) in enumerate ( model . history ): # Plot Training Data with respective class color. ax = fig . add_subplot ( row , col , i + 1 ) ax . scatter ( x , y , c = idx ) # Background. plt_model . mu = mu plt_model . S = S plt_model . pi = pi Z = plt_model . predict ( XYs ) Zs = np . sum ( Z , axis = 1 ) . reshape ( Xs . shape ) # Likelihood. ax . pcolor ( Xs , Ys , Zs , alpha = 0.2 ) ax . set_xlim ( xmin , xmax ) ax . set_ylim ( ymin , ymax ) ax . set_title ( f \" {epoch:>02} epochs.\" ) plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-1-1.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-1-1.html"},{"title":"イントロダクション","text":"講師： 山崎俊彦 参考書： CG-ARTS協会発行「ディジタル画像処理」 参考書： R. Szeliski, Computer Vision Algorithms and Applications, Springer (PDF版はインターネット上で無料公開) 講義予定 前半（山崎担当） 画像の操作 画像の特徴抽出・内容理解・構造化 機械学習一般 後半（相澤担当） 画像を撮る：カメラの内部処理・センサ・レンズ・標本化 画像を表現する。色の知覚・表現 画像の基礎的な処理。周波数変換、線形・非線形フィルタリング # 日付 担当 内容 1 9/30(月) 山崎 画像・映像を中心とした現在の技術動向の紹介、低次・領域・局所画像特徴 2 10/7(月) 山崎 特徴選択、特徴表現 3 10/21(月) 山崎 機械学習概論、教師なし学習、クラスタリング 4 10/28(月) 山崎 機械学習 (NN, SVM, RF) 5 11/7(木) 山崎 深層学習 (Deep Neural Networks) 6 11/11(月) 山崎 動画像処理 (ブロックマッチング、背景差分、オプティカルフロー) 7 11/13(水) 山崎 3次元空間情報の取得と処理 8 11/18(月) 相澤 9 11/25(月) 相澤 10 12/9(月) 相澤 11 12/16(月) 相澤 12 12/23(月) 相澤 13 1/@@ テスト パターン認識一般 現在は、90%位が 学習ベース(data-driven) 。残りが解析的手法。最近はこのhybridも。 全体的な流れ 学習(training) 検証(validation)←パラメータ最適化 推論(test, inference) なぜ今 学習ベース なのか？ データの大規模化：インターネット上から大量に収集可。 計算機の進化：ムーアの法則による高速化。さらにはクラウド 労働力のクラウド化 画像特徴 低次特徴量 色ヒストグラム（RGB,HSV,L*a*b*）：単純計算すると \\(256&#94;3\\) 個binができるので、注意。 色共起ヒストグラム（Correlogram）：隣接ピクセルの色を踏まえたヒストグラム 円、コーナー直線の数・大きさ・長さ 物体の円度、曲率等 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"映像メディア工学","url":"https://iwasakishuto.github.io/University/3A/映像メディア工学-1.html","loc":"https://iwasakishuto.github.io/University/3A/映像メディア工学-1.html"},{"title":"matplotlibチートシート","text":"In [1]: import numpy as np import matplotlib.pyplot as plt $N$ 枚の画像を plot Vsize , Hsize = () # 画像の横の長さと縦の長さ。 n_fig = \"画像の枚数\" n_col = \"横に並ぶ数\" n_row = n_fig // n_col + 1 if n_fig % n_col != 0 else n_fig // n_col # 行数を計算。 fig = plt . figure ( figsize = ( Vsize * n_col , Hsize * n_row )) for i , hoge in enumerate ( HOGEs ): ax = fig . add_subplot ( row , col , i + 1 ) \"\"\" 描きたいオブジェクトをプロット \"\"\" plt . tight_layout () plt . show () gifの画像の作成 上のようにやって全ての画像をまとめた一枚の画像を出力しても良いが、 n_fig = \"画像の枚数\" digit = len ( str ( N )) for i , hoge in enumerate ( HOGEs ): ax = fig . add_subplot ( row , col , i + 1 ) plt . figure ( figsize = \"サイズ\" ) \"\"\" 描きたいオブジェクトをプロット \"\"\" plt . savefig ( f \"img{i:>0{digit}}.png\" ) として連番の画像を作成し、それを以下のプログラムでgif画像にした方が見やすい場合もある from PIL import Image N = 30 digit = len ( str ( N )) images = [] for i in range ( N ): img = Image . open ( f \"{i:>0{digit}}.png\" ) images . append ( img ) images [ 0 ] . save ( 'out.gif' , save_all = True , append_images = images [ 1 :], loop = 0 , duration = 300 ) # loop=0: 無限ループ # duration: 一枚あたりの表示時間[ms] cmaps In [2]: cmaps = [ 'Accent' , 'Blues' , 'BrBG' , 'BuGn' , 'BuPu' , 'CMRmap' , 'Dark2' , 'GnBu' , 'Greens' , 'Greys' , 'OrRd' , 'Oranges' , 'PRGn' , 'Paired' , 'Pastel1' , 'Pastel2' , 'PiYG' , 'PuBu' , 'PuBuGn' , 'PuOr' , 'PuRd' , 'Purples' , 'RdBu' , 'RdGy' , 'RdPu' , 'RdYlBu' , 'RdYlGn' , 'Reds' , 'Set1' , 'Set2' , 'Set3' , 'Spectral' , 'Wistia' , 'YlGn' , 'YlGnBu' , 'YlOrBr' , 'YlOrRd' , 'afmhot' , 'autumn' , 'binary' , 'bone' , 'brg' , 'bwr' , 'cividis' , 'cool' , 'coolwarm' , 'copper' , 'cubehelix' , 'flag' , 'gist_earth' , 'gist_gray' , 'gist_heat' , 'gist_ncar' , 'gist_rainbow' , 'gist_stern' , 'gist_yarg' , 'gnuplot' , 'gnuplot2' , 'gray' , 'hot' , 'hsv' , 'inferno' , 'jet' , 'magma' , 'nipy_spectral' , 'ocean' , 'pink' , 'plasma' , 'prism' , 'rainbow' , 'seismic' , 'spring' , 'summer' , 'tab10' , 'tab20' , 'tab20b' , 'tab20c' , 'terrain' , 'viridis' , 'winter' ] In [3]: matrix = np . arange ( 100 ) . reshape ( 10 , 10 ) In [4]: Vsize , Hsize = ( 4 , 4 ) n_fig = len ( cmaps ) n_col = 4 n_row = n_fig // n_col + 1 if n_fig % n_col != 0 else n_fig//n_col In [5]: fig = plt . figure ( figsize = ( Vsize * n_col , Hsize * n_row )) for i , cmap in enumerate ( cmaps ): ax = fig . add_subplot ( n_row , n_col , i + 1 ) ax . matshow ( matrix , cmap = cmap ) ax . set_title ( f \"↓ {cmap} ↓\" , fontsize = 24 ), ax . set_xticks ([]), ax . set_yticks ([]) plt . tight_layout () plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"映像メディア工学","url":"https://iwasakishuto.github.io/University/3A/映像メディア工学-0.html","loc":"https://iwasakishuto.github.io/University/3A/映像メディア工学-0.html"},{"title":"生物物理学 第1回","text":"講師： 能瀬聡直 講義資料： 生物物理学 参考書： 神経科学 -脳の探求- 参考書： ニューロンの生物物理 講義概要 生物物理学とは 遺伝情報の流れ 蛋白質の構造と機能 細胞内タンパク質のダイナミックス 遺伝子操作技術 ゲノム科学とバイオインフォマティックス バイオイメージング、生体分子計測 脳・神経系の生物物理 講義日程 # 日付 担当 1 9/25 能瀬 2 10/2 樋口 3 10/9 樋口 4 10/16 樋口 5 10/23 樋口 6 10/30 樋口 7 11/6 樋口 8 11/20 能瀬 9 11/27 能瀬 10 12/4 樋口 11 12/11 能瀬 12 12/18 能瀬 13 1/8 能瀬 14 1/15 能瀬 生物物理学とは？ 物理の手法で生物を見る。 生体分子の機能や構造の研究。 対象は広範囲、ただし物理的理念を背景にもつ。 生体高分子の構造・機能、脳・神経機構など単なる記述中心の従来の生物学と異なり、論理的な思考法を用い、より普遍的な原理を見いだすことを目指している。 生物物理の代表的発見 DNA二重螺旋構造の発見（1953年、1962年ノーベル生理医学賞） 蛋白質の高次構造の解析（1960年、1962年ノーベル化学賞） 神経活動のイオン機構の解明（1953年、1963年ノーベル生理医学賞） 最近の技術革新 ヒトゲノム計画 ヒトの全遺伝子の設計図解読の終了（2000年） イメージング技術 蛍光蛋白質・レーザー顕微鏡（1990年代） 1分子観測・1分子操作 溶液中での蛋白質1分子の観察（1990年代） 神経回路の作動原理の解明に向けた従来の3つのアプローチ 解剖学(Anatomy) 神経の配線を明らかにする。 生理学(Physiology) 神経活動を測定・操作する。 理論 神経活動パターンから原理を抽出 Part1. Introduction 脳神経系における情報の流れ ニューロンの構成 脳とコンピューター 半導体 ↔︎ 半導体素子 ↔︎ 集積回路 ↔︎ コンピューター 分子 ↔︎ 神経細胞 グリア細胞 ↔︎ 神経回路 ↔︎ 脳 活動電位の特徴 全か無か： \\(\\mathrm{Na}\\) チャネル活性化に閾値がある。 一過性： \\(\\mathrm{Na}\\) チャネル不活性化 確実に伝播 一体、どのような構造を持った神経回路の中を、どのように信号が伝わることで特定の演算が創発されるのか。 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物物理学","url":"https://iwasakishuto.github.io/University/3A/生物物理学-1.html","loc":"https://iwasakishuto.github.io/University/3A/生物物理学-1.html"},{"title":"HMMをpythonで実装","text":"（kerasy.ML.HMM.HMM） の使い方 自作のモジュール （kerasy.ML.HMM.HMM） を使って実装をします。 In [1]: from kerasy.ML.HMM import HMM In [2]: model = HMM () In [3]: # 以下のようなパラメタファイルを読み込む。 ! cat params.json { \"M\": 4, \"K\": 4, \"basetypes\": [\"a\", \"c\", \"g\", \"u\"], \"pi\": [0.7, 0.1, 0.1, 0.1], \"A\": [[0.8, 0.1, 0.1, 0.0], [0.0, 0.8, 0.1, 0.1], [0.1, 0.0, 0.8, 0.1], [0.1, 0.0, 0.1, 0.8]], \"phi\": [[0.4, 0.1, 0.1, 0.4], [0.25, 0.25, 0.25, 0.25], [0.1, 0.4, 0.4, 0.1], [0.3, 0.2, 0.2, 0.3]] } In [4]: model . load_params ( \"params.json\" ) In [5]: # インスタンスに読み込まれた各種パラメータ model . params () 【Parameter】 ===================================== *initial state z(1) z(2) z(3) z(4) 0.7000 0.1000 0.1000 0.1000 ------------------------------------- *transition probability matrix [States after transition] z(1) z(2) z(3) z(4) z(1) 0.8000 0.1000 0.1000 0.0000 z(2) 0.0000 0.8000 0.1000 0.1000 z(3) 0.1000 0.0000 0.8000 0.1000 z(4) 0.1000 0.0000 0.1000 0.8000 ------------------------------------- *emission probability z(1) z(2) z(3) z(4) a 0.4000 0.2500 0.1000 0.3000 c 0.1000 0.2500 0.4000 0.2000 g 0.1000 0.2500 0.4000 0.2000 u 0.4000 0.2500 0.1000 0.3000 In [6]: # なお、この時以下のような辞書を同時に作成しています。 print ( model . base2int ) print ( model . int2base ) {'a': 0, 'c': 1, 'g': 2, 'u': 3} {0: 'a', 1: 'c', 2: 'g', 3: 'u'} In [7]: # また、パラメータはnumpyの行列の形で読み込まれています。 print ( type ( model . pi )) print ( type ( model . A )) print ( type ( model . phi )) In [8]: # 以下のようにすれば、学習したパラメタを同じ形式で出力することができます。 model . save_params ( \"out.json\" ) Viterbi algorithm HMMのViterbiアルゴリズムを実装して、尤もらしいサンプル配列の隠れ状態列を推定します。 In [9]: from kerasy.utils.bio import alignStr , readMonoSeq , readMultiSeq # ファイルの中身 cat seq1.fasta ``` sample-RNA gagaguccuauacaaacuccaaaacacugagaccauacaaguaaaaccagucgagaaaau agucaacagcacccccguugcguauccugcggagaaugccucgcuaucuguccucacgau uggucuaaccgcucggcucaggcgugugggccugaaauccgggcagcaaacuacgguaag uuuucgcguaucaaaaauacauugaugaauguucgcuauuagccgggucgacguuuugau ggugacuaggagcgaaagugauuuuuuugugagcggugucauagcaggggaucaucugag gugaacuauggacgggucagucgcccucauuggguuuguuacucagauacgugacacacg uaaggucgcacggcaguagugauccacgagaaucggcacucuuacgagcaagucuauagc gacguggcuugcuauuaagacaguaauggacucggacagcuaguacgcgacuaaucauuu ucgcacgccaucacacuuucaacccaggagcuuacaguguuccaggggccaggcuugggg cagccucuguggaagugcgagggcugcgcuaguguacauuagccgacccucagacgugaa auaaagagaugcugcugguugcacagugagcaacguucacucggcaacccgucggauacc ``` In [10]: # ファイルの読み込み seq1 = readMonoSeq ( 'seq1.fasta' ) print ( f \"Input Sequence: \\n {alignStr(seq1[0])}\" ) Input Sequence: gagaguccuauacaaacuccaaaacacugagaccauacaaguaaaaccagucgagaaaau agucaacagcacccccguugcguauccugcggagaaugccucgcuaucuguccucacgau uggucuaaccgcucggcucaggcgugugggccugaaauccgggcagcaaacuacgguaag uuuucgcguaucaaaaauacauugaugaauguucgcuauuagccgggucgacguuuugau ggugacuaggagcgaaagugauuuuuuugugagcggugucauagcaggggaucaucugag gugaacuauggacgggucagucgcccucauuggguuuguuacucagauacgugacacacg uaaggucgcacggcaguagugauccacgagaaucggcacucuuacgagcaagucuauagc gacguggcuugcuauuaagacaguaauggacucggacagcuaguacgcgacuaaucauuu ucgcacgccaucacacuuucaacccaggagcuuacaguguuccaggggccaggcuugggg cagccucuguggaagugcgagggcugcgcuaguguacauuagccgacccucagacgugaa auaaagagaugcugcugguugcacagugagcaacguucacucggcaacccgucggauacc In [11]: # この時、文字列をリストに格納しています。 print ( type ( seq1 )) In [12]: pred1 = model . predict ( sequences = seq1 , asai = True ) In [13]: # 変数asaiは、隠れ状態がZero-based numberingかどうかを決めるものであり、特に意味はありません。（課題の形式に対応したものがasai=True.） print ( f \"Hidden Indexes: \\n {alignStr(pred1[0])}\" ) Hidden Indexesn [14]: # もちろんパラメタの更新は行われていません。 model . params () 【Parameter】 ===================================== *initial state z(1) z(2) z(3) z(4) 0.7000 0.1000 0.1000 0.1000 ------------------------------------- *transition probability matrix [States after transition] z(1) z(2) z(3) z(4) z(1) 0.8000 0.1000 0.1000 0.0000 z(2) 0.0000 0.8000 0.1000 0.1000 z(3) 0.1000 0.0000 0.8000 0.1000 z(4) 0.1000 0.0000 0.1000 0.8000 ------------------------------------- *emission probability z(1) z(2) z(3) z(4) a 0.4000 0.2500 0.1000 0.3000 c 0.1000 0.2500 0.4000 0.2000 g 0.1000 0.2500 0.4000 0.2000 u 0.4000 0.2500 0.1000 0.3000 Baum-Welch algorithm HMMのBaum-Welchアルゴリズムを実装して、モデルを学習させてます。 In [15]: model = HMM () model . load_params ( \"params2.json\" ) model . params () # 文字が \"acgu\"→\"ACGT\"に変わっただけです。 【Parameter】 ===================================== *initial state z(1) z(2) z(3) z(4) 0.7000 0.1000 0.1000 0.1000 ------------------------------------- *transition probability matrix [States after transition] z(1) z(2) z(3) z(4) z(1) 0.8000 0.1000 0.1000 0.0000 z(2) 0.0000 0.8000 0.1000 0.1000 z(3) 0.1000 0.0000 0.8000 0.1000 z(4) 0.1000 0.0000 0.1000 0.8000 ------------------------------------- *emission probability z(1) z(2) z(3) z(4) A 0.4000 0.2500 0.1000 0.3000 C 0.1000 0.2500 0.4000 0.2000 G 0.1000 0.2500 0.4000 0.2000 T 0.4000 0.2500 0.1000 0.3000 cat seq2.txt ``` >Vitis_vinifera_chr14.trna15-AlaAGC (28776087-28776159) Ala (AGC) 73 bp Sc: 68.12 GGGGATGTAGCTCAGATGGTAGAGCGCTCGCTTAGCATGCGAGAGGTACGGGGATCGATA CCCCGCATCTCCA >Vitis_vinifera_chr13.trna5-ArgCCG (2691241-2691313) Arg (CCG) 73 bp Sc: 83.85 GATCGCATAGCGGAGTGGATATCGCGTTAGACTCCGAATCTAAAGGTCGTGGGTTCGAAT CCCACTGCGATCG >Vitis_vinifera_chr3.trna6-GlnCTG (5807449-5807520) Gln (CTG) 72 bp Sc: 71.93 GGTCCCATGGTCTAGTGGTCAGGACATTGGACTCTGAATCCAGTAACCCGAGTTCAAATC TCGGTGGGACCT >Vitis_vinifera_chr14.trna19-LeuAAG (25640120-25640040) Leu (AAG) 81 bp Sc: 62.71 GTGGAGATGGCCGAGTTGGTCTAAGGCGCCAGATTAAGGTTCTTGTCCGAAAGGGCGTGG GTTCAAATCCCACTCTCCACA >Vitis_vinifera_chr18.trna9-MetCAT (2896034-2896118) Met (CAT) 85 bp Sc: 60.66 GGGGTGGTGGCGCAGTTGGCTAGCGCGTAGGTCTCATAGCTTCCGAGTAATCCTGAGGTC GAGAGTTCGAGCCTCTCTCACCCCA >Vitis_vinifera_chr3.trna30-ProTGG (7498415-7498344) Pro (TGG) 72 bp Sc: 68.98 GGGCATTTGGTCTAGTGGTATGATTCTCGCTTTGGGTGCGAGAGGTCCCGAGTTCGATTC TCGGAATGACCC >Vitis_vinifera_chr5.trna13-GluTTC (21745120-21745048) Glu (TTC) 73 bp Sc: 36.67 AGTCCCATAGCCTAGTTGGTCGAGCACAAGGTTTTCAATCTTGTGGTCGTGGGTTCGAGC CCTATTGGTGGTT >Vitis_vinifera_chr5.trna3-TyrGTA (7422575-7422666) Tyr (GTA) 92 bp Sc: 33.68 CCGATCTTAACTCAATTGGTAGAGCAGAGGACCGTAGTGGGGTTGACCCAATAGATATCC TTAGGTCGTTAGTTTGAATCCAACAGGTCTAA >Vitis_vinifera_chr1.trna8-ValCAC (11396083-11396156) Val (CAC) 74 bp Sc: 66.86 GTCTAGGTGGTATAGTTGGTTATCACGCTAGTCTCACACACTAGAGGTCCCTAGTTCGAA CCCAGGCTCAGATA >Vitis_vinifera_chr14.trna2-SerTGA (4021381-4021462) Ser (TGA) 82 bp Sc: 80.82 GTCGATATGTCCGAGTGGTTAAGGAGACAGACTTGAAATCTGTTGGGCTTCGCCCGCGCA GGTTCGAACCCTGCTGTCGACG ``` In [16]: seq2 = readMultiSeq ( 'seq2.txt' ) In [17]: for i , seq in enumerate ( seq2 ): print ( f \"No. {i:>02} \\n {alignStr(seq, width=45)}\" ) No.00 GGGGATGTAGCTCAGATGGTAGAGCGCTCGCTTAGCATGCGAGAG GTACGGGGATCGATACCCCGCATCTCCA No.01 GATCGCATAGCGGAGTGGATATCGCGTTAGACTCCGAATCTAAAG GTCGTGGGTTCGAATCCCACTGCGATCG No.02 GGTCCCATGGTCTAGTGGTCAGGACATTGGACTCTGAATCCAGTA ACCCGAGTTCAAATCTCGGTGGGACCT No.03 GTGGAGATGGCCGAGTTGGTCTAAGGCGCCAGATTAAGGTTCTTG TCCGAAAGGGCGTGGGTTCAAATCCCACTCTCCACA No.04 GGGGTGGTGGCGCAGTTGGCTAGCGCGTAGGTCTCATAGCTTCCG AGTAATCCTGAGGTCGAGAGTTCGAGCCTCTCTCACCCCA No.05 GGGCATTTGGTCTAGTGGTATGATTCTCGCTTTGGGTGCGAGAGG TCCCGAGTTCGATTCTCGGAATGACCC No.06 AGTCCCATAGCCTAGTTGGTCGAGCACAAGGTTTTCAATCTTGTG GTCGTGGGTTCGAGCCCTATTGGTGGTT No.07 CCGATCTTAACTCAATTGGTAGAGCAGAGGACCGTAGTGGGGTTG ACCCAATAGATATCCTTAGGTCGTTAGTTTGAATCCAACAGGTCT AA No.08 GTCTAGGTGGTATAGTTGGTTATCACGCTAGTCTCACACACTAGA GGTCCCTAGTTCGAACCCAGGCTCAGATA No.09 GTCGATATGTCCGAGTGGTTAAGGAGACAGACTTGAAATCTGTTG GGCTTCGCCCGCGCAGGTTCGAACCCTGCTGTCGACG In [18]: # 学習させる。 model . fit ( sequences = seq2 , epochs = 2000 , verbose = False ) In [19]: import matplotlib.pyplot as plt In [20]: def plotHistory ( model ): \"\"\" 学習の過程をプロットする関数 \"\"\" plt . plot ( model . history ) plt . title ( f \"Mean Log Likelihood Transition (eoochs= {model.epoch} )\" ) plt . xlabel ( \"epochs\" ) plt . ylabel ( \"Mean Log Likelihood\" ) plt . show () In [21]: plotHistory ( model ) In [22]: model . params () 【Parameter】 ===================================== *initial state z(1) z(2) z(3) z(4) 0.1024 0.0000 0.8976 0.0000 ------------------------------------- *transition probability matrix [States after transition] z(1) z(2) z(3) z(4) z(1) 0.2819 0.7181 0.0000 0.0000 z(2) 0.0000 0.5670 0.0000 0.4330 z(3) 0.0521 0.0000 0.3415 0.6064 z(4) 0.5158 0.0000 0.0000 0.4842 ------------------------------------- *emission probability z(1) z(2) z(3) z(4) A 0.3436 0.3099 0.1059 0.0055 C 0.2538 0.0592 0.0970 0.4297 G 0.4026 0.4418 0.7971 0.0345 T 0.0000 0.1891 0.0000 0.5304 ※ 隠れ状態ごとにかなり偏った遷移を行なう。 また、 遷移行列の対角成分がそこまで大きい値では無い。 → 特定の構造が、 ある程度の長さのゆとりを持って 繰り返されていると予想される。 In [23]: pred2 = model . predict ( sequences = seq2 , asai = True ) In [24]: for i , pred in enumerate ( pred2 ): print ( f \"No. {i:>02} Hidden Indexes: \\n {alignStr(pred, width=45)}\" ) No.00 Hidden Indexes: 333334122244412241241222224412444124122412222 2411222224412224441241244441 No.01 Hidden Indexes: 334411241241222412241241124412244441224441222 2412412244412244412441122441 No.02 Hidden Indexes: 334441241244412412441222412412244441224441241 244412244412244441241222444 No.03 Hidden Indexes: 341222241244122441244412222244122441222444441 244122222241222244412244412444441241 No.04 Hidden Indexes: 333341241241122441244124112412244412412444441 2241244441222441222244412244444441244441 No.05 Hidden Indexes: 333412441244412412412224444124444122224122222 444412244412444441222412444 No.06 Hidden Indexes: 334441241244412441244122411222244444124444122 2412412244412244441241241244 No.07 Hidden Indexes: 341244441244412441241222412222241241241222441 244412412241244441224124412444122444124122444 12 No.08 Hidden Indexes: 344412241241222441244124112441244412411244122 22444441244412244412244412241 No.09 Hidden Indexes: 344124122444122412441222222412244412224441241 2244412444112412244412244441122441241 補足：上記プログラムにバグがないかの確認 Baum-Welchアルゴリズムが正しく実装できていたか、極端な配列を学習させることで確認します。 In [25]: model = HMM () model . load_params ( \"params3.json\" ) model . params () 【Parameter】 ============================== *initial state z(1) z(2) z(3) 0.7000 0.1000 0.2000 ------------------------------ *transition probability matrix [States after transition] z(1) z(2) z(3) z(1) 0.8000 0.1000 0.1000 z(2) 0.1000 0.8000 0.1000 z(3) 0.1000 0.1000 0.1000 ------------------------------ *emission probability z(1) z(2) z(3) A 0.4000 0.2500 0.1000 C 0.1000 0.2500 0.4000 G 0.1000 0.2500 0.4000 T 0.4000 0.2500 0.1000 In [26]: seq_extreme = readMonoSeq ( 'seq3.txt' ) In [27]: # かなり極端な配列の例で実装してみる。 print ( f \"Input Sequence: \\n {alignStr(seq_extreme[0])}\" ) Input Sequence: TCTTTTTCCTCCTCTCTCCTTTCCCTCTTTTCCCTTCTTCTCTCCCTTTTCCTTCTCTTC TCTCTTTTCTTCCCCTTTTCCTTTTCTCCTCCCTCCCTTTCTTCCCTCCTTCCTCCCCCC CTCCCCTTTCCTTCCTTTCTCCTTCTCCCCATATGGCCATTTACTTCAGCTGATAGACAC CGAGTAACAACAATAAAGCGTTAGGTGGACGAATGCTCTACTCTGACCTCTAGCTTGTGG GTTCGCGGCTTGCCGAACGCTGGCCTCTGCCCGTCGAACCAATAAATGTTTATCCAGGAC ACCCCGTTCTTTGGTGATATCCCTCGCTCGAGTTATAGCATTGAAACCTCCATATCCGGC GATAAGAGCTACGGACCGTATACTGGGCGCCGGTAATTGGTTGCACTCGCCCTCGGTCTT TTTCTTTTTGGTTTAGCAGAGCAAGGCGTGGAAAAGGAGAGAGGGAGAAAAGGGAAAGGG AAAAGAGGAGAAGAAAGAAAAAGGAAGGGGGGAAGAGGAGAGAAGGGAAGGGAAGGGGGA GAAAGAGGGAAAGAGGAGAAAAAAGGAGGGGGAAGAAGGAAGGGGGAAAGGGGGGGAAAG 上の配列は、以下の構造を持っていることがわかります。 index type 1~150 pyrimidine base 151~450 both 451~600 purine base In [28]: model . fit ( sequences = seq_extreme , epochs = 100 , verbose = False ) In [29]: plotHistory ( model ) In [30]: model . params () 【Parameter】 ============================== *initial state z(1) z(2) z(3) 1.0000 0.0000 0.0000 ------------------------------ *transition probability matrix [States after transition] z(1) z(2) z(3) z(1) 0.9933 0.0000 0.0067 z(2) 0.0000 1.0000 0.0000 z(3) 0.0000 0.0033 0.9967 ------------------------------ *emission probability z(1) z(2) z(3) A 0.0000 0.4851 0.2199 C 0.5034 0.0000 0.2627 G 0.0000 0.5149 0.2415 T 0.4966 0.0000 0.2760 In [31]: pred_extreme = model . predict ( sequences = seq_extreme ) In [32]: print ( f \"Hidden Indexes: \\n {alignStr(pred_extreme[0])}\" ) Hidden Indexesうまく傾向をつかんでいることから、学習アルゴリズムに大きな誤りはなさそうです。 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-4.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-4.html"},{"title":"生物統計論 第1回","text":"講師： 木立尚孝 講義概要 09/27 (Fri) 10:25-12:10 10/04 (Fri) 10:25-12:10 10/11 (Fri) 10:25-12:10 10/18 (Fri) 10:25-12:10 10/25 (Fri) 10:25-12:10 11/08 (Fri) 10:25-12:10 11/15 (Fri) 10:25-11:30(Lecture) / 11:30-12:10: (Test) Section1.1 STATISTICAL ANALYSIS Genomic data has recently become available, so the analyzing methods still its infancy at the century scale. It is very important how much information can be extracted from genomic and other omic data. Data-driven Research Development of measurement, communication, computing technologies. data science, e-science Statistics, computer skill, artificial intelligence, machine learning. Statistical Analysis Subjects and measurements are often conclude the random events , such as noise. Aiming for finding the \"True\" distribution, and inferencing on that distribution. Power of Statistical Methods Amount of information we can extract \"Many and high\" / \"Few or low\" quality Event infinite number of data cannot answer all questions. ex) we couldn't answer \"what is the number of eyes on the next dice.\" Data dependency. Section1.2 PROBABILITY DEFINITIONS Probability: Mathematical Probability: The probability of an event consisting of n out of m possible equally likely occurrences, defined to be n / m Statistical Probability: Each event is random, but if you repeat it a lot, you can see the probability that each event occurs. Subjective Probability: A type of probability derived from an individual's personal judgment or own experience about whether a specific outcome is likely to occur. ※ Mathematical Probability is the most strict and basic. Probability space \\(\\left(\\Omega, E, P\\right)\\) $$\\begin{aligned}&\\Omega: \\text{Set, Samplemspace}\\\\&E: \\text{Events,}\\sigma\\text{-algebra}\\\\&P: \\text{Probability measure}\\end{aligned}$$ Sample Space The sets of elementary events. ex.) The number of eyes on the dice. All possible genomes. All possible gene expression profiles \\(\\omega_i\\in\\Omega\\) is the identifier of possible individual stochastic phenomena. \\(\\sigma\\) -algebra $$ \\begin{aligned} &\\varepsilon= \\left\\{E_1,E_2,\\cdots|E_i\\subseteq\\Omega:\\text{event}:\\sigma\\text{-algebra} \\right\\}\\\\ &\\Rightarrow \\varnothing,\\Omega,\\left(E_i\\setminus E_j\\right),\\left(\\bigcup_{i=1}&#94;{\\infty}E_i\\right),\\left(\\bigcap_{i=1}&#94;{\\infty}E_i\\right)\\in\\varepsilon \\end{aligned} $$ The sets of Events. Each event \\(E_i\\subseteq\\Omega\\) Include Empty set \\(\\varnothing\\) , universal set \\(\\Omega\\) Closure to variable \"Set Operation\". (ex. Union, intersection, complement) example) discrete set Real set Power set Borel set \\(\\mathcal{A}\\) Probability measure $$\\begin{aligned}&\\mathbb{P} : \\mathcal{E} \\rightarrow \\mathbb{R} \\\\& 0 \\leq \\mathbb{P}(E) \\leq 1, E \\in \\mathcal{E} \\\\&\\mathbb{P}(\\Omega)=1, \\mathbb{P}(\\varnothing)=0 \\\\&\\text { For } E_{1}, E_{2}, \\cdots \\in \\mathcal{E}, \\text{ s.t. } E_{i} \\cap E_{j}=\\varnothing, \\forall i \\neq j \\\\&\\mathbb{P}\\left(\\bigcup_{i=1}&#94;{\\infty} E_{i}\\right)=\\sum_{i=1}&#94;{\\infty} \\mathbb{P}\\left(E_{i}\\right)\\end{aligned}$$ Each event is assigned a value that indicates the likelihood or probability of occurrence. Random variable $$\\begin{aligned}X: &\\text{random variable}\\\\\\Leftrightarrow &X : \\Omega \\rightarrow \\mathbb{R} \\\\ &\\text { s.t. } X&#94;{-1}(A) \\in \\mathcal{E}, \\forall A \\in \\mathcal{A} \\\\&X&#94;{-1}(A) :=\\{\\omega \\in \\Omega \\mid X(\\omega) \\in A\\}\\end{aligned}$$ Section1.3 PROBABILITY TERMS AND PROPERTIES Probability distribution function \\(F_x\\) (cumulative distribution) Probability density function \\(f_x\\) $$F_x\\left(x+dx\\right)-F_x\\left(x\\right)=:f_x(x)dx$$ Conditional Probability Joint Probability distribution $$(X,Y): \\Omega\\rightarrow\\mathbb{R}&#94;2; (X,Y)(\\omega) = \\left(X(\\omega),Y(\\omega)\\right)\\\\\\left(X,Y\\right)&#94;{-1}(A) = \\left\\{\\omega\\in\\Omega|\\left(X(\\omega),Y(\\omega)\\right)\\in A\\right\\}$$ Independent random variables Expected Value Variance Covariance: $$\\begin{cases}X,Y: \\text{independent random variables}\\Rightarrow \\mathrm{Cov}(X,Y) = 0\\\\X,Y: \\text{independent random variables}\\not\\Leftarrow \\mathrm{Cov}(X,Y) = 0 \\end{cases}$$ Indicator Function: $$\\mathbb{I}_A(x)=\\begin{cases}1 & x\\in A\\\\0 & x\\notin A\\end{cases},A\\in\\mathcal{A}$$ Marginalization Section1.4 PROBABILITY DISTRIBUTIONS Look Here!! if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物統計論","url":"https://iwasakishuto.github.io/University/3A/生物統計論-1.html","loc":"https://iwasakishuto.github.io/University/3A/生物統計論-1.html"},{"title":"生物統計論 第0回","text":"Section1.4 PROBABILITY DISTRIBUTIONS In [1]: import numpy as np import collections import matplotlib.pyplot as plt In [2]: N = 100000 Bernoulli Distribution In [3]: def BernoulliVar ( q , N , seed = None ): rng = np . random . RandomState ( seed ) if seed is not None else np . random return np . var ( rng . rand ( N ) < q ) In [4]: qs = np . linspace ( 0 , 1 , 1000 ) In [5]: probs = [ BernoulliVar ( q , N ) for q in qs ] In [6]: plt . title ( \"Bernoulli distribution\" ) plt . plot ( qs , probs , label = \"$Var(X)$\" ) plt . xlabel ( \"q\" ) plt . ylabel ( \"$Var(X)$\" ) plt . legend () plt . show () Binomial Distribution In [7]: def BinomialProb ( n , p , N , seed = None , color = None , ax = None ): if ax == None : fig , ax = plt . subplots () rng = np . random . RandomState ( seed ) if seed is not None else np . random counter = collections . Counter ( rng . binomial ( n , p , N )) count , freqs = zip ( * sorted ( counter . most_common ())) probs = [ freq / N for freq in freqs ] ax . plot ( count , probs , color = color , label = f \"p= {p} and n= {n} \" ) ax . scatter ( count , probs , color = color ) return ax In [8]: ax = BinomialProb ( 20 , 0.5 , N , seed = 0 , color = \"blue\" ) ax = BinomialProb ( 20 , 0.7 , N , seed = 0 , color = \"green\" , ax = ax ) ax = BinomialProb ( 40 , 0.5 , N , seed = 0 , color = \"red\" , ax = ax ) plt . legend () plt . show () Normal Distribution In [9]: from scipy import stats In [10]: def NormalProb ( mu , sigma ): X = np . arange ( mu - 3.5 * sigma , mu + 3.5 * sigma , sigma / 50 ) Y = stats . norm . pdf ( X , mu , sigma ) for i in np . arange ( - 3 , 4 , 1 ): idx = np . argmin ( abs ( X - ( mu + i * sigma ))) plt . plot ([ X [ idx ], X [ idx ]], [ 0 , Y [ idx ]], 'k-' ) plt . scatter ( X [ idx ], Y [ idx ], color = \"black\" ) plt . plot ( X , Y , color = \"black\" ) In [11]: NormalProb ( mu = 0 , sigma = 0.1 ) Multivariate Normal Distribution In [12]: from scipy.stats import multivariate_normal In [13]: x , y = np . mgrid [ - 3 : 3.5 : . 01 , - 3 : 3 : . 01 ] pos = np . dstack (( x , y )) rv = multivariate_normal ([ 0.5 , - 0.2 ], [[ 2.0 , 2.3 ], [ 0.3 , 0.8 ]]) plt . contourf ( x , y , rv . pdf ( pos )) plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物統計論","url":"https://iwasakishuto.github.io/University/3A/生物統計論-0.html","loc":"https://iwasakishuto.github.io/University/3A/生物統計論-0.html"},{"title":"HMMのスケーリング","text":"HMMを実装する際に課題となるのが、forward-algorithm で \\(\\alpha\\) を再帰的に求める際に、 \\(\\alpha\\left(\\mathbf{z}_{n-1}\\right)\\) に \\(p(\\mathbf{z}_n|\\mathbf{z}_{n-1})\\) と \\(p(\\mathbf{x}_n|\\mathbf{z}_n)\\) をかけるため、値が非常に小さくなり、計算機の ダイナミックレンジ を超えてしまうことです。 そこで、ここでは \\(\\alpha\\left(\\mathbf{z}_{n}\\right)\\) と \\(\\beta\\left(\\mathbf{z}_{n}\\right)\\) にスケーリングを施し、それらの値が \\(1\\) のオーダーに止まるようにする手法を説明します。 forward-backward \\(\\alpha,\\beta\\) forward-backward algorithm で用いられていた \\(\\alpha,\\beta\\) は以下のように定義されていました。 $$ \\begin{aligned} \\alpha\\left(\\mathbf{z}_{n}\\right) & \\equiv p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}, \\mathbf{z}_{n}\\right) & (13.34)\\\\ \\beta\\left(\\mathbf{z}_{n}\\right) & \\equiv p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right) & (13.35) \\end{aligned} $$ Scaling factors まず、スケーリングされた \\(\\alpha,\\beta\\) は以下のように表されます。スケーリングによって、 \\(\\alpha\\) は高々 \\(K\\) 個の変数上の確率分布 、 \\(\\beta\\) は2つの条件付き確率の比 になることがわかります。 $$ \\begin{aligned} \\widehat{\\alpha}\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)=\\frac{\\alpha\\left(\\mathbf{z}_{n}\\right)}{p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)} & (13.55)\\\\ \\widehat{\\beta}\\left(\\mathbf{z}_{n}\\right) &=\\frac{p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right)}{p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)}=\\frac{\\beta\\left(\\mathbf{z}_{n}\\right)}{p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)} & (13.61) \\end{aligned} $$ ここで、これらと \\(\\alpha,\\beta\\) を関連付けるためのスケーリング係数 \\(c\\) を導入します。 $$ c_{n}=p\\left(\\mathbf{x}_{n} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1}\\right)\\qquad (13.56) $$ すると、 $$ \\begin{aligned} p\\left(\\mathbf{x}_1,\\ldots,\\mathbf{x}_n\\right) &= p\\left(\\mathbf{x}_n | \\mathbf{x}_1,\\ldots,\\mathbf{x}_{n-1}\\right)\\cdots p\\left(\\mathbf{x}_3 | \\mathbf{x}_1,\\mathbf{x}_{2}\\right)p\\left(\\mathbf{x}_2 | \\mathbf{x}_1\\right)p(\\mathbf{x}_1)\\\\ &= c_n\\cdots c_3c_2c_1\\\\ &= \\prod_{m=1}&#94;{n} c_{m} \\end{aligned}\\qquad (13.58) $$ と展開することができるので、 $$ \\begin{aligned} \\alpha\\left(\\mathbf{z}_{n}\\right)&=p\\left(\\mathbf{z}_{n} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right) p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)=\\left(\\prod_{m=1}&#94;{n} c_{m}\\right) \\widehat{\\alpha}\\left(\\mathbf{z}_{n}\\right) & (13.58)\\\\ \\beta\\left(\\mathbf{z}_{n}\\right)&=p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)\\widehat{\\beta}\\left(\\mathbf{z}_{n}\\right) = \\left(\\prod_{m=n+1}&#94;{N} c_{m}\\right) \\widehat{\\beta}\\left(\\mathbf{z}_{n}\\right) & (13.60) \\end{aligned} $$ と対応関係がわかります。 \\(\\gamma,\\xi\\) 続いて、 \\(\\gamma,\\xi\\) と \\(\\widehat{\\alpha},\\widehat{\\beta}\\) の対応関係を求めます。 \\(\\alpha,\\beta\\) \\(\\alpha,\\beta\\) を用いると、以下のように表されていました。 $$ \\begin{aligned} \\gamma\\left(\\mathbf{z}_{n}\\right) &= \\frac{\\alpha\\left(\\mathbf{z}_{n}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} & (13.33)\\\\ \\xi\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right) &=\\frac{\\alpha\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} &(13.43) \\end{aligned}$$ \\(\\widehat{\\alpha},\\widehat{\\beta}\\) 先の対応関係を用いれば、 \\(\\widehat{\\alpha},\\widehat{\\beta}\\) を用いると、 $$ \\begin{aligned} \\gamma\\left(\\mathbf{z}_{n}\\right) &=\\widehat{\\alpha}\\left(\\mathbf{z}_{n}\\right) \\widehat{\\beta}\\left(\\mathbf{z}_{n}\\right) & (13.64)\\\\ \\xi\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right) &=\\left(c_{n}\\right)&#94;{-1} \\widehat{\\alpha}\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) \\widehat{\\beta}\\left(\\mathbf{z}_{n}\\right) & (13.65) \\end{aligned} $$ と表されることがわかります。 Recursion 最後に、再帰式の対応関係も求めます。 \\(\\alpha,\\beta\\) $$ \\begin{aligned} \\alpha\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} \\alpha\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) & (13.36)\\\\ \\alpha\\left(\\mathbf{z}_{1}\\right) &=p\\left(\\mathbf{x}_{1}, \\mathbf{z}_{1}\\right)=p\\left(\\mathbf{z}_{1}\\right) p\\left(\\mathbf{x}_{1} | \\mathbf{z}_{1}\\right)=\\prod_{k=1}&#94;{K}\\left\\{\\pi_{k} p\\left(\\mathbf{x}_{1} | \\boldsymbol{\\phi}_{k}\\right)\\right\\}&#94;{z_{1 k}} & (13.37)\\\\ \\beta\\left(\\mathbf{z}_{n}\\right) &=\\sum_{\\mathbf{z}_{n+1}} \\beta\\left(\\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{x}_{n+1} | \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) & (13.38)\\\\ \\beta\\left(\\mathbf{z}_{N}\\right) &= \\frac{\\gamma\\left(\\mathbf{z}_N\\right)p\\left(\\mathbf{X}\\right)}{\\alpha\\left(\\mathbf{z}_N\\right)} = \\frac{p\\left(\\mathbf{z}_{N} | \\mathbf{X}\\right)p(\\mathbf{X})}{p\\left(\\mathbf{X}, \\mathbf{z}_{N}\\right)} = 1 & (13.30) \\end{aligned} $$ \\(\\widehat{\\alpha},\\widehat{\\beta}\\) $$ \\begin{aligned} c_{n} \\widehat{\\alpha}\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} \\widehat{\\alpha}\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) & (13.58)\\\\ \\widehat{\\alpha}\\left(\\mathbf{z}_{1}\\right) &=p\\left(\\mathbf{z}_{1}| \\mathbf{x}_{1}\\right)=\\frac{p\\left(\\mathbf{z}_{1}\\right)p\\left(\\mathbf{x}_{1}| \\mathbf{z}_{1}\\right)}{p\\left(\\mathbf{x}_{1}\\right)} = \\frac{\\prod_{k=1}&#94;{K}\\left\\{\\pi_{k} p\\left(\\mathbf{x}_{1} | \\boldsymbol{\\phi}_{k}\\right)\\right\\}&#94;{z_{1 k}}}{p\\left(\\mathbf{x}_{1}\\right)}\\\\ c_{n+1} \\widehat{\\beta}\\left(\\mathbf{z}_{n}\\right) &=\\sum_{\\mathbf{z}_{n+1}} \\widehat{\\beta}\\left(\\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{x}_{n+1} | \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) &(13.62)\\\\ \\widehat{\\beta}\\left(\\mathbf{z}_{N}\\right) &= \\frac{\\gamma\\left(\\mathbf{z}_N\\right)}{\\widehat{\\alpha}\\left(\\mathbf{z}_N\\right)} = \\frac{p\\left(\\mathbf{z}_{N} | \\mathbf{X}\\right)}{p\\left(\\mathbf{z}_{n} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)} = 1 & (13.30) \\end{aligned} $$ なお、ここで \\((13.58)\\) でどのようにして \\(c_n\\) を求めるかですが、 $$ \\begin{aligned} \\mathrm{R.H.S}\\ (13.58) &= p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} \\widehat{\\alpha}\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right)\\\\ &= p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}}p\\left(\\mathbf{z}_{n-1}|\\mathbf{x}_1,\\ldots,\\mathbf{x}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right)\\\\ &= p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n}|\\mathbf{x}_1,\\ldots,\\mathbf{x}_{n-1}\\right)\\\\ &=p\\left(\\mathbf{x}_{n},\\mathbf{z}_{n}|\\mathbf{x}_1,\\ldots,\\mathbf{x}_{n-1}\\right) \\end{aligned} $$ となることから、 \\((13.58)\\) の右辺を \\(\\mathbf{z}_n\\) について周辺化すれば、 $$\\sum_{\\mathbf{z}_{n}}p\\left(\\mathbf{x}_{n},\\mathbf{z}_{n}|\\mathbf{x}_1,\\ldots,\\mathbf{x}_{n-1}\\right) = p\\left(\\mathbf{x}_{n}|\\mathbf{x}_1,\\ldots,\\mathbf{x}_{n-1}\\right) = c_n$$ となるので、 \\(c_n\\) が求められることがわかります。 おまけ（尤度関数） 尤度関数はスケーリング係数 \\(c\\) を用いるだけで簡単に求められることがわかります。 $$p(\\mathbf{X})=\\prod_{n=1}&#94;{N} c_{n}\\qquad (13.63)$$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-3.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-3.html"},{"title":"HMMの最尤推定の計算過程","text":"ここでは、 HMMの最尤推定 で省略した計算過程について記述します。 \\(Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\) $$ \\begin{aligned} p(\\mathbf{X}, \\mathbf{Z} | \\boldsymbol{\\theta})&=p\\left(\\mathbf{z}_{1} | \\boldsymbol{\\pi}\\right)\\left[\\prod_{n=2}&#94;{N} p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}, \\mathbf{A}\\right)\\right] \\prod_{m=1}&#94;{N} p\\left(\\mathbf{x}_{m} | \\mathbf{z}_{m}, \\boldsymbol{\\phi}\\right)\\qquad (13.10)\\\\ &=\\prod_{k=1}&#94;{K} \\pi_{k}&#94;{z_{1 k}}\\left[ \\prod_{n=2}&#94;{N}\\prod_{k=1}&#94;{K} \\prod_{j=1}&#94;{K} A_{j k}&#94;{z_{n-1, j} z_{n k}} \\right] \\prod_{m=1}&#94;{N}\\prod_{i=1}&#94;{D} \\prod_{k=1}&#94;{K} \\phi_{i k}&#94;{x_{ni} z_{nk}}\\\\ \\therefore\\ln p(\\mathbf{X}, \\mathbf{Z} | \\boldsymbol{\\theta}) &=\\sum_{k=1}&#94;Kz_{1k}\\ln\\pi_k\\left[\\sum_{n=2}&#94;N\\sum_{k=1}&#94;K\\sum_{j=1}&#94;Kz_{n-1,j}z_{nk}\\ln A_{jk}\\right]\\sum_{m=1}&#94;N\\sum_{i=1}&#94;D\\sum_{k=1}&#94;Kx_{ni}z_{nk}\\ln\\phi_{ik} \\end{aligned} $$ であるから、これを \\((13.12)\\) に代入して、 $$ \\begin{aligned} Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)=&\\sum_{\\mathbf{Z}} p\\left(\\mathbf{Z} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right) \\ln p(\\mathbf{X}, \\mathbf{Z} | \\boldsymbol{\\theta})\\qquad (13.12)\\\\ =& \\sum_{\\mathbf{Z}} p\\left(\\mathbf{Z} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\sum_{k=1}&#94;Kz_{1k}\\ln\\pi_k+\\sum_{\\mathbf{Z}} p\\left(\\mathbf{Z} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\sum_{n=2}&#94;N\\sum_{k=1}&#94;K\\sum_{j=1}&#94;Kz_{n-1,j}z_{nk}\\ln A_{jk}\\\\ &+\\sum_{\\mathbf{Z}} p\\left(\\mathbf{Z} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\sum_{m=1}&#94;N\\sum_{i=1}&#94;D\\sum_{k=1}&#94;Kx_{ni}z_{nk}\\ln\\phi_{ik} \\end{aligned} $$ ここで、 \\(\\sum_{\\mathbf{Z}} = \\sum_{\\mathbf{z_1},\\mathbf{z_2},\\ldots,\\mathbf{z_N}}\\) なので、それぞれ 関係の無い部分を周辺化 でき、 $$ \\begin{aligned} Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)=& \\sum_{k=1}&#94;K\\sum_{\\mathbf{z_1}} p\\left(\\mathbf{z_1} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)z_{1k}\\ln\\pi_k+\\sum_{n=2}&#94;N\\sum_{k=1}&#94;K\\sum_{j=1}&#94;K\\sum_{\\mathbf{z_{n-1},z_n}}p\\left(\\mathbf{z_{n-1},z_n} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)z_{n-1,j}z_{nk}\\ln A_{jk}\\\\ &+\\sum_{m=1}&#94;N\\sum_{i=1}&#94;D\\sum_{k=1}&#94;K\\sum_{\\mathbf{z_n}}p\\left(\\mathbf{z_n} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)x_{ni}z_{nk}\\ln\\phi_{ik}\\\\ \\end{aligned}$$ となります。また、 \\(\\gamma,\\xi\\) の定義 を用いることで $$\\begin{aligned} Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)=& \\sum_{k=1}&#94;K\\left(\\sum_{\\mathbf{z_1}} \\gamma\\left(\\mathbf{z}_1\\right)z_{1k}\\right)\\ln\\pi_k+\\sum_{n=2}&#94;N\\sum_{k=1}&#94;K\\sum_{j=1}&#94;K\\left(\\sum_{\\mathbf{z_{n-1},z_n}}\\xi\\left(\\mathbf{z_{n-1},z_{n}}\\right) z_{n-1,j}z_{nk}\\right)\\ln A_{jk}\\\\ &+\\sum_{m=1}&#94;N\\sum_{i=1}&#94;D\\sum_{k=1}&#94;K\\left(\\sum_{\\mathbf{z_n}}\\gamma\\left(\\mathbf{z}_n\\right)x_{ni}z_{nk}\\right)\\ln\\phi_{ik} \\end{aligned} $$ と書き直せます。この時、潜在変数が離散なので、 \\(\\gamma,\\xi\\) はそれぞれ和が \\(1\\) となる \\(K,\\left(K\\times K\\right)\\) 個の非負の数の集合を用いて以下のように記述できます。 $$ \\begin{aligned} \\gamma\\left(z_{n k}\\right) &=\\sum_{\\mathbf{z}} \\gamma(\\mathbf{z}) z_{n k} &(13.15)\\\\ \\xi\\left(z_{n-1, j}, z_{n k}\\right) &=\\sum_{\\mathbf{z}} \\gamma(\\mathbf{z}) z_{n-1, j} z_{n k} &(13.16)\\end{aligned} $$ したがって、これらを用いて上記の式を書き直すと、 $$ \\begin{aligned} Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\mathrm{old}}\\right)=& \\sum_{k=1}&#94;{K} \\gamma\\left(z_{1 k}\\right) \\ln \\pi_{k}+\\sum_{n=2}&#94;{N} \\sum_{j=1}&#94;{K} \\sum_{k=1}&#94;{K} \\xi\\left(z_{n-1, j}, z_{n k}\\right) \\ln A_{j k} \\\\ &+\\sum_{n=1}&#94;{N} \\sum_{k=1}&#94;{K}\\gamma\\left(z_{n k}\\right) \\sum_{i=1}&#94;Dx_{ni} \\ln \\phi_{i k} \\end{aligned}\\qquad (13.17) $$ Maximization step ここでは、上記の \\(Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\mathrm{old}}\\right)\\) 関数を各パラメータ \\(\\boldsymbol{\\theta}\\) に関して最大化する際の ラグランジュの未定乗数法 を書き下します。 \\(\\boldsymbol{\\pi}\\) $$ \\begin{aligned} L\\left(\\boldsymbol{\\pi},\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text { old }}\\right) &= \\sum_{k=1}&#94;{K} \\gamma\\left(z_{1 k}\\right) \\ln \\pi_{k} + \\lambda_1\\left(\\sum_{k=1}&#94;K\\pi_k - 1\\right)\\\\ \\frac{\\partial L}{\\partial \\pi_k}&=\\frac{\\gamma\\left(z_{1 k}\\right)}{\\pi_k} + \\lambda_1 = 0\\quad \\therefore \\pi_k = -\\frac{\\gamma\\left(z_{1 k}\\right)}{\\lambda_1}\\\\ \\frac{\\partial L}{\\partial \\lambda_1}&=\\sum_{k=1}&#94;K\\pi_k - 1 = 0\\quad \\therefore\\lambda_1 = -\\sum_{k=1}&#94;K\\gamma\\left(z_{1 k}\\right)\\\\ \\therefore\\pi_k&#94;{\\star} &= \\frac{\\gamma\\left(z_{1 k}\\right)}{\\sum_{j=1}&#94;{K} \\gamma\\left(z_{1 j}\\right)} \\end{aligned} $$ \\(\\boldsymbol{A}\\) $$\\begin{aligned} L\\left(\\boldsymbol{A},\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text { old }}\\right) & = \\sum_{n=2}&#94;{N} \\sum_{j=1}&#94;{K} \\sum_{k=1}&#94;{K} \\xi\\left(z_{n-1, j}, z_{n k}\\right) \\ln A_{j k} + \\sum_{j=1}&#94;K\\lambda_{2,j}\\left(\\sum_{k=1}&#94;K A_{jk} - 1\\right)\\\\ \\frac{\\partial L}{\\partial A_{jk}} &= \\sum_{n=2}&#94;{N}\\frac{\\xi\\left(z_{n-1, j}, z_{n k}\\right)}{A_{jk}} + \\lambda_{2,j} = 0\\quad \\therefore A_{jk} = -\\frac{\\sum_{n=2}&#94;N\\xi\\left(z_{n-1, j}, z_{n k}\\right)}{\\lambda_{2,j}}\\\\ \\frac{\\partial L}{\\partial \\lambda_{2,j}} &= \\sum_{k=1}&#94;K A_{jk} - 1 = 0\\quad \\therefore \\lambda_{2,j} = -\\sum_{k=1}&#94;K\\sum_{n=2}&#94;N\\xi\\left(z_{n-1, j}, z_{n k}\\right)\\\\ \\therefore A_{jk}&#94;{\\star}&=\\frac{\\sum_{n=2}&#94;{N} \\xi\\left(z_{n-1, j}, z_{n k}\\right)}{\\sum_{l=1}&#94;{K} \\sum_{n=2}&#94;{N} \\xi\\left(z_{n-1, j}, z_{n l}\\right)} \\end{aligned}$$ \\(\\boldsymbol{\\phi}\\) $$\\begin{aligned} L\\left(\\boldsymbol{\\phi},\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text { old }}\\right) & = \\sum_{n=1}&#94;{N} \\sum_{k=1}&#94;{K}\\gamma\\left(z_{n k}\\right) \\sum_{i=1}&#94;Dx_{ni} \\ln \\phi_{i k} + \\sum_{k=1}&#94;K\\lambda_{3,k}\\left( \\sum_{i=1}&#94;D\\phi_{ik} - 1\\right)\\\\ \\frac{\\partial L}{\\partial\\phi_{ik}} &= \\frac{\\sum_{n=1}&#94;N\\gamma\\left(z_{n k}\\right)x_{ni}}{\\phi_{ik}} + \\lambda_{3,k}=0\\quad \\therefore \\phi_{ik} = -\\frac{\\sum_{n=1}&#94;N\\gamma\\left(z_{n k}\\right)x_{ni}}{\\lambda_{3,k}}\\\\ \\frac{\\partial L}{\\partial\\lambda_{3,k}} &= \\sum_{i=1}&#94;D\\phi_{ik} - 1 = 0 \\quad \\therefore \\lambda_{3,k} = -\\sum_{i=1}&#94;D\\sum_{n=1}&#94;N\\gamma\\left(z_{n k}\\right)x_{ni} = -\\sum_{i=1}&#94;D\\gamma\\left(z_{n k}\\right)\\\\ \\therefore \\phi_{ik}&#94;{\\star} &= \\frac{\\sum_{n=1}&#94;N\\gamma\\left(z_{n k}\\right)x_{ni}}{\\sum_{i=1}&#94;D\\gamma\\left(z_{n k}\\right)} \\end{aligned}$$ Expectation step $$ \\begin{aligned} \\gamma\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right) &(13.13)\\\\ \\xi\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right) &(13.14)\\\\ \\alpha\\left(\\mathbf{z}_{n}\\right) & \\equiv p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}, \\mathbf{z}_{n}\\right) & (13.34)\\\\ \\beta\\left(\\mathbf{z}_{n}\\right) & \\equiv p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right) & (13.35)\\\\ \\end{aligned} $$ forward-algorithm \\((\\alpha)\\) $$\\begin{aligned} \\alpha\\left(\\mathbf{z}_{n}\\right) & =p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}, \\mathbf{z}_{n}\\right) \\\\ & =p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n}\\right) \\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n}\\right) \\quad (\\because \\text{conditional independence})\\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1}, \\mathbf{z}_{n}\\right) \\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1}, \\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right) \\quad (\\because \\text{demarginalization})\\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1}, \\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n-1}\\right) \\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1} | \\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n-1}\\right) \\quad (\\because \\text{conditional independence})\\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1}, \\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) \\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} \\alpha(\\mathbf{z}_{n-1})p(\\mathbf{z} | \\mathbf{z}_{n-1})\\\\ \\end{aligned}$$ backward-algorithm \\((\\beta)\\) $$\\begin{aligned} \\beta\\left(\\mathbf{z}_{n}\\right) & =p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right) \\\\ & =\\sum_{\\mathbf{z}_{n+1}} p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N}, \\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) \\quad (\\because \\text{demarginalization})\\\\ & =\\sum_{\\mathbf{z}_{n+1}} p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}, \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) \\\\ & =\\sum_{\\mathbf{z}_{n+1}} p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) \\quad (\\because \\text{conditional independence})\\\\ & =\\sum_{\\mathbf{z}_{n+1}} p\\left(\\mathbf{x}_{n+2}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{x}_{n+1} | \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) \\quad (\\because \\text{conditional independence})\\\\ & =\\sum_{\\mathbf{z}_{n+1}} \\beta(\\mathbf{z}_{n+1})p(\\mathbf{x}_{n+1}|\\mathbf{z}_{n+1})p(\\mathbf{z}_{n+1}|\\mathbf{z}_n)\\qquad (13.38) \\end{aligned}$$ \\(\\gamma,\\xi\\) $$ \\begin{aligned} \\gamma\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n} | \\mathbf{X}\\right)=\\frac{p\\left(\\mathbf{X} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})}\\quad (\\because \\text{Bayes' theorem}) &(13.32)\\\\ &=\\frac{p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}, \\mathbf{z}_{n}\\right) p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} \\quad (\\because \\text{conditional independence})\\\\ &= \\frac{\\alpha\\left(\\mathbf{z}_{n}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} & (13.33) \\end{aligned} $$ $$\\begin{aligned} \\xi\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n} | \\mathbf{X}\\right) \\\\ &=\\frac{p(\\mathbf{X} | \\mathbf{z}_{n-1}, \\mathbf{z}_{n}) p\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} \\quad (\\because \\text{Bayes' theorem})\\\\ &=\\frac{p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1} | \\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n-1}\\right)}{p(\\mathbf{X})} \\quad (\\because \\text{conditional independence})\\\\ &=\\frac{\\alpha\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) \\beta\\left(\\mathbf{x}_{n}\\right)}{p(\\mathbf{X})}\\qquad (13.43) \\end{aligned}$$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-2.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-2.html"},{"title":"HMMの最尤推定","text":"※ かなり導出部分を省略しています。導出は適宜 HMMの最尤推定の計算過程 を参照してください。 隠れマルコフモデルは、一般に以下の式で表されます。 $$ p(\\mathbf{X}, \\mathbf{Z} | \\boldsymbol{\\theta})=p\\left(\\mathbf{z}_{1} | \\boldsymbol{\\pi}\\right)\\left[\\prod_{n=2}&#94;{N} p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}, \\mathbf{A}\\right)\\right] \\prod_{m=1}&#94;{N} p\\left(\\mathbf{x}_{m} | \\mathbf{z}_{m}, \\boldsymbol{\\phi}\\right)\\qquad (13.10) $$ \\(\\mathbf{X} = \\{\\mathbf{x}_1,\\ldots,\\mathbf{x}_N\\}\\) : \\(\\mathbf{Z} = \\{\\mathbf{z}_1,\\ldots,\\mathbf{z}_N\\}\\) \\(\\boldsymbol{\\theta}=\\{\\boldsymbol{\\pi}, \\mathbf{A}, \\boldsymbol{\\phi}\\}\\) ※ 一般に放出確率 \\(p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}, \\boldsymbol{\\phi}\\right)\\) は、 二値のベクトル \\(\\mathbf{z}_n\\) の \\(K\\) 個の可能な状態に対応した \\(K\\) 個の要素を持つベクトルからなる任意の分布 $$ p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}, \\phi\\right)=\\prod_{k=1}&#94;{K} p\\left(\\mathbf{x}_{n} | \\phi_{k}\\right)&#94;{z_{n k}}\\qquad (13.9) $$ を考えることも可能ですが、今回は下記の離散多項分布を考えます。 Name Probability Conditional Distribution initial state \\(\\pi_{k} \\equiv p\\left(z_{1 k}=1\\right)\\) \\(p\\left(\\mathbf{z}_{1} \\mid \\boldsymbol{\\pi}\\right)=\\prod_{k=1}&#94;{K} \\pi_{k}&#94;{z_{1 k}}\\quad (13.8)\\) transition probability \\(A_{j k} \\equiv p\\left(z_{n k}=1\\mid z_{n-1, j}=1\\right)\\) \\(p\\left(\\mathbf{z}_{n} \\mid \\mathbf{z}_{n-1}, \\mathbf{A}\\right)=\\prod_{k=1}&#94;{K} \\prod_{j=1}&#94;{K} A_{j k}&#94;{z_{n-1, j} z_{n k}}\\quad (13.7)\\) emission probability \\(\\phi_{i k}\\equiv p\\left(x_{n i}=1 \\mid z_{n k}=1\\right)\\) \\(p(\\mathbf{x}_n \\mid \\mathbf{z}_n, \\boldsymbol{\\phi})=\\prod_{i=1}&#94;{D} \\prod_{k=1}&#94;{K} \\phi_{i k}&#94;{x_{ni} z_{nk}}\\quad (13.22)\\) 尤度関数 ここで、データ集合 \\(\\mathbf{X}\\) が観測された際に、上記の同時分布を潜在変数 \\(\\mathbf{Z}\\) について周辺化することで、尤度関数は以下のように記述されます。 $$ p(\\mathbf{X} | \\boldsymbol{\\theta})=\\sum_{\\mathbf{Z}} p(\\mathbf{X}, \\mathbf{Z} | \\boldsymbol{\\theta})\\qquad (13.11) $$ しかし、この尤度関数は \\(n\\) について分解できない（ \\(\\mathbf{z}_n\\) ）ごとに和を取れないので、 条件付き独立 の性質を活かして 尤度関数の対数の期待値 を最大化する Baum-Welch algorithm (EM algorithm) を用います。 Baum-Welch (EM) パラメータ \\(\\boldsymbol{\\theta}&#94;{\\text {old }}\\) を用いて \\(p\\left(\\mathbf{Z} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\) を最大化する。 対数尤度関数の期待値 \\(Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\) を求める。 \\(Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\) を最大化するパラメータに更新する。 \\(\\boldsymbol{\\theta}\\rightarrow\\boldsymbol{\\theta}&#94;{\\text {old }}\\) 1に戻る。 $$ Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)=\\sum_{\\mathbf{Z}} p\\left(\\mathbf{Z} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right) \\ln p(\\mathbf{X}, \\mathbf{Z} | \\boldsymbol{\\theta})\\qquad (13.12) $$ ここで、表記を簡単にするために、 γ 、 ξ を導入します。 $$ \\begin{aligned} \\gamma\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right) &(13.13)\\\\ \\xi\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right) &(13.14) \\end{aligned} $$ なお、潜在変数が離散なので、以下のように記述し直せます。（ \\(\\pi_{k},A_{j k},\\phi_{j k}\\) と同様。） $$ \\begin{aligned} \\gamma\\left(z_{n k}\\right) &=\\sum_{\\mathbf{z}} \\gamma(\\mathbf{z}) z_{n k} &(13.15)\\\\ \\xi\\left(z_{n-1, j}, z_{n k}\\right) &=\\sum_{\\mathbf{z}} \\gamma(\\mathbf{z}) z_{n-1, j} z_{n k} &(13.16)\\end{aligned} $$ これらを用いると、 \\(Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\mathrm{old}}\\right)\\) が以下のように書き下せます。 （計算過程） $$ \\begin{aligned} Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\mathrm{old}}\\right)=& \\sum_{k=1}&#94;{K} \\gamma\\left(z_{1 k}\\right) \\ln \\pi_{k}+\\sum_{n=2}&#94;{N} \\sum_{j=1}&#94;{K} \\sum_{k=1}&#94;{K} \\xi\\left(z_{n-1, j}, z_{n k}\\right) \\ln A_{j k} \\\\ &+\\sum_{n=1}&#94;{N} \\sum_{k=1}&#94;{K}\\gamma\\left(z_{n k}\\right) \\sum_{i=1}&#94;Dx_{ni} \\ln \\phi_{i k} \\end{aligned}\\qquad (13.17) $$ Maximization step ※ 実際の計算の順番からは前後しますが、先にM stepを説明します。 上記の \\(Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\mathrm{old}}\\right)\\) を各パラメータ \\(\\boldsymbol{\\theta}\\) に関して最大化するのは（別ブロックに別れているから）簡単で、それぞれ 適当なラグランジュ乗数を導入する ことで、以下のように求まります。 （計算過程） $$ \\begin{aligned} \\pi_{k}&= \\frac{\\gamma\\left(z_{1 k}\\right)}{\\sum_{j=1}&#94;{K} \\gamma\\left(z_{1 j}\\right)} & (13.18)\\\\ A_{j k}&= \\frac{\\sum_{n=2}&#94;{N} \\xi\\left(z_{n-1, j}, z_{n k}\\right)}{\\sum_{l=1}&#94;{K} \\sum_{n=2}&#94;{N} \\xi\\left(z_{n-1, j}, z_{n l}\\right)} & (13.19)\\\\ \\phi_{i k}&=\\frac{\\sum_{n=1}&#94;{N} \\gamma\\left(z_{n k}\\right) x_{n i}}{\\sum_{n=1}&#94;{N} \\gamma\\left(z_{n k}\\right)} & (13.23) \\end{aligned} $$ Expectation step M step で必要となる \\(\\gamma,\\xi\\) は、 条件付き独立性 を用いることで効率的に計算することができます。 $$ \\begin{aligned} \\gamma\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n} | \\mathbf{X}\\right)=\\frac{p\\left(\\mathbf{X} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})}\\quad (\\because \\text{Bayes' theorem}) &(13.32)\\\\ &=\\frac{p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}, \\mathbf{z}_{n}\\right) p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} \\quad (\\because \\text{conditional independence})\\\\ &= \\frac{\\alpha\\left(\\mathbf{z}_{n}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} & (13.33) \\end{aligned} $$ $$ \\begin{aligned} \\alpha\\left(\\mathbf{z}_{n}\\right) & \\equiv p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}, \\mathbf{z}_{n}\\right) & (13.34)\\\\ \\beta\\left(\\mathbf{z}_{n}\\right) & \\equiv p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right) & (13.35) \\end{aligned} $$ 条件付き独立性を用いてそれぞれ変形すると、以下の再帰式を導くことができます。 （計算過程） $$ \\begin{aligned} \\alpha\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} \\alpha\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) & (13.36)\\\\ \\alpha\\left(\\mathbf{z}_{1}\\right) &=p\\left(\\mathbf{x}_{1}, \\mathbf{z}_{1}\\right)=p\\left(\\mathbf{z}_{1}\\right) p\\left(\\mathbf{x}_{1} | \\mathbf{z}_{1}\\right)=\\prod_{k=1}&#94;{K}\\left\\{\\pi_{k} p\\left(\\mathbf{x}_{1} | \\boldsymbol{\\phi}_{k}\\right)\\right\\}&#94;{z_{1 k}} & (13.37)\\\\ \\beta\\left(\\mathbf{z}_{n}\\right) &=\\sum_{\\mathbf{z}_{n+1}} \\beta\\left(\\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{x}_{n+1} | \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) & (13.38)\\\\ \\beta\\left(\\mathbf{z}_{N}\\right) &= \\frac{\\gamma\\left(\\mathbf{z}_N\\right)p\\left(\\mathbf{X}\\right)}{\\alpha\\left(\\mathbf{z}_N\\right)} = \\frac{p\\left(\\mathbf{z}_{N} | \\mathbf{X}\\right)p(\\mathbf{X})}{p\\left(\\mathbf{X}, \\mathbf{z}_{N}\\right)} = 1 & (13.30) \\end{aligned} $$ ※ なお、ここで \\(\\alpha\\) の再起式を forward-algorithm 、 \\(\\beta\\) の再起式を backward-algorithm と呼ぶことがあります。 また、これらを用いて \\(\\xi\\) を記述することもでき、以下のように表せます。 （計算過程） $$\\xi\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right)=\\frac{\\alpha\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})}\\qquad (13.43)$$ 以上でBaum-Welchに必要な計算式が求まりました。 おまけ（尤度関数） 尤度関数は、アルゴリズムの停止条件に用いられるなど、値を求めることが非常に有用です。 求める際は、 $$ \\gamma\\left(\\mathbf{z}_{n}\\right)= \\frac{\\alpha\\left(\\mathbf{z}_{n}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} \\qquad (13.33) $$ の両辺を \\(\\mathbf{z}_n\\) について周辺化すれば、左辺は $$\\sum_{\\mathbf{z}_{n}} \\gamma\\left(\\mathbf{z}_{n}\\right) = \\sum_{\\mathbf{z}_{n}}p\\left(\\mathbf{z}_{n} | \\mathbf{X}\\right) = 1$$ となることが明らかなので、以下のように求まります。 $$p(\\mathbf{X})=\\sum_{\\mathbf{z}_{n}} \\alpha\\left(\\mathbf{z}_{n}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)\\qquad (13.41)$$ また、上記の式は任意の \\(n\\) について成立するので、 \\(n=N\\) の場合を考えれば \\(\\alpha\\) のみを用いて求めることができます。 $$p(\\mathbf{X})=\\sum_{\\mathbf{z}_{N}} \\alpha\\left(\\mathbf{z}_{N}\\right)\\qquad (13.42)$$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-1.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-1.html"},{"title":"Numpyの行列計算チートシート","text":"はじめに 様々なアルゴリズムを実装する際に漸化式は出るけど実装時にうまくいかない。ということは良くあります。また、 Python を使って実装する場合、そのほとんどが行列の取り扱いです。 （柔軟であるが故にエラーを吐かずに動いてしまう…笑） そこで、まずは行列計算のチートシートを作成します。（随時加筆修正していきます。） 目次 基本事項 内積（行列積） 外積 In [1]: import numpy as np 基本事項 In [2]: N = 3 A = np . arange ( N ) B = np . arange ( N ) . reshape ( - 1 , N ) # np.expand_dims(A, axis=0), A[None,:] C = np . arange ( N ) . reshape ( N , - 1 ) # np.expand_dims(A, axis=1), A[:,None] D = np . arange ( N * N ) . reshape ( N , N ) In [3]: print ( f \"A = {A} \" ) print ( f \"B = {B} \" ) print ( f \"C = {C} \" ) print ( f \"D = {D} \" ) A = [0 1 2] B = [[0 1 2]] C = [[0] [1] [2]] D = [[0 1 2] [3 4 5] [6 7 8]] In [4]: print ( f \"A.shape = {A.shape} \" ) print ( f \"B.shape = {B.shape} \" ) print ( f \"C.shape = {C.shape} \" ) print ( f \"D.shape = {D.shape} \" ) A.shape = (3,) B.shape = (1, 3) C.shape = (3, 1) D.shape = (3, 3) In [5]: print ( f \"A.ndim = {A.ndim} \" ) print ( f \"B.ndim = {B.ndim} \" ) print ( f \"C.ndim = {C.ndim} \" ) print ( f \"D.ndim = {D.ndim} \" ) A.ndim = 1 B.ndim = 2 C.ndim = 2 D.ndim = 2 ndim ex. scalar $(0)$ 1 , 2 ,... vector $1$ A matrix $\\geq2$ B , C , D 内積（行列積） vector & scalar / matrix & scalar スカラーが絡むと、各要素とスカラーの積となる。 shape の変化はない。 どちらから掛けてもエラーは起こらない。 In [6]: print ( f \"np.dot(A,2) = {np.dot(A,2)}\" ) # vector & scalar print ( f \"np.dot(B,2) = {np.dot(B,2)}\" ) # matrix & scalar print ( f \"np.dot(C,2) = {np.dot(C,2)}\" ) # matrix & scalar print ( f \"np.dot(D,2) = {np.dot(D,2)}\" ) # matrix & scalar np.dot(A,2) = [0 2 4] np.dot(B,2) = [[0 2 4]] np.dot(C,2) = [[0] [2] [4]] np.dot(D,2) = [[ 0 2 4] [ 6 8 10] [12 14 16]] vector & vector 内積となる。 結果はスカラーとなる。 shape が異なると、エラーが起きる。 In [7]: print ( f \"np.dot(A,A) = {np.dot(A,A)}\" ) # vector & vector np.dot(A,A) = 5 In [8]: np . dot ( A , np . arange ( N - 1 )) # shape=(3,) & shape=(2,) ValueError : shapes (3,) and (2,) not aligned: 3 (dim 0) != 2 (dim 0) vector & matrix 行列積となる。 ベクトルは、位置によって変換のされ方が異なる。 左がベクトルの場合： np.dot((x,) (y,z)) = np.dot((1,x) (y,z)) 右がベクトルの場合： np.dot((y,z) (x,)) = np.dot((y,z) (x,1)) 行列積であるので、結果の shape は np.dot((x,y) (y,z)) = (x,z) となる。 上で y が異なるとエラーが生じる。 In [9]: print ( np . dot ( A , B )) # np.dot((3,)(1,3)) print ( np . dot ( A , C )) # np.dot((3,)(3,1)) print ( np . dot ( B , A )) # np.dot((1,3)(3,)) print ( np . dot ( C , A )) # np.dot((3,1)(3,)) ValueError : shapes (3,) and (1,3) not aligned: 3 (dim 0) != 3 (dim 0) [5] [5] ValueError : shapes (3,1) and (3,) not aligned: 1 (dim 1) != 3 (dim 0) matrix & matrix c = np.dot(a,b) a.shape=(a1,a2,...,aN,X) b.shape=(b1,b2,...,X,bM) c.shape=(a1,a2,...,aN,b1,b2,...,bM) c[i1,i2,...,iN,j1,j2,...,jM] == a[i1,i2,...,iM,:].dot(b[j1,j2,...,jM-1,:,jM]) In [10]: import itertools def checkNPdot ( shape1 , shape2 ): \"\"\" 計算可能なshapeの関係を列挙する。 \"\"\" a = np . arange ( np . prod ( shape1 )) b = np . arange ( np . prod ( shape2 )) for comb1 in itertools . permutations ( shape1 , len ( shape1 )): for comb2 in itertools . permutations ( shape2 , len ( shape2 )): try : print ( f \" {comb1} .dot( {comb2} ) = {(a.reshape(comb1).dot(b.reshape(comb2))).shape}\" ) except : pass 以下で具体的に見ていく！ np.dot(2D, 3D) c = np.dot(a,b) a.shape=(i,X) b.shape=(j,X,k) c.shape=(i,j,k) c[i,j,k] == a[i,:].dot(b[j,:,k]) In [11]: a = np . arange ( 6 ) . reshape ( 2 , 3 ) b = np . arange ( 24 ) . reshape ( 2 , 3 , 4 ) c = np . dot ( a , b ) In [12]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) print ( f \"np.dot(a,b).shape = {c.shape} \" ) a.shape = (2, 3) b.shape = (2, 3, 4) np.dot(a,b).shape = (2, 2, 4) In [13]: I , J , K = c . shape In [14]: np . all ([ c [ i , j , k ] == a [ i ,:] . dot ( b [ j ,:, k ]) for i in range ( I ) for j in range ( J ) for k in range ( K )]) Out[14]: True np.dot(3D,2D) c = np.dot(a,b) a.shape=(i,j,X) b.shape=(X,k) c.shape=(i,j,k) c[i,j,k] == a[i,j,:].dot(b[:,k]) In [15]: a = np . arange ( 24 ) . reshape ( 4 , 2 , 3 ) b = np . arange ( 6 ) . reshape ( 3 , 2 ) c = np . dot ( a , b ) In [16]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) print ( f \"np.dot(a,b).shape = {c.shape} \" ) a.shape = (4, 2, 3) b.shape = (3, 2) np.dot(a,b).shape = (4, 2, 2) In [17]: I , J , K = c . shape In [18]: np . all ([ c [ i , j , k ] == a [ i , j ,:] . dot ( b [:, k ]) for i in range ( I ) for j in range ( J ) for k in range ( K )]) Out[18]: True np.dot(3D,3D) c = np.dot(a,b) a.shape=(i,j,X) b.shape=(k,X,l) c.shape=(i,j,k,l) c[i,j,k,l] == a[i,j,:].dot(b[k,:,l]) In [19]: a = np . arange ( 24 ) . reshape ( 2 , 3 , 4 ) b = np . arange ( 60 ) . reshape ( 3 , 4 , 5 ) c = np . dot ( a , b ) In [20]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) print ( f \"np.dot(a,b).shape = {c.shape} \" ) a.shape = (2, 3, 4) b.shape = (3, 4, 5) np.dot(a,b).shape = (2, 3, 3, 5) In [21]: I , J , K , L = c . shape In [22]: np . all ([ c [ i , j , k , l ] == a [ i , j ,:] . dot ( b [ k ,:, l ]) for i in range ( I ) for j in range ( J ) for k in range ( K ) for l in range ( L )]) Out[22]: True np.dot(2D,4D) c = np.dot(a,b) a.shape=(i,X) b.shape=(j,k,X,l) c.shape=(i,j,k,l) c[i,j,k,l] == a[i,:].dot(b[j,k,:,l]) In [23]: a = np . arange ( 6 ) . reshape ( 2 , 3 ) b = np . arange ( 120 ) . reshape ( 2 , 4 , 3 , 5 ) c = np . dot ( a , b ) In [24]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) print ( f \"np.dot(a,b).shape = {c.shape} \" ) # c[i,j,k,l] == a[i,j,:].dot(b[k,:,l]) a.shape = (2, 3) b.shape = (2, 4, 3, 5) np.dot(a,b).shape = (2, 2, 4, 5) In [25]: I , J , K , L = c . shape In [26]: np . all ([ c [ i , j , k , l ] == a [ i ,:] . dot ( b [ j , k ,:, l ]) for i in range ( I ) for j in range ( J ) for k in range ( K ) for l in range ( L )]) Out[26]: True np.dot(3D,4D) c = np.dot(a,b) a.shape=(i,j,X) b.shape=(k,l,X,m) c.shape=(i,j,k,l,m) c[i,j,k,l,m] == a[i,j,:].dot(b[k,l,:,m]) In [27]: a = np . arange ( 24 ) . reshape ( 2 , 3 , 4 ) b = np . arange ( 360 ) . reshape ( 3 , 5 , 4 , 6 ) c = np . dot ( a , b ) In [28]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) print ( f \"np.dot(a,b).shape = {c.shape} \" ) a.shape = (2, 3, 4) b.shape = (3, 5, 4, 6) np.dot(a,b).shape = (2, 3, 3, 5, 6) In [29]: I , J , K , L , M = c . shape In [30]: np . all ([ c [ i , j , k , l , m ] == a [ i , j ,:] . dot ( b [ k , l ,:, m ]) for i in range ( I ) for j in range ( J ) for k in range ( K ) for l in range ( L ) for m in range ( M )]) Out[30]: True np.dot(4D,4D) c = np.dot(a,b) a.shape=(i,j,k,X) b.shape=(l,m,X,n) c.shape=(i,j,k,l,m,n) c[i,j,k,l,m,n] == a[i,j,k,:].dot(b[l,m,:,n]) In [31]: a = np . arange ( 120 ) . reshape ( 2 , 3 , 4 , 5 ) b = np . arange ( 360 ) . reshape ( 3 , 4 , 5 , 6 ) c = np . dot ( a , b ) In [32]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) print ( f \"np.dot(a,b).shape = {c.shape} \" ) a.shape = (2, 3, 4, 5) b.shape = (3, 4, 5, 6) np.dot(a,b).shape = (2, 3, 4, 3, 4, 6) In [33]: I , J , K , L , M , N = c . shape In [34]: np . all ([ c [ i , j , k , l , m , n ] == a [ i , j , k ,:] . dot ( b [ l , m ,:, n ]) for i in range ( I ) for j in range ( J ) for k in range ( K ) for l in range ( L ) for m in range ( M ) for n in range ( N )]) Out[34]: True 外積 c = np.outer(a,b) c[i][j] = a.reshape(-1,)[i]*b.reshape(-1,)[j] In [35]: c = np . outer ( a , b ) In [36]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) a.shape = (a1,a2,...,aN) b.shape = (b1,b2,...,bM) In [37]: Na = np . prod ( a . shape ) Nb = np . prod ( b . shape ) In [38]: print ( f \"Na = {Na} \" ) print ( f \"Nb = {Nb} \" ) Na = a1*a2*・・・*aN Nb = b1*b2*・・・*bM In [39]: print ( c . shape ) (Na, Nb) In [40]: np . all ([ c [ i ][ j ] == a . reshape ( - 1 ,)[ i ] * b . reshape ( - 1 ,)[ j ] for i in range ( Na ) for j in range ( Nb )]) Out[40]: True In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-0.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-0.html"},{"title":"分子生命科学Ⅲ 第1回","text":"講師： 饗場篤 参考文献： Neuroscience: Exploring the Brain, 3rd Edition 参考文献： Principles of Neurobiology 講義概要 この授業最大の目的は、 「将来僕らが脳を対象とすることになった時に敷居を低くする」 こと。 # タイトル 内容 日付 1 神経系の構造と機能 中枢神経系の構造・機能 末梢神経系の構造・機能 9/26,10/3 2 感覚神経系 感覚系の構成 体性感覚系 視覚系（末梢視覚系・平衡感覚系） 聴覚と平衡感覚（聴覚系・平衡感覚系） 化学感覚系（嗅覚系・味覚系） 10/10,17,24,31 3 運動系 脊髄による運動制御 脳による運動制御 11/14,21 4 脳と行動の化学的制御 11/28 5 摂食行動 12/12 6 脳のリズムと睡眠 脳波 睡眠 概日リズム 12/19 7 精神疾患 統合失調症 感情障害 不安障害 12/26 8 神経変性疾患 アルツハイマー病 パーキンソン病 ALS 1/9 神経系の構造と機能（１） 神経系の機能的構成 神経系は、 感覚系 、 統合系 、 運動系 の３つに分けることができる。 感覚系は、感覚器で何かを感じると、 陽イオン が神経細胞の末端に流れ込み、 活動電位 が上がり、電気的なシグナルとして 中枢神経系(CNS)特に、大脳皮質の感覚野 にこの入力を伝える。 運動系は、逆向きで、脳の運動野からのシグナルが 末梢神経系 に伝わる。 神経系の構成成分 ニューロン(神経細胞,neuron) グリア細胞(glial cells) 血管(blood vessels) ニューロン(neuron) 極性のある細胞で、 細胞体(cell body or soma) 、 樹状突起(dendrites) 、 軸索(axon) からなり、（ほとんどの場合） 活動電位(action potential) を発生する。 膝蓋腱反射(knee-jerk reflex) ニューロンがどのように神経回路に含まれているか、を示す良い例。 医師が膝蓋骨の下の腱を軽く叩くと、大腿四頭筋が伸ばされ、その信号が脊髄まで伝わる。この信号が脊髄で 運動ニューロン に直結しており、運動ニューロンが発火して少し離れた部分の筋肉を収縮させる。その反動で足が上がる。 グリア細胞(glia cells) グリア細胞はニューロン（ヒトでは \\(1\\) - \\(2\\times10&#94;{11}\\) 個）の \\(3\\) - \\(10\\) 倍（マウスだと同数程度）存在し、脳の体積の約半分を占める。 長い軸索と興奮性膜を特徴とするニューロンに対して、グリア細胞の突起は細胞体の周辺に留まり、活動電位を発生しない。 ニューロンの生存や発達、機能発言のための液性環境維持と代謝的支援、神経伝達の調節等を行なっている。 と、ニューロンの補助的な役割だと今までは考えられていたが、最近ではもっと積極的な意味があるのでは無いかと研究されている。 中枢神経系のグリア細胞が下の4種からなる。 アストロサイト(astrocyte)（アストログリア、星状膠細胞） オリゴデンドロサイト(oligodendrocyte)（オリゴデンドログリア、稀突起膠細胞） 上衣細胞(ependymal cell) ミクログリア(microglia)（小膠細胞） アストロサイト(astrocyte)の機能 血液脳関門 を形成してがんが脳に転移しないように防御したりしている。 神経伝達物質の最取り込み（神経伝達物質が出てすぐに取り込まないと、麻薬や覚せい剤のような影響が出てしまう。）。 オリゴデンドロサイト(oligodendrocyte) 中枢神経系 において、 髄鞘（ミエリン・myelin） を形成する。（ 末梢 では シュワン細胞 が髄鞘を形成する。） 上衣細胞(ependymal cells) ミクログリア(microglia) 上衣細胞は脳室と脊髄中心管を覆う一層の上皮性細胞で、脳を脳脊髄液から遮断する（脳脊髄液脳関門(cerebro-spinal fluid brain barrier)） ミクログリアは損傷に際して活性化する脳内の免疫性細胞で貪食能を持つ。アストログリア、オリゴデンドロサイト、上衣細胞が 外胚葉 由来なのに対し、ミクログリアは 中胚葉 由来である。 脳の構造 哺乳動物の脳は、ほぼ共通の構造を持っている。ヒトの特徴は、 連合野 が広いということである。 解剖学用語 解剖学用語 解剖学的切断面 神経系の構成 中枢神経系(CNS: central nervous system) 脳(brain) 大脳(cerebrum) 小脳(cerebellum) 脳幹(brain stem) 脊髄(spinal cord) 末梢神経系(PNS: peripheral nervous system) 体性神経系(somatic nervous system) 脳神経(cranial nerve) 脊髄神経(spinal nerve) 自律神経系(autonomic nervous system) 小脳(cerebellum) 脳幹（延髄・橋・中脳・間脳）の背後に位置する。 大脳や脊髄と広範な連絡を持つ運動制御中枢 言語や思考などの高次脳機能に関与 小脳の 同 側の身体の運動に関与 脳幹(brain stem) 間脳→中脳→橋→延髄からなり、上方で間脳に、下方で脊髄に連なる（狭義では間脳を含めない）。 大脳から脊髄・小脳への情報、逆に脊髄・小脳から大脳への情報を中継 呼吸、意識、体温調節等の生命維持機能を制御 （大脳・小脳の損傷では生存できるが、脳幹の損傷は通常早急な死に至る） 錐体交叉 脳の運動ニューロンの軸索が延髄の後ろで一旦交叉（ 錐体交叉 ）して反対側にいっているから、反対側の機能がうまく制限できなくなる。 一方で 小脳 は同側なので、そのようなことは起こらない。 脊髄(spinal cord) 脊髄は脊柱管にあり、延髄に続いて錐体交叉下端より始まり、脊髄円錐にて終わる。 皮膚・関節・筋肉から脳への情報、逆に脳からの情報を伝える主経路 末梢神経の脊髄神経で身体と通ずる。 脊髄に入る情報を運ぶ軸索は 後根(dorsal root) に含まれ、脊髄から出ていく情報を運ぶ軸索は 前根(ventral root) に含まれる。 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"分子生命科学Ⅲ","url":"https://iwasakishuto.github.io/University/3A/分子生命科学Ⅲ-1.html","loc":"https://iwasakishuto.github.io/University/3A/分子生命科学Ⅲ-1.html"}]};