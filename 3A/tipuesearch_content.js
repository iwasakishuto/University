var tipuesearch = {"pages":[{"title":"Pro.4 Itemset mining algorithm","text":"In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-19.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-19.html"},{"title":"Pro.3 Gene Network Inference","text":"In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-18.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-18.html"},{"title":"Pro.2 最適行動列アルゴリズム","text":"In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-17.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-17.html"},{"title":"Pro.1 配列モチーフ探索","text":"問題設定 転写因子の結合領域を含む配列が多数得られた時に、共通する 配列的特徴（モチーフ） を発見する。 DeepBind link: Paper Software tool 深層学習を用いた転写因子結合モチーフ発見。 従来のものより性能が良い。 色々なハイパーパラメータ、構造パラメータを自動的に調節するような便利なシステムを作っている。 Summary of the Paper da In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-16.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-16.html"},{"title":"Ex.15 Neural Network","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-15.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-15.html"},{"title":"Ex.14 Brownian motion","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-14.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-14.html"},{"title":"Ex.13 Sparse Modeling","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-13.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-13.html"},{"title":"Ex.12 Order Statistics","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-12.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-12.html"},{"title":"Ex.11 Data Assimilation","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-11.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-11.html"},{"title":"Ex.10 Expectation Maximization Algorithm","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-10.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-10.html"},{"title":"Ex.9 Kullback-Leibler Divergence","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-9.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-9.html"},{"title":"Ex.8 Multivariate Normal Distribution","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-8.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-8.html"},{"title":"Ex.7 Positive Definite Symmetric Matrix","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-7.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-7.html"},{"title":"Ex.6 Multinomial Distribution","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-6.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-6.html"},{"title":"Ex.5 Categorical Distribution","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-5.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-5.html"},{"title":"Ex4. Exponential Distribution","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-4.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-4.html"},{"title":"EX3. Law of Large Numbers","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-3.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-3.html"},{"title":"EX2. Characteristic function","text":"解答","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-2.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-2.html"},{"title":"EX1. Covariance","text":"解答 1 $$ \\begin{aligned} \\mathbb{E}\\left(\\left(X-\\mu_X\\right)\\left(Y-\\mu_Y\\right)\\right) &= \\mathbb{E}\\left(XY - \\mu_YX-\\mu_XY + \\mu_X\\mu_Y\\right)\\\\ &= \\mathbb{E}\\left(XY\\right) - \\mu_Y\\mathbb{E}(X) - \\mu_X\\mathbb{E}(Y) + \\mu_X\\mu_Y\\\\ &= \\mathbb{E}(XY) - \\mathbb{E}(X)\\mathbb{E}(Y)\\quad (\\because\\mu_X=\\mathbb{E}(X),\\mu_Y=\\mathbb{E}(Y)) \\end{aligned} $$ 2 連続型確率変数の場合で証明する。（離散型は \\(\\int\\rightarrow\\sum\\) ） $$ \\begin{aligned} \\mathbb{E}(XY) &= \\int_{x}\\int_{y} xy\\mathbb{P}(X=x,Y=y)dxdy\\\\ &= \\int_{x}\\int_{y} xy\\mathbb{P}(X=x)\\mathbb{P}(Y=y)dxdy\\quad(\\because X,Y: \\text{independent})\\\\ &= \\int_{x} x\\mathbb{P}(X=x)dx\\int_{y}y\\mathbb{P}(Y=y)dy\\\\ &= \\mathbb{E}(X)\\mathbb{E}(Y) \\end{aligned} $$ となるので、 \\((1)\\) より、 $$ \\begin{aligned} \\mathrm{Cov}(X,Y) &= \\mathbb{E}\\left(\\left(X-\\mu_X\\right)\\left(Y-\\mu_Y\\right)\\right)\\\\ &=\\mathbb{E}(XY) - \\mathbb{E}(X)\\mathbb{E}(Y)\\\\ &=0 \\end{aligned} $$ 3 $$ \\begin{aligned} \\mathrm{Var}(X+Y) &= \\mathbb{E}\\left((X+Y)&#94;2\\right) - \\left(\\mathbb{E}\\left(X+Y\\right)\\right)&#94;2\\\\ &= \\mathbb{E}\\left(X&#94;2 + 2XY + Y&#94;2\\right) - \\left(\\mathbb{E}(X) + \\mathbb{E}(Y)\\right)&#94;2 \\\\ &= \\left(\\mathbb{E}(X&#94;2) - \\mathbb{E}(X)&#94;2\\right) + \\left(\\mathbb{E}(Y&#94;2) - \\mathbb{E}(Y)&#94;2\\right) + 2\\left(\\mathbb{E}(XY) - \\mathbb{E}(X)\\mathbb{E}(Y)\\right)\\\\ &= \\mathrm{Var}(X) + \\mathrm{Var}(Y) + 2\\mathrm{Cov}(X,Y) \\end{aligned} $$ 4 $$ \\begin{aligned} \\mathrm{Cov}\\left(aX+bY,cZ+dW\\right) &= \\mathbb{E}\\left(\\left(aX+bY\\right)\\left(cZ+dW\\right)\\right) - \\mathbb{E}\\left(aX+bY\\right)\\mathbb{E}\\left(cZ+dW\\right)\\\\ &= \\left(\\mathbb{E}\\left(aXcZ\\right) + \\cdots + \\mathbb{E}\\left(bYdW\\right)\\right) - \\left(\\mathbb{E}(aX)\\mathbb{E}(cZ) + \\cdots + \\mathbb{E}(bY)\\mathbb{E}(dW) \\right)\\\\ &= \\left\\{\\mathbb{E}\\left(aXcZ\\right) - \\mathbb{E}(aX)\\mathbb{E}(cZ) \\right\\} + \\cdots + \\left\\{\\mathbb{E}\\left(bYdW\\right) - \\mathbb{E}(bY)\\mathbb{E}(dW) \\right\\}\\\\ &= ac\\left\\{\\mathbb{E}\\left(XZ\\right) - \\mathbb{E}(X)\\mathbb{E}(Z)\\right\\} + \\cdots + bd\\left\\{\\mathbb{E}\\left(YW\\right) - \\mathbb{E}(Y)\\mathbb{E}(W)\\right\\}\\\\ &= ac\\mathrm{Cov}(X,Z) + ad\\mathrm{Cov}(X,W) + bc\\mathrm{Cov}(Y,Z) + bd\\mathrm{Cov}(Y,W) \\end{aligned} $$ 5 $$ \\begin{aligned} \\mathrm{Cov}\\left(X,Y\\right)&#94;2 &= \\left(\\sum_{x,y}(x-\\mu_X)(y-\\mu_Y)\\mathbb{P}(X=x,Y=y)\\right)&#94;2\\\\ &= \\left(\\sum_{z,w}zw\\mathbb{P}(X=x,Y=y)\\right)&#94;2\\\\ &= \\left(\\sum_{z,w}zwP_{zw}\\right)\\left(\\sum_{z&#94;{\\prime},w&#94;{\\prime}}z&#94;{\\prime}w&#94;{\\prime}P_{z&#94;{\\prime}w&#94;{\\prime}}\\right)\\\\ &=\\sum_{z,w,z&#94;{\\prime},w&#94;{\\prime}}zwz&#94;{\\prime}w&#94;{\\prime}P_{zw}P_{z&#94;{\\prime}w&#94;{\\prime}}\\quad\\left(\\because\\text{expansion}\\right)\\\\ \\mathrm{Var}(X)\\mathrm{Var}(Y) &= \\left(\\sum_{x}\\left(x-\\mu_X\\right)&#94;2\\mathbb{P}(X=x)\\right)\\left(\\sum_{y}\\left(y-\\mu_Y\\right)&#94;2\\mathbb{P}(Y=y)\\right)\\\\ &= \\left(\\sum_{x,y}\\left(x-\\mu_X\\right)&#94;2\\mathbb{P}(X=x,Y=y)\\right)\\left(\\sum_{x,y}\\left(y-\\mu_Y\\right)&#94;2\\mathbb{P}(X=x,Y=y)\\right)\\\\ &= \\left(\\sum_{z,w}z&#94;2P_{x,y}\\right)\\left(\\sum_{z,w}w&#94;2P_{x,y}\\right)\\\\ &=\\sum_{z,w,z&#94;{\\prime},w&#94;{\\prime}}z&#94;2w&#94;{\\prime 2}P_{x,y}P_{x&#94;{\\prime},y&#94;{\\prime}}\\left(=\\sum_{z,w,z&#94;{\\prime},w&#94;{\\prime}}z&#94;{\\prime 2}w&#94;2P_{x,y}P_{x&#94;{\\prime},y&#94;{\\prime}}\\right)\\\\ &=\\frac{1}{2}\\sum_{z,w,z&#94;{\\prime},w&#94;{\\prime}}z&#94;2w&#94;{\\prime 2}P_{x,y}P_{x&#94;{\\prime},y&#94;{\\prime}}+\\frac{1}{2}\\sum_{z,w,z&#94;{\\prime},w&#94;{\\prime}}z&#94;{\\prime 2}w&#94;2P_{x,y}P_{x&#94;{\\prime},y&#94;{\\prime}} \\end{aligned} $$ と変形できるので、 $$ \\begin{aligned} \\mathrm{Var}(X)\\mathrm{Var}(Y) - \\mathrm{Cov}\\left(X,Y\\right)&#94;2 &= \\left(\\frac{1}{2}\\sum_{z,w,z&#94;{\\prime},w&#94;{\\prime}}z&#94;2w&#94;{\\prime 2}P_{x,y}P_{x&#94;{\\prime},y&#94;{\\prime}}+\\frac{1}{2}\\sum_{z,w,z&#94;{\\prime},w&#94;{\\prime}}z&#94;{\\prime 2}w&#94;2P_{x,y}P_{x&#94;{\\prime},y&#94;{\\prime}}\\right) - \\sum_{z,w,z&#94;{\\prime},w&#94;{\\prime}}zwz&#94;{\\prime}w&#94;{\\prime}P_{zw}P_{z&#94;{\\prime}w&#94;{\\prime}}\\\\ &= \\frac{1}{2}\\sum_{z,w,z&#94;{\\prime},w&#94;{\\prime}}\\left(z&#94;2w&#94;{\\prime2} + z&#94;{\\prime2}w&#94;2 - 2zwz&#94;{\\prime}w&#94;{\\prime}\\right)P_{x,y}P_{x&#94;{\\prime},y&#94;{\\prime}}\\\\ &=\\frac{1}{2}\\sum_{z,w,z&#94;{\\prime},w&#94;{\\prime}}\\left(zw&#94;{\\prime} - z&#94;{\\prime}w\\right)&#94;2P_{x,y}P_{x&#94;{\\prime},y&#94;{\\prime}}\\\\ &\\geq0\\\\ \\therefore\\mathrm{Var}(X)\\mathrm{Var}(Y) &\\geq \\mathrm{Cov}\\left(X,Y\\right)&#94;2 \\end{aligned} $$ memo 任意の \\(n,m\\) に対して以下が成り立つ時、等号条件が成立（？） $$\\mathbb{P}\\left(X=x_n,Y=y_m\\right) = \\mathbb{P}\\left(X=x_n\\right)\\delta_{nm}$$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-1.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-1.html"},{"title":"レポート課題5(10/31出題)","text":"Cx85Jl/S2Nc3RvIqJmiJQg==;;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-report5.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-report5.html"},{"title":"確率と統計(1)基礎概念","text":"講師： 本多 淳也 参考書： エージェントアプローチ人工知能 第2版 参考書： イラストで学ぶ 人工知能概論 In [1]: import numpy as np import matplotlib.pyplot as plt 講義概要 確率変数と確率分布 確率分布の性質を表す指標 同時確率 条件付き確率 確率変数と確率分布 用語 意味 確率(probability) 事象の起こりやすさを定量的に示す $0$ から $1$ の値 確率変数(random variable) その変数に関する任意の事象に対して確率が定義されている変数 確率分布(probability distribution) 確率変数に関する各事象に対してその確率を与える関数 離散型(discrete type)確率変数 ある可算集合 $\\mathcal{X}$ の中のいずれかの値をとる確率変数 確率質量関数(probability mass function) $f(x)$ $$f(x)\\geq0,\\quad \\sum_{x\\in\\mathcal{X}}f(x) = 1$$ 連続型(continuous type)確率変数 連続値をとる確率変数 確率密度関数(probability density function) $f(x)$ $$f(x)\\geq0,\\quad\\int_{-\\infty}&#94;{\\infty}f(x)dx=1$$ 累積分布関数(cumulative distribution function) $F(x)$ $$F(x) = P(X\\leq x)=\\int_{-\\infty}&#94;{x}f(u)du\\ \\text{ or } \\sum_{i:i\\leq x}f(i)$$ 確率分布の性質を表す指標 用語 数式 説明 期待値(expectation) $$E(X) = \\sum_xxf(x)\\ \\text{ or }\\int xf(x)dx$$ 確率変数の値の平均（正確には確率による重み付きの平均） 確率変数を代表する値を表す指標 ※ 外れ値(outlier)に敏感 中央値(median) $P(X\\leq x)=1/2$ を満たす $x$ データを大きい順（または小さい順）に並べたときの真ん中の値。 最頻値(mode) $f(x)$ を最大にする $x$ データの中で最も頻度が高い値 分散(variance) $$\\begin{aligned}V(X) &= E\\left\\{(X-E[X])&#94;2\\right\\}\\\\&=E\\left\\{X&#94;2-2E[X]X+(E[X])&#94;2\\right\\}\\\\&=E[X&#94;2]-E\\left[2E[X]X\\right]+(E[X])&#94;2\\\\&=E[X&#94;2]-2E[X]E[X]+(E[X])&#94;2\\\\&=E[X&#94;2]-(E[X])&#94;2\\end{aligned}$$ 確率変数の散らばり具合を表す指標 標準偏差(standard devariation) $\\sqrt{V(X)}$ 分散の平方根 標準化(standardization) $$Z=\\frac{X-E(X)}{\\sqrt{V(X)}}$$ 任意の確率変数 $X$ に対して、期待値 $0$、分散 $1$ の確率変数 $Z$ が定義できる。 歪度(skewness) $$\\alpha_3 = \\frac{E\\left\\{\\left[X - E(X)\\right]&#94;3\\right\\}}{\\left\\{V(X)\\right\\}&#94;{3/2}}$$ 確率変数の非対称性を表す。 劣度(kurtosis) $$\\beta_4 = \\frac{E\\left\\{\\left[X - E(X)\\right]&#94;4\\right\\}}{\\left\\{V(X)\\right\\}&#94;{2}}-3$$ 確率分布の尖り具合を表す。 積率(moment) $$\\mu_r = E\\left[X&#94;r\\right]$$ 期待値・分散・歪度・劣度などを表すパラメータ。全ての次数の積率を指定すれば、確率分布を一位に決定することができる。（左は $r$ 次の積率） 積率母関数(moment generating function) $$M_X(t) = E[e&#94;{tX}]=\\begin{cases}\\sum_xe&#94;{tx}f(x)\\\\\\int e&#94;{tx}f(x)dx\\end{cases}\\\\ M_X&#94;{(r)}(0)=\\mu_r$$ 全ての次数の積率を生成する関数。存在しない（無限大に発散する）こともある。 In [2]: def computation_variance ( n = 10000 , mu = 0 , sigma = 1 , seed = None ): X = np . random . RandomState ( seed ) . normal ( loc = mu , scale = sigma , size = n ) EX = sum ( X ) / n EX2 = sum ( X ** 2 ) / n # Calculate variance in 3 ways. var1 = np . var ( X ) var2 = sum (( X - EX ) ** 2 ) / n var3 = EX2 - EX ** 2 print ( \"`np.var(X)` =\" , var1 ) print ( \"E{(X - E[X])&#94;2} =\" , var2 ) print ( \"E[X&#94;2] - (E[X])&#94;2 =\" , var3 ) In [3]: computation_variance ( mu = 100 , seed = 0 ) `np.var(X)` = 0.9752679753477969 E{(X - E[X])&#94;2} = 0.9752679753477979 E[X&#94;2] - (E[X])&#94;2 = 0.9752679752218683 In [4]: computation_variance ( mu = 1e8 , seed = 1 ) `np.var(X)` = 0.9975731614280597 E{(X - E[X])&#94;2} = 0.9975731614281662 E[X&#94;2] - (E[X])&#94;2 = -98.0 ※ 「二乗の平均 - 平均の二乗」は丸め誤差の影響を受けやすい 歪度(skewness) 確率変数の非対称性を表す。 $$\\alpha_3 = \\frac{E\\left\\{\\left[X - E(X)\\right]&#94;3\\right\\}}{\\left\\{V(X)\\right\\}&#94;{3/2}}$$ In [5]: def plot_skewness ( ax = None , seed = None , n = 100 ): if ax == None : fig , ax = plt . subplots () X = np . random . RandomState ( seed ) . randint ( low = 1 , high = 7 , size = n ) ax . hist ( X , density = True , bins = 6 , color = \"blue\" , align = 'left' ) EX = np . mean ( X ) VX = np . var ( X ) skewness = np . mean (( X - EX ) ** 3 ) / VX ** ( 3 / 2 ) ax . set_title ( f \"skewness = {skewness:.3f} \" ) return ax In [6]: fig = plt . figure ( figsize = ( 12 , 3 )) for i , seed in enumerate ([ 44756 , 96331 , 76432 ]): ax = fig . add_subplot ( 1 , 3 , i + 1 ) ax = plot_skewness ( ax = ax , seed = seed ) plt . show () 劣度(kurtosis) 確率分布の尖り具合を表す。 $$\\beta_4 = \\frac{E\\left\\{\\left[X - E(X)\\right]&#94;4\\right\\}}{\\left\\{V(X)\\right\\}&#94;{2}}-3$$ In [7]: X = np . linspace ( - 5 , 5 , 10000 ) In [8]: f1 = lambda x : 1 / 1250 * ( 5 - abs ( x )) ** 4 f2 = lambda x , mu = 0 , sigma = 1 : 1 / np . sqrt ( 2 * np . pi * sigma ** 2 ) * np . exp ( - ( x - mu ) ** 2 / 2 * sigma ** 2 ) f3 = lambda x : 1 / 4 if abs ( x ) <= 2 else 0 In [9]: def plot_kurtosis ( X , func , ax = None ): if ax == None : fig , ax = plt . subplots () Y = np . array ([ func ( x ) for x in X ]) ax . plot ( X , Y , color = \"red\" ) Y /= sum ( Y ) EX = np . sum ( Y * X ) VX = np . sum ( Y * ( X - EX ) ** 2 ) kurtosis = np . sum ( Y * ( X - EX ) ** 4 ) / VX ** 2 - 3 ax . set_title ( f \"kurtosis = {kurtosis:.3f} \" ) return ax In [10]: fig = plt . figure ( figsize = ( 12 , 3 )) for i , func in enumerate ([ f1 , f2 , f3 ]): ax = fig . add_subplot ( 1 , 3 , i + 1 ) ax = plot_kurtosis ( X = X , func = func , ax = ax ) ax . set_xlim ( - 5 , 5 ); ax . set_ylim ( 0 , 1 ) plt . show () 同時確率 用語 数式 説明 同時確率(joint probability) 複数の確率変数が関わる確率 同時確率質量関数 $$P(X=x,Y=y) = f(x,y)\\\\f(x,y)\\geq0,\\quad\\sum_{x\\in\\mathcal{X}}\\sum_{y\\in\\mathcal{Y}}f(x,y)=1$$ 離散型の同時確率 同時確率密度関数 $$P(a\\leq X\\leq b,c\\leq Y\\leq d) = \\int_c&#94;d\\int_a&#94;bf(x,y)dxdy\\\\f(x,y)\\geq0,\\quad\\int_{-\\infty}&#94;{\\infty}\\int_{-\\infty}&#94;{\\infty}f(x,y)dxdy=1$$ 連続型の同時確率 共分散 $X$ と $X&#94;{\\prime}$ の 共分散(covariance) ： $$\\mathrm{Cov}(X,X&#94;{\\prime}) = E\\left[(X-E[X])(X&#94;{\\prime}-E[X&#94;{\\prime}])\\right]$$ $\\mathrm{Cov}(X,X&#94;{\\prime})>0$ の時：$X$ と $X&#94;{\\prime}$ の増減は 同傾向 $\\mathrm{Cov}(X,X&#94;{\\prime})<0$ の時：$X$ と $X&#94;{\\prime}$ の増減は 逆傾向 $\\mathrm{Cov}(X,X&#94;{\\prime})=0$ の時：$X$ と $X&#94;{\\prime}$ の増減は 無関係 共分散は、以下の形でも表されるので、A社の株価を $X$、B社の株価を $X&#94;{\\prime}$ とすると、以下の解釈も可能 $$V(X+X&#94;{\\prime}) = V(X) + V(X&#94;{\\prime}) + 2\\mathrm{Cov}(X,X&#94;{\\prime})$$ $\\mathrm{Cov}(X,X&#94;{\\prime})>0\\Longleftrightarrow V(X+X&#94;{\\prime})>V(X)+V(X&#94;{\\prime})$ なので、A,B両者の株を買うと分散が 拡大 する → 変動リスクが増大し、資産価値は不安定 $0>\\mathrm{Cov}(X,X&#94;{\\prime})\\Longleftrightarrow V(X)+V(X&#94;{\\prime})>V(X+X&#94;{\\prime})$ なので、A,B両者の株を買うと分散が 縮小 する → 変動リスクが抑制され、資産価値は安定 独立性 全ての $(x,y)$ で $p_{X,Y}(x,y) = p_X(x)p_Y(y)$ の時、$X$ と $Y$ は互いに 独立(independent) 2つの確率変数が独立の時、 積の期待値は各々の期待値の積と一致 $$E[XY] = E[X]E[Y]$$ 和の積率母関数は各々の積率母関数の積と一致 $$M_{X+Y}(t) = M_X(t)M_Y(t)$$ ２つの確率変数は無相関 $$\\mathrm{Cov}(X,Y) = 0$$ 2つの確率変数が独立ならば無相関であるが、逆は一般には正しくない。 条件付き確率 ベイズの定理(Bayes' theorem) $$P(X|Y) = \\frac{P(Y|X)P(X)}{P(Y)}$$ In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-5.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-5.html"},{"title":"生物物理学 第6回","text":"エネルギー生産系の仕組み（細胞内小器官） 光関連の現象 細胞・器官 たんぱく質等 眼で見る 視細胞（桿体、錐体細胞） ロドプシン等 光合成 葉緑体 光システム（タンパク質複合体） 蛍の光 発色細胞 ルシフェリン+ルシフェラーゼ クラゲの光 発色細胞 エコーリン、GFP(green fluorescence protein) 日焼け 色素形成細胞（メラノサイト） メラニン（チロシンの重合体） 体内時計 目のメラノプシン発現網膜神経細胞 メラノプシン ATPを作るプロセス 光合成(photosynthesis) は、高等植物や緑藻（青色細菌）が 葉緑体（クロロプラスト） 内で行う、二酸化炭素の固定反応である。 この過程で水が酸素に酸化され、二酸化炭素は還元されて糖になる。 光合成は大きく2つの段階に区別される。 1つは 明反応 と呼ばれ、光のエネルギーを利用して水が酸素に酸化されるとともに、二酸化炭素の還元に必要な \\(\\mathrm{NADPH}_2&#94;+\\) と \\(\\mathrm{ATP}\\) をつくりだす。 もう1つの段階は 暗反応 と呼ばれ、 \\(\\mathrm{NADPH}_2&#94;+\\) と \\(\\mathrm{ATP}\\) を利用して二酸化炭素から種々の糖がつくられる。 クロロプラスト中の大部分のクロロフィルは 光を集めるアンテナ の役割を果たす。吸収された光子のエネルギーはアンテナクロロフィル間を励起エネルギーとして移動し、 アンテナクロロフィル よりも励起エネルギーの 低い 反応中心クロロフィル に集められる。 FRET(Fluorescence resonance energy transfer) $$\\text{Transfer Efficiency at two rates: } E= \\frac{k_T}{k_T+k_F} = \\frac{1}{1 + \\frac{k_F}{k_T}}$$ \\(k_T\\) ：Donor から Acceptor に移動する速度 \\(k_F\\) ：Donor が吸収する速度 Chl(from) Chl(to) 移動効率（移動距離） b(F) a(A) 高 b(F) b(A) 中 a(F) a(A) 中 a(F) b(A) 低 幅 \\(L\\) の中の電子のエネルギー準位： \\(E_n = \\frac{1}{8m}\\left(\\frac{nh}{L&#94;{\\prime}}\\right)&#94;2\\) フェミルの黄金律 時間的に変化しない弱い相互作用（摂動）のある電子系が、あるエネルギー固有状態から別のエネルギー固有状態へ移る際の単位時間あたりの遷移確率は、摂動法（時間で展開）の最低次数として近似計算できる。 遷移速度 \\(k_T\\) は、エネルギー固有状態の単位時間あたりの遷移確率である。 $$\\Psi_{\\mathrm{Da}}\\Psi_{\\mathrm{Ab}}\\underset{k_T}{\\longrightarrow}\\Psi_{\\mathrm{Db}}\\Psi_{\\mathrm{Aa}}$$ Da: Active state of Donor Ab: Ground state of Acceptor 光合成の概要 水を分解して、電子を膜間に入れる。 光を用いて電子の酸化還元電位を上げる。 酸化還元電位を利用してチラコイド外のプロトンを内側に輸送する。 内側のプロトンのケミカルポテンシャルを利用してATPを合成する。 まとめ 共役長が長くなる と吸収波長は長くなり、可視光の利用が可能となる。 分子間距離が近いと エネルギー移動や電子移動 が起こる。電子移動の方向は、酸化還元電位に依存する。 エネルギーを 酸化還元電位 に交換する（逆も） 生物は、 多数のタンパク質が 上記1-3の原理を巧みに利用して、光化学反応（葉緑体内の光合成）や電子伝達（ミトコンドリア内）の機能を行う。 ATP を合成するF1,F0は高効率でATPを合成する。特に、F1は仕事効率が約100%である。 .prompt { /* This is for jupyter blog.*/ min-width: 0; /* This padding is tuned to match the padding on the CodeMirror editor. */ padding: 0em 0.4em 0em 0em; margin: 0px; font-family: monaco; } /*蛍光ペン(pink)*/ .marker-pink { color: #c45a5a; background: linear-gradient(transparent 70%, #ff66ff 60%); font-weight: bold; } /*蛍光ペン(blue) & hover info*/ .marker-info { color: #5C7DC4; background: linear-gradient(transparent 70%, #66FFCC 60%); font-weight: bold; position: relative; cursor: pointer; } .marker-info:hover:before { opacity: 1; z-index: 2; } .marker-info:before { content: attr(aria-label); opacity: 0; position: absolute; top: 30px; right: -90px; font-size: 14px; width: 300px; padding: 10px; color: #fff; background-color: #555; border-radius: 3px; pointer-events: none; } /* 枠囲み */ .frame { border: solid 1.0px #000000; padding: 0.5em 1em; margin: 2em 0; } /* 暗記用 question box */ span .qbox{ display: none; } span.qbox-wrapper:hover .qbox-default{ display: none; } span.qbox-wrapper:hover .qbox{ display: inline; } .qbox-wrapper{ font-weight: bold; padding: 5px 10px; border-radius: 5px; border: solid 2px #000000; margin: 5px } .qbox-wrapper:hover{ text-shadow: 0px 0px 6px rgba(255, 255, 255, 1); -webkit-box-shadow: 0px 5px 40px -10px rgba(0,0,0,0.57); -moz-box-shadow: 0px 5px 40px -10px rgba(0,0,0,0.57); transition: all 0.4s ease 0s; } /* 画像吹き出し */ .balloon { display: table; width: 100%; } .balloon_img { display: table-cell; vertical-align: middle; width: 50%; padding-right: 10px; } .balloon_comment { border: #83274e solid 4px; position: relative; background: #fff; padding: 12px; border-radius: 13px; display: block } .balloon_comment::before { content: \"\"; position: absolute; border-right: 23px solid #83274e; border-bottom: 20px solid transparent; border-top: 20px solid transparent; top: 30%; left: -23px; } .balloon_comment::after { content: \"\"; position: absolute; border-right: 24px solid #fff; border-bottom: 20px solid transparent; border-top: 20px solid transparent; top: 30%; left: -17px; } if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物物理学","url":"https://iwasakishuto.github.io/University/3A/生物物理学-6.html","loc":"https://iwasakishuto.github.io/University/3A/生物物理学-6.html"},{"title":"Introduction","text":"講師： 木立 尚孝 （ 生物データマイニング論 も担当されている方） 計算演習 # リンク 問題 1 Covariance 2 Characteristic function 3 Law of Large Numbers 4 Exponential Distribution 5 Categorical Distribution 6 Multinomial Distribution 7 Positive Definite Symmetric Matrix 8 Multivariate Normal Distribution 9 Kullback-Leibler Divergence 10 Expectation Maximization Algorithm 11 Data Assimilation 12 Order Statistics 13 Sparse Modeling 14 Brownian motion 15 Neural Network プログラミング演習 配列モチーフ探索 最適行動列アルゴリズム Gene Network Inference Itemset mining algorithm","tags":"情報基礎実験(木立)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-0.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(木立)-0.html"},{"title":"頻度パターンマイニング","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) 参考資料： 頻出パターン発見アルゴリズム入門 -アイテム集合からグラフまで- Data Mining A formal study of efficient methods for extracting interesting rules and patterns from massive data. Frequent itemset mining. Closed pattern mining. Structured data mining. Itemset Mining Frequent Itemset Mining Closed Itemset Mining Closure Extension LCM Itemset Mining Frequent Itemset Mining Finding all \"frequent\" sets of elements(items) appearing $\\sigma$ times or more in a database. Definitions Database A set $\\Sigma = \\{1,\\ldots,n\\}$ of items(elements). Tramsaction database A set $T=\\{t_1,\\ldots,t_m\\}$ of subsets of $\\Sigma$ Each subset $t\\subseteq\\Sigma$ is called a transaction Frequent sets Itemset $X$ appears in transaction t: $X\\subseteq t$ Occurrence of $X$ in database $T$: $$\\mathrm{Occ}(X,T) = \\left\\{t\\in T: X\\subseteq t\\right\\}$$ Frequency of $X$: $\\mathrm{Fr}(X,T) = |\\mathrm{Occ}(X,T)|$ Minimum support (minsup): $0\\leq\\sigma\\leq|T|$ $X$ is frequent in $T$ if $\\mathrm{Fr}(X,T)\\geq\\sigma$ Market Basket Data Popular application of itemset mining. Business and Market data analysis. ※ Visit \"The Instacart Online Grocery Shopping Dataset 2017\" and Download \"instacart_2017_05_01\" Folder. In [1]: ! tree instacart_2017_05_01 instacart_2017_05_01 ├── aisles.csv ├── departments.csv ├── order_products__prior.csv ├── order_products__train.csv ├── orders.csv └── products.csv 0 directories, 6 files In [2]: import numpy as np import pandas as pd products.csv In [3]: df_products = pd . read_csv ( \"./instacart_2017_05_01/products.csv\" ) df_products . head ( 3 ) Out[3]: .dataframe thead tr:only-child th { text-align: right; } .dataframe thead th { text-align: left; } .dataframe tbody tr th { vertical-align: top; } product_id product_name aisle_id department_id 0 1 Chocolate Sandwich Cookies 61 19 1 2 All-Seasons Salt 104 13 2 3 Robust Golden Unsweetened Oolong Tea 94 7 In [4]: print ( f \"`products.csv` data num: {len(df_products)}\" ) `products.csv` data num: 49688 In [5]: id2name = dict ( zip ( df_products . product_id , df_products . product_name )) order_products__train.csv In [6]: df_order_products = pd . read_csv ( \"./instacart_2017_05_01/order_products__train.csv\" ) df_order_products . head ( 3 ) Out[6]: .dataframe thead tr:only-child th { text-align: right; } .dataframe thead th { text-align: left; } .dataframe tbody tr th { vertical-align: top; } order_id product_id add_to_cart_order reordered 0 1 49302 1 1 1 1 11109 2 1 2 1 10246 3 0 In [7]: N_transactions_total = len ( df_order_products . groupby ( \"order_id\" )) print ( f \"Total number of transactions: {N_transactions_total} \" ) Total number of transactions: 131209 Extract Only N products In [8]: N = 10 In [9]: extracted_ids = df_order_products . groupby ( \"product_id\" ) . size () . reset_index () . sort_values ( by = 0 , ascending = False ) . product_id [: N ] . values In [10]: # Only focus on N products. df_order_products_extracted = df_order_products [ df_order_products . product_id . apply ( lambda x : x in extracted_ids )] In [11]: N_transactions_extracted = len ( df_order_products_extracted . groupby ( \"order_id\" )) print ( f \"Transactions: {N_transactions_extracted} / {N_transactions_total} \" ) Transactions: 59887/131209 In [12]: for i , extracted_id in enumerate ( extracted_ids ): print ( f \"No.{i+1:>0{len(str(N))}}: {id2name[extracted_id]} \" ) No.01: Banana No.02: Bag of Organic Bananas No.03: Organic Strawberries No.04: Organic Baby Spinach No.05: Large Lemon No.06: Organic Avocado No.07: Organic Hass Avocado No.08: Strawberries No.09: Limes No.10: Organic Raspberries In [13]: df_product_id_OneHot = pd . get_dummies ( df_order_products_extracted . product_id ) In [14]: df_order_OneHot = pd . concat ([ df_order_products_extracted . order_id , df_product_id_OneHot ], axis = 1 ) In [15]: df = df_order_OneHot . groupby ( \"order_id\" ) . sum () . reset_index () In [16]: df . head ( 3 ) Out[16]: .dataframe thead tr:only-child th { text-align: right; } .dataframe thead th { text-align: left; } .dataframe tbody tr th { vertical-align: top; } order_id 13176 16797 21137 21903 24852 26209 27966 47209 47626 47766 0 1 1 0 0 0 0 0 0 1 0 0 1 96 0 0 0 0 0 0 1 0 0 0 2 98 1 0 0 0 0 0 1 0 0 0 In [17]: database = np . array ( df [ df . columns [ 1 :]]) In [18]: database Out[18]: array([[1, 0, 0, ..., 1, 0, 0], [0, 0, 0, ..., 0, 0, 0], [1, 0, 0, ..., 0, 0, 0], ..., [0, 0, 1, ..., 0, 0, 0], [0, 0, 0, ..., 0, 0, 0], [0, 0, 1, ..., 0, 0, 0]], dtype=uint8) In [19]: N , M = database . shape In [20]: print ( f \"n_samples: {N} \" ) print ( f \"n_features: {M} \" ) n_samples: 59887 n_features: 10 In [21]: from kerasy.search.itemset import FrequentSet In [22]: model = FrequentSet ( threshold = 100 ) In [23]: model . fit ( database ) In [24]: # Frequent Itemset. (frq >= threshold) model . all Out[24]: [None, array([0]), array([0, 1]), array([0, 1, 3]), array([0, 2]), array([0, 2, 3]), array([0, 2, 3, 6]), array([0, 2, 3, 7]), array([0, 2, 5]), array([0, 2, 6]), array([0, 2, 6, 7]), array([0, 2, 7]), array([0, 2, 8]), array([0, 2, 9]), array([0, 3]), array([0, 3, 5]), array([0, 3, 6]), array([0, 3, 6, 7]), array([0, 3, 7]), array([0, 3, 8]), array([0, 3, 9]), array([0, 5]), array([0, 5, 6]), array([0, 5, 7]), array([0, 5, 8]), array([0, 5, 9]), array([0, 6]), array([0, 6, 7]), array([0, 6, 8]), array([0, 6, 9]), array([0, 7]), array([0, 7, 8]), array([0, 8]), array([0, 8, 9]), array([0, 9]), array([1]), array([1, 3]), array([1, 3, 4]), array([1, 3, 9]), array([1, 4]), array([1, 4, 5]), array([1, 4, 8]), array([1, 4, 9]), array([1, 5]), array([1, 5, 8]), array([1, 6]), array([1, 7]), array([1, 8]), array([1, 8, 9]), array([1, 9]), array([2]), array([2, 3]), array([2, 3, 4]), array([2, 3, 5]), array([2, 3, 6]), array([2, 3, 7]), array([2, 3, 8]), array([2, 3, 9]), array([2, 4]), array([2, 4, 5]), array([2, 4, 6]), array([2, 4, 7]), array([2, 4, 8]), array([2, 4, 9]), array([2, 5]), array([2, 5, 6]), array([2, 5, 7]), array([2, 5, 8]), array([2, 5, 9]), array([2, 6]), array([2, 6, 7]), array([2, 6, 8]), array([2, 6, 9]), array([2, 7]), array([2, 7, 8]), array([2, 8]), array([2, 8, 9]), array([2, 9]), array([3]), array([3, 4]), array([3, 4, 5]), array([3, 4, 5, 8]), array([3, 4, 6]), array([3, 4, 7]), array([3, 4, 8]), array([3, 4, 8, 9]), array([3, 4, 9]), array([3, 5]), array([3, 5, 7]), array([3, 5, 8]), array([3, 5, 8, 9]), array([3, 5, 9]), array([3, 6]), array([3, 6, 7]), array([3, 6, 8]), array([3, 6, 9]), array([3, 7]), array([3, 7, 8]), array([3, 8]), array([3, 8, 9]), array([3, 9]), array([4]), array([4, 5]), array([4, 5, 7]), array([4, 5, 8]), array([4, 5, 8, 9]), array([4, 5, 9]), array([4, 6]), array([4, 6, 8]), array([4, 6, 9]), array([4, 7]), array([4, 7, 8]), array([4, 8]), array([4, 8, 9]), array([4, 9]), array([5]), array([5, 6]), array([5, 6, 7]), array([5, 6, 8]), array([5, 7]), array([5, 7, 8]), array([5, 8]), array([5, 8, 9]), array([5, 9]), array([6]), array([6, 7]), array([6, 8]), array([6, 8, 9]), array([6, 9]), array([7]), array([7, 8]), array([8]), array([8, 9]), array([9])] Association Rule Mining Confidence : $\\mathrm{Supp}(A\\text{ and }B)/\\mathrm{Supp}(A)$ (Probability of $B$, Given $A$) What item is likely to be bought when $A$ is bought. Search: large support, confidence large Post-processing of itemset mining Summary Itemset mining is the simplest of all mining algorithms. Need to maintain occurrence of each pattern in database. Tree by lexicographical order is (implicitly) used. Closed Itemset Mining [Problem] in Frequent Pattern Mining Huge Number of frequent itemsets Hard to analyze Most of them are similar [Solution] Closed Pattern Mining Find only closed patterns Observation : Most frequent itemset $X$ can be extended without changing occurrence by adding new elements. definition : An itemset $X$ is a \"closed set\" if and only if there is no proper superset of $X$ with the same frequency (thus the same occurrence set). A closed itemset is the maximal set among all itemsets with the same occurrences. Equivalence class $[X] =\\left\\{Y | \\mathrm{Occ}(X)=\\mathrm{Occ}(Y)\\right\\}$ Implementation. Brute-force: Stupid Baseline ALGORITHM: Bruteforcel First, generate all frequent itemsets. Check them one by one via maximality test Finally, extract all closed sets Maximality test for each candidate frequent set $X$ Add some element $e$ in $\\Sigma$ to $X$ If $\\mathrm{Freq}(X U \\{e\\})$ is properly less than $\\mathrm{Freq}(X)$ then reject $X$. ※ Number of patterns usually exponential to input size, so Brute-force is exponential delay w.r.t. pattern size. Reverse Search A general mathematical framework to design enumeration algorithms. Can be used to prove the correctness of the algorithm. Popular in computational geometry. Data mining algorithms can be explained in remarkable simplicity. How to do reverse Search? Native Backtracking → Duplication Duplication chack by Marking → Exponential Memory. Reduction Map : Mapping from a children to the parent. LCM(Linear Time Closed Sets Miner) Key Algorithm: Prefix Preserving Closure Extension = Children generation from the reduction map. 飽和集合列挙アルゴリズムを用いた大規模データベースからのルール発見手法 Python Implementation: I'm doing now XD Summary Closure Extension: Jump from closed set to closed set. LCM: Linear Delay. Very fast in practice, too (Winner of FIMI'04(Frequent Itemset Mining Implementation Workshop)). Relation to clique enumeration. In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-5.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-5.html"},{"title":"機械学習概論","text":"講師： 山崎俊彦 参考書： CG-ARTS協会発行「ディジタル画像処理」 参考書： R. Szeliski, Computer Vision Algorithms and Applications, Springer (PDF版はインターネット上で無料公開) In [1]: import numpy as np import matplotlib.pyplot as plt 教師付き学習(Supervised learning) 大量の教師データがあれば、DNNですごい性能を出せるので、今の研究の主流は以下。 transfer learning (転移学習) few-shot learning (一枚だけで汎化性能を得る。) zero-shot learning (文字の情報を用いて画像の識別を行う。) メタ学習 (どうやって学習すれば良いかを学ぶ。) Nearest Neighbor法 決定木(decision tree) Support Vector Machine(SVM) アンサンブル学習 Neural Network Nearest Neighbor法 In [2]: N = 150 ; K = 3 In [3]: data = np . concatenate ([ np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 0 , 0 ], cov = np . eye ( 2 ), size = int ( N / 3 )), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 1 , 5 ], cov = np . eye ( 2 ), size = int ( N / 3 )), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 3 , 2 ], cov = np . eye ( 2 ), size = int ( N / 3 )), ]) x , y = data . T In [4]: cls = np . concatenate ([ np . full ( shape = int ( N / 3 ), fill_value = 0 ), np . full ( shape = int ( N / 3 ), fill_value = 1 ), np . full ( shape = int ( N / 3 ), fill_value = 2 ), ]) In [5]: xmin , ymin = np . min ( data , axis = 0 ) xmax , ymax = np . max ( data , axis = 0 ) Xs , Ys = np . meshgrid ( np . linspace ( xmin , xmax , 100 ), np . linspace ( ymin , ymax , 100 )) XYs = np . c_ [ Xs . ravel (), Ys . ravel ()] In [6]: # Nearest Neighbor Zs = np . asarray ([ cls [ np . argmin ( np . sum ( np . square ( xy - data ), axis = 1 ))] for xy in XYs ], dtype = int ) . reshape ( Xs . shape ) In [7]: plt . figure ( figsize = ( 8 , 6 )) plt . scatter ( x , y , c = cls , s = 50 ) plt . pcolor ( Xs , Ys , Zs , alpha = 0.2 ) plt . title ( \"Nearest Neighbor\" ), plt . xlim ( xmin , xmax ), plt . ylim ( ymin , ymax ) plt . xticks ([]), plt . yticks ([]) plt . show () 決定木(decision tree) $M$ 個のクラスに分割したとして、 $$\\text{Information gain} = \\text{Entropy}(S) - \\left\\{\\text{Entropy}(S_1) + \\cdots + \\text{Entropy}(S_M)\\right\\}$$ が最大になるように条件を設定する。 In [8]: from kerasy.ML.tree import DecisionTreeClassifier In [9]: N = 150 ; K = 3 In [10]: data = np . concatenate ([ np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 0 , 0 ], cov = np . eye ( 2 ), size = int ( N / 3 )), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 1 , 5 ], cov = np . eye ( 2 ), size = int ( N / 3 )), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 3 , 2 ], cov = np . eye ( 2 ), size = int ( N / 3 )), ]) x , y = data . T In [11]: cls = np . concatenate ([ np . full ( shape = int ( N / 3 ), fill_value = 0 ), np . full ( shape = int ( N / 3 ), fill_value = 1 ), np . full ( shape = int ( N / 3 ), fill_value = 2 ), ]) In [12]: xmin , ymin = np . min ( data , axis = 0 ) xmax , ymax = np . max ( data , axis = 0 ) Xs , Ys = np . meshgrid ( np . linspace ( xmin , xmax , 100 ), np . linspace ( ymin , ymax , 100 )) XYs = np . c_ [ Xs . ravel (), Ys . ravel ()] In [13]: model = DecisionTreeClassifier ( criterion = \"gini\" , max_depth = 3 , random_state = 0 ) model . fit ( data , cls ) predictions = model . predict ( data ) In [14]: # Decision Tree Zs = model . predict ( XYs ) . reshape ( Xs . shape ) In [15]: fig = plt . figure ( figsize = ( 18 , 4 )) for i , seed in enumerate ([ 0 , 1 , 5 ]): ax = fig . add_subplot ( 1 , 3 , i + 1 ) model = DecisionTreeClassifier ( criterion = \"gini\" , max_depth = 3 , random_state = seed ) model . fit ( data , cls ) predictions = model . predict ( data ) Zs = model . predict ( XYs ) . reshape ( Xs . shape ) ax . scatter ( x , y , c = predictions , s = 50 ) ax . pcolor ( Xs , Ys , Zs , alpha = 0.2 ) ax . set_title ( f \"Decision Tree seed= {seed} \" ), ax . set_xlim ( xmin , xmax ), ax . set_ylim ( ymin , ymax ) ax . set_xticks ([]), ax . set_yticks ([]) plt . tight_layout () plt . show () Support Vector Machine(SVM) $$f(\\mathbf{x}) = \\mathbf{w}\\cdot\\mathbf{x} + \\mathbf{b} = \\mathbf{0}$$ $\\|\\mathbf{w}\\|$ を決定するためには、黄色の線上にある点(support vector)のみ寄与。SVMの重要なところは、通常 $$\\mathrm{Error}_{\\text{世の中全体}}>\\mathrm{Error}_{\\text{見たことのある世界}}$$ であるが、発明者 Vapnic が $$\\mathrm{Error}_{\\text{世の中全体}}\\leq\\mathrm{Error}_{\\text{見たことのある世界}} + \\alpha$$ を証明してしまった。なお、$\\alpha$ も $\\|\\mathbf{w}\\|$ の最小化で最小化できるため、$\\|\\mathbf{w}\\|$ の最小化をひたすら頑張るだけで良い。 ※ 実装は ここ アンサンブル学習 名前 説明 強学習器 bagging トレーニングデータをランダムにサンプリングして学習器 $f&#94;b(\\mathbf{x}),(b=1,2,\\ldots,B)$ を作る。 $$f(\\mathbf{x}) = \\frac{1}{B}\\sum_b&#94;Bf&#94;b(\\mathbf{x})$$ Random Forest (RF) 決定木 $f&#94;r(\\mathbf{x}),(r=1,2,\\ldots,R)$ をランダムに作る。木がたくさんあるので森(forest)になる。 $$f(\\mathbf{x}) = \\frac{1}{R}\\sum_r&#94;Rf&#94;r(\\mathbf{x})$$ boosting 弱学習器 $f&#94;t(\\mathbf{x})$ の精度に応じた重み付き多数決を行う。なお、$\\alpha$ の決め方はadaboostやXGboostなど様々ある。 $$f(\\mathbf{x}) = \\frac{1}{T}\\sum_t&#94;T\\alpha&#94;tf&#94;t(\\mathbf{x})$$ Neural Network パーセプトロン $\\mathbf{w}$ を法線と考えると、超平面のあっちとこっちを判定しているだけ＝SVMと同じ。 perceptronの学習アルゴリズムは、下記の流れで収束することが知られている。 重み（法線）ベクトルをランダムに設定 2クラス $0,1$ があったとして、training dataから順に取り出して、$y$ を出力してみる（平面のどちら側か） 合っていたら何もしない。間違っていたら $$ \\begin{cases} \\mathbf{w}\\longleftarrow\\mathbf{w} +\\rho \\mathbf{x} & (\\text{クラス1を0と誤判定した時})\\\\ \\mathbf{w}\\longleftarrow\\mathbf{w} -\\rho \\mathbf{x} & (\\text{クラス0を1と誤判定した時}) \\end{cases}$$ 2,3を全てのtraining dataに対して行う。 全てのtraining dataに対して正解が規定回数に達したら終了。それ以外の場合、2に戻る。 # Pythonでプログラム化すると以下。 while True : n_true = 0 for x , c in zip ( data , cls ): if c == 1 and sum ( w * x ) < 0 : w += rho * x elif c == 0 and sum ( w * x ) >= 0 : w -= rho * x else : n_true += 1 if n_true > N * true_rate : break In [16]: n_cls0 = 30 ; n_cls1 = 40 N = n_cls0 + n_cls1 In [17]: w = np . random . RandomState ( 0 ) . uniform ( size = 2 ) # Initialization. rho = 1e-3 # step size. true_rate = 0.9 In [18]: # train_x data = np . concatenate ([ np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 2 , 4 ], cov = np . eye ( 2 ), size = n_cls0 ), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 3 , 1 ], cov = np . eye ( 2 ), size = n_cls1 ), ]) X1 , X2 = data . T # train_t cls = np . concatenate ([ np . zeros ( shape = ( n_cls0 ), dtype = int ), np . ones ( shape = ( n_cls1 ), dtype = int ) ]) In [19]: while True : n_true = 0 for x , c in zip ( data , cls ): if c == 1 and sum ( w * x ) < 0 : w += rho * x elif c == 0 and sum ( w * x ) >= 0 : w -= rho * x else : n_true += 1 if n_true > N * true_rate : break In [20]: X = np . linspace ( min ( X1 ), max ( X2 ), 1000 ) Y = ( - w [ 0 ] / w [ 1 ]) * X In [21]: plt . scatter ( X1 , X2 , c = cls ) plt . plot ( X , Y , color = \"red\" ) plt . xlabel ( \"$x_1$\" , fontsize = 18 ), plt . ylabel ( \"$x_2$\" , fontsize = 18 ) plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"映像メディア工学","url":"https://iwasakishuto.github.io/University/3A/映像メディア工学-4.html","loc":"https://iwasakishuto.github.io/University/3A/映像メディア工学-4.html"},{"title":"生物統計論 第5回","text":"In [1]: import numpy as np import matplotlib.pyplot as plt Section5.1 Bayesian Model Comparison Overfitting In [2]: N = 15 Ms = [ 2 , 4 , 8 , 16 ] seed = 0 In [3]: # Training data. x = np . random . RandomState ( seed ) . uniform ( low = 0 , high = 1 , size = N ) Noise = np . random . RandomState ( seed ) . normal ( loc = 0 , scale = 0.1 , size = N ) t = np . sin ( 2 * np . pi * x ) + Noise In [4]: fig = plt . figure ( figsize = ( 12 , 8 )) for i , M in enumerate ( Ms ): ax = fig . add_subplot ( 2 , 2 , i + 1 ) # Training. X = np . array ([ x ** m for m in range ( M + 1 )]) . T w = np . linalg . solve ( X . T . dot ( X ), X . T . dot ( t )) # For Validation plot. Xs = np . linspace ( 0 , 1 , 1000 ) t_true = np . sin ( 2 * np . pi * Xs ) t_pred = w . dot ( np . array ([ Xs ** m for m in range ( M + 1 )])) # RSS(Residual Sum of Squares) residual = t - w . dot ( np . array ([ x ** m for m in range ( M + 1 )])) RSS = residual . T . dot ( residual ) # Plot. ax . plot ( Xs , t_true , color = \"black\" , label = \"$t=\\sin(2\\pi x)$\" ) ax . plot ( Xs , t_pred , color = \"red\" , label = f \"prediction ($M= {M} $)\" ) ax . scatter ( x , t , edgecolors = 'blue' , facecolor = \"white\" , label = \"train data\" ) ax . set_title ( f \"Results (RSS=$ {RSS:.3f} $,M=$ {M} $)\" ), ax . set_xlabel ( \"$x$\" ), ax . set_ylabel ( \"$t$\" ) ax . set_xlim ( 0 , 1 ), ax . set_ylim ( - 1.2 , 1.2 ) ax . legend () plt . tight_layout () plt . show () Varying Component Number In [5]: from kerasy.ML.MixedDistribution import MixedGaussian from kerasy.utils.data_generator import generateMultivariateNormal In [6]: N = 200 cls = 6 seed = 123 In [7]: data , means = generateMultivariateNormal ( cls = cls , N = N , scale = 8e-3 , same = False , seed = seed ) x , y = data . T mux , muy = means . T In [8]: # Background Color xmin , ymin = np . min ( data , axis = 0 ); xmax , ymax = np . max ( data , axis = 0 ) Xs , Ys = np . meshgrid ( np . linspace ( xmin , xmax , 100 ), np . linspace ( ymin , ymax , 100 )) XYs = np . c_ [ Xs . ravel (), Ys . ravel ()] In [9]: Nfig = cls col = 3 row = Nfig // col + 1 if Nfig % col != 0 else Nfig//col fig = plt . figure ( figsize = ( 6 * col , 4 * row )) Likelihoods = [] for i , K in enumerate ( range ( 1 , cls + 1 )): ax = fig . add_subplot ( row , col , i + 1 ) model = MixedGaussian ( K = K , random_state = seed ) model . fit ( data , span = 20 ) Z = model . predict ( XYs ) idx = np . argmax ( model . predict ( data ), axis = 1 ) Zs = np . sum ( Z , axis = 1 ) . reshape ( Xs . shape ) # Likelihood. likelihood = np . sum ( Z ) ax . scatter ( x , y , c = idx ) ax . pcolor ( Xs , Ys , Zs , alpha = 0.2 ) ax . set_xlim ( xmin , xmax ) ax . set_ylim ( ymin , ymax ) ax . set_title ( f \"K= {K} , {np.sum(Z):.1f}\" ) Likelihoods . append ( likelihood ) plt . tight_layout () plt . show () In [10]: fig = plt . figure ( figsize = ( 12 , 4 )) axL = fig . add_subplot ( 1 , 2 , 1 ) axL . scatter ( x , y , label = \"data\" ) axL . scatter ( mux , muy , label = \"mean\" , marker = \"*\" , color = \"red\" , s = 150 ) axL . set_title ( \"Training Data.\" ) axL . legend () axR = fig . add_subplot ( 1 , 2 , 2 ) axR . plot ( np . arange ( cls ) + 1 , Likelihoods ) axR . scatter ( np . arange ( cls ) + 1 , Likelihoods ) axR . set_xlabel ( \"num comp\" ) axR . set_ylabel ( \"likelihoods\" ) axR . set_title ( \"Log likelihood vs num comp\" , fontsize = 18 ) plt . tight_layout () plt . show () Cross Validation ※ Not Bayesian estimate the skill of a machine learning model on unseen data. use a limited sample in order to estimate how the model is expected to perform in general when used to make predictions on data not used during the training of the model. In [11]: n_fold = 5 size = N // n_fold Kmax = 30 In [12]: Likelihoods = [] CrossValidationLikelihoods = [] for i , K in enumerate ( range ( 1 , Kmax + 1 )): H = 0 for h in range ( n_fold ): mask = np . ones ( shape = N , dtype = bool ) mask [ h * size :( h + 1 ) * size ] = False model = MixedGaussian ( K = K , random_state = seed ) model . fit ( data [ mask ], span = 20 ) Z = model . predict ( data [ np . logical_not ( mask )]) H += np . sum ( Z ) model = MixedGaussian ( K = K , random_state = seed ) model . fit ( data , span = 20 ) Z = model . predict ( data ) Likelihoods . append ( np . sum ( Z )) CrossValidationLikelihoods . append ( H ) In [13]: fig = plt . figure ( figsize = ( 12 , 4 )) axL = fig . add_subplot ( 1 , 2 , 1 ) axL . plot ( np . arange ( Kmax ) + 1 , CrossValidationLikelihoods ) axL . scatter ( np . arange ( Kmax ) + 1 , CrossValidationLikelihoods ) axL . set_xlabel ( \"num comp\" ), axL . set_ylabel ( \"Cross Validation likelihoods\" ), axL . set_title ( \"Cross Validation Log likelihood vs num comp\" , fontsize = 18 ) axR = fig . add_subplot ( 1 , 2 , 2 ) axR . plot ( np . arange ( Kmax ) + 1 , Likelihoods ) axR . scatter ( np . arange ( Kmax ) + 1 , Likelihoods ) axR . set_xlabel ( \"num comp\" ), axR . set_ylabel ( \"likelihoods\" ), axR . set_title ( \"Log likelihood vs num comp\" , fontsize = 18 ) plt . tight_layout () plt . show () Cross Entropy of Prediction ※ Not Bayesian empirical distribution $D = \\left\\{\\mathbf{x}&#94;{(h)}|h=1,\\ldots,n\\right\\}$ $x\\sim\\mathrm{Emp}(D)$ $f_X(\\mathbf{X}) = \\frac{1}{n}\\sum_{h=1}&#94;n\\delta\\left(\\mathbf{x}-\\mathbf{x}&#94;{(h)}\\right)$ $\\mathbb{E}\\left(g(\\mathbf{x})\\right) = \\frac{1}{n}\\sum_{h=1}&#94;n\\int d\\mathbf{x}g(\\mathbf{x})\\delta\\left(\\mathbf{x}-\\mathbf{x}&#94;{(h)}\\right) = \\frac{1}{n}\\sum_{h=1}&#94;ng\\left(\\mathbf{x}&#94;{(h)}\\right)$ In [14]: seed = 0 N = 1000 In [15]: data = np . random . RandomState ( seed ) . normal ( size = N ) In [16]: Emp = dict ( zip ( data , np . zeros ( N ))) for x in data : Emp [ x ] += 1 / N In [17]: for X , Y in sorted ( Emp . items ()): plt . plot (( X , X ),( 0 , Y ), color = \"black\" , alpha = 0.1 ) plt . title ( \"Empirical distribution (Normal)\" ) plt . xlabel ( \"x\" ) plt . show () We can assume Empirical distribution as a true distribution . Cross Entropy $$ \\begin{aligned} H(D,\\boldsymbol{\\theta}) &= \\text{Cross Entropy between }f_{\\text{Emp}(D)} \\text{ and }f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right)\\\\ &= \\mathbb{E}_{\\text{Emp}(D)}\\left(-\\log f\\left(\\mathbf{X}|\\boldsymbol{\\theta}\\right)\\right)\\\\ &= -\\int f_{\\text{Emp}(D)}(\\mathbf{x})\\log f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right)d\\mathbf{x}\\\\ &= -\\frac{1}{n}\\sum_{h=1}&#94;n\\log f\\left(\\mathbf{x}&#94;{(h)}|\\boldsymbol{\\theta}\\right)\\\\ &= -\\bar{l}&#94;{(n)}\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right) \\end{aligned} $$ We can also say that: $$ \\begin{aligned} H(D,\\boldsymbol{\\theta}) &= -\\int f_{\\text{Emp}}(\\mathbf{x})\\log f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right)d\\mathbf{x}\\\\ &\\Rightarrow \\int f_{\\text{Emp}}(\\mathbf{x})\\log f_{\\text{Emp}}(\\mathbf{x})d\\mathbf{x} -\\int f_{\\text{Emp}}(\\mathbf{x})\\log f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right)d\\mathbf{x}\\\\ &= -\\int f_{\\text{Emp}}(\\mathbf{x})\\log\\left\\{\\frac{f_{\\text{Emp}}(\\mathbf{x})}{f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right)}\\right\\}d\\mathbf{x}\\\\ &= \\mathrm{KL}\\left(f_{\\text{Emp}}\\|f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right)\\right)\\\\ &= \\text{Kullback-Leibler divergence between}f_{\\text{Emp}(D)} \\text{ and }f\\left(\\mathbf{x}|\\boldsymbol{\\theta}\\right) \\end{aligned} $$ Evidence Approximation ※ Yes Bayesian In a fully Bayesian treatment of the linear basis function model, we would introduce prior distributions over the hyperparameters $\\alpha$, and $\\beta$. $$ \\begin{aligned} p(t|\\mathbf{t},\\mathbf{X},\\mathbf{x},\\alpha,\\beta) &= \\int p(t|\\mathbf{w},\\mathbf{x},\\beta)p(\\mathbf{w}|\\mathbf{t},\\mathbf{X},\\alpha,\\beta)d\\mathbf{w}& (3.57)\\\\ &\\Rightarrow \\int p(t|\\mathbf{w},\\mathbf{x},\\beta)p(\\mathbf{w}|\\mathbf{t},\\mathbf{X},\\alpha,\\beta)p(\\alpha,\\beta|\\mathbf{t},\\mathbf{X})d\\mathbf{w}d\\alpha d\\beta& (3.74) \\end{aligned} $$ Marginalize with respect to these hyperparameters as well as with respect to the parameters $\\mathbf{w}$ to make predictions. Complete marginalization over all of these variables is analytically intractable. We will maximize $(3.74)$ in line with the framework of empirical Bayes (or type 2 maximum likelihood , generalized maximum likelihood , evidence approximation ) Obtain the marginal likelihoo function by first integrating over the parameters $\\mathbf{w}$ $$p(\\mathbf{t}|\\alpha,\\beta) = \\int p(\\mathbf{t}|\\mathbf{w},\\mathbf{X},\\beta)p(\\mathbf{w}|\\alpha)d\\mathbf{w}\\qquad (3.77)$$ Maximize $p(\\mathbf{t}|\\alpha,\\beta)$ with respect to $\\alpha$ and $\\beta$. In [18]: from kerasy.utils.preprocessing import PolynomialBaseTransformer from kerasy.utils.data_generator import generateSin , generateGausian from kerasy.ML.linear import EvidenceApproxBayesianRegression In [19]: N = 20 Ms = np . arange ( 10 ) xmin = 0 ; xmax = 1 seed = 0 In [20]: x_train , y_train = generateSin ( size = N , xmin = xmin , xmax = xmax , seed = seed ) _ , y_noise = generateGausian ( size = N , x = x_train , loc = 0 , scale = 0.15 , seed = seed ) y_train += 1 + y_noise In [21]: alpha = 100 beta = 100 In [22]: evidences = [] history = [] for M in Ms : phi = PolynomialBaseTransformer ( M = M ) x_train_features = phi . transform ( x_train ) model = EvidenceApproxBayesianRegression ( alpha = alpha , beta = beta , iter_max = 10000 ) model . fit ( x_train_features , y_train ) evidences . append ( model . evidence ( x_train_features , y_train )) history . append ( model ) best_M = np . argmax ( evidences [ 1 :]) + 1 best_model = history [ best_M ] In [23]: x_test = np . linspace ( xmin , xmax , 1000 ) phi = PolynomialBaseTransformer ( M = best_M ) x_test_features = phi . transform ( x_test ) y_test = 1 + np . sin ( 2 * np . pi * x_test ) y_pred , y_std = best_model . predict ( x_test_features ) In [24]: fig = plt . figure ( figsize = ( 12 , 4 )) axEVI = fig . add_subplot ( 1 , 2 , 1 ) axEVI . plot ( Ms , evidences ) axEVI . scatter ( Ms , evidences ) axEVI . set_title ( \"The relationship between 'model evidence' and $M$\" ), axEVI . set_xlabel ( \"$M$\" ), axEVI . set_ylabel ( \"$\\log({model\\ evidence})$\" , fontsize = 16 ) axBest = fig . add_subplot ( 1 , 2 , 2 ) axBest . plot ( x_test , y_test , color = \"black\" , label = \"$\\sin(2\\pi x)$\" ) axBest . plot ( x_test , y_pred , color = \"red\" , label = \"predict($\\mu$)\" ) axBest . fill_between ( x_test , y_pred - y_std , y_pred + y_std , color = \"pink\" , alpha = 0.5 ) axBest . scatter ( x_train , y_train , s = 50 , edgecolors = 'black' , facecolor = \"white\" , label = \"train data\" ) axBest . set_ylim ( - 0.5 , 2.5 ), axBest . legend (), axBest . set_title ( f \"Bayesian Linear Regression (M= {best_M} )\" ) plt . tight_layout () plt . show () In [25]: print ( \"[Best Parameter]\" ) print ( f \"M = {best_M} \" ) print ( f \"alpha = {best_model.alpha} \" ) print ( f \"beta = {best_model.beta} \" ) [Best Parameter] M = 3 alpha = 0.0025750535934692723 beta = 56.07833727501231 Section5.2 Markov Process Biological Diversity Single Origin of Life \"Nothing in Biology Makes Sense Except in the Light of Evolution\" C.T. Dobzhansky Stochastic Transcription (Stochasticity vs Regulation) Stochasticity in Development Stochastic Process Mathematical description of stochastic behaviors. data: $\\left\\{\\mathbf{X}_t|t=1,\\ldots,n\\right\\}$ Probability: $\\mathbb{P}\\left(\\mathbf{X}_{t_m} = \\mathbf{x}_{t_m},\\ldots,\\mathbf{X}_{t_2} = \\mathbf{x}_{t_2},\\mathbf{X}_{t_1} = \\mathbf{x}_{t_1}\\right)$ $\\omega$ is one of the random paths. $\\mathbf{X}_t$ is a map indicats which state random paths $\\omega$ is in at time $t$ Events $E$ is a constraint on the value of $\\mathbf{X}_t$ at some times. $P(E)$ is the probability if the random paths satisfy the constraint $E$. markov Process $$\\mathbb{P}\\left(\\mathbf{X}_t = \\mathbf{x}_t|\\mathbf{X}_{t-1} = \\mathbf{x}_{t-1},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right) = \\mathbb{P}\\left(\\mathbf{X}_t=\\mathbf{x}_t|\\mathbf{X}_{t-1}=\\mathbf{x_{t-1}}\\right)$$ Decomposition of Joint Distribution $$ \\begin{aligned} &\\mathbb{P}\\left(\\mathbf{X}_t = \\mathbf{x}_t,\\mathbf{X}_{t-1} = \\mathbf{x}_{t-1},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\\\ &=\\mathbb{P}\\left(\\mathbf{X}_t = \\mathbf{x}_t | \\mathbf{X}_{t-1} = \\mathbf{x}_{t-1},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\times\\mathbb{P}\\left(\\mathbf{X}_{t-1} = \\mathbf{x}_{t-1},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\\\ &=\\mathbb{P}\\left(\\mathbf{X}_t = \\mathbf{x}_t | \\mathbf{X}_{t-1} = \\mathbf{x}_{t-1},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\times \\mathbb{P}\\left(\\mathbf{X}_{t-1} = \\mathbf{x}_{t-1} | \\mathbf{X}_{t-2} = \\mathbf{x}_{t-2},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\times \\mathbb{P}\\left(\\mathbf{X}_{t-2} = \\mathbf{x}_{t-2},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\\\ &= \\mathbb{P}\\left(\\mathbf{X}_t = \\mathbf{x}_t | \\mathbf{X}_{t-1} = \\mathbf{x}_{t-1},\\ldots,\\mathbf{X}_0 = \\mathbf{x}_0\\right)\\times \\cdots \\times\\mathbb{P}\\left(\\mathbf{X}_2=\\mathbf{x}_2|\\mathbf{X}_1=\\mathbf{x}_1,\\mathbf{X}_0=\\mathbf{x}_0\\right)\\times \\mathbb{P}\\left(\\mathbf{X}_1=\\mathbf{x}_1|\\mathbf{X}_0=\\mathbf{x}_0\\right)\\times\\mathbb{P}\\left(\\mathbf{X}_0=\\mathbf{x}_0\\right)\\\\ &= \\mathbb{P}\\left(\\mathbf{X}_t = \\mathbf{x}_t | \\mathbf{X}_{t-1} = \\mathbf{x}_{t-1}\\right) \\times \\mathbb{P}\\left(\\mathbf{X}_{t-1} = \\mathbf{x}_{t-1} | \\mathbf{X}_{t-2} = \\mathbf{x}_{t-2}\\right)\\times \\cdots\\times\\mathbb{P}\\left(\\mathbf{X}_1=\\mathbf{x}_1|\\mathbf{X}_0=\\mathbf{x}_0\\right)\\times\\mathbb{P}\\left(\\mathbf{X}_0=\\mathbf{x}_0\\right)\\quad\\left(\\because \\text{Markov Process}\\right) \\end{aligned} $$ Transition Matrix (Assume Time Independence ): $$P = \\left\\{P_{ij}\\right\\} = \\left\\{\\mathbb{P}\\left(\\mathbf{X}_t=i|\\mathbf{X}_{t-1}=j\\right)\\right\\},\\quad P_{ij}\\geq0,\\sum_i P_{ij}=1$$ Computing transition probability Birth and Death process $$ P= \\left(\\begin{matrix}1-\\lambda_0&\\mu_1&0&0\\\\\\lambda_0&1-\\lambda_1-\\mu_1&\\mu_2&0\\\\0&\\lambda_1&1-\\lambda_2-\\mu_2&\\mu_3\\\\0&0&\\lambda_2&1-\\mu_3\\end{matrix}\\right) $$ $P = U\\Lambda U&#94;{-1}$: Eigen decomposition $P&#94;n = U\\Lambda&#94;n U&#94;{-1}$ In [26]: def makeRandomP ( N , seed = 123 ): lambdas = np . r_ [ np . random . RandomState ( seed ) . uniform ( low = 0 , high = 1 / N , size = N - 1 ), np . zeros ( shape = 1 )] mus = np . r_ [ np . zeros ( shape = 1 ), np . random . RandomState ( seed + 1 ) . uniform ( low = 0 , high = 1 / N , size = N - 1 )] P = np . zeros ( shape = ( N , N )) for i in range ( N ): P [ i , - 1 + i ] = mus [ i ]; P [ i , i ] = 1 - mus [ i ] - lambdas [ i ]; P [ i , 1 + i if 1 + i < N else 1 + i - N ] = lambdas [ i ] return P In [27]: def LongTimeBehaviors ( P , even = True ): inf = 50 if even else 51 eigenvals , eigenvecs = np . linalg . eig ( P ) Lambda = np . diag ( eigenvals ) eigenvecs_inv = np . linalg . inv ( eigenvecs ) Pn = np . dot ( eigenvecs , np . dot ( Lambda ** inf , eigenvecs_inv )) Pn = np . where ( Pn < 1e-5 , 0 , Pn ) return Pn example Periodic In [28]: P = np . array ([ [ 0 , 1 , 0 ], [ 1 / 2 , 0 , 1 / 2 ], [ 0 , 1 , 0 ] ]) In [29]: print ( f \"P&#94;2n: \\n {LongTimeBehaviors(P, even=True)} \\n \" ) print ( f \"P&#94;2n+1: \\n {LongTimeBehaviors(P, even=False)}\" ) P&#94;2n: [[0.5 0. 0.5] [0. 1. 0. ] [0.5 0. 0.5]] P&#94;2n+1: [[0. 1. 0. ] [0.5 0. 0.5] [0. 1. 0. ]] Reducible In [30]: P = np . array ([ [ 1 / 3 , 3 / 4 , 0 , 0 ], [ 2 / 3 , 1 / 4 , 0 , 0 ], [ 0 , 0 , 1 / 3 , 3 / 4 ], [ 0 , 0 , 2 / 3 , 1 / 4 ] ]) In [31]: LongTimeBehaviors ( P ) Out[31]: array([[0.52941176, 0.52941176, 0. , 0. ], [0.47058824, 0.47058824, 0. , 0. ], [0. , 0. , 0.52941176, 0.52941176], [0. , 0. , 0.47058824, 0.47058824]]) Absorbing In [32]: P = np . array ([ [ 1 , 1 / 2 , 0 , 0 ], [ 0 , 0 , 1 / 2 , 0 ], [ 0 , 1 / 2 , 0 , 0 ], [ 0 , 0 , 1 / 2 , 1 ] ]) In [33]: LongTimeBehaviors ( P ) Out[33]: array([[1. , 0.66666667, 0.33333333, 0. ], [0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. ], [0. , 0.33333333, 0.66666667, 1. ]]) Irreducible, Aperiodic In [34]: P = np . array ([ [ 2 / 3 , 1 / 12 , 0 ], [ 1 / 3 , 5 / 8 , 1 / 8 ], [ 0 , 7 / 24 , 7 / 8 ], ]) In [35]: LongTimeBehaviors ( P ) Out[35]: array([[0.06976762, 0.06976748, 0.06976741], [0.27906992, 0.2790698 , 0.27906974], [0.65116246, 0.65116272, 0.65116286]]) In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物統計論","url":"https://iwasakishuto.github.io/University/3A/生物統計論-5.html","loc":"https://iwasakishuto.github.io/University/3A/生物統計論-5.html"},{"title":"レポート課題4(10/24出題)","text":"igaeXMTjByDItK6eXQcKjw==;;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-report4.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-report4.html"},{"title":"探索","text":"講師： 本多 淳也 参考書： エージェントアプローチ人工知能 第2版 参考書： イラストで学ぶ 人工知能概論 講義概要 状態空間 15パズル 迷路 コスト無しグラフの探索 コスト付きグラフの探索 ゲーム木の探索 状態空間 ありうる局面の１つ１つを 状態 と言う。 状態全体からなる集合を 状態空間 と言う。 目的： 初期状態から出発して、許される 状態遷移 を繰り返し、最終状態へたどり着くこと。 これは、 グラフ(graph) の 探索(search) 問題と等価 （ノードが状態に、エッジが状態遷移にそれぞれ対応する。） 15パズル ルール： 一度に動かせるのは1パネルのみ。 飽きますに隣のパネルをずらす操作のみ可能 目標： 「できるだけ少ない手数で」 与えられた配置から元の配置に戻すこと。 元に戻すことが不可能な問題を識別する。 迷路 目的：スタートからゴールまで誘導する。 状態(state) $s$：移動できる場所 行動(action) $a$：進む方向 コスト無しグラフの探索 用語 意味 オープンリスト(open list) これから探索するノードの候補リスト クローズドリスト(closed list) 探索が終わったノードのリスト キュー(queue) 先入れ先出し スタック(stack) 後入れ先出し 探索の基本アルゴリズム open_list = [ initial_state ] # オープンリストは初期化状態のみ closed_list = [] # クローズドリストは空 while ( open_list ): # オープンリストが空になるまで以下を繰り返す。 state = getOptimalState ( open_list ) # オープンリストから（何らかの基準で）状態sを取り出す。 closed_list . append ( state ) # sをクローズドリストに追加する。 if state == last_state : break # sが最終状態ならば探索終了 open_list += [ s for s in state . transibles () if s not in closed_list ] # sから遷移可能でまだクローズドリストに入っていない状態をオープンリストに追加する。 深さ優先探索 行き止まりに当たるまで進み、ゴールが見つからなかったら直近の分岐に戻って別の道を探す探索法。 メモリ使用量が少ない ゴールが近くにあっても、他の深い別れ道に迷い込むと時間がかかる ゴールが複数ある時、一番近くのものが見つかるとは限らない オープンリストは スタック （後入れ先出し） にする。 open_list = [ initial_state ] closed_list = [] while ( open_list ): state = open_list . pop ( 0 ) # オープンリストの先頭の状態sを取り出す。 closed_list . append ( state ) if state == last_state : break open_list . push ([ s for s in state . transibles () if s not in closed_list ]) # sから遷移可能でまだクローズドリストに入っていない状態をオープンリストの\"先頭に\"追加する。 幅優先探索 分かれ道に来たらそれぞれの道を一歩ずつ進み，ゴールが見つからなかったらそれぞれの道をもう一歩ずつ進む探索法。 ゴールが近くにある時、早く見つかる。 ゴールが複数ある時、一番近くのものが見つかる。 分かれ道での分岐数が多いとメモリ使用量が多い。 オープンリストは キュー （先入れ後出し） にする。 open_list = [ initial_state ] closed_list = [] while ( open_list ): state = open_list . pop ( - 1 ) # オープンリストの\"末尾\"の状態sを取り出す。 closed_list . append ( state ) if state == last_state : break open_list . push ([ s for s in state . transibles () if s not in closed_list ]) # sから遷移可能でまだクローズドリストに入っていない状態をオープンリストの\"先頭に\"追加する。 反復深化探索 深さに制限をつけて深さ優先探索を行い、徐々に深さを深くしていく探索法 ゴールが近くにある時、早く見つかる ゴールが複数ある時、一番近くのものが見つかる 同じノードを何度も訪れる（分岐が多いと影響小） まとめ 深さ優先探索・幅優先探索・反復深化探索は、グラフに関する特別な知識を使わずにオープンリストから状態を選択することから、 ブラインド探索(blined search) と呼ばれる。 # 探さ優先探索 幅優先探索 反復深化探索 完全性（必ず解が見つかるか） (completeness) $m$ が有限なら Yes Yes Yes 時間計算量 (time complexity) $\\mathrm{O}(b&#94;m)$ $\\mathrm{O}(b&#94;d)$ $\\mathrm{O}(b&#94;d)$ 空間計算量(space complexity) $\\mathrm{O}(bm)$ $\\mathrm{O}(b&#94;d)$ $\\mathrm{O}(bd)$ 最適性（一番近くの解が見つかるか） (optimality) Yes Yes Yes $b$：最大分岐数 $d$：一番浅い解の深さ $m$：最大の深さ コスト付きグラフの探索 各エッジに 遷移コスト が割り当てられている場合の最適遷移パス探索問題。 ブラインド探索 ：グラフに関する特別な知識を使わずにオープンリストから状態を選択。 貪欲探索(greedy search)：現在の状態からの遷移コストが最小の状態を選ぶ。 （深さ優先探索に対応） 最適探索(optimal search)：初期状態からの遷移コスト和が最小の状態を選ぶ。 （各コストが1だと幅優先探索になる。ダイクストラ法とも。） ヒューリスティック探索（最良優先探索, best-first search） ：グラフに関する何らかの知識を使ってオープンリストから適切と思われる状態を選択。 貪欲最良優先探索 $A&#94;{\\ast}$ 探索 貪欲最良優先探索 $\\hat{h}(s)$ を最小にする状態を選ぶ $h(s)$：$s$ から最終状態までの遷移コスト和の最小値 $\\hat{h}(s)$：$h(s)$ の推定（ヒューリスティック関数） 一度オープンリストに入ったの評価値更新は不要 ヒューリスティック関数の選び方： ユーザが 事前知識 により構築（例：直線距離） データから 機械学習 により自動構築 一般には完全性も最適性もないが、実用上は（そこそこ）うまくいくことが（それなりに）多い。 $A&#94;{\\ast}$ 探索(A-start search) $s$ を経由する場合の遷移コスト和の推定値 $\\left(\\hat{g}(s)+\\hat{h}(s)\\right)$ を最小にする状態を選ぶ。 $g(s)$：初期状態から $s$ までの遷移コスト和の最小値 $\\hat{g}(s)$：探索済みノードから $s$ に遷移する場合の最小値（ダイクストラ法と同じ） ノード $s$ を訪れると隣接ノードの $\\hat{g}(s&#94;{\\prime})$ が更新される。 $h(s)$：$s$ から最終状態までの遷移コスト和の最小値 $\\hat{h}(s)$：$h(s)$ のヒューリスティック推定値 最適経路上の $s$ ではいずれも $g(s)+h(s)$ が最小、経路外の点ではそれより大きい値をとることを利用 $\\forall s, 0\\leq\\hat{h}(s)\\leq h(s)$ が成り立つ時、$\\hat{h}(s)$ は 許容的(admissible) であるといい、この場合には $A&#94;{\\ast}$ 探索は最適性を持つ。 ※ 実装等は、 レポート課題 に記載。 In [1]: from kerasy.search.Astar import OptimalTransit In [2]: n = 3 m = 3 initial_str = \"2,-1,6,1,3,4,7,5,8\" last_str = \"1,2,3,4,5,6,7,8,-1\" In [3]: OptimalTransit ( n , m , initial_str , last_str , heuristic_method = \"Manhattan_distance\" , n_row = 5 ) n_transition = 9 ゲーム木の探索 2人のプレイヤーが交互に遷移先を決めるゲーム（ex. 将棋・囲碁・リバーシ・◯×など）における最適遷移探索問題 ミニマックス探索 自分は一番良い（点数を最大化する）手を選ぶ 相手は一番悪い（点数を最小化する）手を選ぶ アルファ・ベータ探索 ミニ・マックス探索では、全ての局面に対する点数を求める必要があり、時間がかかる。 不要な点数計算を省略することで効率化 $\\alpha$：max計算の際の下界値 $\\beta$：min計算の際の上界値 モンテカルロ木探索 アルファ・ベータ法を用いても、ゲーム木を深く探索するのは困難（$b&#94;d$ が $b&#94;{d/2}$ になる程度。） そこで、 ランダムに 手を打つ。 囲碁やスケジューリングなどで活用されている。 まとめ 広大な状態空間を効率よく探索したい コスト無しグラフの探索 コスト付きグラフの探索 ゲーム木の探索 膨大な状態空間の探索には，近似的な手法が有用 事前知識や機械学習によるヒューリスティック関数の構築 モンテカル 木探索 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-4.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-4.html"},{"title":"ガウシアンプロセスとベイズ最適化","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) In [1]: import numpy as np import matplotlib.pyplot as plt import seaborn as sns データ駆動科学とベイズ最適化 データ駆動科学では、データに基づいて、新たな知見・事柄を発見することが求められる 単に予測を行うだけでなく、それに基づいて「行動」を設計することが必要 これらは、「ベイズ最適化」の枠組みに乗ることが多い 概要 ベイズ線形回帰 ガウシアンプロセス ベイズ最適化 ベイズ線形回帰 線形回帰モデルのパラメータを 最尤推定 によって決める場合、 解こうとしている問題に合わせてモデルの複雑さを適切に決めることが必要 ↑は、単純に尤度を最大化するだけでは 過学習 を引き起こしてしまう。 データの一部を独立なテスト用データとして取っておく ことでモデルの汎化性能を評価できるが、この方法は 計算量が大きく 、 データの無駄遣い となり得る。 これらの問題に対処するため、線形回帰モデルをベイズ的に取り扱うことで最尤推定の過学習を回避するとともに 「訓練データだけからモデルの複雑さを自動的に決定する。」 概要 解こうとしている問題に沿った 尤度関数(likelihood function) （ $p(\\mathbf{t}|\\mathbf{X},\\mathbf{w})$ ） を定義する。 モデルパラメータの 事前分布(prior distribution) （ $p(\\mathbf{w})$ ） を、 尤度関数 の 共役事前分布(conjugate prior) の形で定義する。 ベイズの公式より、 事後分布(posterior distribution) は 事前分布 と 尤度関数 の積に比例する。 （ $p(\\mathbf{w}|\\mathbf{t},\\mathbf{X})\\propto p(\\mathbf{t}|\\mathbf{X},\\mathbf{w})\\cdot p(\\mathbf{w})$ ） あるパラメータ （ $\\mathbf{w}$ ） 下で入力 $\\mathbf{x}$ が与えられた時の確率分布 （ $p(t|\\mathbf{w},\\mathbf{x})$ ） を、3で求めた 事後分布 （ $p(\\mathbf{w}|\\mathbf{t},\\mathbf{X})$ ） で重み付けしながら 周辺化(marginalization) する （ $p(t|\\mathbf{t},\\mathbf{X},\\mathbf{x}) = \\int p(t|\\mathbf{w},\\mathbf{x})p(\\mathbf{w}|\\mathbf{t},\\mathbf{X})d\\mathbf{w}$ ） ことで、 予測分布(predivtive distribution) （ $p(t|\\mathbf{w},\\mathbf{x})$ ） を得る。 具体例 ※ $D$ 次元の説明変数 $\\mathbf{x}$ で一次元の目標変数 $t$ を線形回帰するモデルをベイズ的に取り扱う。 目標変数 $t$ が決定論的な関数 $y(\\mathbf{x},\\mathbf{w})$ と加法性のガウスノイズの和で与えられる場合を考える。 $$t = y(\\mathbf{x},\\mathbf{w}) + \\epsilon\\qquad (3.7)$$ ここで、$\\epsilon$ は期待値が $0$ で精度が $\\beta$ のガウス確率変数である。すなわち、以下で表すことができる。 $$p(t|\\mathbf{x},\\mathbf{w},\\beta) = \\mathcal{N}\\left(t|y(\\mathbf{x},\\mathbf{w}),\\beta&#94;{-1}\\right)\\qquad (3.8)$$ データ点が $(3.8)$ の分布から 独立に生成された と仮定すると、尤度関数を次のように表せる。 $$p(\\mathbf{t}|\\mathbf{X},\\mathbf{w},\\beta) = \\prod_{n=1}&#94;N\\mathcal{N}\\left(t_n|\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n),\\beta&#94;{-1}\\right)\\qquad (3.10)$$ モデルパラメータ $\\mathbf{w}$ の事前分布を導入する。 ここで、 $\\beta$ が既知 と仮定すると、上記の尤度関数の共役事前分布である、期待値 $\\mathbf{m}_0$ 共分散 $\\mathbf{S}_0$ を持つガウス分布で表すのが適当である。 $$p(\\mathbf{w}) = \\mathcal{N}(\\mathbf{w}|\\mathbf{m}_0,\\mathbf{S}_0)\\qquad (3.48)$$ ※ なお、$\\mathbf{w},\\beta$ の両方が未知である場合、共役事前分布は ガウス-ガンマ分布 隣、予測分布は スチューデントのt分布 となる。 ベイズの公式より、 事後分布は事前分布と尤度関数の積に比例する ので、これを解くことで事後分布を次の形で書き出すことができる。 （導出） $$ p(\\mathbf{w}|\\mathbf{t},\\mathbf{X},\\beta) = \\mathcal{N}(\\mathbf{w}|\\mathbf{m}_N,\\mathbf{S}_N) \\qquad (3.49)\\\\ \\begin{cases} \\mathbf{m}_N &= \\mathbf{S}_N\\left(\\mathbf{S}_0&#94;{-1}\\mathbf{m}_0 + \\beta\\boldsymbol{\\Phi}&#94;T\\mathbf{t}\\right) & (3.50)\\\\ \\mathbf{S}_N&#94;{-1} &= \\mathbf{S}_0&#94;{-1} + \\beta\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi} & (3.51) \\end{cases} $$ $\\mathbf{w}$ で周辺化することで、予測分布を求めるが、議論の簡単のために、 「モデルパラメータ $\\mathbf{w}$ の事前分布 $p(\\mathbf{w})$ が、単一の制度パラメータ $\\alpha$ で記述される期待値が $0$ の等方的ガウス分布である」 とする。 $$p(\\mathbf{w}|\\alpha) = \\mathcal{N}\\left(\\mathbf{w}|\\mathbf{0},\\alpha&#94;{-1}\\mathbf{I}\\right)\\qquad (3.52)$$ この時、上記の $\\mathbf{w}$ の事後分布 $(3.49)$ の形は変わらず、$\\mathbf{m}_N,\\mathbf{S}_N$ の値が $$ \\begin{cases} \\mathbf{m}_N &= \\beta\\mathbf{S}_N\\boldsymbol{\\Phi}&#94;T\\mathbf{t} & (3.53)\\\\ \\mathbf{S}_N&#94;{-1} &= \\alpha\\mathbf{I} + \\beta\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi} & (3.54) \\end{cases} $$ となる。この条件下で周辺化すると、以下の結果を得る。 （導出） $$ \\begin{aligned} p(t|\\mathbf{t},\\mathbf{X},\\mathbf{x},\\alpha,\\beta) &= \\int p(t|\\mathbf{w},\\mathbf{x},\\beta)p(\\mathbf{w}|\\mathbf{t},\\mathbf{X},\\alpha,\\beta)d\\mathbf{w}& (3.57)\\\\ &= \\mathcal{N}\\left(t|\\mathbf{m}_N&#94;T\\phi(\\mathbf{x}),\\sigma_N&#94;2(\\mathbf{x})\\right) & (3.58)\\\\ \\sigma_N&#94;2(\\mathbf{x}) &= \\frac{1}{\\beta} + \\phi(\\mathbf{x})&#94;T\\mathbf{S}\\phi(\\mathbf{x}) & (3.59) \\end{aligned} $$ ※ ここで、$(3.59)$ の第1項はデータに含まれるノイズを、第2項は $\\mathbf{w}$ に関する不確かさを反映している。 事後分布の計算の導出過程 $$ \\begin{aligned} \\text{likelihood function : } p(\\mathbf{t}|\\mathbf{X},\\mathbf{w},\\beta) &= \\prod_{n=1}&#94;N\\mathcal{N}\\left(t_n|\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n),\\beta&#94;{-1}\\right)& (3.10)\\\\ \\text{prior distribution : } p(\\mathbf{w}) &= \\mathcal{N}(\\mathbf{w}|\\mathbf{m}_0,\\mathbf{S}_0)& (3.48)\\\\ \\text{posterior distribution : } p(\\mathbf{w}|\\mathbf{t},\\mathbf{X},\\beta) &= \\mathcal{N}(\\mathbf{w}|\\mathbf{m}_N,\\mathbf{S}_N) & (3.49)\\\\ \\mathbf{m}_N &= \\mathbf{S}_N\\left(\\mathbf{S}_0&#94;{-1}\\mathbf{m}_0 + \\beta\\boldsymbol{\\Phi}&#94;T\\mathbf{t}\\right) & (3.50)\\\\ \\mathbf{S}_N&#94;{-1} &= \\mathbf{S}_0&#94;{-1} + \\beta\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi} & (3.51)\\\\ \\mathcal{N}(x|\\mu,\\sigma&#94;2) &= \\frac{1}{\\left(2\\pi\\sigma&#94;2\\right)&#94;{1/2}}\\exp\\left\\{-\\frac{1}{2\\sigma&#94;2}(x-\\mu)&#94;2\\right\\} & (2.42)\\\\ \\mathcal{N}(\\mathbf{x}|\\boldsymbol{\\mu},\\boldsymbol{\\Sigma}) &= \\frac{1}{(2\\pi)&#94;{D/2}}\\frac{1}{|\\boldsymbol{\\Sigma}|&#94;{1/2}}\\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{x}-\\boldsymbol{\\mu}\\right)&#94;T\\boldsymbol{\\Sigma}&#94;{-1}\\left(\\mathbf{x}-\\boldsymbol{\\mu}\\right)\\right\\} & (2.43) \\end{aligned} $$ $$ \\begin{aligned} p(\\mathbf{w}|\\mathbf{t},\\mathbf{X},\\beta) &\\propto p(\\mathbf{t}|\\mathbf{X},\\mathbf{w},\\beta) p(\\mathbf{w}) \\\\ &=\\prod_{n=1}&#94;N\\mathcal{N}\\left(t_n|\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n),\\beta&#94;{-1}\\right)\\mathcal{N}(\\mathbf{w}|\\mathbf{m}_0,\\mathbf{S}_0)\\\\ &\\propto\\prod_{n=1}&#94;N\\exp\\left\\{-\\frac{\\beta}{2}\\left(t_n-\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n)\\right)&#94;2\\right\\}\\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)&#94;T\\mathbf{S}_0&#94;{-1}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)\\right\\} \\\\ &=\\exp\\left\\{-\\frac{\\beta}{2}\\sum_{n=1}&#94;N\\left(t_n-\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n)\\right)&#94;2\\right\\}\\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)&#94;T\\mathbf{S}_0&#94;{-1}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)\\right\\} \\\\ &= \\exp\\left\\{-\\frac{\\beta}{2}\\left( \\begin{array}{c}t_1 - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_1)\\\\ t_2 - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_2) \\\\ \\vdots \\\\ t_N - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_N) \\end{array} \\right)&#94;T\\left( \\begin{array}{c}t_1 - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_1)\\\\ t_2 - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_2) \\\\ \\vdots \\\\ t_N - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_N) \\end{array} \\right) \\right\\}\\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)&#94;T\\mathbf{S}_0&#94;{-1}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)\\right\\} \\\\ &= \\exp\\left\\{-\\frac{\\beta}{2}\\left(\\mathbf{t}-\\boldsymbol{\\Phi}\\mathbf{w}\\right)&#94;T\\left(\\mathbf{t}-\\boldsymbol{\\Phi}\\mathbf{w}\\right)\\right\\}\\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)&#94;T\\mathbf{S}_0&#94;{-1}\\left(\\mathbf{w}-\\mathbf{m}_0\\right)\\right\\}\\\\ &= \\exp\\left\\{ -\\frac{1}{2} \\left(\\beta\\mathbf{t}&#94;T\\mathbf{t} - \\beta\\mathbf{t}&#94;T\\boldsymbol{\\Phi}\\mathbf{w} - \\beta\\mathbf{w}&#94;T\\boldsymbol{\\Phi}&#94;T\\mathbf{t} + \\beta\\mathbf{w}&#94;T\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi}\\mathbf{w} + \\mathbf{w}&#94;T\\mathbf{S}_0&#94;{-1}\\mathbf{w} - \\mathbf{w}&#94;T\\mathbf{S}&#94;{-1}_0\\mathbf{m}_0 - \\mathbf{m}_0&#94;T\\mathbf{S}&#94;{-1}_0\\mathbf{w} + \\mathbf{m}_0&#94;T\\mathbf{S}&#94;{-1}_0\\mathbf{m}_0\\right)\\right\\}\\\\ &= \\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{w}&#94;T\\left(\\beta\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi} + \\mathbf{S}&#94;{-1}_0\\right)\\mathbf{w} - \\mathbf{w}&#94;T\\left(\\beta\\boldsymbol{\\Phi}&#94;T\\mathbf{t} + \\mathbf{S}&#94;{-1}_0\\mathbf{m}_0\\right) - \\left(\\beta\\mathbf{t}&#94;T\\boldsymbol{\\Phi} + \\mathbf{m}_0\\mathbf{S}&#94;{-1}_0\\right)\\mathbf{w} + \\left(\\beta\\mathbf{t}&#94;T\\mathbf{t} + \\mathbf{m_0}&#94;T\\mathbf{S}&#94;{-1}_0\\mathbf{m}_0\\right)\\right)\\right\\} \\\\ &=\\exp\\left\\{-\\frac{1}{2}\\left(\\mathbf{w} - \\mathbf{S}_N\\left(\\mathbf{S}_0&#94;{-1}\\mathbf{m}_0 + \\beta\\boldsymbol{\\Phi}&#94;T\\mathbf{t}\\right)\\right)&#94;T\\mathbf{S}_N&#94;{-1}\\left(\\mathbf{w} - \\mathbf{S}_N\\left(\\mathbf{S}_0&#94;{-1}\\mathbf{m}_0 + \\beta\\boldsymbol{\\Phi}&#94;T\\mathbf{t}\\right)\\right) + \\mathrm{C} \\right\\}\\\\ &\\propto\\mathcal{N}(\\mathbf{w}|\\mathbf{m}_N,\\mathbf{S}_N)\\\\ &\\begin{cases} \\mathbf{m}_N &= \\mathbf{S}_N\\left(\\mathbf{S}_0&#94;{-1}\\mathbf{m}_0 + \\beta\\boldsymbol{\\Phi}&#94;T\\mathbf{t}\\right) & (3.50)\\\\ \\mathbf{S}_N&#94;{-1} &= \\mathbf{S}_0&#94;{-1} + \\beta\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi} & (3.51)\\\\\\end{cases} \\end{aligned}\\\\ $$ 周辺化計算の導出過程 以下の「ガウス分布の周辺分布と条件付き分布の関係」の $(2.115)$ の結果を用いる。 $\\mathbf{x}$ の周辺ガウス分布と、$\\mathbf{x}$ が与えられた時の $\\mathbf{y}$ の条件付きガウス分布が次式で与えられたとする。 $$ \\begin{aligned} p(\\mathbf{x}) &=\\mathcal{N}\\left(\\mathbf{x} | \\boldsymbol{\\mu}, \\mathbf{\\Lambda}&#94;{-1}\\right) & (2.113)\\\\ p(\\mathbf{y} | \\mathbf{x}) &=\\mathcal{N}\\left(\\mathbf{y} | \\mathbf{A} \\mathbf{x}+\\mathbf{b}, \\mathbf{L}&#94;{-1}\\right) & (2.114)\\end{aligned} $$ この時、$\\mathbf{y}$ の周辺分布と、$\\mathbf{y}$ が与えられた時の $\\mathbf{x}$ の条件付き分布は $$ \\begin{aligned} p(\\mathbf{y}) &=\\mathcal{N}\\left(\\mathbf{y} | \\mathbf{A} \\boldsymbol{\\mu}+\\mathbf{b}, \\mathbf{L}&#94;{-1}+\\mathbf{A} \\mathbf{\\Lambda}&#94;{-1} \\mathbf{A}&#94;{\\mathrm{T}}\\right) & (2.115)\\\\ p(\\mathbf{x} | \\mathbf{y}) &=\\mathcal{N}\\left(\\mathbf{x} | \\mathbf{\\Sigma}\\left\\{\\mathbf{A}&#94;{\\mathrm{T}} \\mathbf{L}(\\mathbf{y}-\\mathbf{b})+\\mathbf{\\Lambda} \\boldsymbol{\\mu}\\right\\}, \\mathbf{\\Sigma}\\right) & (2.116) \\end{aligned} $$ で与えられる。ただし、 $$\\mathbf{\\Sigma} = \\left(\\mathbf{\\Lambda} + \\mathbf{A}&#94;T\\mathbf{LA}\\right)&#94;{-1}\\qquad (2.117)$$ である。 実装 In [2]: from kerasy.ML.linear import BayesianLinearRegression from kerasy.utils.preprocessing import GaussianBaseTransformer from kerasy.utils.data_generator import generateSin , generateGausian In [3]: N = 25 ; D = 1 ; M = 25 xmin = 0 ; xmax = 1 seed = 10 In [4]: alpha = 1 beta = 25 In [5]: x_test = np . linspace ( xmin , xmax , 1000 ) y_test = np . sin ( 2 * np . pi * x_test ) x_train , y_train = generateSin ( size = N , xmin = xmin , xmax = xmax , seed = seed ) _ , y_noise = generateGausian ( size = N , x = x_train , loc = 0 , scale = 1 / beta , seed = seed ) y_train += y_noise In [6]: # transform mu = np . linspace ( xmin , xmax , M ); sigma = 0.1 phi = GaussianBaseTransformer ( mu = mu , sigma = sigma ) x_train_features = phi . transform ( x_train ) x_test_features = phi . transform ( x_test ) In [7]: random_idx = np . random . RandomState ( seed ) . choice ( N , N ) In [8]: fig = plt . figure ( figsize = ( 16 , 8 )) for i , n in enumerate ([ 1 , 2 , 4 , 25 ]): ax = fig . add_subplot ( 2 , 2 , i + 1 ) model = BayesianLinearRegression ( alpha = alpha , beta = beta ) model . fit ( x_train_features [ random_idx [: n ]], y_train [ random_idx [: n ]]) y_pred , y_std = model . predict ( x_test_features ) ax . plot ( x_test , y_test , color = \"black\" , label = \"$\\sin(2\\pi x)$\" ) ax . plot ( x_test , y_pred , color = \"red\" , label = \"predict($\\mu$)\" ) ax . fill_between ( x_test , y_pred - y_std , y_pred + y_std , color = \"pink\" , alpha = 0.5 ) ax . scatter ( x_train [ random_idx [: n ]], y_train [ random_idx [: n ]], s = 150 , edgecolors = 'black' , facecolor = \"white\" , label = \"train data\" ) ax . set_ylim ( - 1.5 , 1.5 ), ax . legend (), ax . set_title ( f \"Bayesian Linear Regression (N= {n} )\" ) plt . tight_layout () plt . show () ガウシアンプロセス 回帰分析のための カーネル法 テストサンプルに対して、 予測値だけでなく、予測分散も与えることができる。 線形回帰のモデルは、以下で表されていた。 $$y(\\mathbf{x},\\mathbf{w}) = \\mathbf{w}&#94;T\\phi(\\mathbf{x})\\qquad (3.3)$$ この結果に、ベイズ線形回帰の結果 $(3.53)$ を代入すると、 $$ \\begin{aligned} y(\\mathbf{x},\\mathbf{m}_N) &= \\mathbf{m}_N\\phi(\\mathbf{x}) = \\beta\\phi(\\mathbf{x})&#94;T\\mathbf{S}_N\\boldsymbol{\\Phi}&#94;T\\mathbf{t} \\\\ &= \\sum_{n=1}&#94;N\\beta\\phi(\\mathbf{x})&#94;T\\mathbf{S}_N\\phi(\\mathbf{x}_n)t_n & (3.60)\\\\ \\mathbf{S}_N&#94;{-1} &= \\mathbf{S}_0&#94;{-1} + \\beta\\boldsymbol{\\Phi}&#94;T\\boldsymbol{\\Phi} & (3.51) \\end{aligned} $$ したがって、点 $\\mathbf{x}$ での予測分布の平均は訓練データの目標変数 $t_n$ の線型結合で与えられるので、 $$ \\begin{aligned} y(\\mathbf{x},\\mathbf{m}_N) &= \\sum_{n=1}&#94;Nk(\\mathbf{x}, \\mathbf{x}_n)t_n & (3.61)\\\\ k(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}) &= \\beta\\phi(\\mathbf{x})&#94;T\\mathbf{S}_N\\phi(\\mathbf{x}&#94;{\\prime}) & (3.62)\\\\ &= \\left(\\beta&#94;{1/2}\\mathbf{S}_N&#94;{1/2}\\phi(\\mathbf{x})\\right)&#94;T\\left(\\beta&#94;{1/2}\\mathbf{S}_N&#94;{1/2}\\phi(\\mathbf{x})\\right) & (3.65) \\end{aligned} $$ とかける。なお、$k(\\mathbf{x}, \\mathbf{x}&#94;{\\prime})$ を 平滑化行列(smoother matrix) 、または 等価カーネル(equivalent kernel) と呼ぶ。（$(3.65)$ から、等価カーネルが通常のカーネル関数が満たすべき性質を満たしていることがわかる。） また、訓練データの目標値の線型結合を取ることで予測を行う上記のような回帰関数を 線形平滑器(linear smoother) と呼ぶ。 In [9]: from kerasy.utils.preprocessing import GaussianBaseTransformer , SigmoidBaseTransformer , PolynomialBaseTransformer In [10]: X = np . linspace ( - 1 , 1 , 200 ) M = 15 mu = np . linspace ( - 0.9 , 0.9 , M ); sigma = 0.1 gausian_phi = GaussianBaseTransformer ( mu = mu , sigma = sigma ) In [11]: def mkSmootherMatrix ( X , phi , alpha = 1 , beta = 25 ): X_feature = phi . transform ( X ) N , M = X_feature . shape SN = np . linalg . inv ( alpha * np . eye ( M ) + beta * X_feature . T . dot ( X_feature )) K = beta * np . dot ( X_feature , np . dot ( SN , X_feature . T )) return K In [12]: K = mkSmootherMatrix ( X , gausian_phi ) In [13]: SP = [ 30 , 120 , 150 ] colors = [ \"red\" , \"salmon\" , \"pink\" ] In [14]: fig = plt . figure ( figsize = ( 12 , 6 )) axKernel = plt . subplot2grid (( 3 , 2 ), ( 0 , 1 ), rowspan = 3 ) axKernel = sns . heatmap ( K , vmin = np . min ( K ), vmax = np . max ( K ), cmap = \"jet\" , cbar = False , square = True , ax = axKernel ) axKernel . set_xticks ([]), axKernel . set_yticks ([]) axKernel . set_xlabel ( \"$x$\" , fontsize = 18 ), axKernel . set_ylabel ( \"$x&#94;{\\prime}$\" , fontsize = 18 ) for i in range ( 3 ): axL = plt . subplot2grid (( 3 , 2 ), ( i , 0 )) axL . set_facecolor ( 'lightcyan' ) axL . plot ( K [ SP [ i ]], color = colors [ i ], linewidth = 4 ) axL . set_xticks ([]), axL . set_yticks ([]) axKernel . axhline ( SP [ i ], color = colors [ i ], linewidth = 10 , alpha = 0.7 ) plt . tight_layout () plt . show () In [15]: Transformers = [ ( GaussianBaseTransformer , mu ), ( SigmoidBaseTransformer , mu ), ( PolynomialBaseTransformer , 10 ), ] In [16]: fig = plt . figure ( figsize = ( 12 , 4 )) for i ,( phi_func , param ) in enumerate ( Transformers ): ax = fig . add_subplot ( 1 , 3 , i + 1 ) phi = phi_func ( param ) K = mkSmootherMatrix ( X , phi ) ax . plot ( K [ 100 ], color = \"blue\" ) ax . scatter ( 100 , 0 , color = \"red\" , marker = \"x\" , s = 150 , label = \"$x&#94;{\\prime}$\" ) ax . set_xticks ([]), ax . set_yticks ([]), ax . set_title ( f \"$k(x,x')$: {phi.__name__} \" , fontsize = 16 ) ax . set_xlabel ( \"$x$\" , fontsize = 18 ), ax . legend () plt . tight_layout () plt . show () カーネル関数の例 を見ればわかるよう、 対応する基底関数が局所的でないにも関わらず、等価カーネルは $x&#94;{\\prime}$ に関して局所的な関数となっていることがわかる！！ また、$y(\\mathbf{x})$ と $y(\\mathbf{x}&#94;{\\prime})$ の共分散を考えると、 $$ \\begin{aligned} \\mathrm{cov}\\left[y(\\mathbf{x}),y(\\mathbf{x}&#94;{\\prime})\\right] &= \\mathrm{cov}\\left[\\phi(\\mathbf{x})&#94;T\\mathbf{w}, \\mathbf{w}&#94;T\\phi(\\mathbf{x})\\right]\\\\ &= \\phi(\\mathbf{x})&#94;T\\mathbf{S}_N\\phi(\\mathbf{x}&#94;{\\prime}) = \\beta&#94;{-1}k(\\mathbf{x},\\mathbf{x}&#94;{\\prime})\\quad(3.63) \\end{aligned} $$ となる。ここで、上述の等価カーネルの形状を考えると、 近接での予測平均は互いに強い相関を持っている一方で、より離れた点の組では相関は小さくなることがわかる。 ベイズ線形回帰 のように基底関数の集合を明示的に定義するのではなく、局所的なカーネルを直接定義し、観測された訓練集合が与えられた時、この局所的なカーネルを用いて新たな入力ベクトル $\\mathbf{x}$ に対する予測値を求めることができる。 この定式化から、回帰（と分類）に対する実用的な枠組みである ガウス過程(Gaussian process) が得られる。 ベイズ最適化 $M$ 個の候補点があり、この中から最大の観測値を持つものを探したい。 できるだけ実験数を少なくしたい。 $N$ 個の候補点に対する実験が終わった。$M-N$ 個の候補点が残っている。 次の $N+1$ 個目の候補点を最適に選びたい。 $N$ 個の化合物から予測モデルを学習し、それを用いて、残りの候補点を スコアリング し決定。 Maximum Probability of Improvement: Current Maxを超える確率。 Maximum Expected Improvement: (観測値-Current Max)の期待値。 Thompson Sampling: 残りのM-N個候補点に対して、条件つき結合確率からサンプリングを行い、そのサンプリング値をスコアとする。 In [17]: xmin = 0 ; xmax = 1 N = 1000 ; M = 25 seed = 1 In [18]: alpha = 1 beta = 25 In [19]: X = np . linspace ( xmin , xmax , N ) Y = 5e1 * X * ( X - 0.2 ) * ( X - 0.3 ) * ( X - 0.7 ) * ( X - 1 ) _ , noise = generateGausian ( size = 1000 , x = X , loc = 0 , scale = 1 / beta , seed = seed ) Y_ob = Y + noise In [20]: mu = np . linspace ( xmin , xmax , M ) sigma = 0.1 phi = GaussianBaseTransformer ( mu = mu , sigma = sigma ) In [21]: X_features = phi . transform ( X ) In [22]: fig = plt . figure ( figsize = ( 18 , 8 )) idx = np . random . RandomState ( seed ) . choice ( N , 2 ) # Initialization. next_idx = idx for i , _ in enumerate ( range ( 12 )): ax = fig . add_subplot ( 3 , 4 , i + 1 ) model = BayesianLinearRegression ( alpha = alpha , beta = beta ) model . fit ( X_features [ idx ], Y_ob [ idx ]) y_pred , y_std = model . predict ( X_features ) current_max = np . max ( Y_ob [ idx ]) max_improve_id = np . argmax ( y_pred ) ax . plot ( X , Y , color = \"black\" , label = \"True distribution\" ) ax . plot ( X , y_pred , color = \"red\" , label = \"predict($\\mu$)\" ) ax . fill_between ( X , y_pred - y_std , y_pred + y_std , color = \"pink\" , alpha = 0.5 ) ax . scatter ( X [ idx ], Y_ob [ idx ], s = 50 , edgecolors = 'black' , facecolor = \"white\" , label = \"Observation\" ) ax . scatter ( X [ next_idx ], Y_ob [ next_idx ], s = 150 , edgecolors = 'black' , facecolor = \"black\" , label = \"New Obsevation\" ) ax . set_xlabel ( \"Explanatory Variable\" ), ax . set_ylabel ( \"Measured Value\" ), ax . set_title ( f \"N={len(idx)}, Max= {current_max:.3f} \" ) ax . set_ylim ( - 0.5 , 0.3 ), ax . set_xticks ([]), ax . set_yticks ([]) ax . axhline ( current_max , color = \"green\" , label = \"Current Maximum\" ) ax . axvline ( np . max ( X [ max_improve_id ]), color = \"blue\" , label = \"Maximum Probability of Improvement\" ) next_idx = max_improve_id if np . random . uniform () > 0.5 else np . random . choice ( N , 1 ) idx = np . r_ [ idx , next_idx ] ax . legend () plt . tight_layout () plt . show () おわりに（データ駆動科学） データ駆動科学では、データに基づいて、新たな知見・事柄を発見することが求められる。 単に予測を行うだけでなく、それに基づいて次の「行動」を設計することが必要 これらは、ベイズ最適化の枠組みに乗ることが多い。 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-4.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-4.html"},{"title":"特徴選択","text":"講師： 山崎俊彦 参考書： CG-ARTS協会発行「ディジタル画像処理」 参考書： R. Szeliski, Computer Vision Algorithms and Applications, Springer (PDF版はインターネット上で無料公開) In [1]: import numpy as np import matplotlib.pyplot as plt 主成分分析(PCA) In [2]: N = 20 seed = 0 In [3]: X = np . linspace ( 0 , 1 , N ) Y = X + np . random . RandomState ( N ) . normal ( loc = 0 , scale = 5e-2 , size = N ) data = np . vstack (( X , Y )) In [4]: def Rotate ( x , radian ): A = np . array ([ [ np . cos ( radian ), - np . sin ( radian )], [ np . sin ( radian ), np . cos ( radian )] ]) return np . dot ( A , data ) In [5]: fig = plt . figure ( figsize = ( 10 , 4 )) ax = fig . add_subplot ( 1 , 2 , 1 ) ax . scatter ( X , Y , color = \"black\" ), ax . set_title ( \"Original\" ) X_tra , Y_tra = Rotate ( data , radian =- 1 / 4 * np . pi ) ax = fig . add_subplot ( 1 , 2 , 2 ) ax . scatter ( X_tra , Y_tra , color = \"red\" ), ax . set_title ( \"Rotated\" ), ax . set_ylim ( - 1 / 2 * np . sqrt ( 2 ), 1 / 2 * np . sqrt ( 2 )) plt . tight_layout () plt . show () $2$ 次元空間で左上図のようなデータがあったとする。この時、このデータを表現するのに $(x,y)$ の二次元が必要だろうか？ データ全体を右に $1/4\\pi$ 回転させると、右上図のようなデータれるとなる。この場合、$y&#94;{\\prime}$ 軸方向はノイズとみなせ、$x&#94;{\\prime}$ 軸のみでデータを表現していると言える。 この例のように、$K$ 次元のデータであっても、で０他の偏りによって $M( こういった場合に、 「$M$ 方向の軸をどのように決めるか？」 、 「$M$ をどうやって決めるか？」 などが問題となる。 ※ 詳しくは 主成分分析(PCA) に記載。 線形判別分析(LDA) 入力ベクトル $\\mathbf{x}$ を $K$ クラスの一つ $C_k$ に割り当てる関数である識別（決定面が超平面となるとき、 線形識別(linear discriminant) ）を、 「次元の削減」 という観点から捉えることができる。 2クラス分類 $D$ 次元入力ベクトルを得て、それを以下の式で $1$ 次元に射影するとする。 $$y = \\mathbf{w}&#94;T\\mathbf{x}\\qquad (4.20)$$ ある閾値を設定し、$y\\geq-w_0$ の場合クラス $C_1$、そうでない場合クラス $C_2$ であるとすると、 標準的な線形分類器が得られる。 一般に、$D$ 次元から $1$ 次元へ射影することによって相当量の情報量の損失を発生させる。 重みベクトル $\\mathbf{w}$ の要素を調整することで、 クラスの分離を最大にする射影を選択したい。 $\\mathbf{w}$ 上へ射影された際のクラス分離度の最も簡単な測定法は、 射影されたクラスの平均の分離度（以下の式） を見ることである。 $$m_2-m_1 = \\mathbf{w}&#94;T\\left(\\mathbf{m}_2-\\mathbf{m}_1\\right) = \\mathbf{w}&#94;T\\left(\\frac{1}{N_2}\\sum_{n\\in C_2}\\mathbf{x}_n -\\frac{1}{N_1}\\sum_{n\\in C_1}\\mathbf{x}_n\\right)\\qquad (4.21)\\ \\&\\ (4.22)$$ 上の式は $\\mathbf{w}$ の値を大きくすればいくらでも大きな値にすることができるので、 $\\mathbf{w}$ が単位長である（$\\sum_i w_i&#94;2 = 1$）という制約を加える。 ラグランジュ乗数を用いてこれを解くと、$\\mathbf{w}\\propto(\\mathbf{m}_2-\\mathbf{m}_1)$ が得られる。 クラス分布の非対角な共分散が強い場合など、一般に、 各クラスの平均値だけを見ていても上手く判別する事ができない。 そこでフィッシャーが提案した方法が、 「射影されたクラス平均間の分離度を大きくすると同時に、各クラス内では小さな分散を与える関数を最大化する」 クラス $C_k$ から射影されたデータのクラス内分散は以下で与えられる。 $$s_k&#94;2 = \\sum_{n\\in C_k}(y_n-m_k)&#94;2\\qquad (4.2)$$ 全データ集合に対する総クラス内分散が $s_1&#94;2+s_2&#94;2$ であると定義する。 フィッシャーの判別基準は、 クラス間分離度 と クラス内分散 の比率で表される。 $$ \\begin{aligned} J(\\mathbf{w}) &= \\frac{(m_2-m_1)&#94;2}{s_1&#94;2 + s_2&#94;2} & (4.25)\\\\ &= \\frac{\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}}{\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}} & (4.27)\\\\ \\mathbf{S}_{\\mathrm{B}} &= (\\mathbf{m}_2-\\mathbf{m}_1)(\\mathbf{m}_2-\\mathbf{m}_1)&#94;T & (4.27)\\\\ \\mathbf{S}_{\\mathrm{W}} &= \\sum_{n\\in C_1}(\\mathbf{x}_n-\\mathbf{m}_1)(\\mathbf{x}_n-\\mathbf{m}_1)&#94;T + \\sum_{n\\in C_2}(\\mathbf{x}_n-\\mathbf{m}_2)(\\mathbf{x}_n-\\mathbf{m}_2)&#94;T& (4.27)\\\\ \\end{aligned} $$ $\\mathbf{S}_{\\mathrm{B}}$ を クラス間共分散行列(between-class covariance matrix) と呼ぶ。 $\\mathbf{S}_{\\mathrm{W}}$ を (総)クラス内共分散行列(within-class covariance matrix) と呼ぶ。 $J(\\mathbf{w})$ を $\\mathbf{w}$ に関して微分すると、以下の式が満たされる場合に $J(\\mathbf{w})$ が最大となる事がわかる。 $$ \\begin{aligned} \\frac{dJ(\\mathbf{w})}{d\\mathbf{w}} &= \\frac{\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}} + \\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\right)\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right) - \\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\right)\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}} + \\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right)}{\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right)&#94;2}\\\\ \\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\right)\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}} + \\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right) &= \\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}} + \\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\right)\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right)\\\\ \\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\right)\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}&= \\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right)\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\qquad (4.29) \\end{aligned} $$ $(4.27)$ から、 $\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}$ は常に $(\\mathbf{m}_2-\\mathbf{m}_1)$ と同じ方向を持つ。 $\\mathbf{w}$ の方向だけが重要で、 大きさは考慮する必要がないので、スカラーファクタ $\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{W}}\\mathbf{w}\\right)$ と $\\left(\\mathbf{w}&#94;T\\mathbf{S}_{\\mathrm{B}}\\mathbf{w}\\right)$ を無視できる。 $(4.29)$ の両辺に $\\mathbf{S}_{\\mathrm{W}}&#94;{-1}$ を左からかけて、 フィッシャーの線形判別(Fisher's linear discriminant) が得られる。 $$\\mathbf{w}\\propto\\mathbf{S}_{\\mathrm{W}}&#94;{-1}(\\mathbf{m}_2-\\mathbf{m}_1)\\qquad (4.30)$$ フィッシャーの線形判別(Fisher's linear discriminant) は、厳密には識別子ではなく、 むしろ $1$ 次元へ削減する際のデータの射影方向の選択を行なっている。 In [6]: from kerasy.ML.decomposition import LDA In [7]: N1 = 100 ; N2 = 100 cov = [[ 10 , 1 ],[ 1 , 3 ]] In [8]: x1 = np . random . RandomState ( seed ) . multivariate_normal ([ 0 , 7 ], cov , N1 ) x2 = np . random . RandomState ( seed + 1 ) . multivariate_normal ([ 8 , 6 ], cov , N2 ) x1min = np . min ( x1 ); x1max = np . max ( x1 ) x2min = np . min ( x2 ); x2max = np . max ( x2 ) m1 = np . mean ( x1 , axis = 0 ); m2 = np . mean ( x2 , axis = 0 ) m = ( m1 + m2 ) / 2 data = np . r_ [ x1 , x2 ] In [9]: X = np . linspace ( - 100 , 100 , 1000 ) In [10]: fig = plt . figure ( figsize = ( 12 , 6 )) for i , tf in enumerate ([ True , False ]): model = LDA () model . fit ( x1 , x2 , mean_only = tf ) w1 , w2 = model . w alpha = - w2 / w1 beta = m [ 1 ] - alpha * m [ 0 ] x_features = model . transform ( data ) axT = fig . add_subplot ( 2 , 2 , i + 1 ) axT . plot ( X , X * ( - w2 / w1 ) + beta , color = \"black\" , label = \"linear discriminant\" ) axT . scatter ( x1 [:, 0 ], x1 [:, 1 ], color = \"blue\" , label = \"class1\" ) axT . scatter ( x2 [:, 0 ], x2 [:, 1 ], color = \"red\" , label = \"class2\" ) axT . scatter ( m1 [ 0 ], m1 [ 1 ], color = \"green\" , marker = \"*\" , s = 200 ), axT . scatter ( m2 [ 0 ], m2 [ 1 ], color = \"green\" , marker = \"*\" , s = 200 , label = \"mean\" ) axT . set_xlim ( x1min , x1max ), axT . set_ylim ( x2min , x2max ) axT . set_xticks ([]), axT . set_yticks ([]), axT . legend (), axT . set_title ( \"Only Mean\" if tf else \"Fisher's linear discriminant\" ) axB = fig . add_subplot ( 2 , 2 , 3 + i ) axB . hist ( x_features [: N1 ], alpha = 0.3 , color = \"blue\" , label = \"class1\" ) axB . hist ( x_features [ N1 :], alpha = 0.3 , color = \"red\" , label = \"class2\" ) axB . set_xticks ([]), axB . set_yticks ([]), axB . legend () plt . tight_layout () plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"映像メディア工学","url":"https://iwasakishuto.github.io/University/3A/映像メディア工学-3.html","loc":"https://iwasakishuto.github.io/University/3A/映像メディア工学-3.html"},{"title":"生物統計論 第4回","text":"In [1]: import numpy as np import matplotlib.pyplot as plt Section4.1 Expectation Maximization Algorithm The expectation maximization algorithm, or EM algorithm, is a general technique for finding maximum likelihood solutions for probabilistic models having latent variable. Consider a probabilistic model in which we collectively denote all of the observed variables by $\\mathbf{X}$ all of the hidden variables by $\\mathbf{Z}$ (assuming discrete, but discussion is identical if continuous) joint distribution by $p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)$ Goal is to maximize the likelihood function that is given by $$p\\left(\\mathbf{X}|\\boldsymbol{\\theta}\\right) = \\sum_{\\mathbf{Z}}p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)\\qquad (9.69)$$ Properties Guaranteed to terminate Likelihood always increases Solving M-step is often easy No need to traverse the data Separation of parameter dependency $\\log(pq)=\\log(p)+\\log(q)$ Sometimes solved exactly Often a few times faster than gradient descent (if stopping condition is not too stringent) Expectation values characterize the optimized model Lower Bound of Likelihood $\\mathcal{L}\\left(q,\\boldsymbol{\\theta}\\right)$ and $\\mathrm{KL}\\left(q\\|p\\right)$ We shall suppose that direct optimization of $p(\\mathbf{X}|\\boldsymbol{\\theta})$ is difficult the optimization of the complete-data likelihood function $p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)$ is significantly easier We introduce a distribution $q\\left(\\mathbf{Z}\\right)$ defined over the latent variables. For any choice of $q\\left(\\mathbf{Z}\\right)$, the following decomposition holds $$ \\begin{aligned} \\ln p\\left(\\mathbf{X}|\\boldsymbol{\\theta}\\right) &= \\mathcal{L}\\left(q,\\boldsymbol{\\theta}\\right) + \\mathrm{KL}\\left(q\\|p\\right) &(9.70)\\\\ \\mathcal{L}\\left(q,\\boldsymbol{\\theta}\\right) &= \\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln\\left\\{\\frac{p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)}{q(\\mathbf{Z})}\\right\\} & (9.71)\\\\ \\mathrm{KL}\\left(q\\|p\\right) &= -\\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln\\left\\{\\frac{p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}\\right)}{q(\\mathbf{Z})}\\right\\} & (9.72) \\end{aligned} $$ NOTE : $\\mathcal{L}(q,\\boldsymbol{\\theta})$ is a functional of the distribution $q(\\mathbf{Z})$, and a function of the parameters $\\boldsymbol{\\theta}$ $$ \\begin{aligned} \\mathcal{L}\\left(q,\\boldsymbol{\\theta}\\right) + \\mathrm{KL}\\left(q\\|p\\right) &=\\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln\\left\\{\\frac{p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)}{q(\\mathbf{Z})}\\right\\} -\\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln\\left\\{\\frac{p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}\\right)}{q(\\mathbf{Z})}\\right\\}\\\\ &= \\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln\\left\\{\\frac{p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)}{p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}\\right)}\\right\\}\\\\ &= \\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln p\\left(\\mathbf{X}|\\boldsymbol{\\theta}\\right)\\\\ &= \\ln p\\left(\\mathbf{X}|\\boldsymbol{\\theta}\\right) \\end{aligned}$$ From $(9.72)$, we see that $\\mathrm{KL}(q\\|p)$ is the Kullback-Leibler divergence between $q(\\mathbf{Z})$ and the posterior distribution $p(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta})$ Kullback-Leibler divergence satisfies $\\mathrm{KL}(q\\|p)\\geq0$ with eqyality if, and only if, $q(\\mathbf{Z})=p(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta})$. Therefore, $\\mathcal{L}(q,\\boldsymbol{\\theta})\\leq\\ln p(\\mathbf{X}|\\boldsymbol{\\theta})$, in other words that $\\mathcal{L}(q,\\boldsymbol{\\theta})$ is a lower bound on $\\ln p(\\mathbf{X}|\\boldsymbol{\\theta})$ E step In the E step, the lower bound $\\mathcal{L}(q,\\boldsymbol{\\theta}&#94;{\\text{old}})$ is maximized with respect to $q(\\mathbf{Z})$ while holding $\\boldsymbol{\\theta}&#94;{\\text{old}}$ fixed. $\\ln p(\\mathbf{X}|\\boldsymbol{\\theta}&#94;{\\text{old}})$ does not depend on $q(\\mathbf{Z})$ the largest value of $\\mathcal{L}(q,\\boldsymbol{\\theta}&#94;{\\text{old}})$ will occur when the Kullback-Leibler divergence vanishes. ∴ When $q(\\mathbf{Z})$ is equal to the posterior distribution $p(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}})$, $\\mathrm{KL}(q\\|p)=0$ and the lower bound $\\mathcal{L}(q,\\boldsymbol{\\theta}&#94;{\\text{old}})$ will be maximized. M step In the M step, the lower bound $\\mathcal{L}(q,\\boldsymbol{\\theta}&#94;{\\text{old}})$ is maximized with respect to $\\boldsymbol{\\theta}$ to give some new value $\\boldsymbol{\\theta}&#94;{\\text{new}}$ while holding $q(\\mathbf{Z})$ fixed. This will cause the lower bound $\\mathcal{L}$ to increase This will necessarily cause the corrresponding log likelihood function to increase. Because $q$ is held fixed during the M step, it will not equal the new posterior distribution $p(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}})$ $\\left(\\mathrm{KL}(q\\|p)\\neq0\\right)$ $\\mathcal{Q}(\\boldsymbol{\\theta},\\boldsymbol{\\theta}&#94;{\\text{old}})$ $$ \\mathcal{Q}\\left(\\boldsymbol{\\theta},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)=\\sum_{\\mathbf{Z}}p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)\\ln p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right) \\qquad (9.33)\\\\ $$ If we substitute $q(\\mathbf{Z}) = p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)$ into $(9.71)$, $$ \\begin{aligned} \\mathcal{L}\\left(q,\\boldsymbol{\\theta}\\right) &= \\sum_{\\mathbf{Z}}q(\\mathbf{Z})\\ln\\left\\{\\frac{p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right)}{q(\\mathbf{Z})}\\right\\} & (9.71)\\\\ &= \\sum_{\\mathbf{Z}}p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)\\ln p\\left(\\mathbf{X},\\mathbf{Z}|\\boldsymbol{\\theta}\\right) - \\sum_{\\mathbf{Z}}p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)\\ln p\\left(\\mathbf{Z}|\\mathbf{X},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)\\\\ &= \\mathcal{Q}\\left(\\boldsymbol{\\theta},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right) + \\text{const.} \\end{aligned} $$ ∴ \"Maximizing $\\mathcal{L}(q,\\boldsymbol{\\theta})$\" is equal to \"Maximizing $\\mathcal{Q}\\left(\\boldsymbol{\\theta},\\boldsymbol{\\theta}&#94;{\\text{old}}\\right)$\". In [2]: from kerasy.ML.MixedDistribution import MixedGaussian In [3]: # Train Data. data = np . concatenate ([ np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 0 , 0 ], cov = np . eye ( 2 ), size = 50 ), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 0 , 5 ], cov = np . eye ( 2 ), size = 50 ), np . random . RandomState ( 0 ) . multivariate_normal ( mean = [ 3 , 2 ], cov = np . eye ( 2 ), size = 50 ), ]) X , Y = data . T K = 3 In [4]: # Back Ground Color xmin , ymin = np . min ( data , axis = 0 ) - 0.3 xmax , ymax = np . max ( data , axis = 0 ) + 0.3 Xs , Ys = np . meshgrid ( np . linspace ( xmin , xmax , 100 ), np . linspace ( ymin , ymax , 100 )) XYs = np . c_ [ Xs . ravel (), Ys . ravel ()] In [5]: model = MixedGaussian ( K = 3 , random_state = 1234 ) model . fit ( data , memo_span = 1 ) ll_hist = [ ll for _ , _ , _ , ll in model . history ] mu_hist = [ mu for _ , _ ,( mu , _ , _ ), _ in model . history ] In [6]: plt_model = MixedGaussian ( K = 3 ) plt_model . N , plt_model . M = data . shape L_old = min ( ll_hist ) - 300 for epoch , idx ,( mu , S , pi ), ll in model . history [: - 1 ]: fig = plt . figure ( figsize = ( 12 , 8 )) ll_old = ll_hist [ epoch ]; ll_new = ll_hist [ epoch + 1 ] mu_old = mu_hist [ epoch ]; mu_new = mu_hist [ epoch + 1 ] L_new = np . random . uniform ( low = 0.3 , high = 0.5 ) * ( ll_new - ll_old ) + ll_old # 真面目に計算していない。 dL_old = ll_old - L_old ; dL_new = L_new - ll_old ; dll_old = ll_new - ll_old ax1 = fig . add_subplot ( 2 , 2 , 1 ) plt_model . mu = mu ; plt_model . S = S ; plt_model . pi = pi gammas = plt_model . predict ( XYs ) Zs = np . sum ( gammas , axis = 1 ) . reshape ( Xs . shape ) # Likelihood. ax1 . pcolor ( Xs , Ys , Zs , alpha =. 5 , cmap = \"jet\" ) ax1 . scatter ( X , Y , c = idx , cmap = \"prism\" ) ax1 . set_xlim ( xmin , xmax ), ax1 . set_ylim ( ymin , ymax ), ax1 . set_title ( f \"epochs: {epoch:>02}\" , fontsize = 18 ) ax2 = fig . add_subplot ( 2 , 2 , 2 ) ax2 . axhline ( ll_old , color = \"black\" , label = \"$\\ln p(\\mathbf{X},θold)$\" , linewidth = 3 ) ax2 . axhline ( L_old , color = \"black\" , label = \"$L(q,θold)$\" , linestyle = \":\" ) ax2 . arrow ( x = 0.3 , y = L_old , dx = 0 , dy = dL_old , head_width = dL_old / 6000 , head_length = dL_old * 0.1 , fc = 'red' , ec = 'red' , length_includes_head = True ) ax2 . set_title ( f \"E step (Epoch={epoch})\" , fontsize = 18 ), ax2 . legend (), ax2 . set_xticks ([]), ax2 . set_ylim ( - 600 , - 570 ) ax3 = fig . add_subplot ( 2 , 2 , 3 ) for k in range ( K ): xb , yb = mu_old [ k ]; xa , ya = mu_new [ k ] ax3 . plot (( xb , xa ),( yb , ya ), color = \"black\" ) ax3 . scatter ( xb , yb , color = \"black\" , s = 50 ) ax3 . scatter ( xa , ya , color = \"red\" , marker = \"*\" , s = 150 ) ax3 . set_xlim ( xmin , xmax ), ax3 . set_ylim ( ymin , ymax ), ax3 . set_title ( \"θ → θnew\" ) ax3 . grid () ax4 = fig . add_subplot ( 2 , 2 , 4 ) L_new = np . random . uniform ( low = 0.3 , high = 0.5 ) * ( ll_new - ll_old ) + ll_old # 真面目に計算していない。 ax4 . axhline ( ll_old , color = \"black\" , label = \"$\\ln p(\\mathbf{X},θold)$\" , linestyle = \"--\" ) ax4 . axhline ( ll_new , color = \"black\" , label = \"$\\ln p(\\mathbf{X},θnew)$\" , linewidth = 3 ) ax4 . axhline ( L_new , color = \"black\" , label = \"$L(q,θnew)$\" , linestyle = \":\" ) ax4 . arrow ( x = 0.7 , y = ll_old , dx = 0 , dy = dll_old , head_width = dll_old / 6000 , head_length = dll_old * 0.1 , fc = 'k' , ec = 'k' , length_includes_head = True ) ax4 . arrow ( x = 0.3 , y = ll_old , dx = 0 , dy = dL_new , head_width = dL_new / 6000 , head_length = dL_new * 0.1 , fc = 'red' , ec = 'red' , length_includes_head = True ) ax4 . set_title ( f \"M step (Epoch={epoch})\" , fontsize = 18 ), ax4 . legend (), ax4 . set_xticks ([]), ax4 . set_ylim ( - 600 , - 570 ) plt . tight_layout () plt . savefig ( f \"img/img{epoch:>02}\" ) L_old = L_new fig_no = 0 L_old = min ( ll_hist ) - 300 for epoch in range ( len ( model . history ) - 1 ): ll_old = ll_hist [ epoch ]; ll_new = ll_hist [ epoch + 1 ] L_new = np . random . uniform ( low = 0.3 , high = 0.5 ) * ( ll_new - ll_old ) + ll_old # 真面目に計算していない。 dL_old = ll_old - L_old ; dL_new = L_new - ll_old ; dll_old = ll_new - ll_old # Estep fig = plt . figure ( figsize = ( 3 , 10 )) ax = fig . add_subplot ( 1 , 1 , 1 ) ax . axhline ( ll_old , color = \"black\" , label = \"$\\ln p(\\mathbf{X},θold)$\" , linewidth = 3 ) ax . axhline ( L_old , color = \"black\" , label = \"$L(q,θold)$\" , linestyle = \":\" ) ax . arrow ( x = 0.3 , y = L_old , dx = 0 , dy = dL_old , head_width = dL_old / 60 , head_length = dL_old * 2e-1 , fc = 'red' , ec = 'red' , length_includes_head = True ) ax . set_title ( f \"E step (Epoch={epoch})\" , fontsize = 18 ), ax . legend (), ax . set_xticks ([]), ax . set_ylim ( - 600 , - 570 ) plt . savefig ( f \"img/img{fig_no:>02}\" ); fig_no += 1 plt . clf () # Mstep fig = plt . figure ( figsize = ( 3 , 10 )) ax = fig . add_subplot ( 1 , 1 , 1 ) L_new = np . random . uniform ( low = 0.3 , high = 0.5 ) * ( ll_new - ll_old ) + ll_old # 真面目に計算していない。 ax . axhline ( ll_old , color = \"black\" , label = \"$\\ln p(\\mathbf{X},θold)$\" , linestyle = \"--\" ) ax . axhline ( ll_new , color = \"black\" , label = \"$\\ln p(\\mathbf{X},θnew)$\" , linewidth = 3 ) ax . axhline ( L_new , color = \"black\" , label = \"$L(q,θnew)$\" , linestyle = \":\" ) ax . arrow ( x = 0.7 , y = ll_old , dx = 0 , dy = dll_old , head_width = dll_old / 60 , head_length = dll_old * 2e-1 , fc = 'k' , ec = 'k' , length_includes_head = True ) ax . arrow ( x = 0.3 , y = ll_old , dx = 0 , dy = dL_new , head_width = dL_new / 60 , head_length = dL_new * 2e-1 , fc = 'red' , ec = 'red' , length_includes_head = True ) ax . set_title ( f \"M step (Epoch={epoch})\" , fontsize = 18 ), ax . legend (), ax . set_xticks ([]), ax . set_ylim ( - 600 , - 570 ) plt . savefig ( f \"img/img{fig_no:>02}\" ); fig_no += 1 plt . clf () L_old = L_new Section4.2 Mixture Model Implementation Gaussian Mixture Distribution k-means clustering Section4.3 Linear Regression Least Squares polynomial function we observe a real-value input variable $x$ and we wish to use this observation to predict the value of a real-valued target variable $t$. In the most simplest approach based on curve fitting, we shall fit the data using a polynomial function of the form : $$y(x,\\mathbf{w}) = w_0+w_1x+w_2x&#94;2+\\cdots+w_Mx&#94;M=\\sum_{j=0}&#94;Mw_jx&#94;j\\qquad (1.1)$$ data we are given a training set comprising $N$ observation of $x$, written $\\mathbf{X}\\equiv(\\mathbf{x_1},\\ldots,\\mathbf{x}_N)&#94;T$ with corresponding observation of the values of $t$, denoted $\\mathbf{t}\\equiv(t_1\\ldots,t_N)&#94;T$ we can difine $M$, which is the order of the polynomial. The values of the coefficients($w_j$) will be determined by fitting the polynomial to the training data. This can be done by minimizing an error function that measures the misfit between the function $y(x,\\mathbf{w})$ and the training set data points. One simple choice of error function, which is widely used, is given by the sum of the squares of the errors $$E(\\mathbf{w}) = \\frac{1}{2}\\mathrm{RSS} = \\frac{1}{2}\\sum_{n=1}&#94;N\\left\\{y(\\mathbf{x}_n,\\mathbf{w}) - t_n\\right\\}&#94;2\\qquad (1.2)$$ (the factor of $1/2$ is included for later convenience.) Trainig Aim: find the best $\\mathbf{w}&#94;{\\star}=\\underset{w\\in\\mathbb{R}}{\\mathrm{argmin}}\\left\\{\\mathrm{RSS}(\\mathbf{w})\\right\\}$ $\\mathbf{t} = \\left(\\begin{matrix}t_1\\\\\\vdots\\\\t_N\\end{matrix}\\right),\\quad\\mathbf{X} = \\left(\\begin{matrix}x_1&#94;0&x;_1&#94;1&\\cdots&x;_1&#94;M\\\\x_2&#94;0&x;_2&#94;1&\\cdots&x;_2&#94;M\\\\\\vdots&\\vdots&\\ddots&\\vdots\\\\x_N&#94;0&x;_N&#94;1&\\cdots&x;_N&#94;M\\end{matrix}\\right),\\quad\\mathbf{w}=\\left(\\begin{matrix}w_1\\\\\\vdots\\\\w_M\\end{matrix}\\right)$ $\\mathrm{RSS}(\\mathbf{w}) = \\left(\\mathbf{t} - \\mathbf{Xw}\\right)&#94;T\\left(\\mathbf{t} - \\mathbf{Xw}\\right)$ Solution: $$ \\begin{aligned} \\frac{\\partial E(\\mathbf{w})}{\\partial\\mathbf{w}} &=\\frac{1}{2}\\frac{\\partial}{\\partial\\mathbf{w}}\\|\\mathbf{t}-\\mathbf{Xw}\\|&#94;2\\\\ &=\\frac{1}{2}\\frac{\\partial}{\\partial\\mathbf{w}}\\left(\\|\\mathbf{t}\\|&#94;2 - 2\\mathbf{w}&#94;T\\mathbf{X}&#94;T\\mathbf{t} + \\|\\mathbf{Xw}\\|&#94;2\\right)\\\\ &=\\frac{1}{2}\\frac{\\partial}{\\partial\\mathbf{w}}\\left(\\|\\mathbf{t}\\|&#94;2 - 2\\mathbf{w}&#94;T\\mathbf{X}&#94;T\\mathbf{t} + \\mathbf{w}&#94;T\\mathbf{X}&#94;T\\mathbf{Xw}\\right)\\\\ &=\\frac{1}{2} \\left(-2\\mathbf{X}&#94;T\\mathbf{t} + \\left(\\mathbf{X}&#94;T\\mathbf{X} + \\left(\\mathbf{X}&#94;T\\mathbf{X}\\right)&#94;T\\right)\\mathbf{w}\\right)\\\\ &= -\\mathbf{X}&#94;T\\mathbf{t}+\\mathbf{X}&#94;T\\mathbf{Xw}=\\mathbf{0}\\\\ \\therefore\\mathbf{w}&#94;{\\star} &= \\left(\\mathbf{X}&#94;T\\mathbf{X}\\right)&#94;{-1}\\mathbf{X}&#94;T\\mathbf{t} \\end{aligned}$$ ※ In the following programs, I use np.linalg.solve to calcurate $\\mathbf{w}&#94;{\\ast}$ equation program $$\\left(\\mathbf{X}&#94;T\\mathbf{X}\\right)\\mathbf{w}&#94;{\\star} = \\mathbf{X}&#94;T\\mathbf{t}$$ w = np.linalg.solve(X.T.dot(X), X.T.dot(t)) In [7]: N = 15 Ms = [ 2 , 4 , 8 , 16 ] seed = 0 In [8]: # Training data. x = np . random . RandomState ( seed ) . uniform ( low = 0 , high = 1 , size = N ) Noise = np . random . RandomState ( seed ) . normal ( loc = 0 , scale = 0.1 , size = N ) t = np . sin ( 2 * np . pi * x ) + Noise In [9]: fig = plt . figure ( figsize = ( 12 , 8 )) for i , M in enumerate ( Ms ): ax = fig . add_subplot ( 2 , 2 , i + 1 ) # Training. X = np . array ([ x ** m for m in range ( M + 1 )]) . T w = np . linalg . solve ( X . T . dot ( X ), X . T . dot ( t )) # For Validation plot. Xs = np . linspace ( 0 , 1 , 1000 ) t_true = np . sin ( 2 * np . pi * Xs ) t_pred = w . dot ( np . array ([ Xs ** m for m in range ( M + 1 )])) # RSS(Residual Sum of Squares) residual = t - w . dot ( np . array ([ x ** m for m in range ( M + 1 )])) RSS = residual . T . dot ( residual ) # Plot. ax . plot ( Xs , t_true , color = \"black\" , label = \"$t=\\sin(2\\pi x)$\" ) ax . plot ( Xs , t_pred , color = \"red\" , label = f \"prediction ($M= {M} $)\" ) ax . scatter ( x , t , edgecolors = 'blue' , facecolor = \"white\" , label = \"train data\" ) ax . set_title ( f \"Results (RSS=$ {RSS:.3f} $,M=$ {M} $)\" ), ax . set_xlabel ( \"$x$\" ), ax . set_ylabel ( \"$t$\" ) ax . set_xlim ( 0 , 1 ), ax . set_ylim ( - 1.2 , 1.2 ) ax . legend () plt . tight_layout () plt . show () Regularized Least Square $$ \\begin{aligned} E(\\mathbf{w}) &= E_{D}(\\mathbf{w}) + \\lambda E_W(\\mathbf{w}) & (3.24)\\\\ &= \\frac{1}{2}\\mathrm{RSS} + \\lambda\\frac{1}{2}\\mathbf{w}&#94;T\\mathbf{w}\\\\ &= \\frac{1}{2}\\sum_{n=1}&#94;N\\left\\{y(\\mathbf{x}_n,\\mathbf{w}) - t_n\\right\\}&#94;2+\\frac{1}{2}\\mathbf{w}&#94;T\\mathbf{w} & (3.27)\\\\ \\therefore\\mathbf{w}&#94;{\\star} &= \\left(\\lambda\\mathbf{I} + \\mathbf{X}&#94;T\\mathbf{X}\\right)&#94;{-1}\\mathbf{X}&#94;T\\mathbf{t} & (3.28) \\end{aligned} $$ In [10]: lambda_ = 1e-4 In [11]: fig = plt . figure ( figsize = ( 12 , 8 )) for i , M in enumerate ( Ms ): ax = fig . add_subplot ( 2 , 2 , i + 1 ) # Training. X = np . array ([ x ** m for m in range ( M + 1 )]) . T w = np . linalg . solve ( lambda_ * np . identity ( M + 1 ) + X . T . dot ( X ), X . T . dot ( t )) # For Validation plot. Xs = np . linspace ( 0 , 1 , 1000 ) t_true = np . sin ( 2 * np . pi * Xs ) t_pred = w . dot ( np . array ([ Xs ** m for m in range ( M + 1 )])) # RSS(Residual Sum of Squares) residual = t - w . dot ( np . array ([ x ** m for m in range ( M + 1 )])) RSS = residual . T . dot ( residual ) # Plot. ax . plot ( Xs , t_true , color = \"black\" , label = \"$t=\\sin(2\\pi x)$\" ) ax . plot ( Xs , t_pred , color = \"red\" , label = f \"prediction ($M= {M} $)\" ) ax . scatter ( x , t , edgecolors = 'blue' , facecolor = \"white\" , label = \"train data\" ) ax . set_title ( f \"Results (RSS=$ {RSS:.3f} $,M=$ {M} $,$\\lambda= {lambda_} $)\" ), ax . set_xlabel ( \"$x$\" ), ax . set_ylabel ( \"$t$\" ) ax . set_xlim ( 0 , 1 ), ax . set_ylim ( - 1.2 , 1.2 ) ax . legend () plt . tight_layout () plt . show () Section4.4 Bayesian Inference Maximal Likelihood Estimate $$ l(\\boldsymbol{\\theta}|D) = \\log L(\\boldsymbol{\\theta}|D) = \\log\\mathbb{P}(D|\\boldsymbol{\\theta})\\\\ \\hat{\\boldsymbol{\\theta}}_{\\text{ML}} = \\underset{\\boldsymbol{\\theta}}{\\text{argmax}}l(\\boldsymbol{\\theta}|D) $$ ※ $l$: large → High probability of observing $D$ from the model $\\boldsymbol{\\theta}$ Maximum a Posteriori Estimate Maximum a posteriori estimate $$ \\begin{aligned} \\hat{\\boldsymbol{\\theta}_{\\text{MAP}}} &= \\underset{\\boldsymbol{\\theta}}{\\text{argmax}}f(\\boldsymbol{\\theta}|D)\\\\ &= \\underset{\\boldsymbol{\\theta}}{\\text{argmax}}f(D|\\boldsymbol{\\theta})f(\\boldsymbol{\\theta})\\\\ &= \\underset{\\boldsymbol{\\theta}}{\\text{argmax}}\\left\\{l(\\boldsymbol{\\theta}|D) L \\log f(\\boldsymbol{\\theta})\\right\\}\\\\ \\end{aligned} $$ Posterior mean estimate $$ \\hat{\\boldsymbol{\\theta}_{\\text{PME}}} = \\int\\boldsymbol{\\theta}f(\\boldsymbol{\\theta}|D)d\\boldsymbol{\\theta} $$ Implementation of Gaussian Prior for Regression. In [12]: seed = 123 In [13]: from kerasy.ML.linear import BayesianLinearRegression from kerasy.utils.preprocessing import GaussianBaseTransformer from kerasy.utils.data_generator import generateSin , generateGausian In [14]: N = 25 ; D = 1 ; M = 25 xmin = 0 ; xmax = 1 In [15]: alpha = 1 beta = 25 In [16]: x_test = np . linspace ( xmin , xmax , 1000 ) y_test = np . sin ( 2 * np . pi * x_test ) x_train , y_train = generateSin ( size = N , xmin = xmin , xmax = xmax , seed = seed ) _ , y_noise = generateGausian ( size = N , x = x_train , loc = 0 , scale = 1 / beta , seed = seed ) y_train += y_noise In [17]: # transform mu = np . linspace ( xmin , xmax , M ); sigma = 0.1 phi = GaussianBaseTransformer ( mu = mu , sigma = sigma ) x_train_features = phi . transform ( x_train ) x_test_features = phi . transform ( x_test ) In [18]: random_idx = np . random . RandomState ( seed ) . choice ( N , N ) In [19]: fig = plt . figure ( figsize = ( 16 , 8 )) for i , n in enumerate ([ 1 , 2 , 4 , 25 ]): ax = fig . add_subplot ( 2 , 2 , i + 1 ) model = BayesianLinearRegression ( alpha = alpha , beta = beta ) model . fit ( x_train_features [ random_idx [: n ]], y_train [ random_idx [: n ]]) y_pred , y_std = model . predict ( x_test_features ) ax . plot ( x_test , y_test , color = \"black\" , label = \"$\\sin(2\\pi x)$\" ) ax . plot ( x_test , y_pred , color = \"red\" , label = \"predict($\\mu$)\" ) ax . fill_between ( x_test , y_pred - y_std , y_pred + y_std , color = \"pink\" , alpha = 0.5 ) ax . scatter ( x_train [ random_idx [: n ]], y_train [ random_idx [: n ]], s = 150 , edgecolors = 'black' , facecolor = \"white\" , label = \"train data\" ) ax . set_ylim ( - 1.5 , 1.5 ), ax . legend (), ax . set_title ( f \"Bayesian Linear Regression (N= {n} )\" ) plt . tight_layout () plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物統計論","url":"https://iwasakishuto.github.io/University/3A/生物統計論-4.html","loc":"https://iwasakishuto.github.io/University/3A/生物統計論-4.html"},{"title":"レポート課題3(10/17出題)","text":"J09+85sgPdkHczsvQhnAJA==;;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-report3.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-report3.html"},{"title":"連続最適化(2)制約付き最適化","text":"講師： 佐藤一誠 参考書： 最適化手法 参考書： 機械学習のための連続最適化 講義概要 等式制約付き最適化問題 ラグランジュ未定乗数法 ラグランジュ双対問題 双対変数の最適化 不等式制約付き最適化問題 制約なし最適化問題への変換 双対問題 まとめ 制約付き最適化問題(constrained optimization problem) \\(\\mathcal{X}\\subset\\mathbb{R}&#94;d\\) 上に定義される関数 \\(f:\\mathcal{X}\\rightarrow\\mathbb{R}\\) の最小値を求める。 $$ \\begin{aligned} \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{minimization : }}&f(\\mathbf{x})\\\\ \\text{subject to : }&g(\\mathbf{x})=\\mathbf{0}\\\\ &h(\\mathbf{x})\\leq\\mathbf{0} \\end{aligned} $$ \"subject to\"は、 「…を条件として」 という意味。 \\(g_i,h_i\\) は互いに 一次独立(linearly independent) であると仮定。 実行可能解(feasible solution) ：全ての制約条件を満たす \\(\\mathbf{x}\\) 凸最適化問題(convex optimization problem) ：関数 \\(f\\) が凸、集合 \\(\\mathcal{X}\\) が凸、制約条件 \\(\\mathbf{g},\\mathbf{h}\\) が凸であれば、最適値が一意に定まる。 ※ 以下、凸最適化問題を考える。 等式制約付き最適化問題 等式制約付き最適化問題 $$ \\begin{aligned} \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{minimization : }}&f(\\mathbf{x})\\\\ \\text{subject to : }&g(\\mathbf{x})=\\mathbf{0}\\\\ \\end{aligned} $$ \\(\\mathbf{x}_k\\) に設定して、勾配法や準ニュートン法などで以下の $$\\mathbf{x}_{k+1} = \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{argmin}}f(\\mathbf{x}) + c_k\\|\\mathbf{g}(x)\\|&#94;2$$ \\(c_k\\) の値を徐々に増やしていく。 $$0 < c_1 < c_2 < \\cdots$$ ラグランジュ未定乗数法 詳しくは ラグランジュ未定乗数法 に記載されているので、ここでは具体例を紹介する。 問題 $$ \\begin{aligned} \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{min : }}&3x&#94;2 + 2y&#94;2\\\\ \\text{subject to : }&x+y=1\\\\ \\end{aligned} $$ 解答 ラグランジュ関数は、 $$L(x,y,\\lambda) = 3x&#94;2 + 2y&#94;2 + \\lambda(x+y-1)$$ となるから、 $$ \\begin{aligned} \\frac{\\partial L}{\\partial x} &= 6x+\\lambda=0 &\\therefore x = -\\frac{1}{6}\\lambda\\\\ \\frac{\\partial L}{\\partial y} &= 4y+\\lambda=0 &\\therefore y = -\\frac{1}{4}\\lambda\\\\ \\frac{\\partial L}{\\partial \\lambda} &= x+y-1=0 &\\therefore \\lambda = -\\frac{12}{5}\\\\ \\end{aligned} $$ よって、 \\((x,y) = (0.4,0.6)\\) ラグランジュ双対問題 これも、詳しくは ラグランジュ双対問題 に記載されているので、ここでは具体例を紹介する。 問題 $$ \\begin{aligned} \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{min : }}&3x&#94;2 + 2y&#94;2\\\\ \\text{subject to : }&x+y=1\\\\ \\end{aligned} $$ 解答 ラグランジュ関数は、 $$L(x,y,\\lambda) = 3x&#94;2 + 2y&#94;2 + \\lambda(x+y-1)$$ となるから、 $$ \\begin{aligned} \\frac{\\partial L}{\\partial x} &= 6x+\\lambda=0 &\\therefore x = -\\frac{1}{6}\\lambda\\\\ \\frac{\\partial L}{\\partial y} &= 4y+\\lambda=0 &\\therefore y = -\\frac{1}{4}\\lambda \\end{aligned} $$ よって、これらを \\(L(x,y,\\lambda)\\) に代入して、 $$\\omega(\\lambda) = \\underset{x,y\\in\\mathbb{R}}{\\inf}L(x,y,\\lambda) = -\\frac{5}{24}\\lambda&#94;2-\\lambda$$ したがって、 \\(\\underset{\\lambda\\in\\mathbb{R}}{\\text{argmax}}\\omega(\\lambda) = -\\frac{12}{5}\\Longrightarrow(x,y) = (0.4,0.6)\\) 双対変数の最適化 上の問題では、双対変数 \\(\\lambda\\) の最適化問題を解析的に解けたが、解析的に解くことができない問題もある。その場合に使うのが 双対上昇法 や 乗数法 と呼ばれる 双対変数の勾配上昇 を行う手法である。 手法 数式 解説 双対上昇法 $$\\begin{aligned}\\mathbf{x}_{k+1} &= \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{argmin}}L(\\mathbf{x},\\boldsymbol{\\lambda}_{k})\\\\\\boldsymbol{\\lambda}_{k+1} &= \\boldsymbol{\\lambda}_k + \\varepsilon_k\\nabla\\omega(\\mathbf{\\boldsymbol{\\lambda}}_k) \\\\&= \\boldsymbol{\\lambda}_k + \\varepsilon_k\\mathbf{g}(\\mathbf{x}_{k+1})\\end{aligned}$$ 適当な初期値から，ラグランジュ関数の最小化と双対変数の勾配上昇を交互に実行 乗数法 $$\\begin{aligned}\\mathbf{x}_{k+1} &= \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{argmin}}L_c(\\mathbf{x},\\boldsymbol{\\lambda}_{k})\\\\\\boldsymbol{\\lambda}_{k+1} &= \\boldsymbol{\\lambda}_k + c\\nabla\\omega(\\mathbf{\\boldsymbol{\\lambda}}_k) \\\\&= \\boldsymbol{\\lambda}_k + c\\mathbf{g}(\\mathbf{x}_{k+1})\\end{aligned}$$ 適当な初期値から， 拡張ラグランジュ関数 の最小化と双対変数の勾配上昇を交互に実行 なお、 拡張ラグランジュ関数(augmented Lagrangian) は、以下で表される関数で、二次の項を加えることで凸性を増している。 $$L_c(\\mathbf{x},\\boldsymbol{\\lambda}) = f(\\mathbf{x}) + \\boldsymbol{\\lambda}&#94;T\\mathbf{g}(\\mathbf{x}) + \\frac{c}{2}\\|\\mathbf{g}(\\mathbf{x})\\|&#94;2$$ ※実装は レポート課題3 に記載。 不等式制約付き最適化問題 $$ \\begin{aligned} \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{minimization : }}&f(\\mathbf{x})\\\\ \\text{subject to : }&h(\\mathbf{x})\\leq\\mathbf{0}\\\\ \\end{aligned} $$ 実行可能解 \\(\\mathbf{x}\\) において \\(h_i(\\mathbf{x}) = 0\\) の時、この制約を 有効制約(active constraint) と呼ぶ。 実行可能解 \\(\\mathbf{x}\\) においてそれ以外の時、この制約を 無効制約(inactive constraint) と呼ぶ。 制約なし最適化問題への変換 障壁法(barrier method) 初期値を \\(\\mathbf{x}_k\\) に設定して、勾配法や準ニュートン法などで以下の制約なし最適化問題を解く。 $$\\mathbf{x}_{k+1} = \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{argmin}}f(\\mathbf{x}) - c_k\\log(-h(\\mathbf{x}))$$ \\(c_k\\) の値を徐々に減らしていく。 途中の解 \\(\\mathbf{x}_{k+1}\\) が常に \\(h(\\mathbf{x}_{k+1})\\leq0\\) を満たす （つまり、実行可能領域の内側にある） ことから、 内点法(interior-point method) ともよばれる。 \\(c_k\\) の決め方が難しい。 罰則法(penalty method) 初期値を \\(\\mathbf{x}_k\\) に設定して、勾配法や準ニュートン法などで以下の制約なし最適化問題を解く。 $$\\mathbf{x}_{k+1} = \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{argmin}}f(\\mathbf{x}) + c_k\\max(0,h(\\mathbf{x}))&#94;2$$ \\(c_k\\) の値を徐々に増やしていく。 途中の解 \\(\\mathbf{x}_{k+1}\\) が一般に \\(h(\\mathbf{x}_{k+1})>0\\) を満たす （つまり、実行可能領域の外側にある） ことから、 外点法(exterior-point method) ともよばれる。 \\(c_k\\) の決め方が難しい。 射影勾配法(projected gradient method) 勾配降下（ \\(\\tilde{\\mathbf{x}}_{k+1} = \\mathbf{x}_k-\\varepsilon_k\\nabla f(\\mathbf{x}_k)\\) ）と実行可能領域への射影（ \\(\\mathbf{x}_{k+1} = \\mathbf{P}_k\\tilde{\\mathbf{x}}_{k+1}\\) ）を繰り返す。 まとめると $$\\mathbf{x}_{k+1} = \\mathbf{P}_k\\left(\\mathbf{x}_k - \\varepsilon_k\\nabla f(\\mathbf{x}_k)\\right)$$ 射影が簡単に計算できる時、効率が良い。 双対問題 詳しくは ラグランジュ未定乗数法 に記載。 まとめ 制約付き最適化問題： $$ \\begin{aligned} \\underset{\\mathbf{x}\\in\\mathcal{X}}{\\text{minimization : }}&f(\\mathbf{x})\\\\ \\text{subject to : }&g(\\mathbf{x})=\\mathbf{0}\\\\ &h(\\mathbf{x})\\leq\\mathbf{0} \\end{aligned} $$ ラグランジュ関数： $$L\\left(\\mathbf{x},\\boldsymbol{\\lambda},\\boldsymbol{\\mu}\\right) = f(\\mathbf{x}) + \\boldsymbol{\\lambda}&#94;Tg(\\mathbf{x}) + \\boldsymbol{\\mu}&#94;Th(\\mathbf{x})$$ 双対問題： $$ \\begin{aligned} \\underset{\\boldsymbol{\\lambda,\\mu},\\ \\mathbf{x}\\in\\mathcal{X}}{\\text{maximization : }}&L\\left(\\mathbf{x},\\boldsymbol{\\lambda},\\boldsymbol{\\mu}\\right)\\\\ \\text{subject to : }&\\boldsymbol{\\mu}\\geq\\mathbf{0}\\\\ \\end{aligned} $$ KKT条件： $$ \\begin{aligned} \\begin{cases} \\nabla_{\\mathbf{x}}L\\left(\\mathbf{x}&#94;{\\ast},\\boldsymbol{\\lambda}&#94;{\\ast},\\boldsymbol{\\mu}&#94;{\\ast}\\right) = \\mathbf{0}\\\\ \\nabla_{\\boldsymbol{\\lambda}}L\\left(\\mathbf{x}&#94;{\\ast},\\boldsymbol{\\lambda}&#94;{\\ast},\\boldsymbol{\\mu}&#94;{\\ast}\\right) = \\mathbf{0} & \\boldsymbol{\\mu}&#94;{\\ast}\\geq\\mathbf{0}\\\\ \\nabla_{\\boldsymbol{\\mu}}L\\left(\\mathbf{x}&#94;{\\ast},\\boldsymbol{\\lambda}&#94;{\\ast},\\boldsymbol{\\mu}&#94;{\\ast}\\right) \\leq \\mathbf{0} & \\mu_i&#94;{\\ast}h_i(\\mathbf{x}&#94;{\\ast}) = 0,\\ \\forall i \\end{cases} \\end{aligned} $$ .prompt { /* This is for jupyter blog.*/ min-width: 0; /* This padding is tuned to match the padding on the CodeMirror editor. */ padding: 0em 0.4em 0em 0em; margin: 0px; font-family: monaco; } /*蛍光ペン(pink)*/ .marker-pink { color: #c45a5a; background: linear-gradient(transparent 70%, #ff66ff 60%); font-weight: bold; } /*蛍光ペン(blue) & hover info*/ .marker-info { color: #5C7DC4; background: linear-gradient(transparent 70%, #66FFCC 60%); font-weight: bold; position: relative; cursor: pointer; } .marker-info:hover:before { opacity: 1; z-index: 2; } .marker-info:before { content: attr(aria-label); opacity: 0; position: absolute; top: 30px; right: -90px; font-size: 14px; width: 300px; padding: 10px; color: #fff; background-color: #555; border-radius: 3px; pointer-events: none; } /* 枠囲み */ .frame { border: solid 1.0px #000000; padding: 0.5em 1em; margin: 2em 0; } /* 暗記用 question box */ span .qbox{ display: none; } span.qbox-wrapper:hover .qbox-default{ display: none; } span.qbox-wrapper:hover .qbox{ display: inline; } .qbox-wrapper{ font-weight: bold; padding: 5px 10px; border-radius: 5px; border: solid 2px #000000; margin: 5px } .qbox-wrapper:hover{ text-shadow: 0px 0px 6px rgba(255, 255, 255, 1); -webkit-box-shadow: 0px 5px 40px -10px rgba(0,0,0,0.57); -moz-box-shadow: 0px 5px 40px -10px rgba(0,0,0,0.57); transition: all 0.4s ease 0s; } /* 画像吹き出し */ .balloon { display: table; width: 100%; } .balloon_img { display: table-cell; vertical-align: middle; width: 50%; padding-right: 10px; } .balloon_comment { border: #83274e solid 4px; position: relative; background: #fff; padding: 12px; border-radius: 13px; display: block } .balloon_comment::before { content: \"\"; position: absolute; border-right: 23px solid #83274e; border-bottom: 20px solid transparent; border-top: 20px solid transparent; top: 30%; left: -23px; } .balloon_comment::after { content: \"\"; position: absolute; border-right: 24px solid #fff; border-bottom: 20px solid transparent; border-top: 20px solid transparent; top: 30%; left: -17px; } if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-3.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-3.html"},{"title":"RNA-seqデータ解析（バッチスクリプト版）","text":"K/Ro5kK6buE98QJmSTWgvQ==;;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-12.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-12.html"},{"title":"RNA-seqデータ解析（対話モード版）","text":"/5m7yiMnfET7iWMni8bwug==;;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-11.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-11.html"},{"title":"ゲノム解析ツールの環境構築","text":"4FObK2pQ3d+8Crbxa2EIkw==;;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-10.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-10.html"},{"title":"逐次最小問題最適化法(SMO)","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) In [1]: import numpy as np import matplotlib.pyplot as plt 二次計画問題を解くアルゴリズム概観 アルゴリズム 説明 伝統的な二次計画法のアルゴリズム 計算コスト及びメモリ使用量の面で現実的には厳しい。 チャンキング(chunking) カーネル行列からラグランジュ乗数が $0$ となるデータに対応する行および列を取り除いても、ラグランジュ関数が不変であることを利用し、元々の二次計画問題は、より次元数の小さな問題を順番に解くことで、最終的には $0$ とならないラグランジュ乗数だけを残す、という問題に帰着する。 射影共役勾配法(projected conjugate gradient method) チャンキングを実装する手法 分解法(decomposition method) チャンキングと同様 サイズの小さな二次計画問題を繰り返し解く という手法だが、ここの部分問題の大きさが一定であるため、任意の大きさのデータに対応できる。 逐次最小問題最適化法(SMO;sequential minimal optimization) 分解法の計算コストを削減した手法。たった２つのラグランジュ乗数を含む部分問題を逐次解いていくことで最終的な解を得る。 逐次最小問題最適化法(SMO;sequential minimal optimization) ラグランジュ双対問題 を以下のように定義する。 $$ \\begin{aligned} \\tilde{L}(\\mathbf{a}) &=\\sum_n&#94;Na_n - \\frac{1}{2}\\sum_{n=1}&#94;{N}\\sum_{m=1}&#94;Na_na_mt_nt_mk(\\mathbf{x}_n,\\mathbf{x}_m)& (7.10)\\\\ a_n & \\geq 0,\\quad n=1,\\ldots,N & (7.11)\\\\ \\sum_{n=1}&#94;Na_nt_n &= 0 & (7.12) \\end{aligned} $$ 逐次最小問題最適化法(SMO;sequential minimal optimization) は反復法である。 適当な初期値 $\\mathbf{a}&#94;{(0)}$ から出発して、更新 $\\mathbf{a}&#94;{(k)} \\rightarrow \\mathbf{a}&#94;{(k+1)}$ を繰り返す。 この際、 １度には2つの成分しか動かさない。 ここで、$a_p$ と $a_q$ だけ動かすことを考える。 （他の $a_n$ は定数とみなす） この時、制約条件より $$ a_pt_p + a_qt_q = 0-\\sum_{n\\neq p,q} a_nt_n = \\mathrm{const.}$$ が成立する。したがって、 $$ \\frac{\\partial a_q}{\\partial a_p} = -\\frac{t_p}{t_q} =-t_pt_q \\cdots (\\ast)$$ と解析的に偏微分を求めることが可能である。 目的関数 $\\tilde{L}$ の変化量 以下、$K_{ij} = k\\left(\\mathrm{x}_i,\\mathrm{x}_j\\right)$ とおく。ここで、 $$a_p\\mapsto a_p+\\Delta_p, \\quad a_q\\mapsto a_q+\\Delta_q$$ と更新した時、目的関数 $\\tilde{L}$ の変化量 $\\Delta\\tilde{L}$ は、 $$ \\begin{aligned} \\Delta\\tilde{L} &= \\Delta_p + \\Delta_q - \\Delta_pt_p\\sum_{n=1}&#94;Na_nt_nk(\\mathbf{x}_p,\\mathbf{x}_n) - \\Delta_qt_q\\sum_{n=1}&#94;Na_nt_nk(\\mathbf{x}_q,\\mathbf{x}_n)\\\\ &-\\frac{1}{2}\\left[\\Delta_p&#94;2k(\\mathbf{x}_p,\\mathbf{x}_p) + 2\\Delta_p\\Delta_qt_pt_qk(\\mathbf{x}_p,\\mathbf{x}_q) + \\Delta_q&#94;2k(\\mathbf{x}_q,\\mathbf{x}_q)\\right] \\end{aligned} $$ となる。 $(\\ast)$ より $\\Delta_q = -t_pt_q\\Delta_p$ である。 $t_p=t_q(\\Longleftrightarrow\\Delta_q=-\\Delta_p)$ の時と $t_p\\neq t_q$ の時に場合分けをし、それぞれ $\\Delta_p$ で変化量を偏微分して $0$ とおく。 結果は共に等しく、以下で表される。 $$ \\begin{aligned} \\Delta_p &= \\frac{1-t_pt_q + t_p\\left(\\sum_{n=1}&#94;Na_nt_nK_{qn} - \\sum_{n=1}&#94;Na_nt_nK_{pn}\\right)}{K_{pp} - 2K_{pq} + K_{qq}}\\\\ &= \\frac{1-t_pt_q + t_p\\left(y(\\mathbf{x_q}) - y(\\mathbf{x}_q)\\right)}{K_{pp} - 2K_{pq} + K_{qq}}\\\\ \\end{aligned} $$ クリッピング この時、 $t_pa_p+t_qa_q=c$ $a_p\\geq0$ $a_q\\geq0$ が成立していなければならないので、以下を満たすように $\\Delta_p$ の クリッピング を行う必要がある。 $t_p=t_q$ のときは $ 0 \\leq a_p + \\Delta_p \\leq c/t_p$ $t_p=-t_q$ のときは $ \\mathrm{max}\\{0,c/t_p\\}\\leq a_p+\\Delta_p$ 変数の選択方法 最後に、動かす $\\mu_p,\\mu_q$ の選択基準であるが、SMO法の発見者である $John C. Platt$ の論文に従うならば以下の様になる。 $KTT$条件を破る$a_p$を$1$つ目に選ぶ。 続いて、$\\left|y\\left(\\mathbf{x_q}\\right)-y\\left(\\mathbf{x_p}\\right)\\right|$ が最大となる$a_p$を次に選ぶ。 これは、$\\left|y\\left(\\mathbf{x_q}\\right)-y\\left(\\mathbf{x_p}\\right)\\right|$ が大きければそれだけステップ幅も大きくなるため収束が早くなるというヒューリスティックス（直感）である。 これを繰り返して、$\\tilde{L}$ が収束するまで反復を繰り返せば学習完了である。 実装例 kerasy.ML.svm.BaseSVM に記載。 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-5.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-5.html"},{"title":"ラグランジュ双対問題","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) はじめに このノートは、 Qiita記事『ラグランジュ双対問題について解説』 を引用しています。 ラグランジュ双対関数 ラグランジアン 次の最小化問題を考える. $$ \\begin{aligned} \\min_{x\\in\\mathbb{R}&#94;n} &~ f_0(x)\\\\ \\mathrm{s.t.} &~ f_i(x)\\le 0,~ i=1,\\ldots,m\\\\ &~ h_i(x)=0, ~i=1,\\ldots, p \\end{aligned} $$ 実行可能領域は 空でない とする この最適化問題の 最適値 を \\(p&#94;\\star\\) と書く 凸性は特に仮定しない 主問題 という ラグランジアンは次のように定義される。 $$L(x, \\lambda, \\nu):=f_0(x)+\\sum_{i=1}&#94;m\\lambda_i f_i(x)+\\sum_{i=1}&#94;p\\nu_i h_i(x)$$ \\(\\lambda_i, \\nu_i\\) はラグランジュ未定乗数 ラグランジュ双対関数 ラグランジュ双対関数は次のように定義される. $$ \\begin{aligned} g(\\lambda,\\nu)&:=\\inf_{x\\in D} L(x, \\lambda, \\nu)\\\\ &=\\inf_{x\\in D} \\left(f_0(x)+\\sum_{i=1}&#94;m\\lambda_i f_i(x)+\\sum_{i=1}&#94;p\\nu_i h_i(x)\\right) \\end{aligned} $$ \\(D:=\\bigcap_{i=0}&#94;m \\mathrm{dom}(f_i) \\cap \\bigcap_{i=1}&#94;p \\mathrm{dom}(h_i)\\) 双対関数は, \\((\\lambda,\\nu)\\) のアフィン関数の各点でのinfになっているため, 必ずconcave(上に凸)となる (もとの問題が凸でなくても) 証明してみた: $$ \\begin{aligned} & g(t\\lambda_a+(1-t)\\lambda_b, t\\nu_a+(1-t)\\nu_b)\\\\ =&\\inf_{x\\in\\mathcal{D}}\\left(tL(x,\\lambda_a,\\nu_a)+(1-t)L(x,\\lambda_b,\\nu_b)\\right)\\\\ \\ge& t\\inf_{x\\in\\mathcal{D}}L(x,\\lambda_a,\\nu_a)+(1-t)L(x,\\lambda_b,\\nu_b)\\\\ =& tg(\\lambda_a,\\nu_a)+(1-t)g(\\lambda_b,\\nu_b) \\end{aligned} $$ 最適値の下限 任意の \\(\\lambda\\ge0, \\nu\\) に対して, 次が成り立つ. \\($g(\\lambda,\\nu)\\le p&#94;\\star\\) 証明: \\(\\tilde{x}\\) を実行可能解とする: \\(f_i(\\tilde{x})\\le 0, h_i(\\tilde{x}) = 0\\) \\(\\lambda\\ge 0\\) を仮定 このとき, \\(L(\\tilde{x},\\lambda,\\nu)\\) の値は, \\(f_0(\\tilde{x})\\) でおさえられる: $$ L(\\tilde{x},\\lambda,\\nu)=f_0(\\tilde{x})+\\underbrace{\\sum_{i=1}&#94;{m}\\lambda_if_i(\\tilde{x})}_{\\le0}+\\underbrace{\\sum_{i=1}&#94;{p}\\nu_ih_i(\\tilde{x})}_{=0}\\le f_0(\\tilde{x}) $$ ゆえに, \\(g(\\lambda, \\nu)\\) は \\(f_0(\\tilde{x})\\) でおさえられる: $$ \\therefore~g(\\lambda, \\nu)=\\inf_{x\\in\\mathcal{D}}L(x,\\lambda,\\nu)\\le L(\\tilde{x},\\lambda,\\nu)\\le f_0(\\tilde{x}) $$ 任意の \\(\\tilde{x}\\) に対して, \\(g(\\lambda, \\nu)\\le f_0(\\tilde{x})\\) が成り立つため, \\(g(\\lambda, \\nu)\\le p&#94;\\star\\) が成り立つ. 結論: 双対関数の値は, 主問題の最適値を超えない 線形近似による解釈 元の主問題と等価な次の最小化問題を考える. $$ \\min_{x}~f_0(x)+\\sum_{i=1}&#94;{m}I_-(f_i(x))+\\sum_{i=1}&#94;{p}I_0(h_i(x)) $$ ただし, \\(I_{-},I_{0}\\) は 指示関数 : $$ I_-(u):=\\begin{cases} 0&u\\le 0\\\\ \\infty& u>0 \\end{cases},~~~ I_0(u):=\\begin{cases} 0&u = 0\\\\ \\infty& u\\ne 0 \\end{cases} $$ 最小化するのが目的であるが, 指示関数は制約を満たさないと無限大になってしまう. この指示関数は, 制約違反に対する不満度 を表していると解釈できる. ここで, \\(I_-(u)\\) を \\(\\lambda_i u (\\lambda_i\\ge 0)\\) \\(I_0(u)\\) を \\(\\nu_iu\\) というように指示関数を近似する. $$ \\min_{x}~L(x,\\lambda,\\nu)=f_0(x)+\\sum_{i=1}&#94;{m}\\lambda_i f_i(x)+\\sum_{i=1}&#94;{p}\\nu_i h_i(x) $$ これは制約違反をソフトに近似したものと考えられる もちろん, 制約を違反するほど不満度は上昇するようになっている 不等式制約に関して, 違反しているとき \\(f_i(x)>0\\) であり, \\(\\lambda_if_i(x)\\ge0\\) 任意の \\(u\\) に関して, \\(\\lambda_iu \\le I_-(u)\\) と \\(\\nu_iu \\le I_0(u)\\) が成り立つため, 双対関数が元の主問題の下限を与えることがわかる 共役関数 \\(f\\) の共役関数 \\(f&#94;\\ast\\) は次で定義される. $$ f&#94;*(y)=\\sup_{x\\in\\mathrm{dom} f}(y&#94;\\top x-f(x)). $$ 共役関数と双対問題には密接な関係がある. ( フェンシェル双対定理 ) たとえば, 機械学習のよくある形 $$ \\min_{w\\in\\mathbb{R}&#94;d} f(Xw)+g(w) $$ の双対問題は, $$ \\max_{\\alpha\\in\\mathbb{R}&#94;n} -f&#94;\\ast(-\\alpha)-g&#94;\\ast(X&#94;\\top\\alpha) $$ というように共役関数を使って表現できる. そのため, 凸共役 を覚えておけば, 形式的に双対問題を導出できる. 証明は簡単で, ラグランジアン \\(L(w,z,\\alpha)=f(z)+g(w)+\\alpha&#94;\\top(z-Xw)\\) を考えて, 双対関数の定義にしたがって \\(w\\in\\mathbb{R}&#94;d,z\\in\\mathbb{R}&#94;n\\) に関して最小化するだけだ. ちなみに, このとき最適解 \\(w&#94;\\star,\\alpha&#94;\\star\\) に関して $$ w&#94;\\star \\in \\partial g&#94;\\ast(X&#94;\\top \\alpha&#94;\\star), \\quad \\alpha&#94;\\star \\in -\\partial f(Xw&#94;\\star) $$ が成立する (KKT条件). ラグランジュ双対問題 双対関数から双対問題へ. ラグランジュ双対問題 ここまでで, 双対関数が主問題の下限を与えることを示した. 自然な疑問は, 「ラグランジュ双対関数から得られる最も良い下限はどれくらいなのか?」ということだ. 最も良い下限は次の最大化問題を解くことで得られる. $$ \\begin{aligned} \\max_{\\lambda,\\nu}~&g(\\lambda,\\nu)\\\\ \\mathrm{s.t.} ~&\\lambda\\ge0 \\end{aligned} $$ $ これは, ラグランジュ双対問題 と呼ばれる 双対実行可能領域: \\((\\lambda,\\nu)\\) に関して, \\(\\lambda\\ge0\\) かつ \\(g(\\lambda,\\nu)>-\\infty\\) \\((\\lambda&#94;\\star,\\nu&#94;\\star)\\) : 双対問題の最適解 \\(d&#94;\\star\\) : 双対問題の最適値 双対問題は必ず凸最適化問題 目的関数が必ずconcaveで, 制約が凸であるため これは, 主問題が凸最適化でなくても成り立つ 弱双対性 $$ d&#94;\\star\\le p&#94;\\star $$ 主問題の凸性にかかわらず, 成り立つ この不等式は, \\(p&#94;\\star, d&#94;\\star\\) が発散しないときに成り立つ \\(p&#94;\\star - d&#94;\\star\\) を 双対ギャップ という よく最適化アルゴリズムの停止条件に使われる \\(p&#94;\\star\\) を求めるのことが難しいときに \\(d&#94;\\star\\) を求めることで, \\(p&#94;\\star\\) の下限を知ることができる 双対問題は必ず凸であるため, 多くの場合効率的に解ける 強双対性 $$ d&#94;\\star=p&#94;\\star $$ 主問題の最適値が双対問題の最適値と一致するという性質 強双対性は常には成り立たない もし主問題が凸, すなわち: $$ \\begin{aligned} \\min_{x\\in\\mathbb{R}&#94;n} &~ f_0(x)\\\\ \\mathrm{s.t.} &~ f_i(x)\\le 0, ~i=1,\\ldots,m\\\\ &~ Ax=b \\end{aligned} $$ で \\(f_0,\\ldots,f_m\\) が 凸なら, たいていは(いつもではない)強双対性が成り立つ. たとえば, SVMの最適化問題は凸であり, 強双対性が成り立つため, 主問題/双対問題のどちらを解いてもよい. スレーター条件 次を満たすような \\(x\\in\\mathrm{relint}(D)\\) が存在することをいう. $$ f_i(x)<0,~i=1,\\ldots,m,~~~Ax=b $$ $ 主問題が凸でスレーター条件を満たすとき, 強双対性が成り立つ スレーター条件は強双対性の十分条件である (必要十分ではない) もし, \\(f_1,\\ldots,f_k\\) がアフィンなら, より弱い条件が成り立てばよい: $$ f_i(x)\\le 0,~i=1,\\ldots,k,~~~f_i(x)<0,~i=k+1,\\ldots,m,~~~Ax=b $$ 言い換えれば, アフィンの不等式制約は等号を含んでもよい 補足: int(内部)とrelint(相対的内部) \\(\\mathrm{int}(S)\\) : Sに含まれる最大開集合 Sから境界上の点を取り除いたもの \\(\\mathrm{relint}(S)\\) : Sによって拘束される線形空間上で, Sから境界上の点を取り除いたもの. intとrelintの違いのイメージとしては, まっすぐな下敷きのような平面を考えたとき, intは下敷きの平面ごと取り除いてしまい空集合になるのに対して, relintは下敷きの縁を削って残った部分. Example1 \\(S=\\lbrace(x_1,x_2)\\mid 0\\le x_1\\le 1,x_2=0\\rbrace\\) $$ \\mathrm{int}(S)=\\emptyset, \\mathrm{relint}(S)=\\{(x_1,x_2)\\mid 0 < x_1 < 1,x_2=0\\}, (\\mathrm{aff}(S)=\\{(x_1,x_2)\\in\\mathbb{R}&#94;2\\mid x_2=0\\}) $$ Example2 \\(S= \\lbrace (x_1,x_2)\\mid 0\\le x_1\\le 1,0\\le x_2\\le 1\\rbrace\\) $$ \\mathrm{int}(S)=\\mathrm{relint}(S)=\\{(x_1,x_2)\\mid 0 < x_1 < 1,0<x_2<1\\}, (\\mathrm{aff}(S)=\\{(x_1,x_2)\\in\\mathbb{R}&#94;2\\}) $$ 最適性条件 特に主問題の凸性を仮定しない. 相補性条件 特に, 強双対性条件を満たすと仮定すると, $$ \\begin{aligned} f_0(x&#94;\\star)&=g(\\lambda&#94;\\star,\\nu&#94;\\star)\\\\ &=\\inf_{x\\in D} \\left(f_0(x)+\\sum_{i=1}&#94;m\\lambda_i&#94;\\star f_i(x)+\\sum_{i=1}&#94;p\\nu_i&#94;\\star h_i(x)\\right)\\\\ &\\le f_0(x&#94;\\star)+\\sum_{i=1}&#94;m\\lambda_i&#94;\\star f_i(x&#94;\\star)+\\sum_{i=1}&#94;p\\nu_i&#94;\\star h_i(x&#94;\\star)\\\\ &\\le f_0(x&#94;\\star) \\end{aligned} $$ 1行目: 強双対性 2行目: 双対関数の定義 3行目: \\(\\inf\\) の定義 4行目: \\(\\lambda_i&#94;\\star\\ge0, f_i(x&#94;\\star)\\le0, ~i=1,\\ldots,m\\) と \\(h_i(x&#94;\\star)=0, ~i=1,\\ldots,p\\) 1,3行目と3,4行目を考慮すると, $$ \\sum_{i=1}&#94;m\\lambda_i&#94;\\star f_i(x&#94;\\star)=0. $$ 和の各項は非負であるため, $$ \\lambda_i&#94;\\star f_i(x&#94;\\star)=0,~~~i=1,\\ldots,m. $$ これを相補性条件という もし \\(\\lambda_i&#94;\\star>0\\) なら, \\(f_i(x&#94;\\star)=0\\) もし \\(f_i(x&#94;\\star)<0\\) なら, \\(\\lambda_i&#94;\\star=0\\) KKT条件 (Karush-Kuhn-Tucker条件) 強双対性を仮定すると, \\(x&#94;\\star\\) は \\(L(x,\\lambda&#94;\\star,\\nu&#94;\\star)\\) を最小化するため, \\(x&#94;\\star\\) における勾配は0である: $$ \\nabla f_0(x&#94;\\star)+\\sum_{i=1}&#94;m\\lambda_i&#94;\\star \\nabla f_i(x&#94;\\star)+\\sum_{i=1}&#94;p\\nu_i&#94;\\star\\nabla h_i(x&#94;\\star)=0 $$ ゆえに, 最適解で成り立つ式を列挙すると: \\(f_i(x&#94;\\star)\\le 0,~i=1,\\ldots,m\\) \\(h_i(x&#94;\\star)= 0,~i=1,\\ldots,p\\) \\(\\lambda_i\\ge0,~i=1,\\ldots,m\\) \\(\\lambda_i f_i(x&#94;\\star)= 0,~i=1,\\ldots,m\\) \\(\\nabla f_0(x&#94;\\star)+\\sum_{i=1}&#94;m\\lambda_i&#94;\\star \\nabla f_i(x&#94;\\star)+\\sum_{i=1}&#94;p\\nu_i&#94;\\star\\nabla h_i(x&#94;\\star)=0\\) これがいわゆる KKT条件 である. (必要条件) まとめると, 強双対性を満たすなら, 最適解において主変数と双対変数はKKT条件を満たさなければならない. 主問題が凸であるとき, KKT条件は十分条件にもなる. つまり, ある点 \\(\\tilde{x},\\tilde{\\lambda}, \\tilde{\\nu}\\) がKKT条件を満たすなら, \\(\\tilde{x}=x&#94;\\star, \\tilde{\\lambda}=\\lambda&#94;\\star, \\tilde{\\nu}=\\nu&#94;\\star\\) . 十分条件の証明: $$ \\begin{aligned} g(\\tilde{\\lambda},\\tilde{\\nu})&=L(\\tilde{x},\\tilde{\\lambda},\\tilde{\\nu})\\\\ &= f_0(\\tilde{x})+\\sum_{i=1}&#94;m\\tilde{\\lambda}_i f_i(\\tilde{x})+\\sum_{i=1}&#94;p\\tilde{\\nu}_i h_i(\\tilde{x})\\\\ &= f_0(\\tilde{x}) \\end{aligned} $$ 1行目: \\(\\tilde{x}\\) がKKT条件の最後の条件を満たすため 主問題が凸であるため, \\(L(x,\\tilde{\\lambda},\\tilde{\\nu})\\) は \\(x\\) に関して凸である ( \\(\\because\\tilde{\\lambda}_i\\ge0\\) ) \\(\\therefore~L\\) を最小化する \\(x\\) は, 勾配が0である 2行目: ラグランジアンの定義 3行目: \\(\\tilde{x}\\) がKKT条件の2つ目と4つ目を満たすため この式は, 双対ギャップが0であることを意味するため, \\(\\tilde{x},\\tilde{\\lambda}, \\tilde{\\nu}\\) は最適解である. 結論: スレーター条件を満たすとき, KKT条件は最適性の必要十分条件となる if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-4.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-4.html"},{"title":"サポートベクターマシーン(SVM)","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) In [1]: import numpy as np import matplotlib.pyplot as plt In [2]: seed = 0 サポートベクターマシーン(SVM) マージン最大化 に基づく線形識別器 カーネル関数と組み合わせることによって非線形な識別も可能 サンプル間の類似度にしか依存しない （→非ベクトルデータの分類にも適用可能 ） まとめ マージン最大化 という方針で誤差関数を定義する。 汎化性能を高めるために、 スラック変数 を導入して ソフトなマージン最大化に緩和 する ラグランジュ未定乗数法 を用いてラグランジュ関数を得る。 各パラメータについて微分する。 ラグランジュ関数に代入して 双対問題 を得る。 SMO法 などを用いて二次計画問題である双対問題を解く。 無効制約のデータ点は識別関数に影響しなくなる。 （SVMが疎になる。） マージン最大化 「個々のデータに関して確率計算をし、何らかの識別面を求める」 のではなく、 「汎化性能の最も高い識別面を直接考える」 そこで、 「マージン最大化」 という方針で識別面を最適化する。（正則化理論・VC理論により正当化されている。） 最も近いデータ $\\phi(\\mathbf{x}_n)$ までの距離（ マージン ）が最大となるような識別面を選ぶ。（ここでは、距離＝ユークリッド距離とする。） 識別面からちょうどマージンの分だけ離れた面上に乗る特徴ベクトル（一般に複数）を、(広義の) サポートベクトル (support vector) と呼ぶ。 学習法の定式化（2クラス分類） ※ 二クラスが線形分離可能であると仮定する。 線形識別関数が $y(\\mathbf{x}) = \\mathbf{w}&#94;T\\phi(\\mathbf{x})+b$ で表され、$y(\\mathbf{x})$ の正負でクラスを識別するとする。 $y(\\mathbf{x})>0$ の時 $t=1$ $y(\\mathbf{x})<0$ の時 $t=-1$ したがって、 $t_ny(\\mathbf{x}_n)>0$ が全てのデータ $(\\mathbf{x}_n,t_n)$ に対して成り立つ （∵特徴空間で線形分離可能） 学習の目的は「パラメータ $\\mathbf{w}$ と $b$ を決定すること」。 データと識別面の最小距離は $1 / \\|\\mathbf{w}\\|$ で表される。（理由は以下） ※ 記述を簡単にするために線形識別問題の場合で考えるが、非線形写像 $\\phi$ を通しても同様の議論が成り立つ。 点 $\\mathbf{x}_n$ から識別面に下ろした垂線の足を $\\mathbf{x}_{n\\perp}$ 点 $\\mathbf{x}_n$ から識別面までの符号付き距離を $d_n$ と定義すると、 $\\mathbf{w}$ が識別面の法ベクトルであるから、 $\\mathbf{x}_{n\\perp} = \\mathbf{x}_n - d_n\\frac{\\mathbf{w}}{\\|\\mathbf{w}\\|}$ と表せる。 $\\mathbf{x}_{n\\perp}$ は識別面上にあるので、$\\mathbf{w}&#94;T\\mathbf{x}_{n\\perp} + b = 0$ が成り立つ。 したがって、 $$\\mathbf{w}&#94;T\\left(\\mathbf{x}_n - d_n\\frac{\\mathbf{w}}{\\|\\mathbf{w}\\|}\\right) + b = 0\\qquad \\therefore d_n = \\frac{\\mathbf{w}&#94;T\\mathbf{x}_n + b}{\\|\\mathbf{w}\\|}$$ として距離 $d_n$ が定義できる。ここで、$(\\mathbf{w},b)\\rightarrow(k\\mathbf{w},kb)$ としても $d_n$ の値は不変なので、 $$t_n\\left(\\mathbf{w}&#94;T\\mathbf{x}_n + b \\right)= 1\\qquad (7.4)$$ とスケーリングしても一般性を失わない。 なお、 このスケーリング下では、全てのデータ $\\mathbf{x}_n$ に対して $$t_n\\left(\\mathbf{w}&#94;T\\mathbf{x}_n + b \\right) \\geq 1\\qquad (7.5)$$ が成り立つ。 ここまでをまとめると、 マージン最大 は、 『$t_n\\left(\\mathbf{w}&#94;T\\mathbf{x}_n+b\\right)\\geq1\\quad(i=1,\\ldots,n)$ という条件下で、$\\frac{1}{2}||\\mathbf{w}||&#94;2$ を最小化する問題』 であると言える。 この制約付き最適化問題を解くために、$(7.5)$ の各制約式ごとにラグランジュ乗数 $a_n\\geq0$ を導入すると、次のラグランジュ関数が得られる。 $$L(\\mathbf{w},b,\\mathbf{a}) = \\frac{1}{2}\\|\\mathbf{w}\\|&#94;2 - \\sum_{n=1}&#94;{N}a_n\\left\\{t_n\\left(\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n) + b\\right) - 1\\right\\}\\qquad (7.7)$$ よって、$\\mathbf{w},b$ について微分して、 $$ \\begin{aligned} \\frac{\\partial L}{\\partial \\mathbf{w}} &= \\mathbf{w}-\\sum_{n=1}&#94;N a_nt_n\\phi(\\mathbf{x}_n) =0 \\quad \\therefore \\mathbf{w}&#94;{\\ast}=\\sum_{n=1}&#94;N a_nt_n\\phi(\\mathbf{x}_n) & (7.8)\\\\ \\frac{\\partial L}{\\partial b} &= -\\sum_{n=1}&#94;N a_nt_n = 0 \\quad\\therefore\\sum_{n=1}&#94;Na_n&#94;{\\ast}t_n = 0 & (7.9)\\\\ \\end{aligned} $$ が得られる。これらの結果を $(7.7)$ に代入して $\\mathbf{w},b$ を消去すると、元の問題は以下の 双対問題 に変換される。 $$ \\tilde{L}(\\mathbf{a}) =\\sum_n&#94;Na_n - \\frac{1}{2}\\sum_{n=1}&#94;{N}\\sum_{m=1}&#94;Na_na_mt_nt_mk(\\mathbf{x}_n,\\mathbf{x}_m)\\qquad (7.10)$$ なお、$\\mathbf{a}$ は以下の制約を満たす。 $$ \\begin{aligned} a_n & \\geq 0,\\quad n=1,\\ldots,N & (7.11)\\\\ \\sum_{n=1}&#94;Na_nt_n &= 0 & (7.12) \\end{aligned} $$ また、カーネル関数 $k(\\mathbf{x},\\mathbf{x}&#94;{\\prime})$ は、$k(\\mathbf{x},\\mathbf{x}&#94;{\\prime}) = \\phi(\\mathbf{x})&#94;T\\phi(\\mathbf{x})$ と定義される。 この双対問題は二次計画問題であり、 逐次最小問題最適化法(SMO;sequential minimal optimization) などで解くことができる。 なお、今回の場合、 制約条件が全て線形 であることから 実行可能域が凸領域 であることがわかるので、 任意の局所解が大局解になる。 一旦最適な $\\mathbf{a}$ が求まると、識別関数 $y(\\mathbf{x})$ は、 $$y(\\mathbf{x}) = \\mathbf{w}&#94;{\\ast T}\\phi(\\mathbf{x})+b = \\sum_{n=1}&#94;N a_nt_nk(\\mathbf{x},\\mathbf{x}_n) + b \\qquad (7.13)$$ として表すことができる。ここで、 KKT条件より $a_n=0\\Leftrightarrow t_ny(\\mathbf{x}_n)-1>0$ のデータは識別関数に影響しないので、計算から除外することができる。（SVMが疎になる理由） なお、バイアスパタメータ $b$ は、任意のサポートベクトル $\\mathbf{x}_n$ が $t_ny(\\mathbf{x}_n) = 1$ を満たすことから、 $$ \\begin{aligned} &t;_n\\left(\\sum_{m\\in\\mathcal{S}}a_mt_mk(\\mathbf{x}_n,\\mathbf{x}_m) + b\\right) = 1 & (7.17)\\\\ &\\therefore b&#94;{\\ast}= \\frac{1}{N_{\\mathcal{S}}}\\sum_{n\\in\\mathcal{S}}\\left(t_n-\\sum_{n\\in\\mathcal{S}}a_mt_mk(\\mathbf{x}_n,\\mathbf{x}_m)\\right)&(7.18) \\end{aligned} $$ として求めることができる。（数値計算の誤差の影響を小さくするため、$(7.17)$ の両辺に $t_n$ をかけ、全てのサポートベクトルで平均をとった。 In [3]: from kerasy.ML.svm import hardSVC In [4]: n_cls1 = 20 ; n_cls2 = 20 N = n_cls1 + n_cls2 In [5]: train_x = np . concatenate ([ np . random . RandomState ( seed ) . normal ( loc = [ 0.5 , 0 ], scale = [ 0.2 , 0.4 ], size = ( n_cls1 , 2 )), np . random . RandomState ( seed ) . normal ( loc = [ - 0.5 , 0 ], scale = [ 0.2 , 0.4 ], size = ( n_cls2 , 2 )) ]) train_y = np . concatenate ([ np . ones ( shape = n_cls1 ), - np . ones ( shape = n_cls2 ) ]) In [6]: X , Y = np . meshgrid ( np . linspace ( - 1 , 1 , 100 ), np . linspace ( - 1 , 1 , 100 )) In [7]: kernels = [ \"linear\" , \"polynomial\" , \"gaussian\" , \"sigmoid\" , \"laplacian\" , \"inverse_multiquadric\" ] In [8]: n_fig = len ( kernels ) n_col = 3 n_row = n_fig // n_col if n_fig % n_col ==0 else n_fig//n_col+1 fig = plt . figure ( figsize = ( 4 * n_col , 4 * n_row )) for i , kernel in enumerate ( kernels ): ax = fig . add_subplot ( n_row , n_col , i + 1 ) model = hardSVC ( kernel = kernel ) model . fit ( train_x , train_y , max_iter = 1500 , sparse_memorize = False ) Z = np . vectorize ( lambda x , y : model . predict ( np . array ([ x , y ]) . reshape ( 1 , - 1 )))( X , Y ) == 1 ax . pcolor ( X , Y , Z , alpha = 0.3 ) for i in range ( N ): alpha = 1 if i in model . isSV () else 0.3 color = \"red\" if train_y [ i ] == 1 else \"blue\" ax . plot ( train_x [ i , 0 ], train_x [ i , 1 ], marker = \"o\" , color = color , markersize = 10 , alpha = alpha ) ax . set_title ( f \" {kernel} kernel\" ) ax . set_xlim ( - 1 , 1 ), ax . set_ylim ( - 1 , 1 ) plt . tight_layout () plt . show () ソフトマージン ここまで、 「二クラスが線形分離可能である」 という仮定を置いていたが、実際の問題では クラスの分布が重なる場合 があり、そのような場合訓練データを完全に分離する解が汎化能力に優れるとは限らない（というより、過学習する。） そこで、各学習データ $(\\mathbf{x}_n,t_n)$ に対して、 スラック変数 (slack variable) $\\xi_n\\geq 0$ を導入して、 $$ t_ny(\\mathbf{x}_n) \\geq 1 \\Longrightarrow t_ny(\\mathbf{x}_n) \\geq 1 - \\xi_n \\qquad (7.20)$$ と条件を緩める。 （ハードマージンの制約のソフトマージンへの緩和） つまり、 $\\xi_n > 1$ となるデータは誤識別している事になる。 ここでの目標は 『マージンよりも内側（$\\xi_n>0$）のデータ $n$ に対してソフトにペナルティを与えつつマージンを最大化する』 ことである。したがって、次の目的関数を最小化する。 $$C\\sum_{n=1}&#94;N\\xi_n + \\frac{1}{2}\\|\\mathbf{x}_n\\| \\qquad (7.21)$$ なお、$C>0$ は スラック変数を用いて表されるペナルティとマージンの大きさの間の トレードオフを制御するパラメータ である。 したがって、この最小化問題のラグランジュ関数は、新たにラグランジュ乗数 $\\{\\mu_n\\}$ を導入して以下のようになる。 $$L(\\mathbf{w},b,\\boldsymbol{\\xi},\\mathbf{a},\\boldsymbol{\\mu}) = \\frac{1}{2}\\|\\mathbf{w}\\|&#94;2 + C\\sum_{n=1}&#94;N\\xi_n - \\sum_{n=1}&#94;{N}a_n\\left\\{t_n\\left(\\mathbf{w}&#94;T\\phi(\\mathbf{x}_n) + b\\right) - 1 + \\xi_n\\right\\} - \\sum_{n=1}&#94;N\\mu_n\\xi_n\\qquad (7.22)$$ 先程同様 $\\mathbf{w},b,\\xi_n$ について微分して、 $$ \\begin{aligned} \\frac{\\partial L}{\\partial \\mathbf{w}} &= \\mathbf{w}-\\sum_{n=1}&#94;N a_nt_n\\phi(\\mathbf{x}_n) =0 \\quad \\therefore \\mathbf{w}&#94;{\\ast}=\\sum_{n=1}&#94;N a_nt_n\\phi(\\mathbf{x}_n) & (7.29)\\\\ \\frac{\\partial L}{\\partial b} &= -\\sum_{n=1}&#94;N a_nt_n = 0 \\quad\\therefore\\sum_{n=1}&#94;Na_n&#94;{\\ast}t_n = 0 & (7.30)\\\\ \\frac{\\partial L}{\\partial \\xi_n} &= C-a_n-\\mu_n \\quad\\therefore a_n = C-\\mu_n & (7.31) \\end{aligned} $$ が得られる。これらの結果を $(7.22)$ に代入すると、以下の 双対形のラグランジュ関数 が得られる。 $$ \\tilde{L}(\\mathbf{a}) =\\sum_n&#94;Na_n - \\frac{1}{2}\\sum_{n=1}&#94;{N}\\sum_{m=1}&#94;Na_na_mt_nt_mk(\\mathbf{x}_n,\\mathbf{x}_m)\\qquad (7.32)$$ これは、先程の $(7.10)$ と同様の形である。なお、制約式は $$ \\begin{aligned} &a;_n \\geq 0,\\mu_n\\geq 0 \\quad n=1,\\ldots,N\\\\ &\\therefore 0\\leq a_n \\leq C & (7.33)\\\\ &\\sum_{n=1}&#94;Na_nt_n = 0 & (7.34) \\end{aligned} $$ である。 なお、バイアスパタメータ $b$ は、サポートベクトルは $a_n>0$ を満たすが、KKT条件より $a_n$ $\\mu_n$ $\\xi_n$ 説明 $a_n=0$ 識別関数に影響を及ぼさない。 $a_n $\\mu_n>0$ $\\xi_n=0$ ちょうどマージン境界上ある。 $a_n=C$ $\\mu_n=0$ $\\xi_n>0$ マージン内に侵入している。 となることから、$0 $$ \\begin{aligned} &t;_n\\left(\\sum_{m\\in\\mathcal{S}}a_mt_mk(\\mathbf{x}_n,\\mathbf{x}_m) + b\\right) = 1 & (7.36)\\\\ &\\therefore b&#94;{\\ast}= \\frac{1}{N_{\\mathcal{M}}}\\sum_{n\\in\\mathcal{M}}\\left(t_n-\\sum_{n\\in\\mathcal{S}}a_mt_mk(\\mathbf{x}_n,\\mathbf{x}_m)\\right)&(7.37) \\end{aligned} $$ として求めることができる。 In [9]: from kerasy.ML.svm import SVC In [10]: train_x = np . concatenate ([ np . random . RandomState ( seed ) . normal ( loc = [ 0.2 , 0.2 ], scale = [ 0.2 , 0.4 ], size = ( n_cls1 , 2 )), np . random . RandomState ( seed ) . normal ( loc = [ - 0.2 , - 0.2 ], scale = [ 0.3 , 0.2 ], size = ( n_cls2 , 2 )) ]) train_y = np . concatenate ([ np . ones ( shape = n_cls1 ), - np . ones ( shape = n_cls2 ) ]) In [11]: params = [ ( 1e-2 , 1e-2 ),( 1e-2 , 1e0 ),( 1e-2 , 1e2 ), ( 1e1 , 1e-2 ),( 1e1 , 1e0 ),( 1e1 , 1e2 ), ( 1e4 , 1e-2 ),( 1e4 , 1e0 ),( 1e4 , 1e2 ), ] In [12]: n_fig = len ( params ) n_col = 3 n_row = n_fig // n_col if n_fig % n_col ==0 else n_fig//n_col+1 fig = plt . figure ( figsize = ( 4 * n_col , 4 * n_row )) for i ,( C , sigma ) in enumerate ( params ): ax = fig . add_subplot ( n_row , n_col , i + 1 ) model = SVC ( kernel = \"gaussian\" , C = C , sigma = sigma ) model . fit ( train_x , train_y , max_iter = 1500 , sparse_memorize = False ) Z = np . vectorize ( lambda x , y : model . predict ( np . array ([ x , y ]) . reshape ( 1 , - 1 )))( X , Y ) == 1 ax . pcolor ( X , Y , Z , alpha = 0.3 ) for i in range ( N ): alpha = 1 if i in model . isSV () else 0.3 color = \"red\" if train_y [ i ] == 1 else \"blue\" ax . plot ( train_x [ i , 0 ], train_x [ i , 1 ], marker = \"o\" , color = color , markersize = 10 , alpha = alpha ) ax . set_title ( f \"gaussian kernel (C= {C} , $\\sigma= {sigma} $)\" ) ax . set_xlim ( - 1 , 1 ), ax . set_ylim ( - 1 , 1 ) plt . tight_layout () plt . show () 多クラスSVM SVMは本来2クラス識別の為の分類器であるが、これを複数組み合わせるなどの方法によって $K>2$クラスの識別に利用する事が出来る。最もよく用いられる方法は、 one-versus-the-rest方式 と呼ばれる方法であり、「データ $\\mathbf{x}$ が クラス $k$ かそれ以外であるか を識別するSVM $y_k(\\mathbf{x})$ を $K$ クラスそれぞれについて構築し、$ y(\\mathbf{x}) = \\mathop{\\rm arg~max}\\limits_{k}y_k(\\mathbf{x})$ によって $\\mathbf{x}$ のクラスを決定する」 SVM回帰 単純な線形回帰問題においては、次の式で定義される正則化された誤差関数を最小化する。 $$\\frac{1}{2}\\sum_{n=1}&#94;N\\{y_n-t_n\\}&#94;2 + \\frac{\\lambda}{2}\\|\\mathbf{w}\\|&#94;2\\qquad (7.50)$$ 疎な解を得るために、二条誤差関数を $\\epsilon$ 許容誤差関数($\\epsilon$-insentive error function) で置き換える。つまり、予測値 $y(\\mathbf{x})$ と観測値 $t$ の差が $\\epsilon(>0)$ 未満のときは、$\\epsilon$ 許容誤差関数の値は $0$ となる。$\\epsilon$ 許容誤差関数の簡単な例は、 「許容範囲外の値に関しては線形のコストを生じさせる」 ものである。 $$ \\begin{aligned} E_{\\epsilon}\\left(y(\\mathbf{x})-t\\right) = \\begin{cases} 0 & (\\text{ when }|y(\\mathbf{x} - t)| < \\epsilon)\\\\ |y(\\mathbf{x} - t)| - \\epsilon & (\\text{ otherwise }) \\end{cases}\\qquad (7.51) \\end{aligned} $$ In [13]: squareError = lambda x , y_true : 1 / 2 * ( x - y_true ) ** 2 # Sum of Squares Error function epsilonError = lambda x , y_true , epsilon = 1 : 0 if abs ( x - y_true ) < epsilon else abs ( x - y_true ) - epsilon In [14]: X = np . linspace ( - 2 , 2 , 1000 ) plt . plot ( X ,[ squareError ( x , y_true = 0 ) for x in X ], color = \"black\" , label = \"sum of squares error function\" , linestyle = \"--\" ) plt . plot ( X ,[ epsilonError ( x , y_true = 0 ) for x in X ], color = \"black\" , label = \"$\\epsilon$-insentive error function\" ) plt . scatter ( 0 , 0 , marker = \"x\" , color = \"red\" , label = \"y_true\" ) plt . title ( \"Error function comparison\" , fontsize = 16 ), plt . xlim ( - 2 , 2 ), plt . ylim ( -. 1 , 2 ) plt . xlabel ( \"$x$\" , fontsize = 16 ), plt . ylabel ( \"$E(x)$\" , fontsize = 16 ) plt . legend () plt . show () この $\\epsilon$ 許容誤差関数を用いると、結局次の正則化された誤差関数を最小化することになる。 $$C\\sum_{n=1}&#94;NE_{\\epsilon}\\left(y(\\mathbf{x}_n)-t_n\\right) + \\frac{1}{2}\\|\\mathbf{w}\\|&#94;2\\qquad (7.52)$$ 分類問題と同様、この最適化問題をスラック変数 $\\xi_n,\\hat{\\xi}_n$ を導入して表現する。 $\\epsilon$ チューブの中に位置するという条件は $y_n-\\epsilon\\leq t_n \\leq y_n+\\epsilon$ と表せるので、チューブの外側にデータ点が存在することを許すような制約条件は以下のようにかける。 $$ \\begin{aligned} t_n&\\leq y(\\mathbf{x}_n) + \\epsilon + \\xi_n & (7.53)\\\\ t_n&\\geq y(\\mathbf{x}_n) - \\epsilon - \\xi_n & (7.54)\\\\ \\end{aligned} $$ よって、スラック変数を用いると、SVM回帰の誤差関数は次のようにかける。 $$C\\sum_{n=1}&#94;N\\left(\\xi_n + \\hat{\\xi}_n\\right) + \\frac{1}{2}\\|\\mathbf{w}\\|&#94;2\\qquad (7.55)$$ したがって、この最小化問題のラグランジュ関数は、ラグランジュ乗数 $a_n,\\hat{a}_n,\\mu_n,\\hat{\\mu}_n$ を導入して以下のようになる。（$y(\\mathbf{x}_n)= \\mathbf{w}&#94;T\\phi(\\mathbf{x}_n)+b$） $$ \\begin{aligned} L &=C\\sum_{n=1}&#94;N\\left(\\xi_n+\\hat{\\xi}_n\\right)+\\frac{1}{2}\\|\\mathbf{w}\\|&#94;2-\\sum_{n=1}&#94;N\\left(\\mu_n\\xi_n+\\hat{\\mu}_n\\hat{\\xi}_n\\right)\\\\ &-\\sum_{n=1}&#94;Na_n\\left(\\epsilon + \\xi_n + y_n - t_n \\right)-\\sum_{n=1}&#94;N\\hat{a}_n\\left(\\epsilon + \\hat{\\xi}_n - y_n + t_n\\right) \\qquad (7.56)\\\\ \\end{aligned} $$ これまで同様 $\\mathbf{w},b,\\xi_n,\\hat{\\xi}_n$ について微分して、 $$ \\begin{aligned} \\frac{\\partial L}{\\partial \\mathbf{w}} &= \\mathbf{w}-\\sum_{n=1}&#94;Na_n\\phi(\\mathbf{x}_n)-\\sum_{n=1}&#94;N\\hat{a}_n\\phi(\\mathbf{x}_n)=0 \\quad \\therefore \\mathbf{w}&#94;{\\ast}=\\sum_{n=1}&#94;N \\left(a_n-\\hat{a}_n\\right)\\phi(\\mathbf{x}_n) & (7.57)\\\\ \\frac{\\partial L}{\\partial b} &= -\\sum_{n=1}&#94;N a_n + \\sum_{n=1}&#94;N\\hat{a}_n = 0 \\quad\\therefore\\sum_{n=1}&#94;N\\left(a_n-\\hat{a}_n\\right) = 0 & (7.58)\\\\ \\frac{\\partial L}{\\partial \\xi_n} &= C-a_n-\\mu_n \\quad\\therefore a_n + \\mu_n = C & (7.59)\\\\ \\frac{\\partial L}{\\partial \\hat{\\xi}_n} &= C-\\hat{a}_n-\\hat{\\mu}_n \\quad\\therefore \\hat{a}_n + \\hat{\\mu}_n = C & (7.60)\\\\ \\end{aligned} $$ が得られる。これらの結果を $(7.56)$ に代入すると、以下の 双対形のラグランジュ関数 が得られる。 $$ \\begin{aligned} \\tilde{L}(\\mathbf{a},\\hat{\\mathbf{a}}) &= -\\frac{1}{2}\\sum_{n=1}&#94;N\\sum_{m=1}&#94;N\\left(a_n-\\hat{a}_n\\right)\\left(a_m-\\hat{a}_m\\right)k(\\mathbf{x}_n,\\mathbf{x}_m)\\\\ &- \\epsilon\\sum_{n=1}&#94;N\\left(a_n + \\hat{a}_n\\right) + \\sum_{n=1}&#94;N\\left(a_n-\\hat{a}_n\\right)t_n \\end{aligned} \\qquad (7.61) $$ なお、制約式は $$ \\begin{aligned} 0 \\leq a_n &\\leq C & (7.62)\\\\ 0 \\leq \\hat{a}_n &\\leq C & (7.63) \\end{aligned} $$ である。したがって、新しい入力に対する予測値は $$y(\\mathbf{x}) = \\sum_{n=1}&#94;N\\left(a_n-\\hat{a}_n\\right)k(\\mathbf{x},\\mathbf{x}_n) + b\\qquad (7.64)$$ とカーネル関数のみを用いて計算できることがわかる。 なお、バイアスパタメータ $b$ は次のように計算できる。 $C>a_n>0$ が成り立つデータ点についてはKKT条件より $\\xi_n = 0 \\quad \\therefore \\epsilon+y_n-t_n=0$ が成り立つ。よって、 $$ \\begin{aligned} b &= t_n - \\epsilon - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_n)\\\\ &= t_n - \\epsilon - \\sum_{m=1}&#94;N\\left(a_m-\\hat{a}_m\\right)k(\\mathbf{x}_n,\\mathbf{x}_m)\\qquad (7.69) \\end{aligned} $$ $C>\\hat{a}_n>0$ が成り立つデータ点についてはKKT条件より $\\hat{\\xi}_n = 0 \\quad \\therefore \\epsilon+y_n-t_n=0$ が成り立つ。よって、 $$ \\begin{aligned} b &= t_n - \\epsilon - \\mathbf{w}&#94;T\\phi(\\mathbf{x}_n)\\\\ &= t_n - \\epsilon - \\sum_{m=1}&#94;N\\left(a_m-\\hat{a}_m\\right)k(\\mathbf{x}_n,\\mathbf{x}_m)\\qquad (7.69) \\end{aligned} $$ なお、このようにして得られた $b$ の値を全て平均した結果を用いると数値誤差の影響を小さくできる。 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-3.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-3.html"},{"title":"ラグランジュ未定乗数法","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) 条件なし最適化 ある関数 \\(f\\) が与えられた時、それが最小値を取る点を見つけ出す。 $$\\text{min : } f(\\mathbf{x})$$ したがって、微分をとって \\(0\\) になる点を見つければ良い。 $$\\frac{\\partial}{\\partial x}f(x) = 0\\Longrightarrow x&#94;{\\ast}$$ 等式制約付き最適化 $$ \\begin{aligned} \\text{min : } & f(\\mathbf{x})\\\\ \\text{subject to : } & g(\\mathbf{x})=0\\\\ \\end{aligned} $$ ラグランジュ乗数(Lagrangian multiplier) と呼ばれるパラメータ \\(\\lambda\\) を導入した ラグランジュ関数(Lagrangian function) $$L(\\mathbf{x},\\lambda) \\equiv f(\\mathbf{x})+\\lambda g(\\mathbf{x})\\qquad (E.4)$$ の \\(\\mathbf{x}\\) と \\(\\lambda\\) の両方に対する停留点（鞍点）を見つければ、制約付き問題の最適解が得られる。 理由 以下２つの理由より、 \\(\\nabla f\\) と \\(\\nabla g\\) は、 向きが逆の場合も含めて 平行なベクトルとなる。したがって、 あるパラメータ \\(\\lambda\\neq0\\) が存在して、 $$\\nabla f + \\lambda\\nabla g = 0\\qquad (E.3)$$ が成立しなければならない。これは、 \\(\\nabla_{\\mathbf{x}}L=0\\) と表されることがわかる。また、 \\(\\partial L/\\partial\\lambda = 0\\) より、制約式 \\(g(\\mathbf{x})=0\\) も導かれる。 1) \\(\\nabla g(\\mathbf{x})\\) が制約面 \\(g(\\mathbf{x})=0\\) に対して常に垂直 制約面 \\(g(\\mathbf{x})\\) 上の点 \\(\\mathbf{x}\\) と \\(\\mathbf{x}+\\boldsymbol{\\varepsilon}\\) を考える。 すると、 \\(\\mathbf{x}\\) の周りでの \\(g(\\mathbf{x})\\) のテイラー展開より、 $$g(\\mathbf{x} + \\boldsymbol{\\varepsilon}) \\sim g(\\mathbf{x}) + \\boldsymbol{\\varepsilon}&#94;T\\nabla g(\\mathbf{x})\\qquad (E.2)$$ いま、 \\(\\mathbf{x}\\) と \\(\\mathbf{x}+\\boldsymbol{\\varepsilon}\\) は共に制約面上に存在するので $$g(\\mathbf{x})=g(\\mathbf{x}+\\boldsymbol{\\varepsilon})=0$$ が成り立つ。ゆえに、 \\(\\|\\boldsymbol{\\varepsilon}\\|\\rightarrow0\\) の極限では \\(\\boldsymbol{\\varepsilon}&#94;T\\nabla g(\\mathbf{x})\\sim0\\) が成り立つ。 \\(\\boldsymbol{\\varepsilon}&#94;T\\) は制約面上の接線である。 より、ベクトル \\(\\nabla g(\\mathbf{x})\\) は制約面 \\(g(\\mathbf{x})=0\\) に対して垂直である。 2) \\(\\nabla f(\\mathbf{x}&#94;{\\ast})\\) も制約面に対して垂直 もし \\(\\nabla f(\\mathbf{x}&#94;{\\ast})\\) が制約面に対して垂直でないとすると、制約面にそって \\(f(\\mathbf{x})\\) の値がさらに大きくなるように点を動かすことができるはずである。 したがって、制約面上の点で \\(f(\\mathbf{x})\\) を最大化する点 \\(\\mathbf{x}&#94;{\\ast}\\) においては、ベクトル \\(\\nabla f(\\mathbf{x})\\) も制約面に対して垂直でなければならない。 不等式制約付き最適化 $$ \\begin{aligned} \\text{min : } & f(\\mathbf{x})\\\\ \\text{subject to : } & g(\\mathbf{x})\\leq0\\\\ \\end{aligned} $$ ここで、解 \\(\\mathbf{x}&#94;{\\ast}\\in\\Omega\\) には、 無効制約(inactive constraint) \\(\\overset{\\text{def}}{\\Longleftrightarrow}g(\\mathbf{x}&#94;{\\ast}) < 0\\) 有効制約(active constraint) \\(\\overset{\\text{def}}{\\Longleftrightarrow}g(\\mathbf{x}&#94;{\\ast}) = 0\\) の2つの可能性がある。 $$ \\Omega:= \\left\\{\\mathbf{x}\\in\\mathbb{R}&#94;D: g(\\mathbf{x})<0 \\right\\} $$ 無効制約の場合 無効制約 \\(\\left(g(\\mathbf{x})<0\\right)\\) の場合、関数 \\(g(\\mathbf{x})\\) は何も制約を課していないのと同様なので、停留条件は単に \\(\\nabla f(\\mathbf{x}) = 0\\) となる。 なお、これは上記の 等式制約におけるラグランジュ関数 \\((E.4)\\) において \\(\\lambda=0\\) とした場合の停留条件に等しい。 有効制約の場合 有効制約 \\(\\left(g(\\mathbf{x})=0\\right)\\) の場合、 等式制約におけるラグランジュ関数 \\((E.4)\\) において \\(\\lambda\\neq0\\) とした場合の停留条件に等しい。 ただし、 \\(-\\nabla f(\\mathbf{x}&#94;{\\ast})\\) は \\(g(\\mathbf{x})<0\\) の外側へと向かうはず だから、 あるパラメータ \\(\\lambda>0\\) が存在して、 $$\\nabla f(\\mathbf{x}) = -\\lambda\\nabla g (\\mathbf{x})$$ が成立しなければならない。 勾配 意味 最適化問題における問題における意味 \\(\\nabla f(\\mathbf{x})\\) \\(f\\) が大きくなる方向 目的とは別の方向 \\(\\nabla g(\\mathbf{x})\\) \\(g\\) が大きくなる方向 \\(g(\\mathbf{x})<0\\) の外側へと向かう方向 KKT条件 上記の無効制約・有効制約のどちらの場合にせよ、 \\(\\lambda g(\\mathbf{x})=0\\) が成立することがわかる。 したがって、 \\(g(\\mathbf{x})\\leq0\\) という制約の下で \\(f(\\mathbf{x})\\) を最小化するには、以下の Karush-Kuhn-Tucker(KKT)条件 のもとで、 \\(\\mathbf{x},\\lambda\\) に関して ラグランジュ関数 \\((E.4)\\) の停留点を求めれば良い。 $$ \\begin{aligned} \\begin{cases} \\text{Primal feasibility} &g(\\mathbf{x})\\leq0 & (E.9)\\\\ \\text{Dual feasibility} &\\lambda \\geq 0 & (E.10)\\\\ \\text{Complementary slackness} &\\lambda g(\\mathbf{x}) = 0 & (E.11) \\end{cases} \\end{aligned} $$ なお、当然ではあるが、「制約条件の符号の向き」と「目的関数の最大化・最小化」には以下の関係がある。（ \\(\\lambda\\geq0\\) ） 目的関数 \\(f(\\mathbf{x})\\) 制約条件 \\(g(\\mathbf{x})\\) ラグランジュ関数 \\(L(\\mathbf{x},\\lambda)\\) \\(\\min f(\\mathbf{x})\\) \\(g(\\mathbf{x})\\leq0\\) \\(L(\\mathbf{x},\\lambda) = f(\\mathbf{x}) + \\lambda g(\\mathbf{x})\\) \\(\\min f(\\mathbf{x})\\) \\(g(\\mathbf{x})\\geq0\\) \\(L(\\mathbf{x},\\lambda) = f(\\mathbf{x}) - \\lambda g(\\mathbf{x})\\) \\(\\max f(\\mathbf{x})\\) \\(g(\\mathbf{x})\\leq0\\) \\(L(\\mathbf{x},\\lambda) = f(\\mathbf{x}) - \\lambda g(\\mathbf{x})\\) \\(\\max f(\\mathbf{x})\\) \\(g(\\mathbf{x})\\geq0\\) \\(L(\\mathbf{x},\\lambda) = f(\\mathbf{x}) + \\lambda g(\\mathbf{x})\\) 一般化 $$ \\begin{aligned} \\text{min : } & f(\\mathbf{x})\\\\ \\text{subject to : } & g_j(\\mathbf{x})=0 & (j=1,\\ldots,J)\\\\ & h_k(\\mathbf{x})\\leq0 & (k=1,\\ldots,K)\\\\ \\end{aligned} $$ 以下のラグランジュ関数を最適化する。 $$L\\left(\\mathbf{x},\\{\\lambda_j\\},\\{\\mu_k\\}\\right) = f(\\mathbf{x}) + \\sum_{j=1}&#94;J\\lambda_jg_j(\\mathbf{x}) + \\sum_{k=1}&#94;K\\mu_kh_k(\\mathbf{x})\\qquad (E.12)$$ ここで、KKT条件は、以下となる。 $$ \\begin{aligned} \\begin{cases} \\text{Primal feasibility} &g_j(\\mathbf{x})=0,h_k(\\mathbf{x})\\leq0 \\\\ \\text{Dual feasibility} &\\mu_k \\geq 0\\\\ \\text{Complementary slackness} &\\mu_kh_k(\\mathbf{x}) = 0 \\end{cases} \\end{aligned} $$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-2.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-2.html"},{"title":"カーネル法","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) In [1]: import numpy as np import matplotlib.pyplot as plt 講義の構成 パターン認識 カーネル法の紹介 最適化理論の復習 サポートベクターマシーン パターン認識 対象を識別するルールを訓練データより、自動的に取得する。 各対象を全データ共通次元のベクトルで表現すれば、識別関数 $f(\\mathbf{x})$ は、特徴空間上に定義される。 元の空間 （入力空間） を非線形に写像すれば、写像先 （特徴空間） で線形識別することで非線形識別が達成される。 $$\\phi:\\mathbf{X}\\rightarrow\\mathbb{R}&#94;m$$ どのように写像を定めるかは難しい問題。 カーネル法の紹介 上で紹介した写像を、 類似度関数（カーネル関数） に基づいて決める手法。（例：ガウシアンカーネル $K(\\mathbf{x},\\mathbf{x}&#94;{\\prime}) = \\exp\\left(-\\frac{\\|\\mathbf{x}-\\mathbf{x}&#94;{\\prime}\\|}{\\sigma}\\right)$） 類似度さえ定義できればどのような対象（例：生物学的ネットワーク上のタンパク質の分類）にでも適用できる。 複雑な問題になると非常に高い次元に写像する必要があるが、カーネル関数さえ求められれば写像 $\\phi$ を陽に求める必要はない （カーネルトリック） 。 $k(\\mathbf{x},\\mathbf{x}&#94;{\\prime})$ が有効なカーネル関数であるための必要十分条件は、任意の $\\{\\mathbf{x}_n\\}$ に対して、要素が $k(\\mathbf{x}_n,\\mathbf{x}_m)$ で与えられるグラム行列 $\\mathbf{K}$ が半正定値であること。 新しいカーネル関数を定義してそれが有効な関数かを確認するのは大変なので、次の性質を用いて新たな関数を定義することが多い。 新たなカーネル関数を構築するための方法 有効なカーネルとして $k_1(\\mathbf{x},\\mathbf{x}&#94;{\\prime})$ と $k_2(\\mathbf{x},\\mathbf{x}&#94;{\\prime})$ が与えられた時、次の関数もやはりカーネル関数として有効である。 $$\\begin{aligned} k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=c k_{1}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) & (6.13)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=f(\\mathbf{x}) k_{1}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) f\\left(\\mathbf{x}&#94;{\\prime}\\right) & (6.14)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=q\\left(k_{1}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right)\\right) & (6.15)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=\\exp \\left(k_{1}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right)\\right) & (6.16)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=k_{1}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right)+k_{2}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right)& (6.17)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=k_{1}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) k_{2}\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) & (6.18)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=k_{3}\\left(\\phi(\\mathbf{x}), \\phi\\left(\\mathbf{x}&#94;{\\prime}\\right)\\right) & (6.19)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=\\mathbf{x}&#94;{\\mathrm{T}} \\mathbf{A} \\mathbf{x}&#94;{\\prime}& (6.20) \\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=k_{a}\\left(\\mathbf{x}_{a}, \\mathbf{x}_{a}&#94;{\\prime}\\right)+k_{b}\\left(\\mathbf{x}_{b}, \\mathbf{x}_{b}&#94;{\\prime}\\right) & (6.21)\\\\ k\\left(\\mathbf{x}, \\mathbf{x}&#94;{\\prime}\\right) &=k_{a}\\left(\\mathbf{x}_{a}, \\mathbf{x}_{a}&#94;{\\prime}\\right) k_{b}\\left(\\mathbf{x}_{b}, \\mathbf{x}_{b}&#94;{\\prime}\\right) & (6.22) \\end{aligned}$$ ※ ここで、それぞれの変数は以下の意味を持つ。 変数 説明 $c>0$ 定数 $f(\\cdot)$ 任意の関数 $q(\\cdot)$ 非負の係数を持つ多項式 $\\phi(\\mathbf{x})$ $\\mathbf{x}$ から $\\mathbb{R}&#94;{M}$ への関数 $k_3(\\cdot,\\cdot)$ $\\mathbb{R}&#94;{M}$ で定義された有効なカーネル $\\mathbf{A}$ 対象な半正定値行列 $\\mathbf{x}_a,\\mathbf{x}_b$ $\\mathbf{x}=(\\mathbf{x}_a,\\mathbf{x}_b)$ であるような変数（必ずしも互いに素である必要はない） $k_a,k_b$ それぞれの特徴空間において有効なカーネル関数 カーネル関数の例 $$k(x,x&#94;{\\prime}) = \\boldsymbol{\\phi}(x)&#94;T\\boldsymbol{\\phi}(x&#94;{\\prime}) = \\sum_{i=1}&#94;M\\phi_i(x)\\phi_i(x&#94;{\\prime})\\qquad (6.10)$$ # 多項式 ガウス シグモイド 基底関数 $$\\phi_j(x) = cx&#94;j$$ $$\\phi_j(x) = \\exp\\left\\{-\\frac{(x-\\mu_j)&#94;2}{2s&#94;2}\\right\\}\\qquad(3.4)$$ $$\\begin{aligned}\\phi_j(x) &= \\sigma\\left(\\frac{x-\\mu_j}{s}\\right) & (3.5)\\\\\\sigma(a) &=\\frac{1}{1+\\exp(-a)} & (3.6)\\end{aligned}$$ In [2]: # mapping function def polynomial ( x , d , c = 1 ): return c * x ** d def gaussian ( x , mu , s = 0.1 ): return np . exp ( - (( x - mu ) ** 2 ) / ( 2 * s ** 2 ) ) def logistic ( x , mu , s = 0.1 ): return 1 / ( 1 + np . exp ( - ( x - mu ) / s )) In [3]: # mapping function kernel = lambda phi , x_prime , X , key = None , ** params : np . array ([ sum ([ phi ( x_prime , ** { key : val }) * phi ( x , ** { key : val }) for val in params [ key ]]) for x in X ]) In [4]: params = [ ( polynomial , - 0.5 , \"d\" , np . linspace ( 1 , 11 , 11 )), ( gaussian , 0 , \"mu\" , np . linspace ( - 1 , 1 , 11 )), ( logistic , 0 , \"mu\" , np . linspace ( - 1 , 1 , 11 )), ] In [5]: X = np . linspace ( - 1 , 1 , 1000 ) In [6]: ncol = len ( params ) fig = plt . figure ( figsize = ( 12 , 6 )) for i , param in enumerate ( params ): phi , x_prime , key , vals = param ax_base = plt . subplot2grid (( 5 , ncol ),( 0 , i ), rowspan = 3 ) for val in vals : Y = phi ( X , ** { key : val }) ax_base . plot ( X , Y ) ax_base . set_title ( phi . __name__ ) ax_kernel = plt . subplot2grid (( 5 , ncol ),( 3 , i ), rowspan = 2 ) ax_kernel . plot ( X , kernel ( phi , x_prime , X , key , ** { key : vals })) ax_kernel . scatter ( x_prime , min ( ax_kernel . get_ylim ()), marker = \"x\" , color = \"black\" , label = \"$x&#94;{\\prime}$\" ) ax_kernel . set_xlabel ( \"$x$\" ), ax_kernel . set_title ( \"$k(x,x&#94;{\\prime})$\" ), ax_kernel . legend () plt . tight_layout () plt . show () 様々なカーネル 生物学的配列のカーネル Spectrum kernel (Leslie et al., 2002) Marginalized kernel (Tsuda et al., 2002) Profile kernel (Kuang et al., 2004) Local alignment kernel (Saigo et al., 2004) 木構造に関するカーネル Kernel for phylogenetic profiles (Vert, 2002) Kernel for natural language (Suzuki et al., 2003) Kernel for RNA sequences (Kin et al., 2002) ※ 詳しくは、 Kernel Methods in Computational Biology, MIT Press, 2004 を参照 最適化理論の復習 ラグランジュ未定乗数法 に記載。 サポートベクターマシーン マージン最大化 に基づく線形識別器 カーネル関数と組み合わせることによって非線形な識別も可能 サンプル間の類似度にしか依存しない （→非ベクトルデータの分類にも適用可能） 詳しくは サポートベクターマシン(SVM) に記載。 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-1.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-3-1.html"},{"title":"生物統計論 第3回","text":"In [1]: import numpy as np import matplotlib.pyplot as plt Section3.1 Multiple Test Correction \"The more inferences are made, the more likely erroneous inferences are to occur.\" (ex. Even if the type1 error rate is 1% for each data, 10 out of 1000 sample will be rejected on average.) Terminology FWER(Family-wise error rate) : the probability of making at least one type I error (FP) in the family. FDR(False discovery rate) : the expected type I error (FP) rate in rejected data. FDR(False discovery rate) Null hypotheses: $H_1,\\ldots,H_{g_j}$ Alternative hypotheses: $H_{g_j+1},\\ldots,H_g$ Procedure to reject hypotheses : $d_{\\alpha}: \\left(P_1,P_2,\\ldots,P_g\\right)\\rightarrow\\left\\{H_{i_1},\\ldots,H_{i_K}\\right\\}$ Expected ratio of FP in rejected hypotheses: $\\mathrm{FP}=\\sum_{k=1}&#94;K\\mathbb{I}(1\\leq i_k\\leq g_j),\\quad \\mathrm{TP}=K-\\mathrm{FP}$ $\\mathcal{Q} = \\begin{cases}0 & \\text{if }K=(\\mathrm{FP+TP})=0\\\\\\frac{\\mathrm{FP}}{\\mathrm{FP}+\\mathrm{TP}} & \\text{if }K>0\\end{cases}$ $$\\mathrm{FDR}(d_{\\alpha})=\\mathbb{E}\\left(\\mathcal{Q}|H_1,\\ldots,H_g\\right)$$ Methods to counteract this problem Bonferroni Correction Set $\\alpha\\left(=s_{\\alpha}\\leq S_h|H_0\\right)\\leftarrow 1/g\\cdot\\alpha_{\\mathrm{FWER}}$ ($g$: sample size) Therefore, we have: $$\\mathbb{P}\\left(\\{s_{\\alpha}\\leq S_1\\}\\cup\\cdots\\cup\\{s_{\\alpha}\\leq S_g\\}|H_0\\right)\\leq\\sum_{h=1}&#94;g\\mathbb{P}\\left(s_{\\alpha}\\leq S_h|H_0\\right) = g\\cdot\\left(\\frac{1}{g}\\alpha_{\\mathrm{FWER}}\\right) = \\alpha_{\\mathrm{FWER}}$$ Benjamini-Hochberg Procedure (B-H Procedure) If we assume data are distributed independently, we have: $$\\left(P_1,\\ldots,P_g\\right)\\sim\\mathrm{Unif}\\left(0,1\\right)&#94;{\\times g_j}\\times\\mathbb{P}\\left(P|H_{\\text{alternative}}\\right)&#94;{\\times\\left(g-g_j\\right)}$$ We sort the p-value as $p_1\\leq\\cdots\\leq p_g$ Then, $$ \\begin{aligned} d_{\\alpha_{\\mathrm{FDR}}}&#94;{\\mathrm{B-H}}(p_1,\\cdots,p_g) &:=\\mathrm{Reject}\\left\\{H_i|1\\leq i\\max\\left\\{n|p_n\\leq\\left(\\frac{n}{g}\\alpha_{\\mathrm{FDR}}\\right)\\right\\}\\right\\}\\\\ &\\Rightarrow \\mathrm{FDR}\\left(d_{\\alpha_{\\mathrm{FDR}}&#94;{\\mathrm{B-H}}}\\right)\\leq\\alpha_{\\mathrm{FDR}} \\end{aligned} $$ Example. $H_i$ $G_1$ $G_2$ $G_3$ $G_4$ $G_5$ $G_6$ $G_7$ $G_8$ $G_9$ $G_{10}$ $p_i$ $0.1$ $0.4$ $0.8$ $0.035$ $0.9$ $0.04$ $0.001$ $0.002$ $0.6$ $0.7$ In [2]: alpha_FDR = 0.1 g = 10 In [3]: idx = np . array ([ i + 1 for i in range ( g )]) p_value = data = np . array ([ 0.1 , 0.4 , 0.8 , 0.035 , 0.9 , 0.04 , 0.001 , 0.002 , 0.6 , 0.7 ]) q = np . array ([( i + 1 ) / g * alpha_FDR for i in range ( g )]) In [4]: p_value_rank = np . argsort ( p_value ) In [5]: for i in reversed ( range ( g )): if q [ i ] >= p_value [ p_value_rank [ i ]]: break In [6]: print ( f \"Reject: {[f'G {idx} ' for idx in idx[p_value_rank[:i+1]]]}\" ) Reject: ['G7', 'G8', 'G4', 'G6'] Quantile-Quantile plot In [7]: x = - np . log10 ( np . array ([( i + 1 ) / g for i in range ( g )])) y = - np . log10 ( p_value [ p_value_rank ]) In [8]: plt . plot ( x , y , color = \"red\" , label = \"observed\" ) plt . plot (( 0 , min ( x [ 0 ], y [ 0 ])),( 0 , min ( x [ 0 ], y [ 0 ])), color = \"black\" , label = \"$y=x$\" ) plt . title ( \"Quantile-Quantile plot\" ) plt . xlabel ( \"$-\\log_ {10} $ expected P-value\" ) plt . ylabel ( \"$-\\log_ {10} $ observed P-value\" ) plt . legend () plt . grid () plt . show () Section3.2 Probabilistic Models Hypothesis Testing Probabilistic Modeling Models data generation processes in uninteresting scenarios $H_0$ Models data generation processes under interesting biological scenario $H_1$ (possibly as well as $H_0$) Show inconsistency with $H_0$ Check fit of the model to the data Problems of Hypothesis Testing Approaches Difficult to model satisfactory, uninteresting scenarios Does not model interesting biological scenarios A rejected hypothesis does not necessarily tell anything interesting Still useful for many small parts of a full analysis probabilistic Modeling Strong regularity from the probability condition Can include various biological knowledge Adjustable to the quality, amount, randomness of the data Conditional probability makes it easy to integrate multiple models Once a satisfactory model is obtained, we can extract various information from expectation values Powerful general tools are available Maximal Likelihood EM algorithms Bayesian inference MCMC sampling etc... Section3.3 Likelihood Q. How to adjust parameters?? A. Maximize the Likelihood likelihood observed data: $\\mathbf{D} = \\left\\{x&#94;{(h)}|h=1,\\cdots,n\\right\\}$ parametrized model distribution: $\\mathbb{P}(x|\\theta)$ Likelihood: $L(\\theta|D) = \\mathbb{P}(D|\\theta) = \\prod_{h=1}&#94;n\\mathbb{P}\\left(x&#94;{(h)}|\\theta\\right)$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物統計論","url":"https://iwasakishuto.github.io/University/3A/生物統計論-3.html","loc":"https://iwasakishuto.github.io/University/3A/生物統計論-3.html"},{"title":"レポート課題2(10/10出題)","text":"LWAzD/smFi0p7eagkw0GPg==;;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-report2.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-report2.html"},{"title":"連続最適化(1)制約なし最適化","text":"講師： 佐藤一誠 参考書： 最適化手法 参考書： 機械学習のための連続最適化 In [1]: import numpy as np import matplotlib.pyplot as plt 講義概要 凸最適化問題 最急降下法 ニュートン法 準ニュートン法 凸最適化問題 凸関数 任意の $x,x&#94;{\\prime}\\in\\mathcal{X}$、任意の $\\theta\\in[0,1]$ に対して、以下が成り立つような関数を 凸関数(convex function) と呼ぶ。 $$f\\left(\\left(1-\\theta\\right)x + \\theta x&#94;{\\prime}\\right)\\leq\\left(1-\\theta\\right)f(x) + \\theta f\\left(x&#94;{\\prime}\\right)$$ $f$ が一階微分可能の時、$f$ が凸関数になるための必要十分条件は、感覚的には接戦が常に関数の下に来ることで、 $$\\forall x,x&#94;{\\prime}\\in\\mathcal{X},\\quad f\\left(x&#94;{\\prime}\\right)\\geq f(x) + \\nabla f(x)&#94;T\\left(x&#94;{\\prime}-x\\right)$$ $f$ が二階微分可能の時、$f$ が凸関数になるための必要十分条件は、 ヘッセ行列(Hessian matrix) $\\nabla&#94;2f(x)$ が 半正定値(positive semi-definite) ↔︎$\\nabla&#94;2f(x)$ の 固有値(eigenvalue) が全て非負 任意の $x,x&#94;{\\prime}\\in\\mathcal{X}$、任意の $\\theta\\in[0,1]$ に対して、$(1-\\theta)x+\\theta x&#94;{\\prime}$ も $\\mathcal{X}$ に属するとき、$\\mathcal{X}$ を 凸集合(convex set) と呼ぶ。$x$ と $x&#94;{\\prime}$ を結ぶ線分上の全ての点が $\\mathcal{X}$ に属するということ。 最適化 最適化問題(optimization problem)： $\\mathcal{X}\\subset\\mathbb{R}&#94;d$ 上に定義される関数 $f:\\mathcal{X}\\rightarrow\\mathbb{R}$ の最小値 $\\underset{\\mathbf{x}\\in\\mathcal{X}}{\\min}f(\\mathbf{x})$ を求めよ。 最適化アルゴリズム(optimization algorithm)： 収束する点列の生成アルゴリズム 最適性条件：最適化問題の最適解であるための必要条件 制約なし最適化問題(unconstrained optimization problem)： $\\mathcal{X}\\subset\\mathbb{R}&#94;d$ 上に定義される関数 $f:\\mathcal{X}\\rightarrow\\mathbb{R}$ の最小値 $\\underset{\\mathbf{x}\\in\\mathcal{X}}{\\min}f(\\mathbf{x})$ を求めよ。 $f$ を 目的関数(objective function) と呼ぶ。 目的関数は 微分可能(differentiable) と仮定する。 最適性条件：$\\mathbf{x}&#94;{\\star}$ が最適解のとき $$\\nabla f(\\mathbf{x}&#94;{\\star}) = 0$$ 凸最適化問題(convex optimization problem)： 関数 $f$ が凸で集合 $\\mathcal{X}$ も凸 最適解（の集合）が 一意に定まる。 最適解の必要十分条件： 勾配(gradient) がゼロ（凸でない場合は 必要条件 ） 最急降下法 最急降下法(steepest descent method) ※ 勾配法(gradient method)とも。 適当に初期値 $\\mathbf{x}_0$ を定める。 $k=0,1,2,\\ldots$ に対して、収束するまで以下を繰り返す。 $$\\mathbf{x}_{k+1} = \\mathbf{x}_k - \\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)\\quad (\\varepsilon_k>0\\text{ : step size})$$ 凸最適化問題の場合、 大域的最適解(global optimization solution) が求まる 非凸最適化問題の場合、 局所最適解(local optimization solution) しか求められず、様々な初期値から何回か学習して最適解を採用する、ことしかできない。 ステップ幅(step size)の選択 焼きなまし(annealing) ：「最初は大きく、徐々に小さく」。しかし、適切に実装することは容易でない。 正規化(normalization) ：$\\varepsilon_k = \\varepsilon_k&#94;{\\prime}/\\|\\nabla f(\\mathbf{x}_k)\\|$ 勾配が大きいとき安定するが、勾配が小さいときは不安定 厳密直線探索(exact line search) 目的関数の値を最小にするステップ幅を求める。 $$\\underset{\\varepsilon_k>0}{\\min}f\\left(\\mathbf{x}_k-\\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)\\right)$$ $f$ が 単峰関数(unimodal function) の場合は、 二分探索法(binary search) や 黄金分割探索(golden section search) などの探索によって最小値を探す。 一般に、一次元の非線形最小化問題を解く必要があるため、最適なステップ幅の探索に時間がかかる。 厳密直線探索を用いた最急降下法は、 一次収束(linear convergence) する。 $$\\text{Q-linear convergence: }\\|\\mathbf{x}_{k+1}-\\mathbf{x}&#94;{\\star}\\| c\\leq \\|\\mathbf{x}_k-\\mathbf{x}&#94;{\\star}\\|&#94;q,\\quad 0 In [2]: ITERATION = 10 N = 100 fsize = 4 In [3]: a = 10 ; b = 1 A = 2 * np . diag ([ a , b ]) func = lambda x , y : a * x ** 2 + b * y ** 2 In [4]: x1min =- 5 ; x1max = 5 ; x2min =- 5 ; x2max = 5 initialX = np . array ([ x1min + 1 , x2max - 2 ]) x1 = np . linspace ( x1min , x1max , N ) x2 = np . linspace ( x2min , x2max , N ) X1 , X2 = np . meshgrid ( x1 , x2 ) Z = func ( X1 , X2 ) In [5]: def find_step_size ( method , f , X , A , ** kwargs ): df = A . dot ( X ) if method == \"fixed\" : epsilon = 1e-1 elif method == \"exact line search\" : epsilon = np . sum ( np . square ( df )) / np . sum ( np . square ( df ) * A . diagonal ()) elif method == \"backtracking line search\" : epsilon = 1 alpha = kwargs [ \"alpha\" ]; beta = kwargs [ \"beta\" ] while True : newX = X - epsilon * df if f ( newX [ 0 ], newX [ 1 ]) - f ( X [ 0 ], X [ 1 ]) <= - alpha * epsilon * np . sum ( np . square ( df )): break epsilon = beta * epsilon return epsilon In [6]: methods = [ \"fixed\" , \"exact line search\" ] n_methods = len ( methods ) In [7]: fig = plt . figure ( figsize = ( fsize * n_methods , fsize * 2 )) for i , method in enumerate ( methods ): X = initialX ; pX = initialX objective_functions = [] ax_t = fig . add_subplot ( 2 , n_methods , i + 1 ) ax_t . contour ( X1 , X2 , Z , 30 ) ax_t . scatter ( X [ 0 ], X [ 1 ], color = \"red\" , s = 100 , marker = \"*\" , label = \"initial\" ) objective_functions . append ( func ( X [ 0 ], X [ 1 ])) for it in range ( ITERATION ): epsilon = find_step_size ( method , func , X , A , alpha = 0.5 , beta = 0.8 ) df = A . dot ( X ) X = X - epsilon * df ax_t . plot (( X [ 0 ], pX [ 0 ]), ( X [ 1 ], pX [ 1 ]), color = \"black\" , linestyle = \":\" ) ax_t . scatter ( X [ 0 ], X [ 1 ], color = \"black\" , s = 100 , marker = \"*\" ) objective_functions . append ( func ( X [ 0 ], X [ 1 ])) pX = X ax_t . set_title ( method , fontsize = 18 ), ax_t . set_xlabel ( \"x1\" ), ax_t . set_ylabel ( \"x2\" ) ax_t . legend () sharey = ax_b if i != 0 else None ax_b = fig . add_subplot ( 2 , n_methods , n_methods + i + 1 , sharey = sharey ) ax_b . plot ( objective_functions , color = \"black\" ) ax_b . set_xlabel ( \"iteration\" ), ax_b . set_ylabel ( \"objective function\" ) plt . tight_layout () plt . show () 例：$f(x) = 1/2\\mathbf{x}&#94;T\\mathbf{Ax}$ $$ \\begin{aligned} \\frac{\\partial f\\left(\\mathbf{x}_k-\\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)\\right)}{\\partial\\varepsilon_k} &= \\frac{\\partial}{\\partial\\varepsilon_k}\\frac{1}{2}\\left(\\mathbf{x}_k-\\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)\\right)&#94;T\\mathbf{A}\\left(\\mathbf{x}_k - \\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)\\right)\\\\ &= \\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)&#94;T\\mathbf{A}\\nabla f\\left(\\mathbf{x}_k\\right) - \\nabla f\\left(\\mathbf{x}_k\\right)&#94;T\\mathbf{Ax}_k\\\\ &=0\\\\ \\therefore \\varepsilon_k&#94;{\\star} &= \\frac{\\|\\nabla f\\left(\\mathbf{x}_k\\right)\\|&#94;2}{\\nabla f\\left(\\mathbf{x}_k\\right)&#94;T\\mathbf{A}\\nabla f\\left(\\mathbf{x}_k\\right)}\\qquad (\\nabla f\\left(\\mathbf{x}_k\\right) = \\mathbf{Ax}) \\end{aligned} $$ バックトラック直線探索(backtracking line search) $\\varepsilon_k=1$ に初期化 アルミホ基準(Armijo rule) ： $$f\\left(\\mathbf{x}_k-\\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right) - f\\left(\\mathbf{x}_k\\right)\\right) \\leq\\alpha\\|\\nabla f\\left(\\mathbf{x}_k\\right)\\|&#94;2$$ が成り立つまで $\\varepsilon_k$ を $\\varepsilon_k\\leftarrow\\beta\\varepsilon_k$ と減衰させる。（$0<\\alpha, \\beta<1$） 目的関数の減少量の線形予測値の $\\alpha$ 倍の減少を保証している。 $f$ の真の減少量： $$g\\left(\\varepsilon_k\\right) = f\\left(\\mathbf{x}_k-\\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)\\right) - f\\left(\\mathbf{x}_k\\right)$$ $f$ の減少量の 線形予測値 $$\\begin{aligned}\\varepsilon_kg&#94;{\\prime}(0) &=\\varepsilon_k\\cdot\\left( -\\nabla f\\left(\\mathbf{x}_k\\right)&#94;T\\nabla f\\left(\\mathbf{x}_k-0\\cdot\\nabla f\\left(\\mathbf{x}_k\\right)\\right)\\right)\\\\&=-\\varepsilon_k\\nabla f\\left(\\mathbf{x}_k\\right)&#94;T\\nabla f\\left(\\mathbf{x}_k\\right)\\\\&=-\\varepsilon_k\\|\\nabla f\\left(\\mathbf{x}_k\\right)\\|&#94;2 \\end{aligned}$$ In [8]: methods = [ \"fixed\" , \"exact line search\" ] n_methods = len ( methods ) In [9]: fig = plt . figure ( figsize = ( fsize * n_methods , fsize * 2 )) for i , method in enumerate ( methods ): X = initialX ; pX = initialX objective_functions = [] ax_t = fig . add_subplot ( 2 , n_methods , i + 1 ) ax_t . contour ( X1 , X2 , Z , 30 ) ax_t . scatter ( X [ 0 ], X [ 1 ], color = \"red\" , s = 100 , marker = \"*\" , label = \"initial\" ) objective_functions . append ( func ( X [ 0 ], X [ 1 ])) for it in range ( ITERATION ): epsilon = find_step_size ( method , func , X , A , alpha = 0.5 , beta = 0.8 ) df = A . dot ( X ) X = X - epsilon * df ax_t . plot (( X [ 0 ], pX [ 0 ]), ( X [ 1 ], pX [ 1 ]), color = \"black\" , linestyle = \":\" ) ax_t . scatter ( X [ 0 ], X [ 1 ], color = \"black\" , s = 100 , marker = \"*\" ) objective_functions . append ( func ( X [ 0 ], X [ 1 ])) pX = X ax_t . set_title ( method , fontsize = 18 ), ax_t . set_xlabel ( \"x1\" ), ax_t . set_ylabel ( \"x2\" ) ax_t . legend () sharey = ax_b if i != 0 else None ax_b = fig . add_subplot ( 2 , n_methods , n_methods + i + 1 , sharey = sharey ) ax_b . plot ( objective_functions , color = \"black\" ) ax_b . set_xlabel ( \"iteration\" ), ax_b . set_ylabel ( \"objective function\" ) plt . tight_layout () plt . show () 微分不可能な場合 目的関数 $f$ が 微分不可能(non-differentiable) の場合は、微分の概念を一般化した 劣微分 を用いる。 凸関数 $f$ の $\\mathbf{x}&#94;{\\prime}$ での 劣勾配(sub-gradient) とは、全ての $\\mathbf{x}\\in\\mathcal{X}$ に対して次式を満たす $\\mathbf{\\xi}$ $$f(\\mathbf{x})\\geq f\\left(\\mathbf{x}&#94;{\\prime}\\right) + \\mathbf{\\xi}&#94;T\\left(\\mathbf{x}-\\mathbf{x}&#94;{\\prime}\\right)$$ $f$ が微分可能な時、$\\mathbf{\\xi} = \\nabla f\\left(\\mathbf{x}&#94;{\\prime}\\right)$ 上式を満たす $\\mathbf{\\xi}$ 全体を $\\partial f\\left(\\mathbf{x}&#94;{\\prime}\\right)$ で表し、 劣微分(sub-differential) と呼ぶ。 微分不可能な点では、劣微分のどれかの値を用いる。 ニュートン法 一般にニュートン法という名称は、方程式の解を求めるアルゴリズムを指すが、以下を表すことが多い。 適当に初期値 $\\mathbf{x}_0$ を定める。 $k=0,1,2,\\ldots$ に対して、収束するまで以下を繰り返す。 $$\\mathbf{x}_{k+1} = \\mathbf{x}_k - \\varepsilon_k\\left(\\nabla&#94;2f\\left(\\mathbf{x}_k\\right)\\right)&#94;{-1}\\nabla f\\left(\\mathbf{x}_k\\right)$$ 勾配法では一階微分しか用いていないので、二階微分も用いることで反復回数を減らすことが狙い。実際 $k$ が十分大きい時、最適解 $\\mathbf{x}&#94;{\\star}$ の近傍で 二次収束(quadratic convergence) するが、逆行列を求める計算コストが大きい。 二次の テーラー展開(Taylor expansion) を用いて $f$ を現在の解 $\\mathbf{x}_k$ の周りで近似 $\\left(f(\\mathbf{x})\\approx f_k(\\mathbf{x})\\right)$ し、その二次近似を最小にする $\\mathbf{x}_k$ に更新する。 $$f_k(\\mathbf{x}) = f(\\mathbf{x}_k) + \\nabla f(\\mathbf{x}_k)&#94;T\\left(\\mathbf{x}-\\mathbf{x}_k\\right) + \\frac{1}{2}\\left(\\mathbf{x}-\\mathbf{x}_k\\right)&#94;T\\nabla&#94;2f(\\mathbf{x}_k)(\\mathbf{x}-\\mathbf{x}_k)$$ $f_k$ の勾配をゼロと置いた方程式 $$\\nabla f_k(\\mathbf{x}) = \\frac{\\partial f_k(\\mathbf{x})}{\\partial \\mathbf{x}}= \\nabla f(\\mathbf{x}_k) + \\nabla&#94;2f(\\mathbf{x}_k)\\left(\\mathbf{x}-\\mathbf{x}_k\\right) = \\mathbf{0}$$ を解けば、$f_k$ の最小解が以下のように求まる $$\\mathbf{x}&#94;{\\star} = \\mathbf{x}_k - \\left(\\nabla&#94;2 f\\left(\\mathbf{x}_k\\right)\\right)&#94;{-1}\\nabla f\\left(\\mathbf{x}_k\\right)$$ なお、ヘッセ行列が逆行列を持たない時は、 単位行列の定数倍を加えて対処する（正則化, regularization） らしい。 $$\\left(\\nabla&#94;2f\\left(\\mathbf{x}_k\\right) + \\mu\\mathbf{I}\\right)&#94;{-1},\\quad\\mu>0$$ 準ニュートン法 ニュートン法の近似。ニュートン法ではヘッセ行列の逆行列を求めるのに計算コストがかかるので、勾配ベクトル $\\nabla f(\\mathbf{x})$ を用いて近似計算する。 BFGSアルゴリズムを用いたヘッセ行列の更新式が有名 なお、 レポート課題 で詳しく記述しているが、BFGSアルゴリズムのヘッセ行列の更新式は以下で表される。 $$ \\mathbf{H}_{k+1} =\\mathbf{H}_k+\\frac{\\mathbf{t}_k\\mathbf{t}_k&#94;T}{\\mathbf{s}_k&#94;T\\mathbf{t}_k}-\\frac{\\mathbf{H}_k\\mathbf{s}_k\\mathbf{s}_k&#94;T\\mathbf{H}_k}{\\mathbf{s}_k&#94;T\\mathbf{H}_k\\mathbf{s}_k} $$ なお、この時 $$ \\begin{aligned} \\begin{cases} \\mathbf{s}_k &= \\mathbf{x}_{k+1} - \\mathbf{x}_k\\\\ \\mathbf{t}_k &= \\nabla f(\\mathbf{x}_{k+1}) - \\nabla f(\\mathbf{x}_k) \\end{cases} \\end{aligned} $$ まとめ 凸最適化問題 目的関数が凸関数で定義域が凸集合 最適解が一意に定まる 最急降下法 勾配を降下するように値を更新 ステップ幅の選択が重要 目的関数が微分不可能な場合は、劣勾配法や近接勾配法を用いる ニュートン法 二階微分の情報を利用する ヘッセ行列の近似を用いる準ニュートン法が実用的 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-2.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-2.html"},{"title":"Zuker Algorithm","text":"Free energy minimization of RNA seconary structure. In cells, RNAs are likely to form energetically stable secondary structure. The correctness of secondary structure should be evaluated based on the free energy, rather than the number of base-pairs ( Nussinov Algorithm ) We first describe a way to calculate the free energy of a particular RNA secondary structure. We describe the Zuker algorithm which calculates the RNA secondary structure with the minimum free energy (MFE). Free energy of RNA secondary structure The free energy of a secondary structure is approximated as the sum of the free energy of \"loops\". $$E = \\sum_iE_i$$ The free energy of individual loop is given by experimental data. (ex. $\\mathrm{C-G: }-3.4\\mathrm{kcal/mol}$, $\\mathrm{U-A: }-0.9\\mathrm{kcal/mol}$) Five types of \"loops\" hairpin loop stacking bulge loop internal loop multi-loop F1(i,j) F2(i,j,h,l) Fm=a+bk+cu a,b,c: constant k: the number of base-pairs in a multi-loop u: the number of single stranded nucleotides in a multi-loop Algorithm variable meaning $W(i,j)$ the minimum free energy of subsequence from $i$ to $j$. $V(i,j)$ the minimum free energy of subsequence from $i$ to $j$ when $i$ to $j$ forms a base-pair. $M(i,j)$ the minimum free energy of subsequence closed by two or more base pairs. $M1(i,j)$ the minimum free energy of subsequence closed by one or more base pairs. Recursion $$ \\begin{aligned} W(i,j) &= \\min \\begin{cases} W(i+1,j)\\\\W(i,j-1)\\\\V(i,j)\\\\\\min_{i\\leq k Initialization In [1]: from kerasy.Bio.structure import Zuker from kerasy.utils.bio import readMonoSeq In [2]: model = Zuker () In [3]: # 以下の形のパラメタファイルを受け取ります。 ! cat params.json { \"inf\": 1e3, \"type\": \"RNA\", \"Watson_Crick\": true, \"Wobble\": true, \"hairpin\": [Infinity, Infinity, 4.4, 4.6, 4.7, 4.4, 5.0, 4.5, 5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 5.9, 6.0, 6.1, 6.1, 6.2, 6.2, 6.3, 6.3, 6.4, 6.4, 6.5, 6.5, 6.5, 6.6, 6.6, 6.7, Infinity], \"internal\": [Infinity, 1.0, 1.0, 1.1, 2.0, 2.0, 2.1, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 2.9, 3.0, 3.1, 3.1, 3.2, 3.3, 3.3, 3.4, 3.4, 3.5, 3.5, 3.5, 3.6, 3.6, 3.7, 3.7, Infinity], \"buldge\": [1.0, 1.0, 1.0, 1.1, 2.0, 2.0, 2.1, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 2.9, 3.0, 3.1, 3.1, 3.2, 3.3, 3.3, 3.4, 3.4, 3.5, 3.5, 3.5, 3.6, 3.6, 3.7, 3.7, Infinity], \"a\": 6.0, \"b\": -1.0, \"c\": 0.1, \"stacking_cols\": [\"CG\", \"AU\", \"GU\"], \"stacking_score\": [[-3.0, -2.0, -2.0], [-2.0, -0.5, -0.5], [-2.0, -0.5, -0.5]] } In [4]: model . load_params ( \"params.json\" ) In [5]: model . params () | parameter |value | --------------------- |a | 6.0| |b | -1.0| |c | 0.1| |inf |1000.0| |type | RNA| |Watson_Crick| 1| |Wobble | 1| In [6]: model . stacking_cols Out[6]: array(['CG', 'AU', 'GU'], dtype=' In [7]: model . stacking_score Out[7]: array([[-3.e+00, -2.e+00, -2.e+00, 1.e+03], [-2.e+00, -5.e-01, -5.e-01, 1.e+03], [-2.e+00, -5.e-01, -5.e-01, 1.e+03], [ 1.e+03, 1.e+03, 1.e+03, 1.e+03]]) In [8]: # サンプル配列 sequence = readMonoSeq ( path = \"sample_seq4.fasta\" ) In [9]: print ( sequence ) ['CCACCUCGCCGCGAAGAUUGGAUGUAAUGUUCACUUAAGCCUAGGCGUUCGCAAAGAAAUACCUAUGGUAAUUUGACUAGCGGUAACAAUGAAAGAAAAGGUGUAGGCGAGGUGGG'] In [10]: # 最大ペアの配列 model . predict ( sequence [ 0 ]) Zuker Algorithm Score: -37.5 ================================================================= seq: CCACCUCGCCGCGAAGAUUGGAUGUAAUGUUCACUUAAGCCUAGGCGUUCGCAAAGAAAU : ((((((((((((((((..((((((...)))))))))..((((....((((((..(((((( seq: ACCUAUGGUAAUUUGACUAGCGGUAACAAUGAAAGAAAAGGUGUAGGCGAGGUGGG : (((...))))))))..)).))))..))...........)))))).)))))))))). ================================================================= In [11]: model . W Out[11]: array([[ 0. , 0. , 0. , ..., -34.5, -37.5, -37.5], [ 0. , 0. , 0. , ..., -34.5, -34.5, -34.5], [ 0. , 0. , 0. , ..., -32.5, -32.5, -32.5], ..., [ 0. , 0. , 0. , ..., 0. , 0. , 0. ], [ 0. , 0. , 0. , ..., 0. , 0. , 0. ], [ 0. , 0. , 0. , ..., 0. , 0. , 0. ]]) In [12]: model . M Out[12]: array([[1000. , 999. , 999. , ..., -35.4, -38.5, -38.4], [1000. , 1000. , 999. , ..., -35.5, -35.4, -35.3], [1000. , 1000. , 1000. , ..., -33.4, -33.3, -33.2], ..., [1000. , 1000. , 1000. , ..., 1000. , 999. , 999. ], [1000. , 1000. , 1000. , ..., 1000. , 1000. , 999. ], [1000. , 1000. , 1000. , ..., 1000. , 1000. , 1000. ]]) In [13]: model . V Out[13]: array([[1000. , 1000. , 1000. , ..., -31.5, -37.5, -34.5], [1000. , 1000. , 1000. , ..., -34.5, -31.5, -31.5], [1000. , 1000. , 1000. , ..., 1000. , 1000. , 1000. ], ..., [1000. , 1000. , 1000. , ..., 1000. , 1000. , 1000. ], [1000. , 1000. , 1000. , ..., 1000. , 1000. , 1000. ], [1000. , 1000. , 1000. , ..., 1000. , 1000. , 1000. ]]) if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-9.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-9.html"},{"title":"生物物理学 第3回","text":"タンパク質の構造と安定性 タンパク質の定義 特定のアミノ酸（20種類）が重合した重合体である。 特定の立体構造をとる。 （これがないと ポリペプチド ） 機能 説明 分子認識 ミオグロビンは酸素を結合。抗体は抗原と結合。 触媒（酵素） 化学反応の反応速度は \\(10&#94;8\\) ~ \\(10&#94;{17}\\) 倍にも加速される。 制御 基質の結合や環境の変化に伴い構造を変化し、タンパク質の反応を制御する。 エネルギー変換 光を電位に換え、ATP分解を力に換える。 構造形成・維持 タンパク質重合体は細胞や細胞内器官の構造を支える。 タンパク質を構成するアミノ酸 d-グリセルアルデヒドの立体配置を基準として、この立体配置を崩さずにできる化合物をD-体、その鏡像異性体がL-体。 ※ タンパク質はL体 構造 名前 略（三文字） 略（一文字） アラニン Ala A アルギニン Arg R アスパラギン Asn N アスパラギン酸 Asp D システイン Cys C グルタミン酸 Glu E グルタミン Gln Q グリシン Gly G ヒスチジン His H イソロイシン Ile I ロイシン Leu L リシン Lys K メチオニン Met M フェニルアラニン Phe F プロリン Pro P セリン Ser S トレオニン Thr T トリプトファン Trp W チロシン Tyr Y バリン Val V # 上記の表は以下のコードを応用して作成した。 url = \"https://ja.wikipedia.org/wiki/タンパク質を構成するアミノ酸\" soup = BeautifulSoup ( requests . get ( url ) . content , 'lxml' ) for li in soup . findAll ( \"li\" , { \"class\" : \"gallerybox\" }): text = str ( li ) . replace ( ' \\n ' , '' ) src = re . findall ( r '<img.*src=\"(.+?)\".*>' , text )[ 0 ] name , l3 , l1 = re . findall ( r '<p>.*title=\"(.+?)\".*<br/>\\((.+?)\\xa0\\/\\xa0(.+?)\\)</p>' , text )[ 0 ] 理論的構造決定法 アミノ酸配列→量子力学→タンパク質の構造とエネルギー状態を決定 シュレディンガー方程式は水素原子のみ解析的に解くことができ、それ以外は近似を行う必要がある。 現在、高精度に計算（第一原理分子動力学法）できるのは1つの構造に対して100原子程度である。 水分子を考慮しなければ、タンパク質の構造や電子軌道を精度よく求めることはできない。 アミノ酸がポリペプチド結合した重合体から機能を持つ立体構造を創り構造を維持するためには、 立体構造が熱力学的に安定でなければならない。 → Gibbs自由エネルギー \\(G\\) を見る。 準安定なのは、 \\(G\\) が極小の時。 最も安定なのは、 \\(G\\) が最小の時。 まとめ 生体の機能を主に担っているのは、タンパク質である。（RNAも機能に重要である。） タンパク質は分子認識・触媒・制御・エネルギー変換・構造形成維持などの機能を有している。 アミノ酸配列から計算によってタンパク質構造を決定することに成功していない。（部分構造はできている。） 酵素機能を行うとき、酵素の多くの場所が構造変化を行う。 第7回目の講義(11/6)の小テスト 指定課題： 第1,2,3回の講義の中で、最も興味のある事柄について300~500字でまとめる。 この事柄と関連する内容を調べるなどして、自分の意見を300~500字で述べる。 図や式を使いわかりやすく説明すること。図や式は文字数に含めない。 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物物理学","url":"https://iwasakishuto.github.io/University/3A/生物物理学-3.html","loc":"https://iwasakishuto.github.io/University/3A/生物物理学-3.html"},{"title":"領域分割","text":"講師： 山崎俊彦 参考書： CG-ARTS協会発行「ディジタル画像処理」 参考書： R. Szeliski, Computer Vision Algorithms and Applications, Springer (PDF版はインターネット上で無料公開) In [1]: import cv2 import numpy as np import matplotlib.pyplot as plt import matplotlib.patches as patches # 円を描画 領域分割 色によるクラス分け（画像のみ） k-means法 mean-shift法 色によるクラス分け（画像のみ） 例えば、画素(RGB)や位置(x,y)の似たものをグループ分けする。 二値分類(FG/BG分類)で有名なのが クロマキー （ 青色・緑色 背景） k-means法 予めクラス数 $k$ を指定してクラスタリング。 $k$ 個の代表点をランダムにサンプリング（$k$ 個をデータの中からとってきても良いし、完全にランダムでばらまいても良い。） 全てのデータ点から一番近い代表点を $1$ つ探す。 $k$ 個のグループの重心を計算し、それを新たな代表点とする。 2,3を繰り返す。 In [2]: from kerasy.ML.KMeans import KMeans In [3]: def decomposeImg ( path , K ): imgsize = 4 fig = plt . figure ( figsize = ( imgsize * 2 , imgsize * 1 )) bgr_img = cv2 . imread ( path ) rgb_img = cv2 . cvtColor ( bgr_img , cv2 . COLOR_BGR2RGB ) img_shape = rgb_img . shape # Original Image. ax_org = fig . add_subplot ( 1 , 2 , 1 ) ax_org . imshow ( rgb_img ) ax_org . set_title ( f \"Original\" ), ax_org . set_xticks ([]), ax_org . set_yticks ([]) #=== KMeans === x = rgb_img . reshape ( - 1 , 3 ) model = KMeans ( K = K , random_state = 0 ) model . fit ( x ) cls , mu = model . predict ( x ) mu = mu . astype ( int ) for k in range ( K ): x [ cls == k ] = mu [ k ] # KMeansed Image. ax_K = fig . add_subplot ( 1 , 2 , 2 ) ax_K . imshow ( x . reshape ( img_shape )) ax_K . set_title ( f \"K= {K} \" ), ax_K . set_xticks ([]), ax_K . set_yticks ([]) n_col = 4 n_row = K // n_col if K % n_col ==0 else K//n_col+1 fig = plt . figure ( figsize = ( imgsize * n_col , imgsize * n_row )) for i , k in enumerate ( range ( K )): ax = fig . add_subplot ( n_row , n_col , i + 1 ) data = np . zeros ( shape = x . shape ) data [ cls == k ] = mu [ k ] ax . imshow ( data . astype ( int ) . reshape ( img_shape )) ax . set_title ( f \"Color No.{i+1:<0{len(str(K))}}, rgb=({','.join(mu[k].astype(int).astype(str))})\" ) ax . set_xticks ([]), ax . set_yticks ([]) plt . tight_layout () plt . show () In [4]: decomposeImg ( path = \"lenna.png\" , K = 8 ) mean-shift法 画像領域の分割や対象画像の追跡に用いられる手法。 $d$ 次元の特徴量（ex. $\\mathrm{R,G,B},x,y$）を持った $N$ 個のデータ点 $\\mathbf{x}_i$ が分布しているときに、この点群 $\\mathbf{x}_i$ を標本点として得られるような確率密度関数 $f(\\mathbf{x})$ を考え、その標本点から確率密度関数 $f(\\mathbf{x})$ の極大点を探索する手法。 点群が集中している場所は確率密度関数 $f(\\mathbf{x})$ の値が高く、まばらな場所は低くなる。 ある任意の観測点 $\\mathbf{y}_j$ から半径 $h$ の超球を考え、その範囲にある点群 $\\mathbf{x}_i$ の平均 $\\mathbf{x}_c$ を計算し、その位置に観測点 $\\mathbf{y}_{j+1}$ を移動する。 この操作を繰り返すと観測点は最大勾配の方向に移動し、やがて極大点に収束する。 このように、 「近傍の点群の平均(mean)位置に移動(shift)を繰り返し、極大点を求める方法」 から ミーンシフト法(mean-shift) と呼ばれる。 In [5]: fig , ax = plt . subplots ( figsize = ( 6 , 6 )) # Circle r = 0.7 c = patches . Circle ( xy = ( 0 , 0 ), radius = r , ec = 'black' , fill = False ) ax . add_patch ( c ) # Sample Data X , Y = np . random . RandomState ( 123 ) . uniform ( low =- 0.3 , high = 1 , size = ( 2 , 50 )) cls = np . sqrt ( X ** 2 + Y ** 2 ) < r ax . scatter ( X , Y , c = cls , cmap = \"Set1_r\" , alpha = 0.7 ) # Center ax . scatter ( 0 , 0 , color = \"black\" , s = 100 ) ax . text ( 0.05 , - 0.05 , \"$\\mathbf {y} _ {j} $\" , fontsize = 12 ) # Mean mux , muy = np . mean ( X [ cls ]), np . mean ( Y [ cls ]) ax . scatter ( mux , muy , color = \"black\" , marker = '*' , s = 100 ) ax . text ( mux + 0.05 , muy , \"$\\mathbf {x} _c(=\\mathbf {y} _{j+1})$\" , fontsize = 12 ) # Arrow ax . annotate ( '' , xy = ( mux , muy ), xytext = ( 0 , 0 ), arrowprops = dict ( width = 2 , headwidth = 8 , headlength = 10 , connectionstyle = 'arc3' , facecolor = 'blue' , edgecolor = 'blue' ) ) # Radius ax . plot (( 0 , 0 ),( 0 , - r ), color = \"black\" ) ax . text ( 0.05 , - r / 2 , \"r\" , fontsize = 12 ) ax . set_xlim ( - 1 , 1 ) ax . set_ylim ( - 1 , 1 ) plt . show () カーネル密度関数を用いた確率密度関数の推定 $d$ 次元空間内の $N$ 個の点群 $\\mathbf{x}_i$ を考える。この点群をある確率分布に従う標本と考えたとき、$d$ 次元空間内の任意の点 $\\mathbf{x}$ における確率密度関数 $f(\\mathbf{x})$ は、以下の方法で推定される。 $$f(\\mathbf{x}) = \\frac{c_{kd}}{Nh&#94;{d}}\\sum_{i=1}&#94;Nk\\left(\\left|\\frac{\\mathbf{x}-\\mathbf{x}_i}{h}\\right|&#94;2\\right)$$ $c_{hd}$ は、確率密度関数 $f(\\mathbf{x})$ 全体の積分を $1$ にするための正規化係数。 $k(t)$ は、カーネル関数 $K(t)$ の プロファイル で、$K(t)=k(|t|&#94;2)$ 以下の２つのカーネルが代表的である。 ガウシアンカーネル(Gaussian) エパネックニコフカーネル(Epanechnikov) $$K(t) = \\exp\\left(-\\frac{\\mid t\\mid&#94;2}{2}\\right)$$ $$K(t) = \\begin{cases}1- \\mid t\\mid&#94;2 & (\\mid t\\mid\\leq1)\\\\0 & (\\text{otherwise})\\end{cases}$$ 確率密度関数の勾配 勾配法(gradient method) を用いて極大点を逐次的に求めるために、確率密度関数の勾配 $\\nabla f(\\mathbf{x})$ を求める。 $$ \\begin{aligned} \\nabla f(\\mathbf{x}) &= \\frac{2c_{kd}}{Nh&#94;{d+2}}\\sum_{i=1}&#94;Nk'\\left(\\left|\\frac{\\mathbf{x}-\\mathbf{x}_i}{h}\\right|&#94;2\\right)\\left(\\mathbf{x}-\\mathbf{x}_i\\right)\\\\ &= \\frac{2c_{kd}}{Nh&#94;{d+2}}\\sum_{i=1}&#94;N\\left(g_i\\mathbf{x}_i-g_i\\mathbf{x}\\right), \\quad g(t) = -k'(t),g'(t)=g\\left(\\left|\\frac{\\mathbf{x}-\\mathbf{x}_i}{h}\\right|\\right)&#94;2\\\\ &= \\frac{2c_{kd}}{Nh&#94;{d+2}}\\left\\{\\sum_{i=1}&#94;Ng_i\\right\\}\\left\\{\\frac{\\sum_{i=1}&#94;Ng_i\\mathbf{x}_i}{\\sum_{i=1}&#94;Ng_i}-\\mathbf{x}\\right\\} \\end{aligned} $$ 項 説明 $$\\frac{2c_{kd}}{Nh&#94;{d+2}}\\left\\{\\sum_{i=1}&#94;Ng_i\\right\\}$$ ガウシアンカーネルやエパネックニコフカーネルを用いた場合、正になる。 $$\\left\\{\\frac{\\sum_{i=1}&#94;Ng_i\\mathbf{x}_i}{\\sum_{i=1}&#94;Ng_i}-\\mathbf{x}\\right\\}$$ ミーンシフト と呼ばれる項で、観測点 $\\mathbf{x}$ の近傍のデータ点群 $\\mathbf{x}_i$ の加重平均位置と $\\mathbf{x}$ 自身の差分ベクトルを示す。 勾配法を用いた極大点探索（ミーンシフト法） 初期化：$\\mathbf{y}_0\\leftarrow\\mathbf{x}$ 更新（ミーンシフト） $$\\mathbf{y}_{j+1}\\leftarrow \\mathbf{y}_j + \\left(\\frac{\\sum_{i=1}&#94;Ng_i\\mathbf{x}_i}{\\sum_{i=1}&#94;Ng_i}-\\mathbf{y}_j\\right) = \\frac{\\sum_{i=1}&#94;Ng_i\\mathbf{x}_i}{\\sum_{i=1}&#94;Ng_i}$$ $|\\mathbf{y}_{j+1}-\\mathbf{y}_j|<\\text{threshold}$ となるまで2を繰り返す。 収束した $\\mathbf{y}_{j+1}$ を極大点として出力する。 ※ 一般的な勾配法では、更新式 $\\mathbf{y}_{j+1}\\rightarrow\\mathbf{y}_i + \\alpha\\nabla f$ のステップ数 $\\alpha$ を与える必要があるが、ミーンシフト法では ベクトルの大きさは自動的に計算される ので、$\\alpha$ を与える必要がない（らしい…）。 ミーンシフト法を用いたクラスタリングへの応用 $d$ 次元空間中の $N$ 個の点群 $\\mathbf{x}_i$ が与えられた時に、密に分布する点群をクラスタとして分割する。 各点にミーンシフト法を適用し、収束位置 $\\mathbf{x}_i&#94;c$ を計算する。 任意の2個の点 $\\mathbf{x}_i,\\mathbf{x}_j$ について、その収束位置が閾値以下なら（$|\\mathbf{x}_i-\\mathbf{x}_j|<\\text{threshold}$）、この2点を同じ極大点として同じクラスタに入れる。 1,2より、全ての点群 $\\mathbf{x}_i$ を 同じ収束位置（極大点）に属するものごとにクラスタに識別する。 全ての点 $\\mathbf{x}_i$ でこの処理を行わなければならないが、並行化できる。 k-means手法とは異なり、クラスタの数を予め指定する必要がない。 ミーンシフト法を用いたカラー画像の領域分割 カラー画像の $N$ 個の各画素の位置 $\\mathbf{x}_i$ とその画素値 $\\mathbf{v}_i=\\left(R_i,G_i,B_i\\right)$ とし、画素位置-画素値を結合した5次元空間内の点 $\\mathbf{z}_i=(\\mathbf{x}_i,\\mathbf{v}_i)$ を考える。 「距離および色が近い画素が5次元空間内でクラスタを形成している」 とみて、ミーンシフト法で各画素をクラスタリングする。 画素位置に関するバンド幅 $h_s$、画素値に関するバンド幅 $h_r$ を与え、全ての $z_i$ にミーンシフトを行い、収束位置 $\\mathbf{z}&#94;c=(\\mathbf{x}&#94;c,\\mathbf{v}&#94;c)$ を計算する。 $\\mathbf{x}_i$ の画素値を、収束位置の画素の値 $(R&#94;c,G&#94;c,B&#94;c)$ に置き換えることによって、画像の平滑化ができる。 ミーンシフトは、以下の通り計算する。 $$f(\\mathbf{x}) = \\frac{c}{Nh_s&#94;2h_r&#94;3}\\sum_{i=1}&#94;Nk\\left(\\left|\\frac{\\mathbf{x}&#94;s-\\mathbf{x}&#94;s_i}{h_s}\\right|&#94;2\\right)k\\left(\\left|\\frac{\\mathbf{x}&#94;r-\\mathbf{x}&#94;r_i}{h_r}\\right|&#94;2\\right)$$ したがって、以下のとおりに位置を更新する。 $$\\mathbf{y}&#94;{s}_{j+1} = \\frac{\\sum_{i=1}&#94;Ng_{i}&#94;s\\mathbf{x}_i&#94;s}{\\sum_{i=1}&#94;Ng_i&#94;s},\\quad\\mathbf{y}&#94;{r}_{j+1} = \\frac{\\sum_{i=1}&#94;Ng_{i}&#94;r\\mathbf{x}_i&#94;r}{\\sum_{i=1}&#94;Ng_i&#94;r}$$ $(h_s,h_r)$ のパラメータを大きくすると、より大きな領域に同色が統合され、大まかに分割される。 In [6]: from sklearn.cluster import MeanShift In [7]: import time s = time . time () imgsize = 4 fig = plt . figure ( figsize = ( imgsize * 2 , imgsize * 1 )) path = \"lenna.png\" bgr_img = cv2 . imread ( path ) rgb_img = cv2 . cvtColor ( bgr_img , cv2 . COLOR_BGR2RGB ) img_shape = rgb_img . shape # Original Image. ax_org = fig . add_subplot ( 1 , 2 , 1 ) ax_org . imshow ( rgb_img ) ax_org . set_title ( f \"Original\" ), ax_org . set_xticks ([]), ax_org . set_yticks ([]) #=== MeanShift === x = rgb_img . reshape ( - 1 , 3 ) model = MeanShift () model . fit ( x ) cls = model . predict ( x ) mu = model . cluster_centers_ . astype ( int ) K = max ( cls ) + 1 for k in range ( K ): x [ cls == k ] = mu [ k ] # MeanShifted Image. ax_Mean = fig . add_subplot ( 1 , 2 , 2 ) ax_Mean . imshow ( x . reshape ( img_shape )) ax_Mean . set_title ( f \"n_cluster= {K} \" ), ax_Mean . set_xticks ([]), ax_Mean . set_yticks ([]) n_col = 4 n_row = K // n_col if K % n_col ==0 else K//n_col+1 fig = plt . figure ( figsize = ( imgsize * n_col , imgsize * n_row )) for i , k in enumerate ( range ( K )): ax = fig . add_subplot ( n_row , n_col , i + 1 ) data = np . zeros ( shape = x . shape ) data [ cls == k ] = mu [ k ] ax . imshow ( data . astype ( int ) . reshape ( img_shape )) ax . set_title ( f \"Color No.{i+1:<0{len(str(K))}}, rgb=({','.join(mu[k].astype(int).astype(str))})\" ) ax . set_xticks ([]), ax . set_yticks ([]) plt . tight_layout () e = time . time () print ( f \"Processing time: {int((e-s)//60):>02}m {(e-s)%60:.3f}s\" ) plt . show () Processing time: 31m 13.287s In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"映像メディア工学","url":"https://iwasakishuto.github.io/University/3A/映像メディア工学-2-2.html","loc":"https://iwasakishuto.github.io/University/3A/映像メディア工学-2-2.html"},{"title":"領域処理のための特徴量","text":"講師： 山崎俊彦 参考書： CG-ARTS協会発行「ディジタル画像処理」 参考書： R. Szeliski, Computer Vision Algorithms and Applications, Springer (PDF版はインターネット上で無料公開) 領域の特徴量 フーリエ変換 ガボールフィルタ(Gabor Filter) 同時生起確率 In [1]: import cv2 import numpy as np import matplotlib.pyplot as plt （２次元）フーリエ変換 画像は、フーリエ変換によって周波数領域における別の形で表現される。 フーリエ変換の結果は、画像に含まれるそれぞれの周波数成分を表している。 フーリエ変換後の各周波数成分の大きさを成分ごとに変えることにより、元の画像の性質を変えることができる。 （周波数フィルタリング(frequency filtering)） ローパスフィルタ(lowpass fileter) ：画像に含まれる空間周波数成分のうち、低周波数成分は残し、高周波数成分は除去するようなフィルタ。 ハイパスフィルタ(highpass filter) ：上の逆。高周波数成分は残し、低周波数成分を除去するようなフィルタ。 バンドパスフィルタ(bandpass filter) ：ある中間的な周波数の範囲を残すようなフィルタ。 高域強調フィルタ(high-emphasis filter) ：画像の低周波数成分はそのまま保ちつつ、高周波数成分を強調するフィルタ。 $1$ 次元フーリエ変換 簡単のため、まずは一次元フーリエ変換をみる。 名前 数式 説明 フーリエ変換 $$F(\\omega) = \\int_{-\\infty}&#94;{\\infty}f(t)e&#94;{-i\\omega t}dt$$ 数直線上の表現 （空間領域） から周波数による表現 （周波数領域） への変換 逆フーリエ変換 $$f(x) = \\int_{-\\infty}&#94;{\\infty}F(\\omega)e&#94;{i\\omega x}d\\omega$$ 周波数領域にある関数を元の空間領域に戻す変換 実装 二つの正弦波を重ねた波から、それぞれの成分を取り出すことができるか確かめる。なお、ここでは numpy.fft.fft を利用しています。 これは、 高速フーリエ変換(Fast Fourier Transform) と呼ばれる、 高速に「離散フーリエ変換」を行うアルゴリズム を実装したものです。 In [2]: N = 10000 dt = 0.01 time = np . arange ( 0 , N * dt , dt ) freq = np . linspace ( 0 , 1.0 / dt , N ) In [3]: def sin ( A , f , p ): \"\"\" @param A: Amplitude @param f: Frequency[Hz] @param p: phase \"\"\" func = lambda t : A * np . sin ( 2 * np . pi * f * t + p1 ) return func In [4]: # parameters f1 , f2 = 5 , 8 # frequency[Hz] A1 , A2 = 5 , 3 # Amplitude p1 , p2 = 0 , 1 / 2 * np . pi # phase In [5]: y1 = sin ( A1 , f1 , p1 )( time ) y2 = sin ( A2 , f2 , p2 )( time ) y = y1 + y2 # superposition In [6]: # Computes the discrete Fourier transform (DFT) of a sequence yf = np . fft . fft ( y ) / ( N / 2 ) # Fast Fourier transform. In [7]: fig = plt . figure ( figsize = ( 8 , 4 )) ax1 = fig . add_subplot ( 2 , 1 , 1 ) ax1 . set_ylabel ( \"amplitude\" ) ax1 . set_xlabel ( \"time\" ) ax1 . set_xlim ( 0 , 1 ) ax1 . plot ( time , y , label = \"y(y1+y2)\" , color = \"blue\" ) ax1 . plot ( time , y1 , label = f \"y1(A= {A1} ,f= {f1} )\" , alpha = 0.3 , color = \"green\" ) ax1 . plot ( time , y2 , label = f \"y2(A= {A2} ,f= {f2} )\" , alpha = 0.3 , color = \"red\" ) ax1 . axhline ( 0 , alpha = 0.3 , color = \"black\" ) ax1 . legend () ax2 = fig . add_subplot ( 2 , 1 , 2 ) ax2 . set_ylabel ( \"amplitude\" ) ax2 . set_xlabel ( \"frequency\" ) ax2 . set_xlim ( 0 , 10 ) ax2 . plot ( freq , abs ( yf ), color = \"blue\" ) plt . tight_layout () plt . show () 見事に、二つの周波数成分を取り出すことができました。 $2$ 次元フーリエ変換 ※ 一般に画像は2次元空間で定義されたある関数 $f(x,y)$ として表現することができる！ 名前 数式 フーリエ変換 $$F(u,v) = \\int_{-\\infty}&#94;{\\infty}\\int_{-\\infty}&#94;{\\infty}f(x,y)\\exp\\left\\{-j2\\pi\\left(ux+vy\\right)\\right\\}dxdy$$ 逆フーリエ変換 $$f(x,y) = \\int_{-\\infty}&#94;{\\infty}\\int_{-\\infty}&#94;{\\infty}F(u,v)\\exp\\left\\{j2\\pi\\left(ux+vy\\right)\\right\\}dudv$$ ここで、以下の値に注目することがよくある。 名前 数式 説明 振幅スペクトル(amplitude spectrum) $$\\mid F(u,v)\\mid = \\sqrt{\\mathrm{Re}\\left\\{F(u,v)\\right\\}&#94;2 + \\mathrm{Im}\\left\\{F(u,v)\\right\\}&#94;2}$$ 絶対値 位相スペクトル(phase spectrum) $$\\arg\\left\\{F(u,v)\\right\\} = \\tan&#94;{-1}\\frac{\\mathrm{Im}\\left\\{F(u,v)\\right\\}}{\\mathrm{Re}\\left\\{F(u,v)\\right\\}}$$ 偏角 パワースペクトル(power spectrum) $$\\mid F(u,v)\\mid&#94;2$$ In [8]: img = cv2 . imread ( 'lenna.png' , 0 ) f = np . fft . fft2 ( img ) fshift = np . fft . fftshift ( f ) magnitude_spectrum = 20 * np . log ( np . abs ( fshift )) plt . subplot ( 121 ), plt . imshow ( img , cmap = 'gray' ) plt . title ( 'Input Image' ), plt . xticks ([]), plt . yticks ([]) plt . xlabel ( 'x' ), plt . ylabel ( 'y' ) plt . subplot ( 122 ), plt . imshow ( magnitude_spectrum , cmap = 'gray' ) plt . title ( 'Magnitude Spectrum' ), plt . xticks ([]), plt . yticks ([]) plt . xlabel ( 'u' ), plt . ylabel ( 'v' ) plt . show () ガボールフィルタ(Gabor Filter) 正弦波とガウス関数の積で表される。（例：2次元ガボールフィルタ） $$g(x,y,\\lambda,\\phi) = \\exp\\left(-\\frac{x&#94;2+y&#94;2}{2\\sigma&#94;2}\\right)\\exp\\left(2\\pi\\lambda i\\left(x\\cos\\phi + y\\sin\\phi\\right)\\right)$$ 実数部： $$\\mathrm{Re}\\left\\{g(x,y,\\lambda,\\phi)\\right\\} = \\exp\\left(-\\frac{x&#94;2+y&#94;2}{2\\sigma&#94;2}\\right)\\cos\\left(2\\pi\\lambda i\\left(x\\cos\\phi + y\\sin\\phi\\right)\\right)$$ 虚数部： $$\\mathrm{Im}\\left\\{g(x,y,\\lambda,\\phi)\\right\\} = \\exp\\left(-\\frac{x&#94;2+y&#94;2}{2\\sigma&#94;2}\\right)\\sin\\left(2\\pi\\lambda i\\left(x\\cos\\phi + y\\sin\\phi\\right)\\right)$$ フーリエ変換では、所望の周波数成分が領域のどこにあるのかわからないのに対し、ガボールフィルタは、 「領域のどの位置にどの方向の周波数が、どの強度であるか」 を知ることができる。 パラメータを操作して様々な方向と強度を持つフィルタ （フィルタバンク(filter bank)） を多数準備 し、特徴抽出を行う。また、ここで抽出された特徴量群は texton と呼ばれる。 入力された画像に対してガボールフィルタを畳み込んで（たたみ込み＝二次元の内積＝類似度を反映）、特徴量 $G(x,y,\\lambda,\\phi)$ を求める式は以下となる。 $$G(x,y,\\lambda,\\phi) = \\sum_u\\sum_vI(x,y)\\ast g(x-u, y-v, \\lambda, \\phi)$$ OpenCVの cv2.getGaborKerne を用いることで簡単にガボールフィルタを生成することができる、 引数 説明 ksize Size of the filter returned. sigma Standard deviation of the gaussian envelope. theta Orientation of the normal to the parallel stripes of a Gabor function. lambd Wavelength of the sinusoidal factor. gamma Spatial aspect ratio. psi Phase offset. In [9]: default_gabor = { \"ksize\" : ( 50 , 50 ), \"sigma\" : 4 , \"theta\" : 0 , \"lambd\" : 10 , \"gamma\" : 0.5 , \"psi\" : 0 , } In [10]: gabor = cv2 . getGaborKernel ( ** default_gabor ) plt . imshow ( gabor , cmap = \"gray\" ) plt . title ( \"default\" ) plt . show () In [11]: def argsGaborRelation ( key , vals ): global default_gabor defaul_val = default_gabor [ key ] N = len ( vals ) n_col = 4 n_row = N // n_col if N % n_col ==0 else N//n_col+1 fig = plt . figure ( figsize = ( 4 * n_col , 4 * n_row )) for i , val in enumerate ( vals ): ax = fig . add_subplot ( n_row , n_col , i + 1 ) default_gabor [ key ] = val gabor = cv2 . getGaborKernel ( ** default_gabor ) ax . imshow ( gabor , cmap = \"gray\" ) ax . set_title ( f \" {key} = {val} \" ) ax . set_xticks ([]), ax . set_yticks ([]) plt . show () default_gabor [ key ] = defaul_val In [12]: argsGaborRelation ( key = \"ksize\" , vals = [( 30 , 30 ),( 20 , 40 ),( 40 , 20 ),( 50 , 50 )]) In [13]: argsGaborRelation ( key = \"sigma\" , vals = [ x for x in range ( 8 )]) In [14]: argsGaborRelation ( key = \"theta\" , vals = [ np . radians ( x ) for x in range ( 0 , 180 , 45 )]) In [15]: argsGaborRelation ( key = \"gamma\" , vals = [ x for x in range ( 4 )]) In [16]: argsGaborRelation ( key = \"psi\" , vals = [ np . radians ( x ) for x in range ( 0 , 360 , 45 )]) In [17]: img = cv2 . imread ( 'lenna.png' , 0 ) color_img = cv2 . imread ( 'lenna.png' ) In [18]: def argsGaborSuperposition ( key , vals ): global default_gabor , img defaul_val = default_gabor [ key ] N = len ( vals ) * 2 n_col = 8 n_row = N // n_col if N % n_col ==0 else N//n_col+1 fig = plt . figure ( figsize = ( 4 * n_col , 4 * n_row )) dests = 0 for i , val in enumerate ( vals ): default_gabor [ key ] = val gabor = cv2 . getGaborKernel ( ** default_gabor ) dest = cv2 . filter2D ( img , cv2 . CV_32F , gabor ) dests += dest ax_dst = fig . add_subplot ( n_row , n_col , 2 * i + 1 ) ax_dst . imshow ( np . power ( dest , 2 ), cmap = \"gray\" ), ax_dst . set_xticks ([]), ax_dst . set_yticks ([]) ax_gab = fig . add_subplot ( n_row , n_col , 2 * i + 2 ) ax_gab . imshow ( gabor , cmap = \"gray\" ), ax_gab . set_xticks ([]), ax_gab . set_yticks ([]) # Superposition fig = plt . figure ( figsize = ( 8 , 16 )) ax_org = fig . add_subplot ( 1 , 2 , 1 ) ax_org . imshow ( cv2 . cvtColor ( color_img , cv2 . COLOR_BGR2RGB )) ax_org . set_title ( \"original image\" ), ax_org . set_xticks ([]), ax_org . set_yticks ([]) ax_dst = fig . add_subplot ( 1 , 2 , 2 ) ax_dst . imshow ( dests , cmap = \"gray\" ) ax_dst . set_title ( f \"Superposition of dst (key= {key} )\" ), ax_dst . set_xticks ([]), ax_dst . set_yticks ([]) plt . show () default_gabor [ key ] = defaul_val In [19]: argsGaborSuperposition ( key = \"theta\" , vals = [ np . radians ( x ) for x in np . linspace ( 0 , 180 , 8 )]) ※ 入力画像の８分割した全ての方向のエッジを重ね合わせると、元の画像をかなり高い精度で復元していることがわかる。 同時生起確率 テクスチャの統計的特徴量を求める。 離れた２つの場所にある画素対の値から、画素値の 一様性 ・ 方向性 ・ コントラスト などの性質を表す特徴量を求める。 ある画素 $i$ と、$i$ から離れた位置にある画素 $j$ の画素対を考え、画素 $i$ と画素 $j$ の相対的な位置を $\\delta=\\langle d,\\theta\\rangle$ とする。 それぞれの画素値を $L_i,L_j$ とし、画素値の対 $(L_i,L_j)$ が生じる出現頻度で、ある同時生起行列 $\\mathbf{H}_{\\delta}(L_i,L_j)$ を考える。ここで、出現頻度の総数で $\\mathbf{H}_{\\delta}(L_1,L_2)$ を正規化し、確率に変換した同時生起行列を $\\mathbf{P}_{\\delta}(L_i,L_j)$ とする。 確率に変換した同時生起行列を用いて計算する主な特徴量には次の $7$ 種類がある。（ここで、画素値のレベル数は $L$ である。）他にも様々な統計量を計算できるが、テクスチャの物理的な意味と直接には結びつかない数値もある。 $$ \\begin{aligned} \\mathrm{ENR} &= \\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}\\left\\{P_{\\delta}(L_i,L_j)\\right\\}&#94;2 & (\\text{energy})\\\\ \\mathrm{CNT} &= \\sum_{k=0}&#94;{L-1}k&#94;2P_{x-y}(k) & (\\text{contrast})\\\\ \\mathrm{CRR} &= \\frac{\\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}L_iL_jP_{\\delta}(L_i,L_j) - \\mu_x\\mu_y}{\\delta_x\\delta_y} & (\\text{correlation})\\\\ \\mathrm{VAR} &= \\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}\\left(L_i-\\mu_x\\right)&#94;2P_{\\delta}(L_i,L_j) & (\\text{variance})\\\\ \\mathrm{EPY} &= -\\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}P_{\\delta}(L_i,L_j)\\log\\left\\{P_{\\delta}(L_i,L_j)\\right\\} & (\\text{entropy})\\\\ \\mathrm{SEP} &= -\\sum_{k=0}&#94;{2L-2}P_{x+y}(k)\\log\\left\\{P_{x+y}(k)\\right\\} & (\\text{sum entropy})\\\\ \\mathrm{IDM} &= \\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}\\frac{1}{1+(L_i-L_j)&#94;2}P_{\\delta}(L_i,L_j) & (\\text{inverse difference moment})\\\\ \\end{aligned} $$ ただし、 $$ \\mu_x = \\sum_{L_i=0}&#94;{L-1}L_iP_x(L_i), \\quad \\mu_y = \\sum_{L_j=0}&#94;{L-1}L_jP_y(L_j)\\\\ \\delta_x&#94;2 = \\sum_{L_i=0}&#94;{L-1}(L_i-\\mu_x)&#94;2P_x(L_i), \\quad \\delta_y&#94;2 = \\sum_{L_j=0}&#94;{L-1}(L_j-\\mu_y)&#94;2P_y(L_j)\\\\ P_x(L_i) = \\sum_{L_j=0}&#94;{L-1}P_{\\delta}(L_i,L_j), \\quad P_y(L_j) = \\sum_{L_i=0}&#94;{L-1}P_{\\delta}(L_i,L_j)\\\\ P_{x-y}(k) = \\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}P_{\\delta}(L_i,L_j)\\quad |L_i-L_j|= k\\\\ P_{x+y}(k) = \\sum_{L_i=0}&#94;{L-1}\\sum_{L_j=0}&#94;{L-1}P_{\\delta}(L_i,L_j)\\quad |L_i+L_j|= k\\\\ $$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"映像メディア工学","url":"https://iwasakishuto.github.io/University/3A/映像メディア工学-2-1.html","loc":"https://iwasakishuto.github.io/University/3A/映像メディア工学-2-1.html"},{"title":"主成分分析(PCA)","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) 主成分分析(PCA) 次元削減・非可逆データ圧縮・特徴抽出・データの可視化などに使われる。 主部分空間(principal subspace) と呼ばれる低次元の線形空間の上への、データ点の直交射影として、以下の2つの定義方法がある。 「射影されたデータの分散が最大化されるような直交射影」 として定義。→ 分散最大化による定式化 「データ点と射影した点の間の2乗距離の平均値で定義される 射影コスト関数 の期待値を最小化するような線形射影」 として定義。（要はデータ点からの距離を最小化）→ 誤差最小化による定式化 Pythonによる実装 分散最大化による定式化 次元 $D$ のユークリッド空間内のデータ集合 $\\{\\mathbf{x}_n\\}(n=1,\\ldots,N)$ を考える。ここで、 「射影されたデータ点の分散を最大化しながら、データを次元 $M ことを考える。 1次元空間の上への射影（$M=1$） この空間の方向を $D$ 次元ベクトル $\\mathbf{u}_1$ として表す。ここで、興味があるのは $\\mathbf{u}_1$ の方向だけであるので、$\\mathbf{u}_1&#94;T\\mathbf{u}_1 = 1$ としても一般性を失わない。 したがって、各データ点 $\\mathbf{x}_n$ は スカラー値 $\\mathbf{u}_1&#94;T\\mathbf{x}_n$ の上に射影される。ここで、射影されたデータの平均・分散は以下のようになる。 統計量 平均値 $$\\mathbf{u}_1&#94;T\\bar{\\mathbf{x}}\\qquad\\bar{\\mathbf{x}} = \\frac{1}{N}\\sum_{n=1}&#94;N\\mathbf{x}_n\\qquad (12.1)$$ 分散 $$\\mathbf{u}_1&#94;T\\mathbf{Su}_1\\qquad\\mathbf{S} = \\frac{1}{N}\\sum_{n=1}&#94;N\\left(\\mathbf{x}_n-\\bar{\\mathbf{x}}\\right)\\left(\\mathbf{x}_n-\\bar{\\mathbf{x}}\\right)&#94;T\\qquad (12.3)$$ ここで、 射影されたデータの分散を、$\\mathbf{u}_1$ に関して最大化 することを考える。 制約条件 $\\mathbf{u}_1&#94;T\\mathbf{u}_1 = 1$ をラグランジュ乗数 $\\lambda_1$ を利用して導入して $$\\mathbf{u}_1&#94;T\\mathbf{Su}_1 + \\lambda_1\\left(1-\\mathbf{u}&#94;T_1\\mathbf{u}_1\\right)\\qquad (12.4)$$ を最大化すれば良い。$\\mathbf{u}_1$ に関する微分を $0$ とおくことにより、停留条件は $$\\mathbf{Su}_1 = \\lambda_1\\mathbf{u}_1\\qquad (12.5)$$ となることがわかる。これは、 $\\mathbf{u}_1$ が $\\mathbf{S}$ の固有ベクトルであること を示している。左から $\\mathbf{u}&#94;T_1$ をかけると、 $$\\text{Variance} = \\mathbf{u}&#94;T_1\\mathbf{Su}_1 = \\lambda_1 \\qquad (12.6)$$ となる。よって、 分散は $\\mathbf{u}_1$ を、最大固有値 $\\lambda_1$ に属する固有ベクトルに選んだ時に最大になる ことがわかる。 $M$ 次元空間の上への射影（一般解） 演習12.1 帰納法を用いて、 射影されたデータの分散を最大化するようなM次元部分空間の上への線形写像が、データ共分散行列Sの上位M個の固有値に属するM本の固有ベクトルによって定義される ことを示す。 仮定 $M$ に対して上記が成り立つ。 データ空間に対する新しい方向ベクトル $\\mathbf{u}_{M+1}$ は、次を満たす。 $\\mathbf{u}_{M+1}$ は、$\\mathbf{u}_1,\\ldots,\\mathbf{u}_M$ と直交する。（$\\mathbf{u}_{M+1}&#94;T\\mathbf{u}_{j}=0$） 単位長に規格化されている。（$\\mathbf{u}_{M+1}&#94;T\\mathbf{u}_{M+1}=1$） 制約条件を踏まえると、 $$L = \\sum_{i=1}&#94;{M+1}\\mathbf{u}&#94;T_i\\mathbf{Su}_i + \\lambda_{M+1}\\left(1-\\mathbf{u}&#94;T_{M+1}\\mathbf{u}_{M+1}\\right) + \\sum_{j=1}&#94;M\\lambda&#94;{\\prime}_j\\mathbf{u}_{M+1}&#94;T\\mathbf{u}_j$$ 両辺を $\\mathbf{u}_{M+1}$ で微分すると、 $$0 = \\frac{\\partial L}{\\partial \\mathbf{u}_{M+1}} = 2\\left(\\mathbf{Su}_{M+1} - \\lambda_{M+1}\\mathbf{u}_{M+1}\\right) + \\sum_{j=1}&#94;M\\lambda&#94;{\\prime}_j\\mathbf{u}_j\\cdots(\\ast)$$ これに左から $\\mathbf{u}&#94;T_{j}$ をかけると、 $$0 = \\lambda&#94;{\\prime}_j\\quad(\\because \\mathbf{u}_{M+1}&#94;T\\mathbf{u}_{j}=0)$$ となるので、これを $(\\ast)$ に代入して、 $$\\mathbf{Su}_{M+1} = \\lambda_{M+1}\\mathbf{u}_{M+1}$$ また、この時分散は $$\\begin{aligned} \\sum_{i=1}&#94;{M+1}\\mathbf{u}&#94;T_i\\mathbf{Su}_i &= \\sum_{i=1}&#94;{M}\\mathbf{u}&#94;T_i\\mathbf{Su}_i + \\mathbf{u}&#94;T_{M+1}\\mathbf{Su}_{M+1}\\\\ &= \\sum_{i=1}&#94;{M}\\lambda_i + \\lambda_{M+1} \\end{aligned}$$ ここで、仮定より $\\lambda_i$ は、データ共分散行列 $\\mathbf{S}$ の上位 $M$ 個の固有値なので、この分散を最大する $\\lambda_{M+1}$ は、$M+1$ 番目に大きい固有値となる。 誤差最小化による定式化 続いて、射影誤差の最小化に基づいた主成分分析の定式化を考える。 まず、$D$ 次元の基底ベクトル $\\{\\mathbf{u}_i\\}$ から成る完全正規直交系を導入する。（$\\mathbf{u}_i&#94;T\\mathbf{u}_i = \\delta_{ij}$） すると、各データ点はこれらの基底ベクトルの線形結合なので、以下の形で表すことができる。 $$\\mathbf{x}_n = \\sum_{i=1}&#94;D\\alpha_{ni}\\mathbf{u}_i\\qquad (12.8)$$ なお、ここで式 $(12.8)$ は、各データ点 $\\{\\mathbf{x}_n\\}$ を、もともとの座標系から $\\{\\mathbf{u}_i\\}$ で表される新しい座標系への回転を表していると解釈できる （もともと $D$ 個の成分 $\\{x_{n1},\\ldots,x_{nD}\\}$ が、等価な集合 $\\{a_{n1},\\ldots,a_{nD}\\}$ に置き換えられている） 。 上式と $\\mathbf{u}_j$ との内積を取り、正規直交性を使うと、$\\alpha_{nj} = \\mathbf{x}_n&#94;T\\mathbf{u}_j$ を得るので、 $$\\mathbf{x}_n = \\sum_{i=1}&#94;D\\left(\\mathbf{x}_n&#94;T\\mathbf{u}_i\\right)\\mathbf{u}_i\\qquad (12.9)$$ $D$ 次元から $M$ 次元への近似 ここで、$M （$M$ 次元空間で完全に $\\mathbf{x}_n$ を表現するのは一般に不可能なので、近似する。） したがって、各データ点を $$\\tilde{\\mathbf{x}}_n = \\sum_{i=1}&#94;Mz_{ni}\\mathbf{u}_i+\\sum_{i=M+1}&#94;Db_i\\mathbf{u}_i\\qquad (12.10)$$ $\\{z_{ni}\\}$ は特定のデータ点に依存。 $\\{b_i\\}$ は全てのデータ点に共通な定数。 と近似して表す。つまり、 $\\{\\mathbf{u}_i\\}$ と $\\{z_{ni}\\}$ と $\\{b_i\\}$ を調整することで、次元が減ることによってもたらされる歪みを最小化すること がここでの目的となる。 近似による歪み尺度 $J$ 近似による歪みの尺度として、元々のデータ点 $\\mathbf{x}_n$ とその近似 $\\tilde{\\mathbf{x}}_n$ の間の2乗距離をデータ集合に渡って平均したものを採用する。 $$\\begin{aligned} J &= \\frac{1}{N}\\sum_{n=1}&#94;N\\|\\mathbf{x}_n-\\tilde{\\mathbf{x}}_n\\|&#94;2\\qquad (12.11)\\\\ &= \\frac{1}{N}\\sum_{n=1}&#94;N\\left\\|\\mathbf{x}_n-\\left(\\sum_{i=1}&#94;Mz_{ni}\\mathbf{u}_i+\\sum_{i=M+1}&#94;Db_i\\mathbf{u}_i\\right)\\right\\|&#94;2 \\end{aligned}$$ そこで、各変数についての微分を $0$ としてこれを最小化する変数を求める。 $\\{z_{ni}\\}$ に対する最小化 $$ \\begin{aligned} \\frac{\\partial J}{\\partial z_{ni}} &= \\frac{1}{N}\\sum_{n=1}&#94;N\\frac{\\partial}{\\partial z_{ni}}\\left\\{\\left\\|\\sum_{i=1}&#94;Mz_{ni}\\mathbf{u}_i\\right\\|&#94;2 -2\\left(\\mathbf{x}_n-\\sum_{i=M+1}&#94;Db_i\\mathbf{u}_i\\right)&#94;T\\left(\\sum_{i=1}&#94;Mz_{ni}\\mathbf{u}_i\\right) + C \\right\\}\\\\ &= \\frac{1}{N}\\sum_{n=1}&#94;N\\frac{\\partial}{\\partial z_{ni}}\\left\\{\\sum_{i=1}&#94;Mz_{ni}&#94;2-2\\sum_{i=1}&#94;Mz_{ni}\\mathbf{x}_n&#94;T\\mathbf{u}_i\\right\\}\\\\ &= \\frac{1}{N}\\sum_{n=1}&#94;N\\sum_{i=1}&#94;M2\\left\\{z_{ni}-\\mathbf{x}_n&#94;T\\mathbf{u}_i\\right\\} = 0\\\\ \\therefore z_{ni}&#94;{\\star} &= \\mathbf{x}_n&#94;T\\mathbf{u}_i \\qquad (12.12) \\end{aligned} $$ $b_i$ に対する最小化 $$ \\begin{aligned} \\frac{\\partial J}{\\partial b_{i}} &= \\frac{1}{N}\\sum_{n=1}&#94;N\\frac{\\partial}{\\partial b_{i}}\\left\\{\\left\\|\\sum_{i=M+1}&#94;Db_{i}\\mathbf{u}_i\\right\\|&#94;2 -2\\left(\\mathbf{x}_n-\\sum_{i=1}&#94;Mz_{ni}\\mathbf{u}_i\\right)&#94;T\\left(\\sum_{i=M+1}&#94;Db_{i}\\mathbf{u}_i\\right) + C \\right\\}\\\\ &= \\frac{1}{N}\\sum_{n=1}&#94;N\\frac{\\partial}{\\partial b_{i}}\\left\\{\\sum_{i=M+1}&#94;Db_{i}&#94;2-2\\sum_{i=M+1}&#94;Db_{i}\\mathbf{x}_n&#94;T\\mathbf{u}_i\\right\\}\\\\ &= \\frac{1}{N}\\sum_{n=1}&#94;N\\sum_{i=M+1}&#94;D2\\left\\{b_{i}-\\mathbf{x}_n&#94;T\\mathbf{u}_i\\right\\} = 0\\\\ \\therefore b_{i}&#94;{\\star} &= \\bar{\\mathbf{x}}_n&#94;T\\mathbf{u}_i \\qquad (12.13) \\end{aligned} $$ $J$ の整頓 ここで、$(12.10)$ の $z_{ni},b_i$ を置き換えると、 $$ \\begin{aligned} \\mathbf{x}_n-\\tilde{\\mathbf{x}}_n &= \\mathbf{x}_n-\\left(\\sum_{i=1}&#94;M\\mathbf{x}_n&#94;T\\mathbf{u}_i\\mathbf{u}_i + \\sum_{i=M+1}&#94;D\\bar{\\mathbf{x}}&#94;T\\mathbf{u}_i\\mathbf{u}_i\\right)\\\\ &= \\sum_{i=1}&#94;D\\mathbf{x}_n&#94;T\\mathbf{u}_i\\mathbf{u}_i - \\left(\\sum_{i=1}&#94;M\\mathbf{x}_n&#94;T\\mathbf{u}_i\\mathbf{u}_i + \\sum_{i=M+1}&#94;D\\bar{\\mathbf{x}}&#94;T\\mathbf{u}_i\\mathbf{u}_i\\right)\\\\ &= \\sum_{i=M+1}&#94;D\\left\\{\\left(\\mathbf{x}_n-\\bar{\\mathbf{x}}\\right)&#94;T\\mathbf{u}_i\\right\\}\\mathbf{u}_i\\qquad (12.14) \\end{aligned} $$ と表すことができる。この式から、 $\\tilde{\\mathbf{x}}_n$ から $\\mathbf{x}_n$ への変位を表すベクトルは、主部分空間に直交する空間にあることがわかる。 以上より、歪み尺度 $J$ に対する表現を、純粋に $\\{\\mathbf{u}_i\\}$ の関数として、以下のような形で得られることがわかる。 $$J = \\frac{1}{N}\\sum_{n=1}&#94;N\\sum_{i=M+1}&#94;D\\left(\\mathbf{x}_n&#94;T\\mathbf{u}_i-\\bar{\\mathbf{x}}&#94;T\\mathbf{u}_i\\right)&#94;2 = \\sum_{i=M+1}&#94;D\\mathbf{u}&#94;T_i\\mathbf{Su}_i\\qquad (12.15)$$ したがって、あとは$J$ を $\\{\\mathbf{u}_i\\}$ に対して最小化すれば良い。 $M=1,D=2$ の場合 $M=1,D=2$ の場合、 「規格化条件 $\\mathbf{u}&#94;T_2\\mathbf{u}_2 = 1$ の下で、方向 $\\mathbf{u}_2$ を、$J=\\mathbf{u}&#94;T_2\\mathbf{Su}_2$ が最小化されるように選ぶ」 問題となる。 つまり、ラグランジュ乗数を用いて、 $$\\tilde{J} =\\mathbf{u}&#94;T_2\\mathbf{Su}_2 + \\lambda_2\\left(1-\\mathbf{u}&#94;T_2\\mathbf{u}_2\\right)\\qquad (12.16)$$ を最小化する問題となる。 $\\mathbf{u}_i$ についての微分を $0$ とおくと、$\\mathbf{Su}_2 = \\lambda_2\\mathbf{u}_2$ を得る。つまり、$\\mathbf{u}_2$ は固有値 $\\lambda_2$ に属する $\\mathbf{S}$ の固有ベクトルであるので、 任意の固有ベクトルは、この歪み尺度の停留点を定義することとなる。 $(12.16)$ に $\\mathbf{Su}_2 = \\lambda_2\\mathbf{u}_2$ を代入すると、$J=\\lambda_2$ となる。ゆえに、 「$\\mathbf{u}_2$ を、2つある固有値のうち小さい方に対応した固有ベクトルを選ぶことにより、$J$ の最小値を得ることができる」 （↔︎ 主部分空間では大きい方 ） 任意の $D$ と任意の $M 任意の $D$ と任意の $M $$\\mathbf{Su}_i = \\lambda_i\\mathbf{u}_i\\qquad (12.17)$$ で与えられる共分散行列の固有ベクトルに選ぶことによって得られる。ここで $i=1,\\ldots,D$ であり、固有ベクトル $\\{\\mathbf{u}_i\\}$ は正規直交するように選ばれる。 また、対応する歪み尺度の値は、 $$J = \\sum_{i=M+1}&#94;D\\lambda_i\\qquad (12.18)$$ のように、 主部分空間に直交する固有ベクトルの固有値についての単なる和 で与えられる。したがって、$J$ の最小値は、小さい順から $D-M$ 個の固有値に対応する固有ベクトルを選ぶことによって得られ、つまり主部分空間を定義する固有ベクトルは大きい順から $M$ 個の固有値に対応する固有ベクトルになる。 実装 Wine Data Set (UCI Machine Learning Repository) のデータを利用し、13次元、178データ、3種類のワインの属性データから、2つの主成分を取って可視化を行います。 また、PCAは自作のモジュール （ kerasy.ML.decomposition.PCA ） を用います。 In [1]: # データ取得。 ! wget https://raw.githubusercontent.com/maskot1977/ipython_notebook/master/toydata/wine.txt --2019-10-07 13:20:45-- https://raw.githubusercontent.com/maskot1977/ipython_notebook/master/toydata/wine.txt Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.228.133 Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.228.133|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 12173 (12K) [text/plain] Saving to: `wine.txt' wine.txt 100%[===================>] 11.89K --.-KB/s in 0s 2019-10-07 13:20:45 (40.4 MB/s) - `wine.txt' saved [12173/12173] In [2]: from kerasy.ML.decomposition import PCA In [3]: import numpy as np import pandas as pd import matplotlib.pyplot as plt from matplotlib.colors import LinearSegmentedColormap In [4]: colors = [( 1 , 0 , 0 ), ( 0 , 0 , 1 ), ( 0 , 1 , 0 )] n_bin = len ( colors ) cmap_name = 'my_list' cm = LinearSegmentedColormap . from_list ( cmap_name , colors , N = n_bin ) In [5]: df = pd . read_csv ( \"wine.txt\" , sep = \" \\t \" , index_col = 0 ) In [6]: df . head ( 3 ) Out[6]: .dataframe thead tr:only-child th { text-align: right; } .dataframe thead th { text-align: left; } .dataframe tbody tr th { vertical-align: top; } class Alcohol Malic acid Ash Alcalinity of ash Magnesium Total phenols Flavanoids Nonflavanoid phenols Proanthocyanins Color intensity Hue OD280/OD315 of diluted wines Proline 0 1 14.23 1.71 2.43 15.6 127 2.80 3.06 0.28 2.29 5.64 1.04 3.92 1065 1 1 13.20 1.78 2.14 11.2 100 2.65 2.76 0.26 1.28 4.38 1.05 3.40 1050 2 1 13.16 2.36 2.67 18.6 101 2.80 3.24 0.30 2.81 5.68 1.03 3.17 1185 class カラムがワインの種類を表しているので、この列は主成分分析から取り除きます。 In [7]: cls = df . iloc [:, 0 ] . values In [8]: df_use = df . iloc [:, 1 :] また、 データの標準化 を行います。 In [9]: df_std = df_use . apply ( lambda x : ( x - x . mean ()) / x . std (), axis = 0 ) In [10]: data = np . array ( df_std ) データの準備ができたので、主成分分析を行います。 In [11]: pca = PCA () pca . fit ( data ) features = pca . transform ( data ) In [12]: plt . figure ( figsize = ( 6 , 6 )) plt . scatter ( features [:, 0 ], features [:, 1 ], c = cls , cmap = cm , edgecolors = 'black' ) plt . title ( \"Same fig with slide :)\" ) plt . xlabel ( \"PC1\" ) plt . ylabel ( \"PC2\" ) plt . grid () plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-2.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-2.html"},{"title":"Nussinov Algorithm","text":"Nussinov Algorithmは、最もシンプルな二次構造予測アルゴリズムである。 「最大いくつの塩基対を作ることができるか」 を調べる。 動的計画法を用いて効率的に調べるために、以下のような Pseudoknot は無視している。様々な重要なRNAが、Pseudoknotの形をとることが確認されているが、相対的にこのような構造をとる確率は低いので、計算の効率を優先し、これらを無視する。 Algorithm ※「$i$ から $j$ までの部分塩基配列で最大幾つの塩基対が作れるか」 を $\\gamma(i,j)$ が保持している。 今回の実装では $j-i-1<3$ の時は、$i,j$ が塩基対を作れないものとしている。 ポイントはRecursionの最後の式で、 「$i$ から $k$ までの部分塩基配列」 と 「$k+1$ から $j$ までの部分塩基配列」 を足し合わせる操作を行う。 （Bifurcation） Initialization: $$\\begin{aligned} \\gamma(i,i)&=0&\\text{ for }i=1\\text{ to }L\\\\ \\gamma(i,i-1)&=0&\\text{ for }i=2\\text{ to }L \\end{aligned}$$ Recursion: $$ \\gamma(i,j) = \\max \\begin{cases} \\gamma(i+1,j)\\\\ \\gamma(i,j-1)\\\\ \\gamma(i+1,j-1)+\\delta(i,j)\\\\ \\max_{i\\leq k\\verb|<|j}\\left[\\gamma(i,k) + \\gamma(k+1,j)\\right] \\end{cases} $$ TraceBack 基本的なアルゴリズムは同じですが、 Bifurcationが起きた際にトレースバックポインターを複数用意する必要があることには注意が必要です。 bp = [] stack = [( 0 , N - 1 )] while ( stack ): i , j = stack . pop ( 0 ) delta = 1 if self . _is_bp ( sequence [ i ], sequence [ j ]) and ( j - i > 3 ) else 0 if ( i >= j ): continue elif gamma [ i + 1 ][ j ] == gamma [ i ][ j ]: stack . append (( i + 1 , j )) elif gamma [ i ][ j - 1 ] == gamma [ i ][ j ]: stack . append (( i , j - 1 )) elif gamma [ i + 1 ][ j - 1 ] + delta == gamma [ i ][ j ]: bp . append (( i , j )); stack . append (( i + 1 , j - 1 )) else : # Bifurcation for k in range ( i , j ): if gamma [ i ][ k ] + gamma [ k + 1 ][ j ] == gamma [ i ][ j ]: stack . append (( k + 1 , j )) stack . append (( i , k )) break 自作のモジュール （kerasy.Bio.structure.Nussinov） を使って実装します。 In [1]: from kerasy.Bio.structure import Nussinov In [2]: model = Nussinov () In [3]: # 以下の形のパラメタファイルを受け取ります。 ! cat params.json { \"type\": \"DNA\", \"Watson_Crick\": true, \"Wobble\": true } In [4]: model . load_params ( \"params.json\" ) In [5]: model . params () | parameter |value| -------------------- |type | DNA| |Watson_Crick| 1| |Wobble | 1| In [6]: # サンプル配列 sequence = \"GCGGAAACGGGGTCA\" In [7]: # 最大ペアの配列 model . predict ( sequence , memorize = True , traceback = True ) Nussinov Algorithm Score: 3 ================================================================= seq: GCGGAAACGGGGTCA : ( (( ))) ================================================================= In [8]: gamma = model . gamma In [9]: # DP行列は以下のようになっています。 model . _printAsTerai ( gamma , sequence ) \\ G C G G A A A C G G G G T C A G 0 0 0 0 0 0 0 1 2 2 2 2 2 3 3 C - 0 0 0 0 0 0 1 2 2 2 2 2 3 3 G - - 0 0 0 0 0 1 1 1 1 1 2 3 3 G - - - 0 0 0 0 1 1 1 1 1 2 3 3 A - - - - 0 0 0 0 0 0 0 1 2 2 2 A - - - - - 0 0 0 0 0 0 1 2 2 2 A - - - - - - 0 0 0 0 0 1 2 2 2 C - - - - - - - 0 0 0 0 1 1 1 1 G - - - - - - - - 0 0 0 0 0 1 1 G - - - - - - - - - 0 0 0 0 1 1 G - - - - - - - - - - 0 0 0 0 0 G - - - - - - - - - - - 0 0 0 0 T - - - - - - - - - - - - 0 0 0 C - - - - - - - - - - - - - 0 0 A - - - - - - - - - - - - - - 0 $i,j$ が塩基対を組むときの塩基対最大化 塩基 $i,j$ が塩基対を組むという制約がある場合を考えます。これは、「$i$ から $j$ までの部分塩基配列を除いた残りで最大幾つの塩基対が作れるか」 を保持した $\\omega(i,j)$ と $\\gamma(i,j)$ を組み合わせることで効率的に求めることができます。 Algorithm 「$i$ から $j$ までの部分塩基配列で最大幾つの塩基対が作れるか」 を $\\gamma(i,j)$ が保持している。 「$i$ から $j$ までの部分塩基配列を除いた残りで最大幾つの塩基対が作れるか」 を $\\omega(i,j)$ が保持している。 Initialization: $$\\omega(i,L) = 0$$ Recursion: $$ \\omega(i,j) = \\max \\begin{cases} \\omega(i-1,j)\\\\ \\omega(i,j+1)\\\\ \\omega(i-1,j+1)+\\delta(i-1,j+1)\\\\ \\max_{1\\leq k\\verb|<|i}\\left[\\omega(k,j) + \\gamma(k,i-1)\\right]\\\\ \\max_{j\\verb|<| k\\leq L}\\left[\\omega(j+1,k) + \\gamma(i,k)\\right] \\end{cases} $$ In [10]: model . outside ( sequence , memorize = True ) In [11]: omega = model . omega In [12]: # DP行列は以下のようになっています。 model . _printAsTerai ( omega , sequence ) \\ G C G G A A A C G G G G T C A G 3 3 3 2 2 2 1 1 1 0 0 0 0 0 0 C - 3 3 3 3 3 2 1 1 1 1 1 1 0 0 G - - 3 3 3 3 2 2 2 2 2 1 1 0 0 G - - - 3 3 3 2 2 2 2 2 1 1 0 0 A - - - - 3 3 2 2 2 2 2 1 1 0 0 A - - - - - 3 3 2 2 2 2 2 1 0 0 A - - - - - - 3 2 2 2 2 2 1 0 0 C - - - - - - - 2 2 2 2 2 1 0 0 G - - - - - - - - 3 3 3 2 2 1 1 G - - - - - - - - - 3 3 3 3 2 2 G - - - - - - - - - - 3 3 3 2 2 G - - - - - - - - - - - 3 3 2 2 T - - - - - - - - - - - - 3 2 2 C - - - - - - - - - - - - - 2 2 A - - - - - - - - - - - - - - 3 $Z(i,j)$ の計算 variable definition $\\gamma\\left(i,j\\right)$ the maximum number of base-pairs for subsequence from $i$ to $j$. $\\omega\\left(i,j\\right)$ the maximum number of base-pairs excluding subsequence from $i$ to $j$. 上記の定義より、$\\gamma,\\omega$ を用いて $Z(i,j)$ が以下のように求まることがわかります。 $$Z(i,j) = \\begin{cases} \\gamma\\left(i+1,j-1\\right) + 1 + \\omega\\left(i,j\\right) & (\\text{if }i\\text{ and }j\\text{-th nucleotides can form a base-pair})\\\\ 0 & (\\text{otherwise}) \\end{cases}$$ In [13]: model . ConstrainedMaximize ( sequence , memorize = False ) \\ G C G G A A A C G G G G T C A G 0 0 0 0 0 0 0 2 0 0 0 0 0 3 0 C - 0 0 0 0 0 0 0 3 3 3 3 0 0 0 G - - 0 0 0 0 0 3 0 0 0 0 0 3 0 G - - - 0 0 0 0 3 0 0 0 0 0 3 0 A - - - - 0 0 0 0 0 0 0 0 3 0 0 A - - - - - 0 0 0 0 0 0 0 3 0 0 A - - - - - - 0 0 0 0 0 0 3 0 0 C - - - - - - - 0 0 0 0 3 0 0 0 G - - - - - - - - 0 0 0 0 0 2 0 G - - - - - - - - - 0 0 0 0 3 0 G - - - - - - - - - - 0 0 0 0 0 G - - - - - - - - - - - 0 0 0 0 T - - - - - - - - - - - - 0 0 0 C - - - - - - - - - - - - - 0 0 A - - - - - - - - - - - - - - 0 備忘録 Nussinov Algorithmでは、これまでの動的計画法とは異なり、 $i,j$ を斜め方向に舐める必要がありました。 そこで、その際に使用したコードを備忘録として残しておきます。 In [14]: import numpy as np In [15]: N = 4 In [16]: # Nussinov Algorithm (γ) idx = 1 arr = np . zeros ( shape = ( N , N ), dtype = int ) for ini_i in reversed ( range ( N )): diff = N - ini_i for i in reversed ( range ( ini_i )): arr [ i ][ i + diff ] = idx idx += 1 print ( arr ) [[0 3 5 6] [0 0 2 4] [0 0 0 1] [0 0 0 0]] In [17]: # Nussinov outsie (ω) idx = 1 arr = np . zeros ( shape = ( N , N ), dtype = int ) for j in reversed ( range ( N )): for i in range ( N - j ): arr [ i ][ j + i ] = idx idx += 1 print ( arr ) [[ 7 4 2 1] [ 0 8 5 3] [ 0 0 9 6] [ 0 0 0 10]] In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-8.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-8.html"},{"title":"Pair HMM の最尤推定","text":"Baum-Welch Pair HMMとは、二本の配列を受け取ってペアワイズアラインメントを出力するHMMで、 「アラインメントの確率的な解釈が可能になる」 （アラインメントのどの部分が信頼できるかを確率的に評価できる） という利点があります。 このPair HMMは、一般的なHMMと同様にBaum-Welchアルゴリズムによってパラメータを最尤推定していきます。 \\(\\xi\\) HMM 一般的なHMMでは、例えば 遷移確率 \\(A_{jk}\\) （状態 \\(j\\) から状態 \\(k\\) に遷移する確率） を最尤推定する際は、 直感的には 「状態 \\(j\\) から状態 \\(k\\) に遷移する回数」 を、 「状態 \\(j\\) から遷移する回数」 で割れば最尤解が求まる。 実際の隠れ状態の遷移が確定していないので、 「 期待される 状態 \\(j\\) から状態 \\(k\\) に遷移する回数」 を、 「 期待される 状態 \\(j\\) から遷移する回数」 で割れば良い。 \\(\\mathbf{z}_{n-1}\\) で状態 \\(j\\) におり、 \\(\\mathbf{z}_n\\) で状態 \\(k\\) にいる確率 \\(\\xi\\left(z_{n-1,j},z_{nk}\\right)\\) は、forward-backward algorithmの \\(\\alpha,\\beta\\) を用いれば以下のように求めることができる。 $$\\xi_n\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right)=\\frac{\\alpha\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})}\\qquad (13.43)$$ \\(\\xi\\) を用いて、最尤推定を行う。 $$A_{j k}= \\frac{\\sum_{n=2}&#94;{N} \\xi\\left(z_{n-1, j}, z_{n k}\\right)}{\\sum_{l=1}&#94;{K} \\sum_{n=2}&#94;{N} \\xi\\left(z_{n-1, j}, z_{n l}\\right)} \\qquad (13.19)$$ という様に行いますが、Pair HMMは、 挿入・欠失を考えるため、 \\(n\\) で配列 \\(\\mathbf{X,Y}\\) のどの要素（ \\(\\mathbf{x}_u,\\mathbf{y}_v\\) ）を考えているのか一意に定まらない という点で普通のHMMとは異なります。 Pair HMM そこで、 「 \\(n\\) ではなく \\(u,v\\) に注目する」 ことで、 \\((13.43)\\) の式を以下のように書き換えます。 $$\\xi_{u,v}\\left(i,j\\right)=\\frac{f_i\\left(u,v\\right)A_{ij}\\phi_j\\left(\\diamond_1\\right)b_j\\left(\\diamond_2,\\diamond_3\\right)}{\\sum_{k=1}&#94;Kf_k\\left(u,v\\right)b_k\\left(u,v\\right)}$$ ここで、分子に注目すると、各変数の意味が variable meaning \\(f_i\\left(u,v\\right)\\) The probability of ending up in state \\(i\\) after aligning the two sequences \\(\\mathbf{X,Y}\\) up to observation \\(u\\) and \\(v\\) respectively. \\(A_{ij}\\) the transition probability from state \\(i\\) to state \\(j\\) . \\(\\phi_j\\left(\\diamond_1\\right)\\) the emission probability of emitting \\(\\diamond_1\\) in state \\(j\\) . \\(b_j\\left(\\diamond_2,\\diamond_3\\right)\\) the probability of being in state \\(j\\) , given the sequences \\(\\mathbf{X,Y}\\) are aligned from observation \\(\\diamond_2+1\\) and \\(\\diamond_3+1\\) to the end of the sequences respectively. であるので、 \\(\\diamond\\) は状態によって異なり、具体的に書き下すと以下のようになります。 state\\variable \\(\\phi_j\\left(\\diamond_1\\right)\\) \\(b_j\\left(\\diamond_2,\\diamond_3\\right)\\) \\(M\\) \\(e\\left(x_{u+1},y_{v+1}\\right)\\) \\(b_j\\left(u+1,v+1\\right)\\) \\(X\\) \\(e\\left(x_{u+1}\\right)\\) \\(b_j\\left(u+1,v\\right)\\) \\(Y\\) \\(e\\left(y_{v+1}\\right)\\) \\(b_j\\left(u,v+1\\right)\\) \\(\\gamma\\) 同様に \\(\\gamma\\) も考えると、 $$ \\gamma_n\\left(\\mathbf{z}_{n}\\right)= \\frac{\\alpha\\left(\\mathbf{z}_{n}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} \\qquad(13.33)$$ から、 $$\\gamma_i\\left(u,v\\right)=\\frac{f_i\\left(u,v\\right)b_j\\left(u,v\\right)}{\\sum_{k=1}&#94;Kf_k\\left(u,v\\right)b_k\\left(u,v\\right)}$$ のように書き換えることになります。 Maximization step ここまでで \\(\\gamma,\\xi\\) が求まったので、M stepで各パラメータを更新します。なお、以下で \\(w\\) は全ての記号の組を表します。 $$w\\in\\left\\{(k_x,k_y)|k_x,k_y\\in\\left\\{A,T,G,C,\\epsilon \\right\\}\\right\\}\\setminus(\\epsilon,\\epsilon)$$ \\(\\pi_k\\) $$\\pi&#94;{\\star}_i = \\sum_w\\gamma_i&#94;w(0,0)$$ \\(A_{ij}\\) $$A&#94;{\\star}_{ij} = \\frac{\\sum_w\\sum_{u=0}&#94;{\\tilde{U}}\\sum_{v=0}&#94;{\\tilde{V}}\\xi_{u,v}&#94;{w}\\left(i,j\\right)}{\\sum_w\\sum_{u=0}&#94;{\\tilde{U}}\\sum_{v=0}&#94;{\\tilde{V}}\\sum_{j}&#94;{K}\\xi_{u,v}&#94;{w}\\left(i,j\\right)}$$ final emitting state \\(\\tilde{U}\\) \\(\\tilde{V}\\) \\(M\\) \\(U-1\\) \\(V-1\\) \\(X\\) \\(U-1\\) \\(V\\) \\(Y\\) \\(U\\) \\(V-1\\) \\(\\phi_{i}(k)\\) $$\\phi_i\\left(k\\right) = \\frac{\\sum_w\\sum_{u=0}&#94;{U\\ast1}\\sum_{v=0}&#94;{V\\ast2}\\gamma_i&#94;w\\left(u,v\\right)}{\\sum_w\\sum_{u=0}&#94;U\\sum_{v=0}&#94;V\\gamma_i&#94;w\\left(u,v\\right)}$$ \\(\\ast1\\) ： \\(x_u=k_x\\) and state \\(i\\) equals the state \\(M\\) or \\(X\\) . (in the state \\(Y\\) , a gap is present in observation stream \\(x\\) therefore \\(k_x\\) is not present.) \\(\\ast2\\) ： \\(y_v=k_y\\) and state \\(j\\) equals the state \\(M\\) or \\(Y\\) . Reference Wahle, Johannes and Armin Buch. \"Alignment and word comparison with Pair Hidden Markov Models.\" (2013). pp.22-31 Martijn B. Wieling. \"Comparison of Dutch Dialects\" (2007) pp.36-50 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-7.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-7.html"},{"title":"生物統計論 第2回","text":"In [1]: import numpy as np import matplotlib.pyplot as plt Section2.1 Central Limit Theorem Law of Large Numbers Estimation is accurate with many samples. Foundation of repeated measurement. Regardless of true distribution. Assuming independence. Theorem Let $\\mathbf{X}_1,\\mathbf{X}_2,\\ldots,\\mathbf{X}_n$ be an independent trials process, with finite expected value $\\mu = \\mathbb{E}\\left(\\mathbf{X}_i\\right)$ Let $\\bar{\\mathbf{X}}_n = \\frac{1}{n}\\left(\\mathbf{X}_1,\\mathbf{X}_2+\\cdots+\\mathbf{X}_n\\right)$ be a sample mean. Weak law : $$\\lim_{n\\rightarrow\\infty}P\\left(|\\bar{\\mathbf{X}}_n-\\mu|>\\varepsilon\\right) = 0 \\quad\\left(\\forall\\varepsilon>0\\right)$$ Strong law $$P\\left(\\lim_{n\\rightarrow\\infty}\\bar{\\mathbf{X}}_n = \\mu\\right) = 1$$ Proof. We assume that $\\bar{\\mathbf{X}}_n$ have the \"finite\" variance $\\sigma&#94;2$ Since $\\mathbf{X}_1,\\mathbf{X}_2,\\ldots,\\mathbf{X}_n$ are independent and have the same distributions, we can apply Chebyshev Inequality . We obtain $$0\\leq P\\left(|\\bar{\\mathbf{X}}_n - \\mu|>\\varepsilon\\right)\\leq\\frac{1}{\\varepsilon&#94;2}\\mathbb{V}(\\bar{\\mathbf{X}}_n) = \\frac{1}{\\varepsilon&#94;2}\\frac{\\sigma&#94;2}{n}\\rightarrow0\\quad(n\\rightarrow\\infty)$$ Chebyshev Inequality Let $\\mathbf{X}$ be a discrete random variable with expected value $\\mu=\\mathbb{E}\\left(\\mathbf{X}\\right)$ $$ P \\left(|\\mathbf{X}-\\mu|>\\varepsilon\\right)\\leq\\frac{\\mathbb{V}\\left(\\mathbf{X}\\right)}{\\varepsilon&#94;2}$$ Example In [2]: N = 1000 seed = 0 In [3]: trials = np . arange ( 1 , N + 1 ) In [4]: dices = np . random . RandomState ( seed ) . randint ( low = 1 , high = 6 + 1 , size = N ) ave_dices = np . cumsum ( dices ) / trials In [5]: plt . axhline ( 3.5 , color = \"blue\" , label = \"Theoretical mean\" ) plt . plot ( trials , ave_dices , label = \"Observed average\" , color = \"green\" ) plt . ylim ( 1 , 6 ) plt . title ( \"Average dice roll by number of rolls\" ) plt . ylabel ( \"Average\" ) plt . xlabel ( \"Number of trials\" ) plt . grid () plt . legend () plt . show () If we keep rolling the dice over and over again, the sample average of dice roll will converge to the true average. Exception The law of large numbers assumes the existance of expected values . Therefore, it will not hold when there is no expected value. (ex. Cauchy distribution ) Cauchy distribution $$ \\begin{aligned} f(x;x_0,\\gamma) &= \\frac{1}{\\pi\\gamma\\left[1 + \\left(\\frac{x-x_0}{\\gamma}\\right)&#94;2\\right]} = \\frac{1}{\\pi}\\frac{\\gamma}{\\left(x-x_0\\right)&#94;2 + \\gamma&#94;2} & \\begin{cases}x_0: \\text{Location paramete}\\\\\\gamma: \\text{Scale parameter}\\end{cases}\\\\ f(x;0,1) &= \\frac{1}{\\pi\\left(1+x&#94;2\\right)} & (\\text{standard cauchy distribution}) \\end{aligned} $$ In [6]: N = 5000 K = 3 seed = 1 In [7]: trials = np . arange ( 1 , N + 1 ) In [8]: samples = np . random . RandomState ( seed ) . standard_cauchy ( size = ( K * N )) . reshape (( K , N )) ave_samples = np . cumsum ( samples , axis = 1 ) / trials In [9]: for k in range ( K ): plt . plot ( trials , ave_samples [ k ], label = f \"Observation {k+1}\" ) plt . ylabel ( \"$(\\mathbf {X} _1+\\cdots+\\mathbf {X} _n)/n$\" ) plt . xlabel ( \"n\" ) plt . legend () plt . grid () Central Limit Theorem Sample mean follows normal distribution. Foundation of many statistical tests. Regardless of true distribution. Assuming independence. Theorem Let $\\{\\mathbf{X}_1,\\ldots,\\mathbf{X}_n\\}$ be a random sample of size $n$, which is a sequence of independent and identically distributed random variables drawn from a distribution. expected value given by $\\mu$. finite variance given by $\\sigma&#94;2$. Let $S_n:=\\sum_{k=1}&#94;n\\mathbf{X}_k$ $$P\\left(\\frac{S_n-n\\mu}{\\sqrt{n}\\sigma}\\leq\\alpha\\right)\\rightarrow\\frac{1}{\\sqrt{2\\pi}}\\int_{-\\infty}&#94;{\\alpha}e&#94;{-\\frac{x&#94;2}{2}}dx\\quad(n\\rightarrow\\infty)$$ Therefore: $$ \\begin{aligned} S_n&\\sim\\mathcal{N}\\left(n\\mu, n\\sigma&#94;2\\right) & (n\\rightarrow\\infty)\\\\ \\bar{\\mathbf{X}}_n = \\left(\\mathbf{X}_1+\\cdots+\\mathbf{X}_n\\right)/n&\\sim\\mathcal{N}\\left(\\mu,\\sigma&#94;2/n\\right) & (n\\rightarrow\\infty) \\end{aligned} $$ Proof. We assume that $\\bar{\\mathbf{X}}_n$ have the \"finite\" variance $\\sigma&#94;2$ Since $\\mathbf{X}_1,\\mathbf{X}_2,\\ldots,\\mathbf{X}_n$ are independent and have the same distributions, we can apply Chebyshev Inequality . We obtain $$0\\leq P\\left(|\\bar{\\mathbf{X}}_n - \\mu|>\\varepsilon\\right)\\leq\\frac{1}{\\varepsilon&#94;2}\\mathbb{V}(\\bar{\\mathbf{X}}_n) = \\frac{1}{\\varepsilon&#94;2}\\frac{\\sigma&#94;2}{n}\\rightarrow0\\quad(n\\rightarrow\\infty)$$ Example In [10]: N = 10000 ns = [ 10 , 100 , 1000 , 10000 ] roll = 4 seed = 0 In [11]: fig = plt . figure ( figsize = ( 12 , 6 )) ax_all = plt . subplot2grid (( 2 , len ( ns )), ( 0 , 0 ), colspan = len ( ns )) for i , n in enumerate ( ns ): ax = plt . subplot2grid (( 2 , len ( ns )), ( 1 , i )) dices = np . random . RandomState ( seed ) . randint ( low = 1 , high = 6 + 1 , size = ( n , N )) rate_dice_eq_4 = np . count_nonzero ( dices == roll , axis = 1 ) / N freqs , bins , patches = ax . hist ( rate_dice_eq_4 , bins = 20 , density = True ) cent_bins = [ np . mean ( bins [ i : i + 2 ]) for i in range ( len ( bins ) - 1 )] ax_all . plot ( cent_bins , freqs , label = f \"n= {n} \" ) ax . set_title ( f \"n= {n} \" ) ax . set_xlabel ( f \"Probability of {roll} roll.\" ) ax . set_ylabel ( \"freq\" ) ax_all . set_title ( \"Central Limit Theorem\" ) ax_all . legend () plt . tight_layout () plt . show () Section2.2 ChIP-seq Peak Detection ChIP-sequencing, also known as ChIP-seq, is a method used to analyze protein interactions with DNA. ChIP-seq combines chromatin immunoprecipitation (ChIP) with massively parallel DNA sequencing to identify the binding sites of DNA-associated proteins. It can be used to map global binding sites precisely for any protein of interest. Previously, ChIP-on-chip was the most common technique utilized to study these protein–DNA relations. Peak calling Problem: How to identify transcription factor binding sites and histone modification enriched regions? Random Read Model Assume that read appears with equal probability in any region. Calcurate the p-value (the Probability of obtaining more or equally extreme value than observed value under the random model.) → Smaller is more significant. Setting the threshold (p-value) manually. We could calcurate the threshold ($n_{obs}$) → If the $n_{obs}$ exceeds this threshold, it is determined as the peak region. In [12]: from scipy.special import comb In [13]: g = 10000 # total DNA length n = 1000 # total number of reads l = 100 # bin size q = l / g n_bins = g / l lambda_ = n * q # mean read count seed = 0 xmax = 30 In [14]: fig = plt . figure ( figsize = ( 12 , 4 )) axL = fig . add_subplot ( 1 , 2 , 1 ) read_points = np . random . RandomState ( seed ) . randint ( 0 , g , size = n ) axL . scatter ( read_points , np . zeros ( shape = n ), s = 3 , label = \"read\" , color = \"black\" ) ledge = 0 read_counts = [] for edge in range ( l , g + 1 , l ): middl = ( ledge + edge ) / 2 count = np . count_nonzero ([( ledge <= read_points ) & ( read_points < edge )]) read_counts . append ( count ) if edge <= l * 10 : axL . axvline ( edge , color = \"red\" ) axL . text ( x = middl , y = 1e-3 , s = count , horizontalalignment = 'center' ) ledge = edge axL . set_xlim ( 0 , l * 10 ) axL . set_ylim ( - 1e-3 , 2e-3 ) axL . set_yticks ([]) axL . legend () Poisson = [ comb ( n , i , exact = True ) * ( q ** i ) * (( 1 - q ) ** ( n - i )) for i in range ( n )] axR = fig . add_subplot ( 1 , 2 , 2 ) axR . plot ( Poisson , color = \"black\" , label = \"Pois($\\lambda$)\" ) axR . plot ([ read_counts . count ( i ) / n_bins for i in range ( n )], color = \"red\" , label = \"Observed\" ) axR . set_xlim ( 0 , xmax ) axR . set_xlabel ( \"Read count for each bin\" ) axR . set_ylabel ( \"Frequency\" ) axR . legend () plt . show () In [15]: n_obs = 15 p_values = np . cumsum ( Poisson [:: - 1 ])[:: - 1 ] # Calcurate p-value for each n_obs. thresh_p = 1e-2 bp = np . argmax ( p_values <= thresh_p ) In [16]: fig = plt . figure ( figsize = ( 12 , 4 )) axL = fig . add_subplot ( 1 , 2 , 1 ) axL . plot ( Poisson , color = \"black\" , label = \"Pois($\\lambda$)\" ) axL . fill_between ( np . arange ( n_obs , xmax ), y1 = Poisson [ n_obs : xmax ], y2 = 0 , facecolor = 'red' ) axL . annotate ( 'p-value \\n = $\\mathbb {P} (n_ {obs} \\leq N)$ \\n $=\\sum_{i=n_ {obs} }&#94;{\\infty}(\\lambda&#94;i/i!)\\cdot e&#94;{-\\lambda}$' , xy = ( 17 , 1e-2 ), xytext = ( 20 , 4e-2 ), fontsize = 12 , arrowprops = dict ( width = 1 , headwidth = 8 , headlength = 10 , connectionstyle = 'arc3' , facecolor = 'black' ) ) axL . set_xlim ( 0 , 30 ) axL . set_title ( \"Poisson distribution\" ) axL . set_xlabel ( \"N\" ) axL . set_ylabel ( \"Freq\" ) axR = fig . add_subplot ( 1 , 2 , 2 ) axR . plot ( p_values , color = \"black\" ) axR . scatter ( n_obs , p_values [ n_obs ], color = \"red\" , label = \"pvalue($n_ {obs} $=\" + f \" {n_obs} )\" ) axR . scatter ( bp , p_values [ bp ], color = \"blue\" , label = \"Boundary point\" ) axR . axhline ( thresh_p , color = \"blue\" , label = f \"threshold(p_value= {thresh_p} )\" ) axR . axvspan ( xmin = bp , xmax = xmax , color = \"blue\" , alpha = 0.3 ) axR . set_xlim ( 0 , xmax ) axR . set_title ( \"The relationship between p-value and $n_ {obs} $\" ) axR . set_xlabel ( \"$n_ {obs} $\" ) axR . set_ylabel ( \"p-value\" ) axR . legend () plt . show () In this case, we could say the threshold($n_{obs}$) = 19(=bp). ※ In ChIP-seq, we have to do \"Tag shift\" due to the DNA strand asymmetry. （→ more: MACS ） Section2.3 Hypothesis Testing Terminology In [17]: fig , ax = plt . subplots ( figsize = ( 6 , 4 )) X = np . arange ( 10 , 100 , 1 ) Y = 1 / X # Null distribution ax . plot ( X , Y , color = \"red\" ), ax . text ( x = 15 , y = 8e-2 , s = \"Null distribution \\n $f_S(s|H)$\" , fontsize = 15 ) # Thereshold: Sα ax . plot (( 50 , 50 ),( 0 , 7e-2 ), color = \"black\" ), ax . text ( x = 48 , y = 7.5e-2 , s = \"$S_ {α} $\" , fontsize = 12 ) # Reject & Accept ax . annotate ( '' , xy = ( 75 , 5e-2 ), xytext = ( 52 , 5e-2 ), arrowprops = dict ( arrowstyle = \"->\" , connectionstyle = 'arc3' )), ax . text ( x = 55 , y = 5.5e-2 , s = \"reject\" , fontsize = 12 ) # Reject ax . annotate ( '' , xy = ( 25 , 5e-2 ), xytext = ( 48 , 5e-2 ), arrowprops = dict ( arrowstyle = \"->\" , connectionstyle = 'arc3' )), ax . text ( x = 35 , y = 5.5e-2 , s = \"accept\" , fontsize = 12 ) # Accept # Observation sample. ax . plot (( 70 , 70 ),( 0 , 1 / 70 ), color = \"black\" ), ax . scatter ( 70 , 1 / 70 , color = \"black\" ), ax . text ( x = 68 , y = 2e-2 , s = \"$S_ {obs} $\" , fontsize = 12 ) ax . set_xticks ([]), ax . set_yticks ([]) ax . set_xlabel ( \"S\" ), ax . set_ylabel ( \"freq\" ) ax . set_xlim ( min ( X ), max ( X )), ax . set_ylim ( min ( Y ), max ( Y )) plt . show () Null Hypothesis $H_0$ Alternative Hypothesis $H_1$ Test Static $S$ Null distribution Significance threshold Reject/Accept $H_0$ Null hypothesis is True Null hypothesis is False Do not reject Null hypothesis ($H_0$) Correct Type2 error (False negative) Reject Null hypothesis ($H_0$) Type1 error (False positive) Correct P-value distribute uniformly under $H_0$ Proof. p-value is the probability of obtaining more or equally extreme value than observed value under the null distribution. $$p = \\mathbb{P}\\left(S\\geq s|H_0\\right) = 1-\\mathbb{P}\\left(S By noting $F_0$ the cumulative distribution function of $S$ under $H_0$, we obtain: $$p = 1-F_0(s)$$ Thanks to the fact that the cdf is monotonic, increasing and (left-)continuous: $$\\mathbb{P}\\left(S\\geq s|H_0\\right) = \\mathbb{P}\\left(F_0\\left(S\\right)\\geq F_0\\left(s\\right)\\right) = 1-\\mathbb{P}\\left(F_0\\left(S\\right)< F_0\\left(s\\right)\\right)$$ Therefore, we have: $$\\mathbb{P}\\left(F_0\\left(S\\right) Which means that $F_0\\left(S\\right)$ is following a uniform distribution. And, as this means also that $1-F_0\\left(S\\right)$ is following a uniform distributed, then we can conclude that p-value are uniformly distributed under the null hypothesis. In [18]: from scipy.stats import norm In [19]: N = 10000 loc = 0 scale = 1 seed = 0 In [20]: obs = np . random . RandomState ( seed ) . normal ( loc = loc , scale = scale , size = N ) # observation sample \"s\". p_value = 1 - norm . cdf ( x = obs , loc = loc , scale = scale ) # p-value = 1 - F(s) In [21]: fig = plt . figure ( figsize = ( 12 , 4 )) axL = fig . add_subplot ( 1 , 2 , 1 ) freqs , bins , patches = axL . hist ( obs , bins = 50 , density = True , color = \"blue\" , alpha = 0.7 ) cent_bins = [ np . mean ( bins [ i : i + 2 ]) for i in range ( len ( bins ) - 1 )] axL . plot ( cent_bins , freqs , color = \"blue\" ) axL . set_title ( \"Histogram of observation sample s \\n under the null distribution (This time: Normal distribution)\" ), axL . set_xlabel ( \"observation s\" ), axL . set_ylabel ( \"Frequency\" ) axR = fig . add_subplot ( 1 , 2 , 2 ) axR . hist ( p_value , bins = 20 , edgecolor = \"black\" ) axR . set_title ( \"Histogram of p-value\" ), axR . set_xlabel ( \"p-value\" ), axR . set_ylabel ( \"Frequency\" ) plt . tight_layout () plt . show () ※ We could argue about the p-value under the null hypothesis, but we could not confirm whether null hypothesis is true or not. Section2.4 Hypothesis Test Example $\\chi&#94;2$-test Any statistical hypothesis test where the sampling distribution of the test statistic is a chi-squared distribution when the null hypothesis is true. Used to determine whether there is a significant difference between the expected frequencies and the observed frequencies in one or more categories. $\\chi&#94;2$-distribution $Y_i\\sim\\mathcal{N}\\left(0,1\\right), i=1,\\ldots,\\nu$: i.i.d. $X=Y_1&#94;2+\\cdots+Y_{\\nu}$ $\\rightarrow X\\sim\\chi&#94;2(\\nu), X\\in \\mathbb{R}_{\\geq0}$ $$ \\begin{aligned} f_X(x) &= \\frac{1}{2&#94;{\\nu/2}\\Gamma(\\nu/2)}x&#94;{\\nu/2-1}e&#94;{-x/2}\\\\ \\Gamma(z) &= \\int_{0}&#94;{\\infty}t&#94;{z-1}e&#94;{-t}dt(\\mathrm{Re}(z)>0)\\\\ \\mathbb{E}(X) &= \\nu\\\\ \\mathbb{V}(X) &= 2\\nu \\end{aligned} $$ In [22]: from scipy.stats import chi2 In [23]: K = 5 In [24]: fig = plt . figure ( figsize = ( 6 , 4 )) X = np . linspace ( 0 , 8 , 1000 ) for k in range ( 1 , K + 1 ): plt . plot ( X , chi2 . pdf ( X , k ), label = f \"$k= {k} $\" ) plt . xlim ( 0 , 8 ), plt . ylim ( 0 , 1.0 ) plt . title ( \"$\\chi&#94;2$-distribution\" ), plt . xlabel ( \"X\" ), plt . ylabel ( \"P(X)\" ) plt . legend () plt . show () Pearson's chi-square test goodness of fit test # $C_1$ $C_2$ $\\cdots$ $C_k$ total Observation frequency $n_1$ $n_2$ $\\cdots$ $n_k$ $n$ Theoretical probability (under $H_0$) $p_1$ $p_2$ $\\cdots$ $p_k$ $1$ Theoretical frequency $m_1=np_1$ $m_2=np_2$ $\\cdots$ $m_k=np_k$ $n$ Null Hypothesis($H_0$): $P(C_i) = p_i\\quad(i=1,2,\\ldots,k)$ If null hypothesis is true, $U$ are distributed as $\\chi&#94;2(k-1)$. $$ U=\\sum_{i=1}&#94;k\\frac{(n_i-m_i)&#94;2}{m_i}\\\\ \\begin{cases} U&>\\chi_{\\alpha}&#94;2(k-1) &\\Rightarrow \\text{Reject }H_0\\\\ U&\\leq\\chi_{\\alpha}&#94;2(k-1) &\\Rightarrow \\text{Accept }H_0 \\end{cases} $$ test for independence A\\B $B_1$ $B_2$ $\\cdots$ $B_b$ total $A_1$ $n_{11}$ $n_{12}$ $\\cdots$ $n_{1b}$ $n_{1\\cdot}$ $A_2$ $n_{21}$ $n_{22}$ $\\cdots$ $n_{2b}$ $n_{2\\cdot}$ $\\vdots$ $\\vdots$ $\\vdots$ $\\cdots$ $\\ddots$ $\\vdots$ $A_a$ $n_{a1}$ $n_{a2}$ $\\cdots$ $n_{ab}$ $n_a$ total $n_{\\cdot1}$ $n_{\\cdot2}$ $\\cdots$ $n_{\\cdot b}$ $n_{a\\cdot}$ $P(A_i) = p_i,P(B_j)=q_j,\\quad (1\\leq i\\leq a,1\\leq j\\leq b)$ Null Hypothesis($H_0$): $A$ and $B$ are independence. $$P(A_i\\cap B_j) = p_iq_j$$ If null hypothesis is true, we could presume: $\\bar{p_i}=n_{i\\cdot}/n$, $\\bar{q_j}=n_{\\cdot j}/n$. $m_{ij} = n\\bar{p_i}\\bar{q_j}$ (Theoretical frequency) $$ U=\\sum_{i=1}&#94;a\\sum_{j=1}&#94;b\\frac{(n_{ij}-m_{ij})&#94;2}{m_{ij}}\\\\ \\begin{cases} U&>\\chi_{\\alpha}&#94;2\\left((a-1)(b-1)\\right) &\\Rightarrow \\text{Reject }H_0\\\\ U&\\leq\\chi_{\\alpha}&#94;2\\left((a-1)(b-1)\\right) &\\Rightarrow \\text{Accept }H_0 \\end{cases} $$ t-test One-sample test: Determine whether a sample of observations could have been generated by a process with a specific mean $\\mu$. Two-sample test: Compare the average values of the two data sets and determine if they came from the same population. t-distribution $$ \\begin{aligned} f_{t(\\nu)}(x) &= \\frac{\\Gamma\\left(\\frac{\\nu+1}{2}\\right)}{\\sqrt{\\nu\\pi}\\Gamma\\left(\\frac{\\nu}{2}\\right)}\\left(1+\\frac{x&#94;2}{\\nu}\\right)&#94;{-\\frac{\\nu+1}{2}}\\\\ \\mathbb{E}(X) &= 0(\\nu>1)\\\\ \\mathbb{V}(X) &= \\begin{cases}\\infty&(1<\\nu\\leq2)\\\\\\frac{\\nu}{\\nu-2}&(2<\\nu)\\end{cases} \\end{aligned} $$ In [25]: from scipy.stats import t as tdist In [26]: fig = plt . figure ( figsize = ( 6 , 4 )) X = np . linspace ( - 6 , 6 , 1000 ) nus = [ 1 , 2 , 5 , 1000 ] for nu in nus : plt . plot ( X , tdist . pdf ( X , nu ), label = f \"$ν= {nu} $\" ) plt . plot ( X , norm . pdf ( X , 0 , 1 ), linestyle = ':' , linewidth = 5 , label = \"Standard Normal Distribution\" ) plt . xlim ( - 6 , 6 ), plt . ylim ( 0 , 0.4 ) plt . title ( \"t-distribution\" ), plt . xlabel ( \"X\" ), plt . ylabel ( \"P(X)\" ) plt . legend () plt . show () Student's t-test One-sample test: $$ X_1,\\ldots,X_n\\sim\\mathcal{N}(\\mu,\\sigma)\\text{: i.i.d.}\\\\ \\bar{X} = \\frac{X_1,\\ldots,X_n}{n}, S = \\frac{\\left(X_1-\\bar{X}\\right)&#94;2 + \\cdots+\\left(X_n-\\bar{X}\\right)&#94;2}{n-1}\\\\ \\rightarrow T=\\frac{\\left(\\bar{X}-\\mu\\sqrt{n}\\right)}{S}\\sim t(n-1) $$ Two-sample test (when we know two groups have equal variance) : $$ X_{11},\\ldots,X_{1m}\\sim\\mathcal{N}(\\mu,\\sigma_1)\\text{: i.i.d.}, \\bar{X}_1 = \\frac{X_{11}+\\cdots+X_{1m}}{m}\\\\ X_{21},\\ldots,X_{2n}\\sim\\mathcal{N}(\\mu,\\sigma_2)\\text{: i.i.d.}, \\bar{X}_2 = \\frac{X_{21}+\\cdots+X_{2n}}{n}\\\\ S=\\frac{\\sum_{i=1}&#94;m\\left(X_{1i}-\\bar{X}_1\\right)&#94;2 + \\sum_{i=1}&#94;n\\left(X_{2i}-\\bar{X}_2\\right)&#94;2}{m+n-2}\\\\ \\rightarrow T=\\frac{\\left(\\bar{X}_1-\\bar{X}_2\\right)\\sqrt{mn}}{S\\sqrt{m+n}}\\sim t(m+n-2) $$ Two-sample test (when we know two groups have equal variance) : $$ X_{11},\\ldots,X_{1m}\\sim\\mathcal{N}(\\mu,\\sigma_1)\\text{: i.i.d.}, \\bar{X}_1 = \\frac{\\sum_{i=1}&#94;mX_{1i}}{m}, S_1 = \\frac{\\sum_{i=1}&#94;m\\left(X_{1i} - \\bar{X}_1\\right)&#94;2}{m-1}, A=S_1/m\\\\ X_{21},\\ldots,X_{2n}\\sim\\mathcal{N}(\\mu,\\sigma_2)\\text{: i.i.d.}, \\bar{X}_2 = \\frac{\\sum_{i=1}&#94;mX_{2i}}{n}, S_1 = \\frac{\\sum_{i=1}&#94;m\\left(X_{2i} - \\bar{X}_2\\right)&#94;2}{n-1}, B=S_2/n\\\\ \\rightarrow T=\\frac{\\left(\\bar{X}_1-\\bar{X}_2\\right)}{S\\sqrt{A+B}}\\approx t(\\nu), \\nu=\\frac{(A+B)&#94;2}{A&#94;2/(m-1)+B&#94;2/(n-1)} $$ In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物統計論","url":"https://iwasakishuto.github.io/University/3A/生物統計論-2.html","loc":"https://iwasakishuto.github.io/University/3A/生物統計論-2.html"},{"title":"レポート課題1(10/3出題)","text":"vi2T9Ab5yFZ+Q2oPGY+Zzg==;tmgI5y7dVo4q8SzmHAykAR6Dc6+sTGB14zF1Yw4lHb9JWXGG0pIuqxWvpx55w0R+2wtxhijL0jBsOXiz5wMJ8mfFWhVV1qbKL5jJ49VfuwLP4A7R4GF0X0WtkU8bzuL7zGPrNhBxqnuw28e8DjZVHOOLCovTEwH6y03yf24lX+YyMy+pXO0FRbihFxnY6Imt5Co+lCW9p3sz2Osgslr/1PIHZBzVuj/cutQ9oqqo/WxvYr/6DU46KF9e7rLQrVYkmr35CQkEAomQXO8yGOVEXunE7gmwxWiBjE2tfYEdIGMwb9YDdvrhSc05k/x9yg1rNzOs9LOlUWl++v+knMIjDc+CpUSip7HAiG2KzPShS4iNs1ZErgxeSFbF4zgjKLOsI7r/bkKKHCvO/TZNafPjxuJ2s3/K0pqcora6AE4Q2WpdeSedWx4KpBhG/JoD4isHr5h8Cq4NDcTbtCZY7dVSRAj9iov+8r3ZhVXCqbPteRLa77BraxsE/Au9Kq6H2YclcWaTDeENeiPc29INp6DOSoox9o9Mx2CXt4aWiIqqXdWhwFiZ10UtT7n+EIRQ5rFQ0l3Kq6tBaDAl2dVU4/zXFkjmmoClnkQFrSWO8DaBgMqYlRoBvDg7o8Chu7O0RVBECTUBwNMzkDgUYYcewTdYipEv+FS53ewjtOM+DiZrc4vqdBBjXkQ3wEsg5vhzylzFkxS9teNQHZc1bEup9tYSLmaldKT34DVUxUwPGr528QWEOtBSpANvCWfjEDplc/G1Q3ZsuRE1fDoWhNZNbrZHM79/CaNfV9m2FSZ7omjyLhXyPiOZBIyhRPG+HwbK+c+OJZvOPYfxMzjGl6+ezquGyF6k0OQfDziGcF8UOfw0EWuHUNDKHTrCI5wJ1TeF6+3jwZx58A7vqdrdyAquXw3EkgX2ueoLxIQ5aOgnOyHEftAG6FUPbX9xeulv47HQAjZBtqt3fbL2b3aXEFhhBSFC/vsKcNrb8l1X7mSoWQuMwsC1XAJ4sH86vTQGIIRJax+MoJnP1ovs4KFd74oeTa6X/hR71PK4N3aE27hmlgvOSdXhVaSDbs6k4I3h5gwF58rGJ4QsR4BKApet/Nhus8Ye+tjBC0d1f2l970Bi5lZrmOEBUDA3uHY7gJ8ft1N3zrfKZjcexO7C24QmMp+mg4JOFJ0f1vaOotAuwPWqYxJwMpHb5dLatQaGDzl3f1RqwDovVkTa3xateSU2ysGw9pmN1t3r1tRVujFu2sgAuz44KJLvuL1rhIRSOiOHLUu6/gYcarVNEMuDA98VHL7tq+B5+LJHwWVLzNir9dqYNkSB0PSBssFDgPCeWgREyGDN5Tngi30pqw0JfJXLp1iceyVkDXdG5Ua4ZALK3Tk5kNnDeXE9TYEDWX+Ssmy8RuUvbMtwi5DL9v2XbvimwP9J/d6QxpUhVIrDVQz5IoRt8RJPtNMYH5Zi6kt+DxoJiffg8JufEsDMLbJT6/iHL0B3uaENo7TqzzuFeBcW0xuZoKPJSARJTh5Oqz4cR89pMllsNe1NgXc9ihm0G0gvccSM1xd/ZuEZh8CJ0PnqiRjUuU2kpkdLXSF53ZiJ/SaGgbcGc1JdVEidBarjmJIGHFwPsWiiRMDUgoQLQ3xtm2oAbNVDMBUkJHz/sg87I0DWMfQvUMA60kAvj4FeNFJpBxmY0XkQnQQ7PHNUJwKsLynzhlV1s/4MVYwfYCT/xFlfEbAjZ3Wckyn0rFftKXvdYgaqC8Zlnxd9VX7nZsRDqpfIJl/mRKYBRk9FiQWyZPSp4ZIwHo6bu2NXgcNNS/IGAREyM5OrhGd7kNYq1z5WVWBQhCBi5wIj56B03vAfZBjysnQXZZV0exn1VGqCyY49vmmAbfpihW86MW2ZYHJJIXgd9OLj6L3wAPJrmo1Nrfn9qm+XvzpuNYRhjW0iBx3J0iQbnGEKim1bisn2mshwyZj7B/8bhDP3+TFnkI4JN3VB2ag422P3FwnrdwZRIrCGkyhWoukZ39TR5jH93fwpvqiZ9xZ9TtfpAVyRApRp6+iN8kXwyAHQ/VZXKpRCM2raJfUgpJdxcS0KUxeoTZcBQ7khE9rA99oOzYnBStCaUt//KeS1Sivv7KMNRsoPfoFXhOhrifVenXobDm1H+9s4vRCF+rTFgEhfGW9BM/ueIphIqOipQY9Xx6xP674/wscoqBhunhRAXBKa2ztRO4ZxRvMomvvy/5v2RflEgpn+Ro6S9y+3cF9KXHNuzxNwr/rtU145x6ibn228ZBYeFFGj3LmdQLu0c+w6SW1/mNUJV3uXl+eW9YjypX2RWVpR1nWc7zJG2DKKvlhFaLGESPpabS7bNMf5G0/PiUeajUwUEQODHHKg8wcPE7umzewcE+rTcYzmrso3qnfB7Z8zzQbOv4Uid7LvlDHJM9L+5o2NULDqYnJfQAyMN7wqGxqT7NOsqeqANom8fkpIjq2jUQM4IAc+zXOcqe/MKHXOSKrUdatjR1AshkpQ1QdZVkg/GCTeQ9HuZtJAXO/fsIQwN+NLGVAzV0abRtCah3oYCmX64q/RhPqlHuKmxjMnKFRQ3N+dwOqv436Q8RkEMJVIMaSTLM2RtVVzLvD2f6B79T29ueSDguiGARIdsIdyEStBshRiv5/7UG8+M69rqDicNaD4DmR7LmnGnxXSVSA4us0Bb7fJLuT5sR3vo2fF/xVWYqDkbsENi9bxx+bd2FQSk2TckZMLuqPNztysazysbCYQ+BdwcxwoLAXZMo1qkljyOI0xt3Qt0Mbod9se1+ETRn7VhYxAc+o2b8SneuD0qnz/2h+eDaexpMRMW9oox8/x5tb0sYsv7TS43t5lRC14af1uNIFzX/A8hiil2v+skKF5JcAaf2YIUapbkY8AmWPXNAxLPlQNm6YNGAGh+cWvjP7cGCJQ6yeEp41Eur8f9BMDAwh2f+WABtIb0BKKW9wsNkxReWJmuysu/6nDk7QA/W+8IQBPhEUWgzH4YQxfMcQKOxqvzOFq02AUXMYaMSRVJDf6rXqJ30cxNTA7e4Mcy5wUltr2ov5oReOv5JbOAeQLeunmhfiu3bUR2WGyIfFZ6XqcWBbZboWWacLQARrSmDnpq5iUyu+wLiDi59IL2r6O+HjiKjUQ9lLd21pQ8ElaYU2Q/1lnSCMvz6fYxZgHfce4W3JjJ74qmV1UKJT/LGAWaJXaCJulG11xgsxbP60M7k/KRsYYRtn7plSgiyQQWqGSA1rYZmvd+rat5XhpSFstdMivyudhWVlxnP4p+pcdn1elWQAxrM8a5LhDKR73eEr/crHNeUUtEv/B+6mPKWdkwzTk/j+ePZnVHLDsMjA4GzQD5rFF2KMv/wXCP+TGE0vBa/wKTANIcDH0WWT04D5yGsW3uShOgIqrmk0Rc+aivMYUYAyS9Wc46lt45B+M6W4bHpadyXnEMXqcyxRngV15WbNRsZ77Md8ruIzFQLpBoTz0BtpvZ4NETYtO34GtYMm/dPchDI78FQBr09HHWWffBRIB3qmpmLKkEJG2+Uoi23NW3rOioK6gKDBv9WRQWm6JjipMEDPIP/yLAk2jfwuyuur+K8Bj4Oge+GiYCRlHT2fkRUpNfFT5u/ZoRoMDoJh2FC0fyGs7xpWejIaI8y/FDXOP1V8WZTTqQsqmfb57G88puC6WP0h5Gw+S5Haz+dNDo6BZMmvayIS/PFCzQwjplDUReCsFsYAQeKozP678nt2+Gvp8S1yB8JuMXzBDWn1NaPTJDX18n2o=;&#94; This content is encrypted. Password Decrypt (function () { var strip_padding = function (padded_content, padding_char) { /* * Strips the padding character from decrypted content. */ for (var i = padded_content.length; i > 0; i--) { if (padded_content[i-1] !== padding_char) { return padded_content.slice(0, i); } } }; var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) { /* * Decrypts the content from the ciphertext bundle. */ var key = CryptoJS.MD5(password), iv = CryptoJS.enc.Base64.parse(iv_b64), ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64), bundle = { key: key, iv: iv, ciphertext: ciphertext }; var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding}); try { return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char); } catch (err) { // encoding failed; wrong password return false; } }; var init_decryptor = function() { var decrypt_btn = document.getElementById('pec-decrypt-content'), password_input = document.getElementById('pec-content-password'), encrypted_content = document.getElementById('pec-encrypted-content'), decrypted_content = document.getElementById('pec-decrypted-content'), decrypt_form = document.getElementById('pec-decrypt-form'); decrypt_btn.addEventListener('click', function () { // grab the ciphertext bundle var parts = encrypted_content.innerHTML.split(';'); // decrypt it var content = decrypt_content( password_input.value, parts[0], parts[1], parts[2] ); if (content) { // success; display the decrypted content decrypted_content.innerHTML = content; decrypt_form.parentNode.removeChild(decrypt_form); encrypted_content.parentNode.removeChild(encrypted_content); // any post processing on the decrypted content should be done here } else { // ¯\\_(ツ)_/¯ password_input.value = ''; } }); }; document.addEventListener('DOMContentLoaded', init_decryptor); })();","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-report1.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-report1.html"},{"title":"イントロダクション","text":"講義計画 確率と統計の基礎 ： 最先端の機械学習技術の数学的基盤 探索と最適化 ： 広大な探索空間から最適解を効率よく探索 機械学習 ： データの背後に潜む知識を発見 自然言語処理 ： 人工知能技術の応用例 # 日付 内容 担当 1 10/3 概要 杉山 2 10/10 最適化（連続1） 佐藤 3 10/17 最適化（連続2） 佐藤 4 10/24 最適化（探索） 本多 5 10/31 確率と統計 本多 6 11/14 確率と統計 本多 7 11/21 確率と統計 本多 8 11/28 機械学習（教師付き学習） 本多 9 12/5 機械学習（教師付き学習） 佐藤 10 12/12 自然言語処理 宮尾 11 12/19 自然言語処理 宮尾 12 12/26 自然言語処理 宮尾 13 1/9 機械学習（強化学習） 杉山 1 1/16 試験 佐藤 人工知能とは 1956年：\"The Dartmouth Summer Research Project on Artificial Intelligence\" にて Artificial Intelligence という言葉が提唱された。 Watoson Nature AlphaGo 人工知能関連分野の発展 人工知能研究 1960年頃(1次ブーム)：記号処理、論理推論 1980年頃(2次ブーム)：エキスパートシステム ニューラルネット研究 1960年頃(1次ブーム)：パーセプトロン（１層） 1990年頃(2次ブーム)：誤差逆伝播ほう（多層） 機械学習研究 1995年頃〜：統計・凸最適化 1995年頃〜：ベイズ推論 2010年頃〜：深層学習 3種類の機械学習 教師付き学習 ：人間が教師となり、コンピュータの学習を手伝う。 教師なし学習 ：コンピュータが人間の手を介さずに自発的に学習する。 強化学習 ：ロボットが人間の手を介さずに自発的に意思決定を行う。 まとめ 人工知能 ： 知的なコンピュータシステムを作る 数学・プログラミング・実世界応用をつなぐ架け橋 探索 ： 広大な探索空間を効率よく探索 機械学習 ： データの背後に潜む知識を発見","tags":"知能システム論","url":"https://iwasakishuto.github.io/University/3A/知能システム論-1.html","loc":"https://iwasakishuto.github.io/University/3A/知能システム論-1.html"},{"title":"Pair HMM","text":"※実装時のパラメータ PairHMMによるアラインメントを実装していく。なお、 （ kerasy.Bio.alignment.PairHMM ） に定義してあります。 In [1]: from kerasy.Bio.alignment import PairHMM In [2]: # サンプル配列 seqX = \"CCAGAGCTGTGGCAGACAGTGGCT\" seqY = \"CCAGCTGTGCAGACACTGGCTT\" In [3]: model = PairHMM () In [4]: ! cat params.json { \"delta\": \"1/10\", \"epsilon\": \"1/5\", \"tau\": \"1/30\", \"px_e_y\": \"1/8\", \"px_ne_y\": \"1/24\", \"qx\": \"1/4\", \"qy\": \"1/4\" } In [5]: model . set_params ( path = \"params.json\" ) Pair HMM とその利点 HMMのために開発されたアルゴリズムを使える。（らしい←正解ラベルの無いアラインメントでBaum-Welchアルゴリズムをどのように使うのかは現在考察中です。） アラインメントの確率的な解釈が可能になる。 グローバルアラインメントを出力する Pair-HMM Mは $x$ と $y$ がマッチした状態。（$x_i$ と $y_j$ がアライン） Iは $x$ に挿入が起きている状態。（$x_i$ と $-$ がアライン） Dは $x$ に欠失が起きている状態。（$-$ と $y_j$ がアライン） （以下では上から $V&#94;M,V&#94;X,V&#94;Y$ と記述している。） Pair HMMのためのViterbiアルゴリズム 2本数の配列 $x,y$ を与えると確率最大のアラインメントを求めるアルゴリズム。 Initialization: $$ \\begin{cases} V&#94;M(0,0)=1, V&#94;M(i,0)=V&#94;M(0,j)=0\\text{ for }i\\neq0,j\\neq0\\\\ V&#94;X(0,0)=0, V&#94;X(1,0)=\\delta q_{x_1} V&#94;X(i,0)=\\varepsilon q_{x_i}V&#94;X(i-1,0) \\text{ for }i=2,\\ldots,n\\\\ V&#94;Y(0,0)=0, V&#94;Y(0,1)=\\delta q_{y_1} V&#94;Y(0,j)=\\varepsilon q_{y_j}V&#94;Y(0,j-1) \\text{ for }j=2,\\ldots,m\\\\ \\end{cases} $$ Recursion: $i=1,\\ldots,n,\\quad j=1,\\ldots,m$ $$ \\begin{aligned} V&#94;M(i,j) &= p_{x_iy_j}\\max\\begin{cases}(1-2\\delta-\\tau)V&#94;M(i-1,j-1)\\\\(1-\\varepsilon-\\tau)V&#94;X(i-1,j-1)\\\\(1-\\varepsilon-\\tau)V&#94;Y(i-1,j-1)\\end{cases}\\\\ V&#94;X(i,j) &= q_{x_i}\\max\\begin{cases}\\delta V&#94;M(i-1,j)\\\\\\varepsilon V&#94;X(i-1,j)\\end{cases}\\\\ V&#94;Y(i,j) &= q_{y_j}\\max\\begin{cases}\\delta V&#94;M(i,j-1)\\\\\\varepsilon V&#94;X(i,j-1)\\end{cases}\\\\ \\end{aligned} $$ Termination: $$v_e = \\tau\\max\\left(V&#94;M(n,m),V&#94;X(n,m),V&#94;Y(n,m)\\right)$$ In [6]: P_optimal = model . align ( seqX , seqY , return_score = True ) Pair HMM (Viterbi) Alignment score: 3.551370651291424e-30 |parameter| value | -------------------------------- |delta | 0.1| |epsilon | 0.2| |tau | 0.03333333333333333| |px_e_y | 0.125| |px_ne_y |0.041666666666666664| |qx | 0.25| |qy | 0.25| =============================================================== X: CCAGAGCTGTGGCAGACAGTGGC-T Y: CC--AGCTGT-GCAGACACTGGCTT =============================================================== In [7]: print ( f \"π*= {P_optimal} \" ) π*=3.551370651291424e-30 アラインメントの信頼性 配列 $x,y$ が与えられた時、アラインメント $\\pi$ が得られる条件付き確率を考えることができ、それが アラインメントの信頼度 を表していると考ることができる。 $$ P(\\pi|x,y) = \\frac{P(x,y,\\pi)}{P(x,y)}\\\\ P(x,y) = \\sum_{\\text{alignments }\\pi}P(x,y,\\pi) $$ ※ なお、ここで $P(x,y)$ は $x,y$ に関する全ての可能なアラインメントについて確率を足し合わせたもの であり、Forwardアルゴリズムで計算することができる。 Pair HMMのためのForwardアルゴリズム ※ Viterbiの $\\max$ を $\\text{sum}$ に変更しただけ。 Initialization: $$ \\begin{cases} F&#94;M(0,0)=1, F&#94;M(i,0)=F&#94;M(0,j)=0\\text{ for }i\\neq0,j\\neq0\\\\ F&#94;X(0,0)=0, F&#94;X(1,0)=\\delta q_{x_1} F&#94;X(i,0)=\\varepsilon q_{x_i}F&#94;X(i-1,0) \\text{ for }i=2,\\ldots,n\\\\ F&#94;Y(0,0)=0, F&#94;Y(0,1)=\\delta q_{y_1} F&#94;Y(0,j)=\\varepsilon q_{y_j}F&#94;Y(0,j-1) \\text{ for }j=2,\\ldots,m\\\\ \\end{cases} $$ Recursion: $i=1,\\ldots,n,\\quad j=1,\\ldots,m$ $$ \\begin{aligned} F&#94;M(i,j) &= p_{x_iy_j}\\text{sum}\\begin{cases}(1-2\\delta-\\tau)F&#94;M(i-1,j-1)\\\\(1-\\varepsilon-\\tau)F&#94;X(i-1,j-1)\\\\(1-\\varepsilon-\\tau)F&#94;Y(i-1,j-1)\\end{cases}\\\\ F&#94;X(i,j) &= q_{x_i}\\text{sum}\\begin{cases}\\delta F&#94;M(i-1,j)\\\\\\varepsilon F&#94;X(i-1,j)\\end{cases}\\\\ F&#94;Y(i,j) &= q_{y_j}\\text{sum}\\begin{cases}\\delta F&#94;M(i,j-1)\\\\\\varepsilon F&#94;X(i,j-1)\\end{cases}\\\\ \\end{aligned} $$ Termination: $$F_e = \\tau\\ \\text{sum}\\left(F&#94;M(n,m),F&#94;X(n,m),F&#94;Y(n,m)\\right)$$ In [8]: F , P_all = model . forward ( seqX , seqY ) In [9]: print ( f \"𝐹&#94;𝐸(𝑛,𝑚)=𝑃(𝑥,𝑦)=Σalignments𝜋𝑃(𝑥,𝑦,𝜋)= {P_all} \" ) 𝐹&#94;𝐸(𝑛,𝑚)=𝑃(𝑥,𝑦)=Σalignments𝜋𝑃(𝑥,𝑦,𝜋)=2.0457988072916236e-28 In [10]: print ( f \"P(π*|x, y)={P_optimal/P_all}\" ) P(π*|x, y)=0.017359334840912267 $x_i$ と $y_j$ がアラインされる確率 次の式で表される。 $$ \\begin{aligned} P(x_i\\diamondsuit y_i|x,y) &= \\frac{\\sum_{\\pi\\in\\Omega_{ij}}P(x,y,\\pi)}{P(x,y)}\\\\ &= \\frac{F&#94;M(i,j)\\cdot B&#94;M(i,j)}{P(x,y)} \\end{aligned}$$ ※ $\\Omega_{ij}$：$x_i$ と $y_j$ がアラインされるアラインメントの集合 Pair HMMのためのBackwardアルゴリズム Needleman-Wunsh-Gotoh のBackwardアルゴリズムとの類似性に注目！ Initialization: $$ \\begin{cases} B&#94;M(n,m)=B&#94;X(n,m)=B&#94;Y(n,m)=\\tau\\\\ B&#94;X(i,m)=\\varepsilon q_{x_{i+1}}B&#94;X(i+1,m)\\text{ for }i=n-1,\\ldots,1\\\\ B&#94;Y(i,m)=\\varepsilon q_{y_{j+1}}B&#94;X(n,j+1)\\text{ for }j=m-1,\\ldots,1\\\\ B&#94;M(i,m)=\\delta q_{x_{i+1}}B&#94;X(i+1,m)\\text{ for }i=n-1,\\ldots,1\\\\ B&#94;M(n,j)=\\delta q_{y_{j+1}}B&#94;Y(n,j+1)\\text{ for }j=m-1,\\ldots,1\\\\ \\end{cases} $$ Recursion: $i=n-1,\\ldots,1,\\quad j=m-1,\\ldots,1$ $$ \\begin{aligned} B&#94;M(i,j) &= \\text{sum}\\begin{cases}(1-2\\delta-\\tau)p_{x_iy_j}B&#94;M(i+1,j+1)\\\\\\delta q_{x_{i+1}}B(i+1,j)\\\\\\delta q_{y_{j+1}}B&#94;Y(i,j+1)\\end{cases}\\\\ B&#94;X(i,j) &= (1-\\varepsilon-\\tau)p_{x_{i+1},y_{j+1}}B&#94;M(i+1,j+1) + \\varepsilon q_{x_{i+1}}B&#94;X(i+1,j)\\\\ B&#94;Y(i,j) &= (1-\\varepsilon-\\tau)p_{x_{i+1},y_{j+1}}B&#94;M(i+1,j+1) + \\varepsilon q_{y_{j+1}}B&#94;Y(i,j+1)\\\\ \\end{aligned} $$ In [11]: B = model . backward ( seqX , seqY ) In [12]: Pij = ( F * B ) / P_all In [13]: import seaborn as sns import matplotlib.pyplot as plt In [14]: sns . heatmap ( Pij ) plt . show () In [15]: # 可視化のために pandas を使用。 import pandas as pd r , c = Pij . shape pd . set_option ( 'display.max_rows' , r ) pd . set_option ( 'display.max_columns' , c ) In [16]: df = pd . DataFrame ( Pij ) In [17]: df Out[17]: .dataframe thead tr:only-child th { text-align: right; } .dataframe thead th { text-align: left; } .dataframe tbody tr th { vertical-align: top; } 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 0 1.139605e+00 1.145169e-02 1.061625e-04 9.380071e-06 7.330898e-07 1.256616e-08 5.467340e-10 2.910714e-11 5.763005e-12 3.410212e-13 5.102192e-15 2.187247e-16 1.988821e-17 1.147484e-18 1.367416e-20 6.720910e-22 4.976161e-24 7.098501e-26 9.237930e-28 2.211060e-29 3.898762e-32 1.763484e-40 1 1.002452e-01 9.915333e-01 6.192125e-03 1.868999e-04 4.332564e-05 9.546525e-07 4.066396e-08 2.157028e-09 9.465879e-11 4.846141e-11 4.058759e-13 3.267685e-14 8.754145e-16 1.928520e-16 1.373420e-18 1.082830e-19 9.927246e-22 1.394016e-23 1.508549e-25 4.777080e-27 9.963503e-30 8.788027e-38 2 2.530997e-02 1.110298e-01 7.189425e-01 4.724160e-03 2.510915e-04 4.961792e-05 1.187062e-06 1.017255e-07 3.970235e-09 2.068131e-10 9.703401e-11 7.255597e-13 1.565563e-13 2.611280e-15 3.254769e-16 2.694314e-18 1.079695e-19 1.562036e-21 1.545424e-23 1.735256e-25 1.265060e-27 2.215960e-35 3 1.439692e-03 1.313691e-01 9.101842e-02 4.446381e-01 5.912097e-03 3.126913e-04 8.585244e-05 1.538885e-06 1.919091e-07 8.250641e-09 2.393023e-10 1.283784e-10 1.387610e-12 2.250638e-13 4.821068e-15 2.111543e-16 4.457287e-18 2.448800e-19 3.227733e-21 1.284984e-23 8.240296e-26 3.335362e-33 4 3.517101e-05 3.000139e-03 4.131934e-01 8.504087e-02 1.663724e-01 9.561056e-03 2.917045e-04 9.039141e-05 1.788740e-06 1.312414e-07 2.869640e-08 4.101759e-10 1.507867e-10 3.456004e-12 5.959996e-13 5.757530e-15 2.024716e-16 4.111221e-18 7.279991e-20 1.060049e-21 6.121304e-24 4.843531e-31 5 9.934762e-06 1.458875e-04 3.927027e-03 6.740773e-01 8.441291e-02 7.234362e-02 1.094905e-02 1.879103e-04 1.252776e-04 1.454564e-06 1.059818e-07 2.729047e-08 9.494833e-10 8.082013e-11 1.033243e-11 3.411004e-13 6.554134e-15 3.958672e-16 8.201302e-18 3.482706e-20 2.714352e-22 4.461969e-29 6 5.322130e-07 6.381400e-05 4.257593e-04 6.688387e-03 9.174344e-01 4.917686e-02 4.329939e-02 3.819221e-03 1.763480e-04 1.328334e-04 1.940120e-06 9.105133e-08 1.541103e-08 2.609538e-09 8.150731e-11 2.404569e-11 1.889654e-13 3.985572e-15 1.024288e-16 6.839760e-18 1.341414e-20 4.476503e-27 7 5.863612e-10 7.892422e-07 1.012986e-04 1.397365e-03 1.342858e-02 1.002812e+00 2.593641e-02 3.890025e-02 1.670263e-03 1.614886e-04 8.871868e-05 1.756325e-06 1.155298e-07 1.122902e-08 2.203971e-09 1.028948e-10 2.509711e-11 1.531285e-13 2.099939e-15 4.258022e-17 2.374690e-18 1.208869e-24 8 1.171184e-11 2.035729e-09 3.700419e-07 2.397639e-04 4.844063e-03 2.599346e-02 9.949710e-01 1.502418e-02 2.712144e-02 1.478651e-03 1.433184e-04 6.712671e-05 1.454730e-06 9.766789e-08 9.072910e-09 2.328874e-09 6.340026e-11 1.502027e-11 1.916941e-13 1.314758e-15 1.242412e-17 4.691715e-23 9 3.005919e-13 6.399055e-11 5.515662e-09 3.748097e-07 1.153167e-04 1.497122e-02 6.310820e-02 8.863944e-01 1.030851e-02 1.491223e-02 2.002265e-03 8.941933e-05 3.530505e-05 1.470719e-06 9.754840e-08 8.043302e-09 3.375435e-09 3.679377e-11 2.917845e-12 5.484419e-14 1.471719e-15 4.178025e-21 10 1.792807e-15 1.557812e-12 1.844985e-10 1.289502e-08 7.545128e-07 6.340240e-05 2.061627e-02 1.787166e-01 5.419262e-01 1.188051e-02 1.024380e-02 2.347055e-03 7.577232e-05 1.796622e-05 1.114937e-06 7.069534e-08 8.011504e-09 2.756012e-09 4.374664e-11 6.704524e-13 1.075503e-14 1.217530e-19 11 1.923711e-17 4.362099e-15 1.941124e-12 6.147024e-10 1.551641e-08 5.550653e-07 1.380449e-04 9.537258e-03 5.398937e-01 1.863598e-01 1.452105e-02 9.548898e-03 1.837989e-03 5.136835e-05 1.397535e-05 6.835406e-07 5.429499e-08 8.819330e-09 1.851138e-09 1.231506e-11 1.775772e-13 2.576473e-18 12 5.638842e-19 1.455168e-16 9.139939e-15 1.547158e-12 1.037887e-09 2.248539e-08 1.151600e-06 9.872926e-05 5.973776e-03 8.862574e-01 6.786997e-02 1.624026e-02 4.029496e-03 2.179139e-03 2.921118e-05 1.601828e-05 5.561847e-07 3.123249e-08 2.978327e-09 9.604760e-10 3.744283e-12 9.636167e-17 13 3.331427e-21 7.494769e-19 2.963338e-16 6.987305e-15 4.315679e-12 6.087761e-10 3.497465e-08 3.604967e-06 8.639915e-05 5.915526e-03 9.923696e-01 2.749764e-02 2.345296e-02 2.411435e-03 1.600356e-03 2.967960e-05 1.263876e-05 5.535990e-07 1.777340e-08 1.086922e-09 1.497803e-10 4.715717e-15 14 8.334075e-23 3.113616e-20 1.885485e-18 4.096232e-16 1.085250e-14 2.877122e-12 9.801182e-10 2.465783e-08 7.111413e-06 1.332057e-04 5.532024e-03 1.019408e+00 1.546140e-02 2.230611e-02 1.326417e-03 7.657518e-04 3.756285e-05 1.397395e-05 7.084890e-07 8.614586e-09 3.251784e-10 1.560898e-13 15 2.761536e-24 1.577325e-22 1.652226e-19 6.855680e-18 4.640406e-16 1.789313e-14 1.881340e-12 7.696555e-10 3.721167e-08 3.131924e-06 2.768933e-04 5.432195e-03 1.019385e+00 1.220031e-02 2.678270e-02 1.012065e-03 4.234835e-04 2.691482e-05 8.312535e-06 2.735984e-07 4.296980e-09 1.264609e-12 16 1.125679e-25 3.526855e-23 5.295754e-22 1.029758e-19 2.954167e-17 8.415539e-16 3.337555e-14 1.886064e-12 3.708635e-10 8.103999e-08 2.979865e-06 2.717052e-04 5.867388e-03 1.008690e+00 1.398136e-02 2.796359e-02 1.094449e-03 2.222028e-04 1.653854e-05 6.727102e-06 7.321521e-08 3.095212e-11 17 5.314132e-29 1.371847e-25 1.002377e-22 1.431441e-21 2.329882e-19 2.824449e-17 1.264033e-15 1.039492e-13 1.896385e-12 2.117496e-10 8.676212e-08 1.428983e-06 4.224040e-04 7.551663e-03 9.828098e-01 2.577489e-02 2.154489e-02 1.348560e-03 1.271999e-04 1.123527e-05 1.554246e-06 1.061734e-09 18 1.311292e-30 3.344026e-28 1.039987e-25 1.917693e-22 4.842995e-21 2.644625e-19 5.424283e-17 1.016892e-15 2.466777e-13 3.876336e-12 1.412328e-10 6.644843e-08 1.307534e-06 2.267450e-04 1.352321e-02 9.236001e-01 4.123399e-02 2.242045e-02 1.780378e-03 1.137684e-04 4.658387e-06 2.707169e-08 19 3.685034e-32 1.308860e-29 1.727006e-27 1.846830e-25 9.168694e-23 2.025241e-20 2.015727e-19 7.009128e-17 1.110761e-15 2.135974e-13 8.991483e-12 3.294862e-10 2.170110e-08 1.342768e-06 1.738901e-04 1.366663e-02 9.157034e-01 5.085192e-02 1.134612e-02 1.333942e-03 1.601513e-04 7.755075e-07 20 2.627187e-34 3.307561e-31 6.412082e-29 8.638204e-27 5.130913e-25 5.421429e-23 2.735844e-20 4.581117e-19 4.673008e-17 1.996269e-15 1.567873e-13 2.425635e-11 7.144030e-10 2.339911e-08 4.401237e-07 1.583398e-04 8.993801e-03 8.715290e-01 1.032744e-01 9.301698e-03 8.040002e-04 1.264439e-05 21 3.712503e-36 1.248259e-33 7.484327e-31 4.015876e-28 1.275117e-26 7.126689e-25 1.294296e-22 1.126902e-20 1.562753e-18 3.245370e-17 8.822502e-16 3.618329e-13 1.719160e-11 9.436607e-10 3.634534e-08 4.567520e-07 2.489897e-05 1.031566e-02 8.313752e-01 1.337435e-01 9.529909e-03 1.755113e-04 22 1.081603e-37 4.975375e-35 3.859345e-33 1.396911e-30 8.994506e-28 2.233130e-26 1.907603e-24 1.395483e-22 7.223861e-21 2.385762e-18 3.020013e-17 1.437842e-15 1.876938e-13 2.135337e-11 5.432165e-10 7.346489e-08 4.608162e-07 1.776497e-05 2.915009e-03 7.255898e-01 2.520881e-01 4.862597e-03 23 7.053935e-40 3.695478e-37 9.639089e-35 1.470014e-32 2.795455e-30 1.235666e-27 2.213410e-26 7.771768e-24 1.829949e-22 1.539068e-20 1.623359e-18 3.985091e-17 3.521057e-15 1.986472e-13 1.486597e-11 3.334896e-10 7.576041e-08 5.116867e-07 2.834710e-05 1.528768e-03 3.676275e-01 6.239253e-01 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-6.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-6.html"},{"title":"生物物理学 第2回","text":"講師： 樋口秀男 生命体（生物）の一般的定義 生物とは、以下の四つの条件を満たす物質システム 自己と外界との境界 エネルギーと物質の代謝 自己複製 恒常性 電子 分子 細胞数 整体の階層性 $10&#94;{28}$ $10&#94;{23}$ $10&#94;{13}$ ヒト 意識・運動・代謝 $10&#94;{24}$ $10&#94;{19}$ $10&#94;{9}$ 心臓 循環・拡散 $10&#94;{15}$ $10&#94;{10}$ $10&#94;{0}$ 心筋細胞 生理的なリズム単位 $10&#94;{5}$ $10&#94;{5}$ 筋節 ゆらぎを制した振動 $10&#94;{0}$ タンパク質 反応のゆらぎ $10&#94;{2}$ アミノ酸 タンパク質の性質の起源 $10&#94;{0}$ 電子 量子力学の支配領域 生命科学を覆う謎 生命誕生の謎（+生命の進化、分化の謎） タンパク質構造の決定と機能との関係の謎 細胞が超多種分子（タンパク質、脂質、小分子、イオン、…）の濃度・種類・機能の制御を行う謎 個体（臓器、器官等）の構造と機能構築の謎 生命誕生の謎 元素誕生は超新星の爆発→重金属ができる。 現宇宙の元素の割合と人体内の元素比が非常に似通っている。 RNAワールド プロテインワールド 原始地球上に存在したと仮定される、RNA からなる自己複製系のこと。また、これがかつて存在し、現生生物へと進化したという仮説。 まずアミノ酸ができ、重合してポリペプチド、さらにタンパク質が作り出され、これが触媒として働いて生命を作り出したという仮説。 生命誕生を示唆した実験事実 ミラーの放電によるアミノ酸合成(1953) $\\mathrm{CH_3,NH_3,H_2,H_2O}$ を含む気体に放電（落雷を模した）をする。 実験２週間後に以下の化合物 （アミノ酸） ができた。 グリシン アラニン グルタル酸 酢酸（脂肪酸） 塩基や糖（リボース）、核酸基、RNA、タンパク質なども化学合成可能。 生命基本物質の化学合成が成功した理由 地球には、エネルギーの高い（海底火山、紫外線、雷、高音）場所と低く安定な場所が共存していたので、分子は 高エネルギー環境で合成され、低エネルギー環境で安定化する ことができた。 $$A\\overset{k_1}{{\\longrightarrow}}B\\overset{k_2}{{\\longrightarrow}}C$$ In [1]: import numpy as np import matplotlib.pyplot as plt In [2]: def simulate ( ax , color , tp , A = 1 , B = 0 , C = 0 , dt = 1e-3 , k1 = 0.07 , k2 = 0.02 , K = 1 ): time = np . arange ( 0 , 100 , dt ) As = np . zeros ( shape = len ( time )) Bs = np . zeros ( shape = len ( time )) Cs = np . zeros ( shape = len ( time )) for i , t in enumerate ( time ): dA = ( - k1 * A ) * dt * K dB = ( k1 * A - k2 * B ) * dt * K dC = ( k2 * B ) * dt * K A += dA ; B += dB ; C += dC As [ i ] = A ; Bs [ i ] = B ; Cs [ i ] = C if t > tp : K = 1e-6 # 温度を下げ、反応速度が1e-6倍になったことをシミュレーション ax . plot ( time , As , color = color ) ax . plot ( time , Bs , color = color ) ax . plot ( time , Cs , color = color ) if tp < 100 : ax . vlines ( x = tp , ymin = 0 , ymax = 1 , linestyle = \":\" ) return ax In [3]: fig , ax = plt . subplots () ax = simulate ( ax = ax , color = \"red\" , tp = 20 ) ax = simulate ( ax = ax , color = \"black\" , tp = 100 ) ax . set_xlabel ( \"Time\" ) ax . set_ylabel ( \"RQ\" ) ax . set_title ( \"Simulation Result\" ) plt . show () 上記のシミュレーション結果から、$A,B$ 分子を得るためには、 途中で（温度が下がるなどの結果）反応速度が下がる必要がある ことがわかる。 生体分子が濃縮され、多次反応による分子合成速度が上がった。 地球は巨大で多様な反応槽であったため、合成確率が上がった。 考えられる生物 地球型炭素生物 地球環境のように水と二酸化炭素（あるいはメタン）が豊富な惑星であるなら、情報記憶（DNA）→伝令（mRNA）→機能（タンパク質、RNA）のような地球型の仕事を分担した炭素生物が生まれる可能性は高い。 炭素生物 vs ケイ素生物 常温常圧で安定な炭素ー炭素結合 とは違い、 ケイ素ーケイ素結合はパイ結合やシグマ結合による二重三重結合を作る傾向がほとんど無く、非常に不安定 である。 炭素ーケイ素結合は安定 なので、炭素生物の中にケイ素が含まれるだろう。したがって、ケイ素生物の存在する確率は非常に低い。 金属生物 常温において金属結合が安定であり、分子としての機能を持つことは困難であるため、生物の中心にはならないだろう。ただし、金属イオンや錯体として、炭素生物やケイ素生物に利用されることはありうる。 講義のまとめ 生命分子や細胞の種類は多く、構造や機能をどのように理解するかが、 生命科学全体の 課題である。 生命は 宇宙の元素を効率よく利用した。 地球上の 高↔︎低エネルギーを行き交い 、多様な環境や濃縮により高確率かつ安定的に生体分子が合成された。 これが生命の誕生の確率を大きくした。 初めにRNAが合成され、それを鋳型としてタンパク質が合成され、原子生命が誕生したと想像される。 系外惑星にも、炭素生命体が存在する可能性がある。 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物物理学","url":"https://iwasakishuto.github.io/University/3A/生物物理学-2.html","loc":"https://iwasakishuto.github.io/University/3A/生物物理学-2.html"},{"title":"ペアワイズアラインメント","text":"ペアワイズアラインメントとは 2本のDNAの塩基配列（タンパク質のアミノ酸配列）を比較する方法の一つ バイオインフォマティクスでは最も基本的な解析手法 なぜDNA配列の比較をするのか DNAの機能を知りたい （∵ DNAの配列が似ていると機能が似ている） DNAのどの部分が重要かを知りたい。 （∵ 「保存されている＝重要」だと考えられる） 生物の進化系統樹を知りたい 新型シーケンサーで読まれたDNAの由来を知りたい DNAの変異や新型シークエンサーの読み取りエラーでは 長さが異なる ことがあるので、 長さの変化を考慮し効率の良い動的計画法 を用いる アラインメントの種類 説明 例 グローバルアラインメント 2本の配列の 全体 をアラインメントする。 Needleman-Wunsch ローカルアラインメント 2本の配列の 似ている部分を検出 し、その部分をアランメントする Smith-Waterman 実装 各種アラインメントを実装していく。なお、全て Affine gap penalty を利用する。 In [1]: from kerasy.Bio.alignment import NeedlemanWunshGotoh , SmithWaterman , BackwardNeedlemanWunshGotoh In [2]: # サンプル配列 seqX = \"GGAGTGAGGGGAGCAGTTGGGCTGAAGATGGTCAACGCCGAGGGAACGGTAAAGGCGACGGAGCTGTGGCAGACCTGGCTTCCTAACCACGTCCCGTGTTTTGCGGCTCCGCGAGGACTG\" seqY = \"CGCATGCGGAGTGAGGGGAGCAGTTGGGAACAGATGGTCCCGCCGAGGGACCGGTGGGCAGACGGGGCCAGCTGTGGCAGACACTGGCTTCTAACCACCGAACGTTCTTTCCGCTCCGC\" Needleman-Wunsch-Gotoh 自作のモジュール （ kerasy.Bio.alignment.NeedlemanWunshGotoh ） を使ってアラインメントをします。 In [3]: model = NeedlemanWunshGotoh () In [4]: model . align ( seqX , seqY ) Needleman-Wunsh-Gotoh Alignment score: 14.0 |parameter |value| ----------------------------- |match | 1| |mimatch | -1| |gap opening penalty | 5| |gap extension penalty| 1| =============================================================== X: -------GGAGTGAGGGGAGCAGTTGGGCTGAAGATGGTCAACGCCGAGGGAACGGTAAA Y: CGCATGCGGAGTGAGGGGAGCAGTTGGG-AACAGATGGTC-CCGCCGAGGGACCGGT-GG X: GGCGACGG----AGCTGTGGCAGAC-CTGGCTTCCTAACCACGTCCCGTGTTTTGCGGCT Y: GCAGACGGGGCCAGCTGTGGCAGACACTGGCTT-CTAACCACCGAACGT-TCTTTCCGCT X: CCGCGAGGACTG Y: CCGC-------- =============================================================== Smith-Waterman 自作のモジュール （ kerasy.Bio.alignment.SmithWaterman ） を使ってアラインメントをします。 In [5]: model = SmithWaterman () In [6]: model . align ( seqX , seqY ) Smith-Waterman Alignment score: 37.0 |parameter |value| ----------------------------- |match | 1| |mimatch | -1| |gap opening penalty | 5| |gap extension penalty| 1| =============================================================== Aligned positions: X[0,111] Y[7,118] X: GGAGTGAGGGGAGCAGTTGGGCTGAAGATGGTCAACGCCGAGGGAACGGTAAAGGCGACG Y: GGAGTGAGGGGAGCAGTTGGG-AACAGATGGTC-CCGCCGAGGGACCGGT-GGGCAGACG X: G----AGCTGTGGCAGAC-CTGGCTTCCTAACCACGTCCCGTGTTTTGCGGCTCCGC Y: GGGCCAGCTGTGGCAGACACTGGCTT-CTAACCACCGAACGT-TCTTTCCGCTCCGC =============================================================== 制約付きアラインメント $x_i$ と $y_j$ がアラインされるという制約下で最大のアラインメントスコアを求める。 全てのパターンを列挙すると $\\mathcal{O}(n&#94;2m&#94;2)$ の時間がかかるが、 後ろ向きアラインメント と組み合わせることで全てのパターンを $\\mathcal{O}(nm)$ で計算可能。 前向き：xiとyjがアラインされる時の、iまでとjまでの配列の最大アラインメントスコアを保持。 後ろ向き：xiとyjがアラインされる時の、i+1以降とj+1以降の配列の最大アラインメントスコアを保持。 Needleman-Wunsch-Gotohの逆向きアラインメントは （ kerasy.Bio.alignment.BackwardNeedlemanWunshGotoh ） に定義してあります。 In [7]: model_forward = NeedlemanWunshGotoh () model_backward = BackwardNeedlemanWunshGotoh () In [8]: model_forward . align ( seqX , seqY , memorize = True ) Needleman-Wunsh-Gotoh Alignment score: 14.0 |parameter |value| ----------------------------- |match | 1| |mimatch | -1| |gap opening penalty | 5| |gap extension penalty| 1| =============================================================== X: -------GGAGTGAGGGGAGCAGTTGGGCTGAAGATGGTCAACGCCGAGGGAACGGTAAA Y: CGCATGCGGAGTGAGGGGAGCAGTTGGG-AACAGATGGTC-CCGCCGAGGGACCGGT-GG X: GGCGACGG----AGCTGTGGCAGAC-CTGGCTTCCTAACCACGTCCCGTGTTTTGCGGCT Y: GCAGACGGGGCCAGCTGTGGCAGACACTGGCTT-CTAACCACCGAACGT-TCTTTCCGCT X: CCGCGAGGACTG Y: CCGC-------- =============================================================== In [9]: model_backward . align ( seqX , seqY , memorize = True ) Backward Needleman-Wunsh-Gotoh Alignment score: 14.0 |parameter |value| ----------------------------- |match | 1| |mimatch | -1| |gap opening penalty | 5| |gap extension penalty| 1| =============================================================== X: -------GGAGTGAGGGGAGCAGTTGGGCTGAAGATGGTCAACGCCGAGGGAACGGTAAA Y: CGCATGCGGAGTGAGGGGAGCAGTTGGGAACA-GATGGTCC-CGCCGAGGGACCGGTGG- X: GGCGACGG----AGCTGTGGCAGAC-CTGGCTTCCTAACCACGTCCCGTGTTTTGCGGCT Y: GCAGACGGGGCCAGCTGTGGCAGACACTGGCTTC-TAACCACCGAACGTTCTTTCCG-CT X: CCGCGAGGACT Y: CCGC------- =============================================================== In [10]: k = 3 n = len ( seqX ) + 1 m = len ( seqY ) + 1 In [11]: M = model_forward . DP . reshape (( k , n , m ))[ 0 , 1 :, 1 :] bM = model_backward . DP . reshape (( k , n , m ))[ 0 , 1 :, 1 :] In [12]: A = M + bM In [13]: # 上の配列を見れば、seqX[0] と seqY[7] がアラインされている時に最大スコア14を取ることがわかるので、それを確かめる。 print ( A [ 0 , 7 ]) 14.0 In [14]: # 可視化のために pandas を使用。 import pandas as pd pd . set_option ( 'display.max_rows' , m ) pd . set_option ( 'display.max_columns' , n ) In [15]: df = pd . DataFrame ( A ) In [16]: df Out[16]: .dataframe thead tr:only-child th { text-align: right; } .dataframe thead th { text-align: left; } .dataframe tbody tr th { vertical-align: top; } 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 0 12.0 10.0 8.0 8.0 8.0 10.0 8.0 14.0 7.0 2.0 1.0 -4.0 -5.0 -10.0 -11.0 -14.0 -17.0 -20.0 -25.0 -26.0 -31.0 -34.0 -35.0 -38.0 -39.0 -40.0 -41.0 -44.0 -49.0 -50.0 -51.0 -54.0 -55.0 -60.0 -63.0 -64.0 -67.0 -70.0 -71.0 -72.0 -75.0 -76.0 -79.0 -76.0 -81.0 -80.0 -83.0 -84.0 -89.0 -92.0 -93.0 -94.0 -95.0 -98.0 -101.0 -100.0 -103.0 -106.0 -111.0 -112.0 -113.0 -118.0 -117.0 -118.0 -119.0 -122.0 -125.0 -128.0 -129.0 -132.0 -133.0 -138.0 -141.0 -142.0 -147.0 -148.0 -150.0 -156.0 -156.0 -159.0 -160.0 -163.0 -164.0 -167.0 -170.0 -171.0 -174.0 -177.0 -180.0 -181.0 -184.0 -187.0 -190.0 -193.0 -194.0 -197.0 -198.0 -201.0 -200.0 -203.0 -206.0 -209.0 -210.0 -211.0 -214.0 -217.0 -218.0 -221.0 -224.0 -225.0 -228.0 -229.0 -230.0 -235.0 -238.0 -241.0 -242.0 -243.0 -246.0 1 5.0 12.0 8.0 6.0 6.0 8.0 8.0 8.0 14.0 5.0 2.0 -1.0 -4.0 -7.0 -10.0 -11.0 -14.0 -17.0 -22.0 -25.0 -26.0 -33.0 -34.0 -35.0 -38.0 -39.0 -40.0 -41.0 -44.0 -49.0 -50.0 -53.0 -54.0 -57.0 -62.0 -63.0 -64.0 -67.0 -70.0 -71.0 -72.0 -75.0 -76.0 -79.0 -76.0 -81.0 -80.0 -83.0 -84.0 -89.0 -92.0 -93.0 -94.0 -95.0 -98.0 -101.0 -100.0 -103.0 -106.0 -111.0 -112.0 -113.0 -118.0 -117.0 -118.0 -119.0 -122.0 -125.0 -128.0 -131.0 -132.0 -135.0 -140.0 -141.0 -144.0 -147.0 -148.0 -150.0 -157.0 -156.0 -159.0 -160.0 -163.0 -166.0 -169.0 -170.0 -171.0 -174.0 -179.0 -180.0 -183.0 -186.0 -189.0 -192.0 -193.0 -194.0 -197.0 -200.0 -201.0 -200.0 -203.0 -206.0 -211.0 -210.0 -211.0 -216.0 -217.0 -220.0 -223.0 -224.0 -227.0 -228.0 -229.0 -232.0 -237.0 -240.0 -243.0 -242.0 -243.0 2 2.0 3.0 10.0 8.0 6.0 6.0 6.0 6.0 6.0 14.0 3.0 0.0 -3.0 -4.0 -9.0 -12.0 -13.0 -16.0 -17.0 -24.0 -27.0 -26.0 -31.0 -34.0 -35.0 -38.0 -41.0 -42.0 -41.0 -44.0 -47.0 -48.0 -53.0 -54.0 -59.0 -60.0 -65.0 -64.0 -67.0 -68.0 -69.0 -70.0 -75.0 -76.0 -79.0 -76.0 -83.0 -80.0 -85.0 -84.0 -89.0 -90.0 -91.0 -96.0 -95.0 -98.0 -101.0 -100.0 -105.0 -106.0 -111.0 -112.0 -113.0 -116.0 -117.0 -118.0 -121.0 -122.0 -125.0 -126.0 -131.0 -134.0 -137.0 -140.0 -143.0 -146.0 -149.0 -150.0 -150.0 -157.0 -156.0 -159.0 -158.0 -163.0 -166.0 -169.0 -172.0 -171.0 -176.0 -177.0 -180.0 -183.0 -184.0 -187.0 -190.0 -193.0 -192.0 -197.0 -198.0 -201.0 -200.0 -203.0 -204.0 -209.0 -210.0 -213.0 -214.0 -217.0 -220.0 -221.0 -224.0 -225.0 -228.0 -231.0 -234.0 -237.0 -238.0 -241.0 -242.0 3 -1.0 2.0 3.0 8.0 6.0 6.0 4.0 6.0 6.0 4.0 14.0 1.0 0.0 -5.0 -4.0 -9.0 -12.0 -13.0 -18.0 -17.0 -24.0 -29.0 -26.0 -31.0 -34.0 -35.0 -38.0 -41.0 -42.0 -41.0 -44.0 -49.0 -48.0 -55.0 -56.0 -59.0 -60.0 -65.0 -64.0 -67.0 -68.0 -69.0 -70.0 -75.0 -76.0 -79.0 -76.0 -83.0 -80.0 -85.0 -84.0 -89.0 -90.0 -91.0 -96.0 -95.0 -98.0 -101.0 -100.0 -105.0 -106.0 -111.0 -112.0 -113.0 -116.0 -117.0 -118.0 -121.0 -122.0 -127.0 -126.0 -133.0 -136.0 -137.0 -142.0 -143.0 -146.0 -150.0 -151.0 -150.0 -157.0 -156.0 -159.0 -160.0 -165.0 -166.0 -169.0 -172.0 -171.0 -176.0 -179.0 -182.0 -185.0 -186.0 -187.0 -192.0 -193.0 -192.0 -197.0 -198.0 -201.0 -202.0 -205.0 -204.0 -209.0 -212.0 -213.0 -216.0 -217.0 -220.0 -223.0 -224.0 -225.0 -230.0 -233.0 -236.0 -239.0 -238.0 -241.0 4 -4.0 -3.0 0.0 1.0 8.0 4.0 4.0 2.0 4.0 4.0 2.0 14.0 1.0 -2.0 -5.0 -6.0 -11.0 -14.0 -15.0 -20.0 -19.0 -22.0 -27.0 -26.0 -29.0 -34.0 -35.0 -38.0 -41.0 -42.0 -41.0 -46.0 -49.0 -50.0 -53.0 -58.0 -61.0 -60.0 -63.0 -64.0 -67.0 -66.0 -69.0 -68.0 -75.0 -76.0 -79.0 -76.0 -83.0 -80.0 -85.0 -84.0 -87.0 -92.0 -91.0 -94.0 -95.0 -100.0 -103.0 -100.0 -105.0 -106.0 -109.0 -112.0 -113.0 -116.0 -119.0 -118.0 -121.0 -124.0 -127.0 -128.0 -131.0 -136.0 -137.0 -142.0 -145.0 -148.0 -148.0 -153.0 -150.0 -155.0 -156.0 -159.0 -160.0 -165.0 -168.0 -169.0 -170.0 -171.0 -176.0 -177.0 -182.0 -185.0 -186.0 -189.0 -190.0 -193.0 -192.0 -197.0 -198.0 -201.0 -202.0 -205.0 -204.0 -207.0 -210.0 -211.0 -214.0 -215.0 -220.0 -221.0 -224.0 -227.0 -228.0 -233.0 -234.0 -237.0 -238.0 5 -7.0 -4.0 -3.0 -2.0 -1.0 8.0 2.0 4.0 4.0 2.0 4.0 2.0 14.0 1.0 0.0 -3.0 -6.0 -9.0 -14.0 -15.0 -20.0 -21.0 -20.0 -25.0 -26.0 -29.0 -32.0 -33.0 -36.0 -39.0 -40.0 -43.0 -44.0 -49.0 -52.0 -53.0 -56.0 -59.0 -60.0 -61.0 -64.0 -65.0 -64.0 -67.0 -66.0 -73.0 -74.0 -77.0 -76.0 -81.0 -78.0 -83.0 -84.0 -85.0 -90.0 -91.0 -92.0 -95.0 -98.0 -101.0 -98.0 -103.0 -106.0 -107.0 -110.0 -111.0 -114.0 -117.0 -118.0 -121.0 -122.0 -127.0 -130.0 -131.0 -136.0 -137.0 -140.0 -144.0 -147.0 -146.0 -151.0 -150.0 -153.0 -156.0 -159.0 -160.0 -163.0 -166.0 -169.0 -170.0 -173.0 -176.0 -179.0 -182.0 -183.0 -184.0 -187.0 -190.0 -191.0 -190.0 -195.0 -198.0 -201.0 -200.0 -203.0 -206.0 -207.0 -210.0 -213.0 -214.0 -217.0 -218.0 -219.0 -224.0 -227.0 -230.0 -233.0 -232.0 -235.0 6 -10.0 -9.0 -6.0 -3.0 -4.0 -1.0 6.0 2.0 2.0 4.0 2.0 2.0 2.0 14.0 1.0 -2.0 -5.0 -8.0 -9.0 -14.0 -17.0 -18.0 -23.0 -20.0 -23.0 -28.0 -31.0 -34.0 -33.0 -34.0 -37.0 -38.0 -43.0 -44.0 -49.0 -52.0 -55.0 -56.0 -57.0 -58.0 -61.0 -64.0 -66.0 -62.0 -65.0 -66.0 -71.0 -74.0 -77.0 -76.0 -79.0 -76.0 -81.0 -84.0 -85.0 -88.0 -91.0 -94.0 -97.0 -96.0 -99.0 -98.0 -101.0 -104.0 -107.0 -110.0 -113.0 -114.0 -115.0 -116.0 -121.0 -124.0 -127.0 -130.0 -133.0 -136.0 -139.0 -141.0 -142.0 -147.0 -146.0 -149.0 -148.0 -153.0 -156.0 -159.0 -162.0 -163.0 -166.0 -167.0 -170.0 -173.0 -174.0 -177.0 -180.0 -183.0 -182.0 -187.0 -188.0 -191.0 -190.0 -193.0 -196.0 -199.0 -200.0 -203.0 -204.0 -207.0 -210.0 -211.0 -214.0 -215.0 -218.0 -221.0 -224.0 -227.0 -228.0 -231.0 -232.0 7 -13.0 -10.0 -9.0 -8.0 -5.0 -2.0 -1.0 6.0 2.0 0.0 4.0 0.0 2.0 1.0 14.0 3.0 0.0 -3.0 -8.0 -9.0 -14.0 -17.0 -18.0 -22.0 -18.0 -21.0 -26.0 -29.0 -32.0 -33.0 -34.0 -37.0 -38.0 -43.0 -46.0 -47.0 -50.0 -53.0 -54.0 -55.0 -58.0 -59.0 -64.0 -64.0 -60.0 -63.0 -66.0 -69.0 -72.0 -75.0 -76.0 -77.0 -74.0 -79.0 -82.0 -83.0 -86.0 -89.0 -94.0 -95.0 -96.0 -97.0 -98.0 -99.0 -102.0 -105.0 -108.0 -111.0 -112.0 -115.0 -116.0 -121.0 -124.0 -125.0 -130.0 -131.0 -134.0 -139.0 -139.0 -142.0 -145.0 -146.0 -147.0 -150.0 -153.0 -154.0 -157.0 -160.0 -163.0 -164.0 -167.0 -170.0 -173.0 -176.0 -177.0 -180.0 -181.0 -184.0 -185.0 -186.0 -189.0 -192.0 -193.0 -194.0 -197.0 -200.0 -201.0 -204.0 -207.0 -208.0 -211.0 -212.0 -213.0 -218.0 -221.0 -224.0 -225.0 -226.0 -229.0 8 -16.0 -13.0 -12.0 -11.0 -10.0 -5.0 -4.0 -1.0 6.0 0.0 2.0 2.0 2.0 0.0 3.0 14.0 3.0 0.0 -5.0 -6.0 -11.0 -14.0 -15.0 -18.0 -21.0 -16.0 -21.0 -26.0 -29.0 -30.0 -31.0 -34.0 -35.0 -40.0 -41.0 -44.0 -47.0 -50.0 -51.0 -52.0 -55.0 -56.0 -59.0 -64.0 -62.0 -60.0 -61.0 -66.0 -69.0 -72.0 -75.0 -74.0 -75.0 -74.0 -79.0 -80.0 -83.0 -86.0 -91.0 -92.0 -93.0 -96.0 -95.0 -96.0 -99.0 -102.0 -105.0 -108.0 -109.0 -112.0 -113.0 -118.0 -121.0 -122.0 -127.0 -128.0 -131.0 -135.0 -138.0 -137.0 -142.0 -143.0 -144.0 -147.0 -150.0 -151.0 -154.0 -157.0 -160.0 -161.0 -164.0 -167.0 -170.0 -173.0 -174.0 -177.0 -178.0 -179.0 -182.0 -183.0 -186.0 -189.0 -190.0 -191.0 -194.0 -197.0 -198.0 -201.0 -204.0 -205.0 -208.0 -209.0 -210.0 -215.0 -218.0 -221.0 -222.0 -223.0 -226.0 9 -19.0 -16.0 -15.0 -14.0 -13.0 -8.0 -7.0 -4.0 -1.0 4.0 2.0 0.0 2.0 0.0 2.0 3.0 14.0 3.0 -2.0 -3.0 -8.0 -11.0 -12.0 -17.0 -16.0 -19.0 -16.0 -21.0 -26.0 -27.0 -28.0 -31.0 -32.0 -37.0 -40.0 -39.0 -44.0 -47.0 -48.0 -49.0 -52.0 -53.0 -58.0 -57.0 -62.0 -62.0 -58.0 -61.0 -66.0 -69.0 -72.0 -73.0 -72.0 -75.0 -74.0 -77.0 -80.0 -83.0 -88.0 -89.0 -90.0 -95.0 -94.0 -93.0 -96.0 -99.0 -102.0 -105.0 -106.0 -109.0 -110.0 -115.0 -118.0 -119.0 -124.0 -125.0 -128.0 -132.0 -133.0 -136.0 -137.0 -140.0 -141.0 -144.0 -147.0 -148.0 -151.0 -154.0 -157.0 -158.0 -161.0 -164.0 -167.0 -170.0 -171.0 -174.0 -175.0 -178.0 -177.0 -180.0 -183.0 -186.0 -187.0 -188.0 -191.0 -194.0 -195.0 -198.0 -201.0 -202.0 -205.0 -206.0 -207.0 -212.0 -215.0 -218.0 -219.0 -220.0 -223.0 10 -22.0 -19.0 -18.0 -17.0 -16.0 -11.0 -10.0 -7.0 -4.0 -3.0 4.0 0.0 0.0 0.0 0.0 2.0 3.0 14.0 1.0 0.0 -5.0 -8.0 -9.0 -14.0 -15.0 -14.0 -19.0 -16.0 -21.0 -24.0 -25.0 -28.0 -29.0 -34.0 -37.0 -38.0 -39.0 -44.0 -45.0 -46.0 -49.0 -50.0 -55.0 -58.0 -55.0 -62.0 -60.0 -58.0 -61.0 -66.0 -69.0 -70.0 -71.0 -72.0 -77.0 -72.0 -77.0 -80.0 -83.0 -88.0 -87.0 -90.0 -93.0 -92.0 -93.0 -96.0 -99.0 -102.0 -103.0 -106.0 -107.0 -112.0 -115.0 -116.0 -121.0 -122.0 -125.0 -129.0 -130.0 -131.0 -136.0 -135.0 -138.0 -141.0 -144.0 -145.0 -148.0 -151.0 -154.0 -155.0 -158.0 -161.0 -162.0 -167.0 -168.0 -169.0 -172.0 -175.0 -176.0 -175.0 -180.0 -183.0 -186.0 -185.0 -188.0 -191.0 -192.0 -195.0 -198.0 -199.0 -202.0 -203.0 -204.0 -209.0 -212.0 -213.0 -218.0 -217.0 -220.0 11 -22.0 -24.0 -21.0 -18.0 -19.0 -16.0 -12.0 -12.0 -9.0 -4.0 -5.0 2.0 -2.0 0.0 -2.0 -2.0 0.0 1.0 14.0 1.0 -2.0 -3.0 -8.0 -11.0 -12.0 -13.0 -14.0 -19.0 -16.0 -19.0 -22.0 -23.0 -28.0 -29.0 -34.0 -37.0 -38.0 -39.0 -42.0 -43.0 -46.0 -49.0 -52.0 -55.0 -58.0 -55.0 -60.0 -60.0 -58.0 -61.0 -66.0 -67.0 -68.0 -71.0 -74.0 -75.0 -72.0 -79.0 -82.0 -81.0 -86.0 -87.0 -88.0 -91.0 -92.0 -93.0 -96.0 -99.0 -100.0 -101.0 -106.0 -109.0 -112.0 -115.0 -118.0 -120.0 -124.0 -127.0 -127.0 -128.0 -131.0 -134.0 -133.0 -138.0 -141.0 -142.0 -147.0 -148.0 -151.0 -152.0 -155.0 -158.0 -159.0 -160.0 -165.0 -168.0 -167.0 -172.0 -173.0 -176.0 -175.0 -178.0 -181.0 -184.0 -185.0 -188.0 -189.0 -192.0 -195.0 -196.0 -199.0 -200.0 -203.0 -206.0 -209.0 -212.0 -211.0 -216.0 -217.0 12 -28.0 -22.0 -24.0 -23.0 -20.0 -17.0 -16.0 -12.0 -10.0 -9.0 -4.0 -4.0 2.0 -4.0 0.0 -2.0 -2.0 0.0 1.0 14.0 1.0 -2.0 -3.0 -8.0 -9.0 -10.0 -11.0 -12.0 -17.0 -16.0 -19.0 -22.0 -23.0 -28.0 -31.0 -32.0 -35.0 -36.0 -37.0 -40.0 -43.0 -44.0 -49.0 -52.0 -53.0 -56.0 -55.0 -58.0 -58.0 -56.0 -61.0 -64.0 -65.0 -66.0 -71.0 -72.0 -73.0 -70.0 -79.0 -80.0 -81.0 -84.0 -87.0 -86.0 -89.0 -90.0 -91.0 -94.0 -97.0 -100.0 -101.0 -106.0 -109.0 -110.0 -115.0 -116.0 -118.0 -124.0 -126.0 -127.0 -126.0 -131.0 -132.0 -135.0 -138.0 -139.0 -140.0 -145.0 -148.0 -149.0 -152.0 -155.0 -158.0 -159.0 -160.0 -165.0 -166.0 -167.0 -170.0 -171.0 -174.0 -177.0 -180.0 -179.0 -182.0 -183.0 -186.0 -189.0 -192.0 -193.0 -194.0 -197.0 -198.0 -203.0 -206.0 -209.0 -212.0 -209.0 -214.0 13 -29.0 -30.0 -22.0 -26.0 -25.0 -22.0 -17.0 -17.0 -12.0 -12.0 -10.0 -6.0 -4.0 0.0 -4.0 -2.0 -4.0 -3.0 -2.0 2.0 14.0 1.0 -2.0 -5.0 -6.0 -9.0 -12.0 -11.0 -12.0 -15.0 -14.0 -19.0 -22.0 -25.0 -28.0 -31.0 -34.0 -35.0 -34.0 -35.0 -38.0 -43.0 -44.0 -47.0 -50.0 -53.0 -54.0 -55.0 -58.0 -60.0 -54.0 -59.0 -64.0 -65.0 -68.0 -71.0 -72.0 -75.0 -70.0 -77.0 -78.0 -81.0 -82.0 -85.0 -88.0 -89.0 -92.0 -91.0 -92.0 -97.0 -100.0 -101.0 -106.0 -109.0 -112.0 -115.0 -118.0 -118.0 -123.0 -124.0 -127.0 -124.0 -129.0 -130.0 -135.0 -138.0 -141.0 -140.0 -145.0 -146.0 -147.0 -152.0 -155.0 -158.0 -157.0 -158.0 -163.0 -164.0 -165.0 -168.0 -171.0 -172.0 -175.0 -178.0 -179.0 -182.0 -181.0 -186.0 -189.0 -190.0 -191.0 -192.0 -197.0 -198.0 -203.0 -204.0 -207.0 -210.0 -209.0 14 -33.0 -30.0 -29.0 -22.0 -27.0 -25.0 -21.0 -18.0 -15.0 -10.0 -12.0 -8.0 -8.0 -2.0 -1.0 -5.0 -3.0 -6.0 -2.0 -2.0 4.0 14.0 1.0 -2.0 -3.0 -6.0 -7.0 -10.0 -9.0 -10.0 -13.0 -14.0 -19.0 -20.0 -25.0 -26.0 -31.0 -32.0 -33.0 -34.0 -37.0 -40.0 -43.0 -44.0 -49.0 -48.0 -51.0 -52.0 -53.0 -56.0 -58.0 -54.0 -59.0 -62.0 -65.0 -66.0 -69.0 -72.0 -73.0 -70.0 -75.0 -76.0 -79.0 -82.0 -83.0 -86.0 -89.0 -90.0 -91.0 -92.0 -97.0 -100.0 -103.0 -106.0 -109.0 -112.0 -115.0 -118.0 -118.0 -123.0 -122.0 -125.0 -124.0 -129.0 -132.0 -135.0 -136.0 -139.0 -142.0 -143.0 -146.0 -149.0 -150.0 -153.0 -156.0 -159.0 -158.0 -163.0 -164.0 -167.0 -166.0 -169.0 -170.0 -175.0 -176.0 -179.0 -180.0 -183.0 -186.0 -187.0 -190.0 -191.0 -194.0 -197.0 -200.0 -203.0 -204.0 -207.0 -208.0 15 -34.0 -33.0 -30.0 -29.0 -22.0 -25.0 -24.0 -21.0 -18.0 -13.0 -10.0 -10.0 -8.0 -9.0 -2.0 -1.0 -5.0 -3.0 -7.0 -2.0 -1.0 6.0 14.0 3.0 0.0 -1.0 -4.0 -5.0 -8.0 -9.0 -10.0 -13.0 -14.0 -19.0 -22.0 -23.0 -24.0 -29.0 -30.0 -31.0 -34.0 -35.0 -40.0 -41.0 -42.0 -47.0 -48.0 -49.0 -50.0 -51.0 -56.0 -57.0 -52.0 -57.0 -62.0 -63.0 -64.0 -67.0 -70.0 -73.0 -70.0 -73.0 -76.0 -77.0 -80.0 -81.0 -84.0 -87.0 -88.0 -91.0 -92.0 -97.0 -100.0 -101.0 -106.0 -107.0 -110.0 -115.0 -117.0 -118.0 -121.0 -122.0 -123.0 -126.0 -129.0 -130.0 -133.0 -134.0 -137.0 -140.0 -143.0 -146.0 -149.0 -152.0 -153.0 -156.0 -157.0 -160.0 -161.0 -162.0 -165.0 -168.0 -169.0 -168.0 -173.0 -176.0 -177.0 -178.0 -181.0 -184.0 -187.0 -188.0 -189.0 -194.0 -197.0 -200.0 -203.0 -202.0 -205.0 16 -37.0 -34.0 -33.0 -30.0 -29.0 -22.0 -25.0 -24.0 -21.0 -18.0 -13.0 -10.0 -10.0 -8.0 -9.0 -2.0 -1.0 -5.0 -3.0 -5.0 -2.0 1.0 8.0 14.0 5.0 2.0 -3.0 -4.0 -5.0 -6.0 -7.0 -10.0 -13.0 -14.0 -17.0 -22.0 -23.0 -24.0 -27.0 -28.0 -31.0 -34.0 -37.0 -40.0 -39.0 -42.0 -45.0 -48.0 -49.0 -50.0 -49.0 -54.0 -55.0 -52.0 -57.0 -62.0 -63.0 -66.0 -67.0 -70.0 -71.0 -70.0 -71.0 -74.0 -79.0 -80.0 -83.0 -84.0 -85.0 -88.0 -91.0 -94.0 -95.0 -100.0 -101.0 -106.0 -109.0 -112.0 -114.0 -117.0 -118.0 -119.0 -120.0 -123.0 -124.0 -129.0 -132.0 -133.0 -132.0 -135.0 -140.0 -141.0 -146.0 -149.0 -150.0 -153.0 -154.0 -157.0 -158.0 -161.0 -162.0 -165.0 -168.0 -167.0 -168.0 -171.0 -174.0 -175.0 -176.0 -179.0 -184.0 -185.0 -188.0 -191.0 -192.0 -197.0 -200.0 -201.0 -202.0 17 -38.0 -37.0 -32.0 -33.0 -30.0 -29.0 -22.0 -25.0 -23.0 -19.0 -19.0 -11.0 -11.0 -8.0 -8.0 -9.0 -2.0 -3.0 -5.0 -3.0 -5.0 0.0 1.0 10.0 14.0 5.0 4.0 -1.0 -2.0 -3.0 -4.0 -7.0 -10.0 -13.0 -12.0 -17.0 -22.0 -21.0 -24.0 -25.0 -28.0 -31.0 -34.0 -35.0 -38.0 -37.0 -40.0 -43.0 -46.0 -47.0 -48.0 -47.0 -52.0 -53.0 -50.0 -57.0 -60.0 -63.0 -64.0 -65.0 -68.0 -69.0 -68.0 -69.0 -72.0 -77.0 -80.0 -81.0 -82.0 -85.0 -88.0 -91.0 -92.0 -97.0 -98.0 -103.0 -106.0 -108.0 -111.0 -114.0 -115.0 -116.0 -117.0 -120.0 -121.0 -126.0 -129.0 -130.0 -131.0 -132.0 -137.0 -138.0 -143.0 -146.0 -147.0 -150.0 -151.0 -154.0 -155.0 -158.0 -159.0 -162.0 -163.0 -166.0 -165.0 -168.0 -171.0 -172.0 -175.0 -176.0 -181.0 -182.0 -185.0 -188.0 -189.0 -194.0 -195.0 -198.0 -199.0 18 -39.0 -38.0 -37.0 -32.0 -35.0 -30.0 -27.0 -22.0 -23.0 -22.0 -19.0 -18.0 -11.0 -12.0 -8.0 -8.0 -7.0 -2.0 -3.0 -5.0 -3.0 -3.0 2.0 3.0 10.0 14.0 7.0 6.0 1.0 0.0 -1.0 -4.0 -5.0 -10.0 -13.0 -12.0 -15.0 -20.0 -21.0 -22.0 -25.0 -26.0 -31.0 -34.0 -33.0 -36.0 -35.0 -38.0 -41.0 -46.0 -45.0 -46.0 -45.0 -50.0 -51.0 -50.0 -55.0 -58.0 -61.0 -62.0 -63.0 -68.0 -67.0 -66.0 -67.0 -70.0 -75.0 -78.0 -79.0 -82.0 -83.0 -88.0 -91.0 -92.0 -96.0 -98.0 -101.0 -106.0 -106.0 -109.0 -112.0 -113.0 -114.0 -117.0 -118.0 -121.0 -124.0 -127.0 -130.0 -131.0 -134.0 -137.0 -140.0 -143.0 -144.0 -147.0 -148.0 -151.0 -152.0 -153.0 -156.0 -159.0 -160.0 -161.0 -164.0 -167.0 -168.0 -171.0 -174.0 -175.0 -178.0 -179.0 -180.0 -185.0 -188.0 -189.0 -192.0 -193.0 -196.0 19 -40.0 -39.0 -38.0 -37.0 -32.0 -33.0 -30.0 -27.0 -22.0 -24.0 -22.0 -19.0 -18.0 -11.0 -12.0 -8.0 -8.0 -7.0 -2.0 -3.0 -7.0 -2.0 -1.0 2.0 5.0 12.0 14.0 7.0 6.0 3.0 2.0 -1.0 -2.0 -7.0 -10.0 -11.0 -12.0 -15.0 -18.0 -19.0 -22.0 -23.0 -28.0 -31.0 -32.0 -33.0 -34.0 -35.0 -38.0 -41.0 -44.0 -43.0 -44.0 -45.0 -50.0 -49.0 -50.0 -55.0 -58.0 -59.0 -60.0 -65.0 -66.0 -65.0 -66.0 -67.0 -70.0 -75.0 -76.0 -79.0 -80.0 -85.0 -88.0 -89.0 -94.0 -94.0 -98.0 -103.0 -105.0 -104.0 -109.0 -110.0 -111.0 -114.0 -117.0 -116.0 -121.0 -124.0 -127.0 -128.0 -131.0 -134.0 -137.0 -140.0 -141.0 -142.0 -145.0 -148.0 -149.0 -150.0 -153.0 -156.0 -157.0 -158.0 -161.0 -164.0 -165.0 -168.0 -171.0 -172.0 -175.0 -176.0 -177.0 -182.0 -185.0 -188.0 -187.0 -190.0 -193.0 20 -45.0 -40.0 -39.0 -40.0 -39.0 -30.0 -33.0 -30.0 -27.0 -22.0 -24.0 -22.0 -19.0 -18.0 -11.0 -12.0 -8.0 -8.0 -9.0 -2.0 -5.0 -7.0 0.0 -1.0 4.0 7.0 12.0 14.0 7.0 8.0 5.0 2.0 1.0 -4.0 -7.0 -8.0 -11.0 -12.0 -13.0 -16.0 -19.0 -20.0 -25.0 -28.0 -29.0 -32.0 -31.0 -34.0 -35.0 -38.0 -39.0 -42.0 -41.0 -44.0 -45.0 -48.0 -49.0 -50.0 -55.0 -58.0 -57.0 -60.0 -63.0 -64.0 -65.0 -66.0 -67.0 -70.0 -73.0 -76.0 -77.0 -82.0 -85.0 -86.0 -91.0 -92.0 -94.0 -100.0 -102.0 -103.0 -104.0 -107.0 -108.0 -111.0 -114.0 -115.0 -116.0 -121.0 -124.0 -125.0 -128.0 -131.0 -134.0 -135.0 -138.0 -141.0 -140.0 -143.0 -146.0 -147.0 -150.0 -153.0 -154.0 -155.0 -158.0 -159.0 -162.0 -165.0 -168.0 -169.0 -170.0 -173.0 -174.0 -179.0 -182.0 -185.0 -188.0 -185.0 -190.0 21 -44.0 -45.0 -40.0 -39.0 -40.0 -37.0 -30.0 -33.0 -30.0 -27.0 -22.0 -25.0 -22.0 -19.0 -18.0 -11.0 -12.0 -8.0 -8.0 -9.0 -2.0 -5.0 -5.0 0.0 1.0 6.0 7.0 12.0 14.0 9.0 10.0 5.0 2.0 -1.0 -4.0 -7.0 -8.0 -11.0 -10.0 -11.0 -14.0 -19.0 -20.0 -23.0 -28.0 -29.0 -30.0 -31.0 -34.0 -37.0 -36.0 -37.0 -42.0 -41.0 -44.0 -43.0 -48.0 -51.0 -50.0 -55.0 -56.0 -59.0 -58.0 -61.0 -64.0 -65.0 -68.0 -67.0 -68.0 -73.0 -76.0 -77.0 -82.0 -85.0 -88.0 -91.0 -94.0 -94.0 -99.0 -100.0 -103.0 -102.0 -105.0 -106.0 -111.0 -114.0 -117.0 -116.0 -119.0 -122.0 -123.0 -128.0 -131.0 -134.0 -133.0 -136.0 -139.0 -138.0 -141.0 -146.0 -147.0 -150.0 -151.0 -152.0 -155.0 -158.0 -157.0 -162.0 -163.0 -166.0 -167.0 -168.0 -173.0 -174.0 -179.0 -180.0 -183.0 -186.0 -185.0 22 -47.0 -44.0 -45.0 -42.0 -39.0 -40.0 -35.0 -30.0 -33.0 -28.0 -29.0 -20.0 -25.0 -20.0 -19.0 -18.0 -11.0 -12.0 -8.0 -8.0 -9.0 -2.0 -5.0 -3.0 2.0 3.0 8.0 9.0 14.0 14.0 9.0 8.0 3.0 0.0 -1.0 -6.0 -9.0 -8.0 -11.0 -10.0 -13.0 -16.0 -21.0 -20.0 -25.0 -28.0 -29.0 -30.0 -31.0 -36.0 -37.0 -36.0 -37.0 -42.0 -41.0 -44.0 -43.0 -50.0 -51.0 -50.0 -55.0 -58.0 -59.0 -58.0 -61.0 -64.0 -67.0 -68.0 -67.0 -70.0 -75.0 -78.0 -77.0 -84.0 -85.0 -89.0 -93.0 -95.0 -94.0 -99.0 -100.0 -103.0 -102.0 -107.0 -106.0 -113.0 -116.0 -117.0 -116.0 -119.0 -124.0 -123.0 -130.0 -133.0 -134.0 -135.0 -136.0 -141.0 -138.0 -143.0 -146.0 -149.0 -150.0 -151.0 -152.0 -155.0 -158.0 -157.0 -162.0 -163.0 -168.0 -167.0 -170.0 -175.0 -174.0 -181.0 -180.0 -183.0 -186.0 23 -50.0 -47.0 -44.0 -45.0 -42.0 -39.0 -38.0 -35.0 -30.0 -31.0 -28.0 -27.0 -20.0 -23.0 -20.0 -19.0 -16.0 -11.0 -12.0 -8.0 -8.0 -9.0 -2.0 -5.0 -3.0 2.0 5.0 10.0 11.0 14.0 14.0 7.0 8.0 1.0 -2.0 -1.0 -6.0 -9.0 -8.0 -11.0 -12.0 -13.0 -18.0 -23.0 -20.0 -25.0 -28.0 -29.0 -30.0 -31.0 -36.0 -37.0 -36.0 -37.0 -44.0 -41.0 -44.0 -43.0 -50.0 -51.0 -50.0 -57.0 -58.0 -59.0 -58.0 -61.0 -64.0 -67.0 -68.0 -69.0 -70.0 -77.0 -80.0 -77.0 -86.0 -85.0 -89.0 -94.0 -95.0 -94.0 -99.0 -100.0 -103.0 -104.0 -109.0 -106.0 -113.0 -116.0 -119.0 -116.0 -121.0 -126.0 -125.0 -132.0 -133.0 -134.0 -135.0 -138.0 -141.0 -138.0 -143.0 -148.0 -151.0 -150.0 -151.0 -154.0 -155.0 -160.0 -159.0 -162.0 -165.0 -168.0 -167.0 -172.0 -177.0 -176.0 -183.0 -180.0 -183.0 24 -51.0 -50.0 -47.0 -44.0 -45.0 -42.0 -39.0 -38.0 -35.0 -30.0 -31.0 -28.0 -27.0 -20.0 -23.0 -20.0 -19.0 -16.0 -11.0 -12.0 -8.0 -8.0 -9.0 -2.0 -4.0 -1.0 2.0 5.0 10.0 11.0 14.0 14.0 5.0 8.0 -1.0 -4.0 -3.0 -6.0 -9.0 -8.0 -13.0 -14.0 -13.0 -20.0 -23.0 -20.0 -25.0 -28.0 -29.0 -30.0 -31.0 -36.0 -39.0 -36.0 -37.0 -44.0 -41.0 -46.0 -43.0 -50.0 -51.0 -50.0 -57.0 -58.0 -59.0 -58.0 -63.0 -64.0 -67.0 -68.0 -71.0 -72.0 -79.0 -82.0 -79.0 -86.0 -87.0 -89.0 -92.0 -93.0 -94.0 -97.0 -98.0 -103.0 -106.0 -109.0 -108.0 -113.0 -116.0 -117.0 -118.0 -123.0 -124.0 -125.0 -130.0 -131.0 -132.0 -135.0 -138.0 -139.0 -138.0 -143.0 -148.0 -149.0 -150.0 -153.0 -154.0 -157.0 -160.0 -159.0 -164.0 -165.0 -168.0 -169.0 -174.0 -177.0 -178.0 -181.0 -180.0 25 -54.0 -53.0 -50.0 -47.0 -46.0 -45.0 -42.0 -41.0 -38.0 -33.0 -32.0 -31.0 -30.0 -25.0 -22.0 -25.0 -22.0 -21.0 -16.0 -13.0 -14.0 -8.0 -10.0 -9.0 -4.0 -4.0 -1.0 2.0 7.0 10.0 9.0 14.0 12.0 7.0 6.0 -1.0 -4.0 -3.0 -6.0 -7.0 -10.0 -13.0 -16.0 -13.0 -22.0 -21.0 -20.0 -25.0 -28.0 -29.0 -30.0 -29.0 -34.0 -37.0 -36.0 -37.0 -42.0 -43.0 -48.0 -43.0 -50.0 -49.0 -50.0 -55.0 -56.0 -59.0 -60.0 -63.0 -64.0 -65.0 -70.0 -73.0 -74.0 -79.0 -82.0 -81.0 -88.0 -89.0 -89.0 -94.0 -93.0 -94.0 -97.0 -100.0 -105.0 -108.0 -111.0 -108.0 -115.0 -116.0 -119.0 -120.0 -123.0 -124.0 -125.0 -132.0 -131.0 -134.0 -135.0 -138.0 -139.0 -138.0 -143.0 -148.0 -149.0 -152.0 -153.0 -156.0 -159.0 -160.0 -161.0 -164.0 -167.0 -170.0 -171.0 -176.0 -177.0 -178.0 -181.0 26 -57.0 -54.0 -52.0 -52.0 -49.0 -46.0 -45.0 -42.0 -39.0 -38.0 -33.0 -34.0 -31.0 -30.0 -25.0 -22.0 -23.0 -22.0 -23.0 -16.0 -15.0 -15.0 -8.0 -12.0 -10.0 -4.0 -2.0 1.0 2.0 5.0 8.0 7.0 14.0 10.0 5.0 6.0 -1.0 -4.0 -3.0 -6.0 -9.0 -10.0 -15.0 -18.0 -13.0 -22.0 -21.0 -20.0 -25.0 -28.0 -29.0 -32.0 -29.0 -34.0 -39.0 -36.0 -37.0 -42.0 -43.0 -48.0 -43.0 -50.0 -49.0 -50.0 -55.0 -56.0 -59.0 -60.0 -63.0 -66.0 -65.0 -72.0 -75.0 -74.0 -81.0 -82.0 -81.0 -89.0 -90.0 -89.0 -94.0 -93.0 -94.0 -99.0 -102.0 -105.0 -108.0 -111.0 -110.0 -115.0 -118.0 -121.0 -122.0 -125.0 -124.0 -125.0 -132.0 -133.0 -134.0 -135.0 -138.0 -141.0 -138.0 -143.0 -146.0 -149.0 -150.0 -153.0 -156.0 -157.0 -160.0 -161.0 -162.0 -167.0 -170.0 -173.0 -176.0 -175.0 -178.0 27 -60.0 -59.0 -56.0 -52.0 -54.0 -51.0 -48.0 -46.0 -44.0 -39.0 -39.0 -35.0 -35.0 -31.0 -31.0 -26.0 -24.0 -25.0 -22.0 -23.0 -18.0 -15.0 -15.0 -8.0 -12.0 -9.0 -6.0 -4.0 1.0 2.0 3.0 8.0 6.0 14.0 8.0 3.0 6.0 -1.0 -2.0 -3.0 -6.0 -9.0 -12.0 -13.0 -16.0 -13.0 -20.0 -21.0 -20.0 -25.0 -26.0 -31.0 -32.0 -29.0 -34.0 -37.0 -36.0 -37.0 -42.0 -43.0 -46.0 -43.0 -48.0 -49.0 -50.0 -55.0 -58.0 -59.0 -60.0 -61.0 -66.0 -67.0 -72.0 -75.0 -76.0 -81.0 -83.0 -83.0 -87.0 -92.0 -89.0 -94.0 -93.0 -96.0 -101.0 -104.0 -107.0 -108.0 -109.0 -110.0 -115.0 -118.0 -119.0 -122.0 -125.0 -126.0 -125.0 -132.0 -133.0 -136.0 -135.0 -136.0 -143.0 -138.0 -143.0 -148.0 -149.0 -152.0 -153.0 -156.0 -159.0 -160.0 -163.0 -164.0 -169.0 -172.0 -175.0 -176.0 -175.0 28 -62.0 -62.0 -59.0 -57.0 -52.0 -54.0 -50.0 -49.0 -44.0 -43.0 -41.0 -37.0 -36.0 -33.0 -32.0 -31.0 -26.0 -26.0 -26.0 -24.0 -24.0 -19.0 -17.0 -13.0 -8.0 -10.0 -7.0 -7.0 -4.0 -1.0 0.0 2.0 6.0 6.0 14.0 8.0 1.0 6.0 -1.0 -2.0 -5.0 -8.0 -11.0 -14.0 -13.0 -16.0 -13.0 -20.0 -21.0 -22.0 -25.0 -26.0 -31.0 -32.0 -29.0 -34.0 -37.0 -38.0 -37.0 -42.0 -43.0 -48.0 -43.0 -48.0 -49.0 -50.0 -57.0 -58.0 -59.0 -62.0 -63.0 -68.0 -67.0 -74.0 -75.0 -78.0 -83.0 -83.0 -84.0 -89.0 -92.0 -89.0 -94.0 -95.0 -96.0 -103.0 -106.0 -107.0 -108.0 -109.0 -112.0 -115.0 -120.0 -121.0 -122.0 -127.0 -126.0 -127.0 -132.0 -135.0 -136.0 -135.0 -136.0 -143.0 -138.0 -143.0 -148.0 -149.0 -152.0 -153.0 -158.0 -159.0 -162.0 -165.0 -164.0 -171.0 -172.0 -175.0 -176.0 29 -65.0 -62.0 -61.0 -60.0 -57.0 -52.0 -53.0 -50.0 -47.0 -42.0 -43.0 -42.0 -37.0 -36.0 -33.0 -32.0 -29.0 -26.0 -27.0 -26.0 -25.0 -22.0 -19.0 -18.0 -13.0 -8.0 -8.0 -5.0 -6.0 -5.0 -2.0 -1.0 2.0 5.0 6.0 14.0 8.0 1.0 6.0 1.0 -2.0 -3.0 -8.0 -11.0 -12.0 -11.0 -14.0 -13.0 -18.0 -23.0 -22.0 -25.0 -24.0 -29.0 -30.0 -29.0 -32.0 -35.0 -40.0 -37.0 -40.0 -45.0 -46.0 -43.0 -46.0 -47.0 -50.0 -55.0 -56.0 -59.0 -60.0 -65.0 -68.0 -67.0 -74.0 -75.0 -78.0 -83.0 -81.0 -84.0 -89.0 -90.0 -89.0 -94.0 -97.0 -96.0 -101.0 -104.0 -107.0 -108.0 -111.0 -114.0 -117.0 -120.0 -121.0 -124.0 -125.0 -128.0 -127.0 -130.0 -133.0 -136.0 -135.0 -136.0 -141.0 -140.0 -143.0 -148.0 -151.0 -152.0 -155.0 -156.0 -157.0 -162.0 -165.0 -166.0 -169.0 -170.0 -173.0 30 -64.0 -65.0 -64.0 -61.0 -60.0 -55.0 -52.0 -53.0 -50.0 -47.0 -42.0 -45.0 -42.0 -39.0 -36.0 -33.0 -32.0 -29.0 -26.0 -27.0 -28.0 -27.0 -22.0 -19.0 -18.0 -12.0 -8.0 -8.0 -5.0 -6.0 -5.0 -4.0 -1.0 2.0 3.0 8.0 14.0 8.0 2.0 6.0 -1.0 -2.0 -5.0 -10.0 -11.0 -12.0 -11.0 -14.0 -13.0 -20.0 -23.0 -22.0 -25.0 -24.0 -29.0 -30.0 -29.0 -32.0 -37.0 -40.0 -37.0 -42.0 -45.0 -46.0 -43.0 -46.0 -47.0 -50.0 -55.0 -58.0 -59.0 -62.0 -67.0 -68.0 -69.0 -74.0 -75.0 -80.0 -84.0 -81.0 -84.0 -89.0 -90.0 -91.0 -96.0 -97.0 -96.0 -101.0 -104.0 -107.0 -108.0 -113.0 -116.0 -117.0 -120.0 -123.0 -124.0 -125.0 -128.0 -127.0 -130.0 -135.0 -138.0 -135.0 -136.0 -143.0 -140.0 -145.0 -148.0 -151.0 -154.0 -155.0 -156.0 -159.0 -164.0 -167.0 -166.0 -169.0 -170.0 31 -67.0 -64.0 -65.0 -64.0 -61.0 -58.0 -55.0 -52.0 -53.0 -50.0 -47.0 -42.0 -45.0 -42.0 -39.0 -36.0 -33.0 -32.0 -29.0 -26.0 -27.0 -28.0 -27.0 -22.0 -19.0 -17.0 -12.0 -8.0 -8.0 -5.0 -6.0 -5.0 -4.0 -1.0 2.0 3.0 8.0 14.0 8.0 4.0 4.0 -2.0 -4.0 -7.0 -11.0 -11.0 -12.0 -11.0 -14.0 -13.0 -20.0 -23.0 -22.0 -27.0 -24.0 -29.0 -30.0 -29.0 -32.0 -37.0 -38.0 -37.0 -42.0 -45.0 -46.0 -43.0 -46.0 -47.0 -50.0 -55.0 -58.0 -61.0 -62.0 -67.0 -68.0 -71.0 -75.0 -76.0 -81.0 -82.0 -81.0 -84.0 -87.0 -90.0 -91.0 -96.0 -97.0 -96.0 -101.0 -102.0 -107.0 -106.0 -113.0 -114.0 -115.0 -120.0 -121.0 -122.0 -123.0 -128.0 -127.0 -132.0 -135.0 -136.0 -135.0 -136.0 -141.0 -140.0 -145.0 -146.0 -149.0 -152.0 -155.0 -158.0 -159.0 -164.0 -167.0 -166.0 -169.0 32 -68.0 -67.0 -62.0 -65.0 -64.0 -61.0 -56.0 -55.0 -52.0 -51.0 -50.0 -45.0 -42.0 -43.0 -42.0 -39.0 -36.0 -33.0 -32.0 -29.0 -26.0 -27.0 -28.0 -25.0 -22.0 -19.0 -15.0 -10.0 -8.0 -8.0 -5.0 -6.0 -3.0 -4.0 -1.0 2.0 3.0 10.0 14.0 9.0 6.0 2.0 0.0 -3.0 -6.0 -9.0 -10.0 -11.0 -10.0 -16.0 -13.0 -19.0 -22.0 -21.0 -26.0 -24.0 -28.0 -31.0 -29.0 -32.0 -36.0 -39.0 -36.0 -43.0 -44.0 -45.0 -45.0 -46.0 -47.0 -52.0 -56.0 -57.0 -62.0 -64.0 -68.0 -70.0 -73.0 -74.0 -76.0 -80.0 -81.0 -80.0 -84.0 -86.0 -91.0 -93.0 -97.0 -96.0 -98.0 -101.0 -102.0 -108.0 -106.0 -114.0 -113.0 -114.0 -119.0 -120.0 -121.0 -122.0 -127.0 -129.0 -131.0 -134.0 -135.0 -137.0 -136.0 -142.0 -142.0 -145.0 -146.0 -148.0 -153.0 -154.0 -159.0 -159.0 -163.0 -166.0 -165.0 33 -71.0 -68.0 -65.0 -62.0 -65.0 -62.0 -59.0 -56.0 -53.0 -50.0 -51.0 -48.0 -45.0 -42.0 -43.0 -42.0 -39.0 -36.0 -33.0 -32.0 -29.0 -26.0 -27.0 -26.0 -24.0 -21.0 -18.0 -13.0 -8.0 -8.0 -8.0 -5.0 -4.0 -3.0 -4.0 -1.0 2.0 5.0 12.0 14.0 7.0 4.0 1.0 -2.0 -3.0 -4.0 -7.0 -8.0 -9.0 -8.0 -15.0 -15.0 -19.0 -22.0 -19.0 -24.0 -24.0 -26.0 -29.0 -29.0 -31.0 -34.0 -37.0 -36.0 -41.0 -42.0 -43.0 -45.0 -46.0 -47.0 -53.0 -56.0 -59.0 -62.0 -65.0 -68.0 -71.0 -73.0 -74.0 -75.0 -78.0 -79.0 -80.0 -85.0 -88.0 -91.0 -94.0 -95.0 -98.0 -98.0 -102.0 -104.0 -106.0 -105.0 -112.0 -113.0 -114.0 -119.0 -120.0 -121.0 -120.0 -125.0 -130.0 -131.0 -132.0 -135.0 -136.0 -138.0 -142.0 -142.0 -146.0 -146.0 -150.0 -153.0 -154.0 -159.0 -159.0 -163.0 -164.0 34 -72.0 -71.0 -68.0 -65.0 -62.0 -63.0 -60.0 -59.0 -56.0 -51.0 -50.0 -49.0 -48.0 -43.0 -42.0 -43.0 -40.0 -39.0 -36.0 -33.0 -32.0 -29.0 -26.0 -27.0 -25.0 -22.0 -19.0 -16.0 -11.0 -8.0 -8.0 -8.0 -5.0 -4.0 -3.0 -2.0 1.0 4.0 7.0 14.0 12.0 5.0 2.0 -1.0 -4.0 -3.0 -4.0 -7.0 -8.0 -9.0 -8.0 -17.0 -15.0 -19.0 -22.0 -19.0 -24.0 -26.0 -26.0 -29.0 -29.0 -31.0 -34.0 -37.0 -36.0 -41.0 -42.0 -43.0 -45.0 -46.0 -49.0 -55.0 -58.0 -61.0 -64.0 -67.0 -70.0 -72.0 -73.0 -76.0 -75.0 -78.0 -79.0 -82.0 -87.0 -90.0 -91.0 -94.0 -97.0 -98.0 -100.0 -104.0 -104.0 -106.0 -105.0 -114.0 -113.0 -114.0 -119.0 -122.0 -121.0 -120.0 -127.0 -130.0 -131.0 -132.0 -135.0 -138.0 -140.0 -142.0 -142.0 -146.0 -148.0 -152.0 -155.0 -154.0 -161.0 -159.0 -163.0 35 -73.0 -74.0 -69.0 -70.0 -66.0 -64.0 -61.0 -62.0 -59.0 -56.0 -53.0 -52.0 -51.0 -48.0 -45.0 -44.0 -43.0 -42.0 -41.0 -38.0 -33.0 -34.0 -31.0 -28.0 -28.0 -25.0 -22.0 -19.0 -16.0 -13.0 -8.0 -10.0 -10.0 -7.0 -6.0 -5.0 -2.0 1.0 6.0 9.0 14.0 10.0 5.0 2.0 -1.0 -4.0 -3.0 -4.0 -7.0 -8.0 -9.0 -8.0 -17.0 -17.0 -19.0 -22.0 -19.0 -26.0 -26.0 -26.0 -29.0 -31.0 -31.0 -34.0 -37.0 -36.0 -41.0 -42.0 -43.0 -47.0 -48.0 -49.0 -57.0 -60.0 -63.0 -65.0 -69.0 -70.0 -72.0 -73.0 -76.0 -75.0 -78.0 -79.0 -84.0 -87.0 -92.0 -91.0 -96.0 -97.0 -98.0 -102.0 -106.0 -106.0 -106.0 -105.0 -114.0 -113.0 -114.0 -121.0 -122.0 -123.0 -120.0 -127.0 -130.0 -133.0 -132.0 -137.0 -138.0 -140.0 -142.0 -142.0 -148.0 -148.0 -154.0 -155.0 -154.0 -161.0 -159.0 36 -78.0 -73.0 -74.0 -71.0 -72.0 -66.0 -66.0 -61.0 -60.0 -59.0 -56.0 -55.0 -52.0 -51.0 -48.0 -45.0 -44.0 -43.0 -44.0 -39.0 -40.0 -35.0 -34.0 -33.0 -30.0 -26.0 -23.0 -20.0 -19.0 -18.0 -15.0 -10.0 -10.0 -12.0 -9.0 -6.0 -3.0 -2.0 1.0 4.0 7.0 14.0 8.0 3.0 2.0 -1.0 -4.0 -3.0 -4.0 -7.0 -8.0 -11.0 -8.0 -17.0 -17.0 -19.0 -22.0 -19.0 -26.0 -26.0 -26.0 -29.0 -31.0 -31.0 -34.0 -37.0 -36.0 -41.0 -42.0 -45.0 -47.0 -50.0 -51.0 -56.0 -61.0 -62.0 -64.0 -70.0 -71.0 -71.0 -73.0 -76.0 -75.0 -80.0 -81.0 -84.0 -86.0 -91.0 -93.0 -95.0 -98.0 -100.0 -102.0 -105.0 -106.0 -106.0 -105.0 -112.0 -113.0 -114.0 -119.0 -122.0 -125.0 -120.0 -127.0 -128.0 -131.0 -134.0 -137.0 -136.0 -139.0 -142.0 -142.0 -148.0 -148.0 -154.0 -155.0 -154.0 -159.0 37 -79.0 -80.0 -73.0 -76.0 -73.0 -71.0 -66.0 -68.0 -63.0 -62.0 -60.0 -58.0 -57.0 -54.0 -53.0 -49.0 -47.0 -46.0 -45.0 -44.0 -39.0 -39.0 -37.0 -36.0 -34.0 -31.0 -28.0 -25.0 -22.0 -21.0 -18.0 -17.0 -12.0 -12.0 -14.0 -11.0 -8.0 -5.0 0.0 3.0 4.0 5.0 14.0 8.0 1.0 0.0 -1.0 -4.0 -5.0 -4.0 -7.0 -8.0 -11.0 -8.0 -17.0 -17.0 -19.0 -22.0 -19.0 -24.0 -26.0 -26.0 -29.0 -33.0 -31.0 -36.0 -37.0 -36.0 -39.0 -44.0 -47.0 -47.0 -52.0 -53.0 -58.0 -62.0 -64.0 -64.0 -70.0 -71.0 -71.0 -73.0 -76.0 -75.0 -82.0 -83.0 -84.0 -86.0 -92.0 -93.0 -94.0 -99.0 -102.0 -101.0 -104.0 -106.0 -106.0 -105.0 -112.0 -115.0 -114.0 -119.0 -122.0 -125.0 -120.0 -125.0 -126.0 -131.0 -134.0 -135.0 -134.0 -137.0 -142.0 -142.0 -148.0 -147.0 -152.0 -153.0 -154.0 38 -81.0 -80.0 -78.0 -75.0 -77.0 -75.0 -69.0 -66.0 -68.0 -64.0 -64.0 -58.0 -59.0 -56.0 -55.0 -54.0 -49.0 -49.0 -47.0 -46.0 -44.0 -40.0 -39.0 -39.0 -37.0 -34.0 -30.0 -28.0 -25.0 -24.0 -21.0 -19.0 -19.0 -14.0 -14.0 -14.0 -11.0 -8.0 -3.0 0.0 3.0 2.0 5.0 14.0 6.0 -1.0 -1.0 1.0 -4.0 -5.0 -4.0 -7.0 -8.0 -11.0 -8.0 -17.0 -17.0 -19.0 -22.0 -19.0 -24.0 -26.0 -26.0 -29.0 -33.0 -31.0 -36.0 -37.0 -36.0 -41.0 -46.0 -47.0 -49.0 -54.0 -55.0 -60.0 -63.0 -64.0 -64.0 -72.0 -71.0 -71.0 -73.0 -76.0 -77.0 -84.0 -85.0 -84.0 -88.0 -92.0 -93.0 -96.0 -101.0 -104.0 -101.0 -104.0 -108.0 -106.0 -105.0 -114.0 -115.0 -116.0 -119.0 -122.0 -124.0 -122.0 -125.0 -128.0 -133.0 -134.0 -135.0 -134.0 -139.0 -142.0 -144.0 -148.0 -147.0 -152.0 -153.0 39 -86.0 -81.0 -80.0 -79.0 -76.0 -75.0 -74.0 -69.0 -66.0 -67.0 -64.0 -63.0 -58.0 -57.0 -56.0 -55.0 -52.0 -49.0 -50.0 -47.0 -46.0 -45.0 -40.0 -37.0 -39.0 -35.0 -32.0 -28.0 -28.0 -27.0 -25.0 -23.0 -19.0 -21.0 -16.0 -14.0 -12.0 -11.0 -8.0 -5.0 -2.0 3.0 0.0 4.0 14.0 4.0 0.0 -1.0 2.0 -3.0 -5.0 -4.0 -7.0 -7.0 -11.0 -8.0 -16.0 -17.0 -18.0 -22.0 -19.0 -23.0 -26.0 -26.0 -29.0 -33.0 -31.0 -36.0 -37.0 -38.0 -41.0 -47.0 -49.0 -49.0 -56.0 -55.0 -60.0 -62.0 -65.0 -64.0 -71.0 -70.0 -71.0 -75.0 -78.0 -77.0 -83.0 -85.0 -86.0 -88.0 -93.0 -95.0 -98.0 -102.0 -105.0 -101.0 -106.0 -108.0 -106.0 -105.0 -114.0 -117.0 -118.0 -119.0 -122.0 -125.0 -122.0 -127.0 -130.0 -133.0 -136.0 -135.0 -134.0 -141.0 -144.0 -146.0 -150.0 -147.0 -152.0 40 -87.0 -86.0 -81.0 -80.0 -79.0 -76.0 -75.0 -74.0 -69.0 -66.0 -67.0 -64.0 -63.0 -58.0 -57.0 -56.0 -55.0 -52.0 -49.0 -50.0 -47.0 -44.0 -45.0 -40.0 -36.0 -37.0 -36.0 -34.0 -28.0 -28.0 -29.0 -23.0 -25.0 -19.0 -22.0 -17.0 -16.0 -14.0 -11.0 -8.0 -6.0 -4.0 1.0 -1.0 4.0 14.0 2.0 -1.0 -2.0 2.0 -1.0 -4.0 -4.0 -7.0 -7.0 -10.0 -8.0 -16.0 -17.0 -16.0 -21.0 -19.0 -21.0 -24.0 -26.0 -29.0 -33.0 -31.0 -35.0 -36.0 -40.0 -43.0 -47.0 -50.0 -51.0 -56.0 -57.0 -61.0 -60.0 -67.0 -64.0 -69.0 -68.0 -73.0 -76.0 -79.0 -79.0 -83.0 -86.0 -86.0 -90.0 -93.0 -94.0 -97.0 -102.0 -103.0 -100.0 -106.0 -108.0 -108.0 -105.0 -112.0 -115.0 -118.0 -119.0 -122.0 -123.0 -124.0 -129.0 -130.0 -133.0 -134.0 -137.0 -136.0 -143.0 -146.0 -146.0 -150.0 -147.0 41 -90.0 -87.0 -86.0 -83.0 -82.0 -79.0 -76.0 -75.0 -72.0 -71.0 -66.0 -67.0 -64.0 -63.0 -58.0 -57.0 -56.0 -55.0 -54.0 -49.0 -52.0 -49.0 -44.0 -45.0 -42.0 -34.0 -35.0 -34.0 -33.0 -28.0 -29.0 -28.0 -23.0 -26.0 -19.0 -20.0 -17.0 -16.0 -13.0 -10.0 -9.0 -6.0 -5.0 0.0 1.0 6.0 14.0 3.0 1.0 -1.0 2.0 1.0 -2.0 -3.0 -6.0 -5.0 -8.0 -8.0 -14.0 -15.0 -16.0 -21.0 -19.0 -19.0 -22.0 -25.0 -28.0 -31.0 -31.0 -35.0 -36.0 -41.0 -44.0 -45.0 -50.0 -51.0 -54.0 -58.0 -59.0 -60.0 -65.0 -64.0 -67.0 -70.0 -73.0 -74.0 -77.0 -79.0 -83.0 -84.0 -87.0 -90.0 -93.0 -96.0 -99.0 -100.0 -103.0 -100.0 -105.0 -106.0 -108.0 -107.0 -112.0 -113.0 -116.0 -119.0 -120.0 -123.0 -126.0 -127.0 -130.0 -131.0 -132.0 -137.0 -138.0 -143.0 -144.0 -145.0 -148.0 42 -93.0 -90.0 -89.0 -88.0 -85.0 -82.0 -81.0 -76.0 -75.0 -74.0 -71.0 -66.0 -67.0 -66.0 -63.0 -58.0 -57.0 -56.0 -57.0 -54.0 -51.0 -52.0 -49.0 -46.0 -46.0 -41.0 -34.0 -35.0 -36.0 -33.0 -28.0 -29.0 -28.0 -25.0 -28.0 -19.0 -20.0 -19.0 -16.0 -13.0 -12.0 -9.0 -8.0 -5.0 0.0 -1.0 8.0 14.0 3.0 1.0 1.0 4.0 3.0 -2.0 -3.0 -4.0 -5.0 -8.0 -8.0 -12.0 -13.0 -18.0 -19.0 -18.0 -19.0 -22.0 -25.0 -28.0 -29.0 -32.0 -33.0 -38.0 -41.0 -42.0 -47.0 -48.0 -51.0 -55.0 -56.0 -57.0 -60.0 -63.0 -64.0 -67.0 -70.0 -71.0 -74.0 -77.0 -80.0 -81.0 -84.0 -87.0 -90.0 -93.0 -94.0 -97.0 -100.0 -101.0 -98.0 -103.0 -106.0 -109.0 -107.0 -111.0 -113.0 -117.0 -118.0 -121.0 -124.0 -125.0 -128.0 -129.0 -130.0 -134.0 -138.0 -140.0 -142.0 -143.0 -145.0 43 -96.0 -93.0 -90.0 -91.0 -90.0 -85.0 -84.0 -81.0 -76.0 -77.0 -74.0 -73.0 -66.0 -69.0 -66.0 -63.0 -58.0 -57.0 -58.0 -57.0 -54.0 -53.0 -52.0 -51.0 -48.0 -44.0 -41.0 -34.0 -35.0 -36.0 -33.0 -28.0 -29.0 -30.0 -27.0 -26.0 -19.0 -20.0 -19.0 -16.0 -15.0 -12.0 -9.0 -10.0 -3.0 -2.0 1.0 8.0 14.0 1.0 3.0 3.0 6.0 3.0 -2.0 -1.0 -4.0 -5.0 -8.0 -7.0 -10.0 -15.0 -16.0 -17.0 -18.0 -19.0 -22.0 -25.0 -26.0 -29.0 -30.0 -35.0 -38.0 -39.0 -44.0 -45.0 -48.0 -52.0 -53.0 -54.0 -57.0 -58.0 -61.0 -64.0 -67.0 -68.0 -71.0 -74.0 -77.0 -78.0 -81.0 -84.0 -87.0 -90.0 -91.0 -92.0 -97.0 -98.0 -99.0 -96.0 -103.0 -106.0 -109.0 -107.0 -111.0 -114.0 -115.0 -118.0 -121.0 -122.0 -125.0 -126.0 -127.0 -132.0 -135.0 -138.0 -141.0 -140.0 -143.0 44 -97.0 -96.0 -93.0 -90.0 -91.0 -88.0 -85.0 -84.0 -81.0 -76.0 -77.0 -74.0 -73.0 -66.0 -69.0 -66.0 -63.0 -58.0 -57.0 -58.0 -57.0 -54.0 -53.0 -52.0 -50.0 -47.0 -44.0 -41.0 -34.0 -35.0 -36.0 -31.0 -28.0 -29.0 -30.0 -27.0 -26.0 -19.0 -18.0 -17.0 -16.0 -15.0 -12.0 -9.0 -8.0 -3.0 -2.0 1.0 8.0 14.0 3.0 5.0 5.0 6.0 3.0 0.0 -1.0 -4.0 -5.0 -6.0 -5.0 -10.0 -13.0 -16.0 -17.0 -18.0 -19.0 -22.0 -23.0 -24.0 -29.0 -32.0 -35.0 -38.0 -41.0 -44.0 -47.0 -49.0 -50.0 -51.0 -54.0 -55.0 -56.0 -61.0 -64.0 -67.0 -70.0 -71.0 -74.0 -75.0 -78.0 -81.0 -82.0 -85.0 -90.0 -89.0 -90.0 -95.0 -98.0 -97.0 -96.0 -101.0 -106.0 -107.0 -107.0 -111.0 -112.0 -115.0 -118.0 -119.0 -122.0 -123.0 -126.0 -129.0 -132.0 -135.0 -136.0 -139.0 -140.0 45 -100.0 -97.0 -96.0 -93.0 -92.0 -89.0 -88.0 -85.0 -84.0 -79.0 -78.0 -77.0 -76.0 -71.0 -68.0 -71.0 -68.0 -65.0 -58.0 -57.0 -60.0 -57.0 -56.0 -53.0 -51.0 -50.0 -47.0 -44.0 -39.0 -34.0 -37.0 -34.0 -33.0 -28.0 -30.0 -32.0 -29.0 -24.0 -19.0 -16.0 -19.0 -16.0 -13.0 -14.0 -7.0 -6.0 -5.0 -2.0 1.0 10.0 14.0 5.0 7.0 7.0 8.0 5.0 0.0 1.0 -2.0 -3.0 -6.0 -3.0 -10.0 -11.0 -14.0 -17.0 -16.0 -17.0 -20.0 -21.0 -26.0 -29.0 -32.0 -35.0 -38.0 -41.0 -43.0 -46.0 -47.0 -52.0 -49.0 -54.0 -53.0 -58.0 -61.0 -64.0 -65.0 -68.0 -71.0 -72.0 -75.0 -78.0 -79.0 -82.0 -85.0 -88.0 -87.0 -90.0 -95.0 -96.0 -95.0 -96.0 -103.0 -104.0 -105.0 -106.0 -109.0 -112.0 -115.0 -116.0 -117.0 -120.0 -123.0 -126.0 -129.0 -130.0 -135.0 -134.0 -137.0 46 -99.0 -100.0 -95.0 -96.0 -93.0 -92.0 -87.0 -88.0 -83.0 -82.0 -79.0 -78.0 -77.0 -74.0 -71.0 -68.0 -69.0 -66.0 -65.0 -58.0 -57.0 -60.0 -57.0 -56.0 -52.0 -49.0 -48.0 -45.0 -42.0 -39.0 -34.0 -37.0 -34.0 -33.0 -28.0 -31.0 -30.0 -27.0 -22.0 -17.0 -16.0 -19.0 -14.0 -13.0 -12.0 -5.0 -6.0 -3.0 -2.0 3.0 10.0 14.0 5.0 7.0 7.0 8.0 5.0 -2.0 1.0 -2.0 -3.0 -8.0 -3.0 -10.0 -11.0 -14.0 -17.0 -16.0 -17.0 -22.0 -23.0 -26.0 -31.0 -34.0 -37.0 -40.0 -43.0 -43.0 -46.0 -49.0 -52.0 -49.0 -54.0 -53.0 -60.0 -63.0 -66.0 -65.0 -70.0 -71.0 -72.0 -77.0 -80.0 -81.0 -82.0 -85.0 -90.0 -87.0 -90.0 -95.0 -96.0 -95.0 -96.0 -103.0 -104.0 -107.0 -106.0 -111.0 -114.0 -115.0 -116.0 -117.0 -122.0 -123.0 -128.0 -129.0 -130.0 -135.0 -134.0 47 -104.0 -99.0 -100.0 -97.0 -98.0 -93.0 -92.0 -87.0 -86.0 -81.0 -82.0 -81.0 -78.0 -77.0 -74.0 -71.0 -68.0 -67.0 -68.0 -63.0 -60.0 -59.0 -60.0 -59.0 -55.0 -50.0 -47.0 -46.0 -45.0 -44.0 -41.0 -36.0 -37.0 -36.0 -35.0 -28.0 -31.0 -30.0 -27.0 -24.0 -17.0 -16.0 -17.0 -16.0 -13.0 -10.0 -3.0 -4.0 -1.0 0.0 5.0 10.0 14.0 7.0 9.0 9.0 10.0 7.0 0.0 1.0 0.0 -5.0 -6.0 -3.0 -8.0 -9.0 -12.0 -15.0 -16.0 -19.0 -20.0 -25.0 -28.0 -29.0 -34.0 -35.0 -38.0 -42.0 -43.0 -44.0 -49.0 -50.0 -49.0 -54.0 -55.0 -58.0 -61.0 -64.0 -67.0 -68.0 -71.0 -74.0 -77.0 -80.0 -83.0 -82.0 -87.0 -88.0 -87.0 -90.0 -93.0 -96.0 -95.0 -96.0 -101.0 -104.0 -105.0 -108.0 -111.0 -112.0 -115.0 -116.0 -117.0 -122.0 -125.0 -128.0 -129.0 -130.0 -133.0 48 -107.0 -104.0 -101.0 -102.0 -99.0 -96.0 -95.0 -92.0 -87.0 -86.0 -81.0 -82.0 -81.0 -80.0 -77.0 -74.0 -71.0 -68.0 -69.0 -66.0 -65.0 -62.0 -59.0 -62.0 -60.0 -53.0 -50.0 -47.0 -48.0 -45.0 -44.0 -41.0 -36.0 -39.0 -38.0 -35.0 -28.0 -33.0 -30.0 -27.0 -24.0 -17.0 -16.0 -17.0 -16.0 -13.0 -8.0 -3.0 -4.0 -3.0 2.0 5.0 10.0 14.0 5.0 11.0 9.0 10.0 7.0 2.0 3.0 -2.0 -3.0 -4.0 -3.0 -8.0 -9.0 -12.0 -13.0 -16.0 -17.0 -22.0 -25.0 -26.0 -31.0 -32.0 -35.0 -40.0 -40.0 -41.0 -44.0 -47.0 -48.0 -51.0 -54.0 -55.0 -58.0 -61.0 -62.0 -65.0 -68.0 -71.0 -74.0 -77.0 -80.0 -81.0 -84.0 -85.0 -86.0 -87.0 -90.0 -93.0 -96.0 -93.0 -96.0 -101.0 -102.0 -105.0 -106.0 -109.0 -112.0 -113.0 -114.0 -119.0 -122.0 -125.0 -128.0 -127.0 -130.0 49 -106.0 -107.0 -104.0 -101.0 -102.0 -99.0 -96.0 -95.0 -92.0 -89.0 -86.0 -81.0 -82.0 -83.0 -80.0 -77.0 -74.0 -71.0 -68.0 -69.0 -66.0 -65.0 -62.0 -59.0 -61.0 -58.0 -53.0 -50.0 -47.0 -48.0 -45.0 -42.0 -41.0 -38.0 -39.0 -40.0 -35.0 -28.0 -31.0 -28.0 -27.0 -24.0 -17.0 -16.0 -15.0 -16.0 -11.0 -8.0 -3.0 -4.0 -1.0 2.0 7.0 10.0 14.0 7.0 11.0 9.0 10.0 9.0 4.0 3.0 0.0 -3.0 -4.0 -5.0 -8.0 -9.0 -10.0 -13.0 -16.0 -19.0 -20.0 -25.0 -26.0 -31.0 -34.0 -36.0 -39.0 -38.0 -41.0 -42.0 -45.0 -48.0 -49.0 -54.0 -57.0 -58.0 -59.0 -60.0 -65.0 -66.0 -71.0 -74.0 -77.0 -78.0 -81.0 -82.0 -83.0 -84.0 -87.0 -90.0 -93.0 -94.0 -93.0 -96.0 -99.0 -100.0 -103.0 -104.0 -109.0 -110.0 -113.0 -116.0 -117.0 -122.0 -125.0 -126.0 -127.0 50 -111.0 -106.0 -105.0 -104.0 -101.0 -102.0 -97.0 -96.0 -93.0 -90.0 -89.0 -84.0 -81.0 -80.0 -83.0 -80.0 -77.0 -74.0 -71.0 -68.0 -69.0 -66.0 -65.0 -62.0 -59.0 -61.0 -56.0 -51.0 -48.0 -47.0 -48.0 -43.0 -42.0 -39.0 -38.0 -39.0 -38.0 -33.0 -28.0 -29.0 -28.0 -27.0 -22.0 -17.0 -16.0 -13.0 -14.0 -9.0 -6.0 -1.0 -2.0 -1.0 4.0 9.0 12.0 14.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 2.0 -1.0 -4.0 -5.0 -6.0 -7.0 -8.0 -13.0 -16.0 -19.0 -22.0 -25.0 -28.0 -30.0 -33.0 -34.0 -37.0 -36.0 -39.0 -40.0 -45.0 -48.0 -51.0 -54.0 -55.0 -58.0 -59.0 -62.0 -65.0 -66.0 -69.0 -74.0 -75.0 -76.0 -79.0 -80.0 -81.0 -82.0 -85.0 -90.0 -91.0 -92.0 -95.0 -96.0 -99.0 -102.0 -103.0 -106.0 -107.0 -110.0 -113.0 -116.0 -119.0 -122.0 -123.0 -124.0 51 -112.0 -111.0 -104.0 -105.0 -104.0 -101.0 -100.0 -97.0 -94.0 -91.0 -90.0 -89.0 -84.0 -81.0 -80.0 -83.0 -78.0 -75.0 -74.0 -71.0 -68.0 -69.0 -66.0 -65.0 -62.0 -59.0 -59.0 -54.0 -49.0 -48.0 -47.0 -46.0 -43.0 -40.0 -39.0 -38.0 -39.0 -36.0 -31.0 -26.0 -29.0 -28.0 -25.0 -22.0 -17.0 -14.0 -13.0 -12.0 -7.0 -4.0 -1.0 -2.0 1.0 6.0 11.0 14.0 14.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 2.0 -3.0 -4.0 -5.0 -6.0 -7.0 -10.0 -15.0 -18.0 -21.0 -24.0 -27.0 -30.0 -30.0 -33.0 -34.0 -37.0 -36.0 -39.0 -42.0 -47.0 -50.0 -53.0 -54.0 -57.0 -58.0 -61.0 -64.0 -65.0 -66.0 -69.0 -74.0 -75.0 -76.0 -81.0 -80.0 -81.0 -82.0 -87.0 -90.0 -91.0 -94.0 -95.0 -98.0 -101.0 -102.0 -105.0 -106.0 -109.0 -112.0 -115.0 -118.0 -121.0 -122.0 -123.0 52 -113.0 -112.0 -109.0 -104.0 -105.0 -104.0 -99.0 -100.0 -95.0 -92.0 -91.0 -90.0 -89.0 -82.0 -81.0 -80.0 -81.0 -76.0 -75.0 -74.0 -71.0 -68.0 -69.0 -66.0 -63.0 -61.0 -59.0 -57.0 -52.0 -49.0 -48.0 -47.0 -46.0 -43.0 -40.0 -39.0 -38.0 -37.0 -34.0 -29.0 -26.0 -29.0 -26.0 -25.0 -20.0 -15.0 -14.0 -11.0 -10.0 -5.0 -4.0 -1.0 0.0 3.0 8.0 13.0 14.0 12.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 2.0 -3.0 -4.0 -5.0 -6.0 -9.0 -12.0 -17.0 -20.0 -23.0 -25.0 -29.0 -31.0 -30.0 -35.0 -34.0 -37.0 -36.0 -41.0 -42.0 -49.0 -52.0 -53.0 -56.0 -57.0 -60.0 -63.0 -64.0 -65.0 -68.0 -69.0 -74.0 -75.0 -76.0 -81.0 -80.0 -81.0 -82.0 -87.0 -90.0 -93.0 -94.0 -97.0 -100.0 -101.0 -104.0 -105.0 -108.0 -111.0 -114.0 -115.0 -118.0 -121.0 -122.0 53 -112.0 -113.0 -112.0 -111.0 -104.0 -105.0 -102.0 -99.0 -98.0 -93.0 -92.0 -91.0 -90.0 -87.0 -82.0 -81.0 -80.0 -79.0 -76.0 -75.0 -76.0 -71.0 -68.0 -71.0 -66.0 -62.0 -59.0 -58.0 -55.0 -52.0 -51.0 -48.0 -47.0 -48.0 -43.0 -40.0 -39.0 -38.0 -35.0 -34.0 -29.0 -26.0 -29.0 -26.0 -23.0 -18.0 -15.0 -12.0 -9.0 -8.0 -7.0 -4.0 1.0 2.0 5.0 10.0 13.0 14.0 12.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 2.0 -3.0 -4.0 -7.0 -6.0 -11.0 -14.0 -17.0 -22.0 -23.0 -25.0 -31.0 -31.0 -30.0 -35.0 -34.0 -37.0 -38.0 -43.0 -42.0 -49.0 -52.0 -55.0 -56.0 -59.0 -62.0 -63.0 -66.0 -67.0 -68.0 -69.0 -74.0 -75.0 -76.0 -81.0 -82.0 -81.0 -82.0 -87.0 -92.0 -93.0 -96.0 -99.0 -100.0 -103.0 -104.0 -105.0 -110.0 -113.0 -116.0 -115.0 -118.0 -121.0 54 -117.0 -112.0 -113.0 -112.0 -111.0 -104.0 -105.0 -102.0 -99.0 -98.0 -93.0 -92.0 -91.0 -90.0 -87.0 -82.0 -81.0 -80.0 -79.0 -74.0 -75.0 -76.0 -71.0 -68.0 -69.0 -65.0 -62.0 -59.0 -58.0 -55.0 -52.0 -51.0 -48.0 -47.0 -48.0 -43.0 -40.0 -39.0 -36.0 -33.0 -34.0 -29.0 -26.0 -29.0 -24.0 -23.0 -16.0 -15.0 -12.0 -9.0 -6.0 -7.0 -2.0 1.0 2.0 7.0 10.0 13.0 14.0 12.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 2.0 -3.0 -6.0 -7.0 -8.0 -13.0 -14.0 -19.0 -22.0 -23.0 -25.0 -32.0 -31.0 -30.0 -35.0 -34.0 -39.0 -40.0 -43.0 -42.0 -49.0 -54.0 -55.0 -58.0 -61.0 -64.0 -63.0 -66.0 -67.0 -70.0 -69.0 -74.0 -75.0 -76.0 -81.0 -84.0 -81.0 -82.0 -87.0 -90.0 -93.0 -96.0 -97.0 -98.0 -101.0 -102.0 -107.0 -110.0 -111.0 -116.0 -113.0 -118.0 55 -116.0 -117.0 -112.0 -113.0 -112.0 -109.0 -104.0 -105.0 -102.0 -99.0 -98.0 -93.0 -92.0 -91.0 -90.0 -87.0 -82.0 -81.0 -80.0 -79.0 -74.0 -75.0 -76.0 -71.0 -68.0 -68.0 -65.0 -62.0 -59.0 -58.0 -55.0 -52.0 -51.0 -48.0 -47.0 -48.0 -43.0 -40.0 -37.0 -34.0 -33.0 -34.0 -29.0 -26.0 -27.0 -24.0 -21.0 -16.0 -15.0 -12.0 -7.0 -6.0 -5.0 -2.0 1.0 4.0 7.0 10.0 13.0 14.0 11.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 2.0 -3.0 -6.0 -7.0 -10.0 -15.0 -16.0 -21.0 -24.0 -23.0 -25.0 -32.0 -31.0 -30.0 -35.0 -34.0 -41.0 -42.0 -45.0 -42.0 -51.0 -52.0 -53.0 -58.0 -61.0 -64.0 -61.0 -66.0 -69.0 -70.0 -69.0 -74.0 -75.0 -78.0 -79.0 -84.0 -81.0 -84.0 -87.0 -92.0 -95.0 -96.0 -97.0 -98.0 -103.0 -102.0 -109.0 -110.0 -111.0 -116.0 -113.0 56 -121.0 -116.0 -117.0 -114.0 -113.0 -110.0 -109.0 -104.0 -103.0 -102.0 -99.0 -98.0 -93.0 -94.0 -91.0 -90.0 -87.0 -82.0 -83.0 -80.0 -81.0 -76.0 -75.0 -76.0 -73.0 -68.0 -66.0 -63.0 -60.0 -61.0 -60.0 -57.0 -52.0 -53.0 -50.0 -47.0 -46.0 -45.0 -42.0 -39.0 -36.0 -33.0 -34.0 -31.0 -26.0 -27.0 -22.0 -19.0 -14.0 -13.0 -12.0 -9.0 -6.0 -3.0 -2.0 3.0 4.0 7.0 8.0 11.0 14.0 11.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 0.0 -3.0 -8.0 -9.0 -10.0 -17.0 -16.0 -21.0 -25.0 -24.0 -25.0 -32.0 -31.0 -30.0 -37.0 -36.0 -41.0 -42.0 -45.0 -44.0 -49.0 -52.0 -55.0 -58.0 -61.0 -64.0 -61.0 -66.0 -71.0 -70.0 -69.0 -72.0 -77.0 -80.0 -79.0 -82.0 -83.0 -84.0 -89.0 -92.0 -93.0 -96.0 -97.0 -98.0 -103.0 -104.0 -109.0 -110.0 -111.0 -114.0 57 -124.0 -123.0 -118.0 -117.0 -116.0 -111.0 -112.0 -111.0 -106.0 -103.0 -104.0 -101.0 -98.0 -93.0 -94.0 -93.0 -92.0 -89.0 -82.0 -83.0 -82.0 -81.0 -78.0 -75.0 -74.0 -74.0 -70.0 -68.0 -63.0 -60.0 -63.0 -58.0 -59.0 -52.0 -55.0 -52.0 -49.0 -48.0 -43.0 -40.0 -41.0 -36.0 -33.0 -36.0 -31.0 -26.0 -27.0 -24.0 -21.0 -14.0 -11.0 -14.0 -11.0 -6.0 -3.0 -2.0 1.0 4.0 5.0 8.0 9.0 14.0 11.0 9.0 13.0 11.0 12.0 11.0 6.0 5.0 -2.0 -5.0 -8.0 -11.0 -12.0 -17.0 -17.0 -23.0 -23.0 -26.0 -25.0 -30.0 -29.0 -32.0 -37.0 -38.0 -41.0 -42.0 -47.0 -44.0 -51.0 -54.0 -55.0 -58.0 -63.0 -66.0 -61.0 -66.0 -71.0 -70.0 -69.0 -72.0 -79.0 -80.0 -79.0 -82.0 -83.0 -86.0 -91.0 -92.0 -93.0 -96.0 -99.0 -100.0 -105.0 -104.0 -111.0 -110.0 -111.0 58 -123.0 -126.0 -121.0 -118.0 -117.0 -116.0 -109.0 -112.0 -109.0 -106.0 -103.0 -102.0 -101.0 -96.0 -93.0 -94.0 -93.0 -90.0 -89.0 -84.0 -83.0 -82.0 -83.0 -78.0 -75.0 -73.0 -72.0 -71.0 -68.0 -65.0 -60.0 -61.0 -60.0 -57.0 -52.0 -55.0 -54.0 -51.0 -46.0 -41.0 -40.0 -43.0 -36.0 -33.0 -34.0 -29.0 -26.0 -25.0 -24.0 -21.0 -14.0 -11.0 -12.0 -9.0 -4.0 -1.0 -2.0 -1.0 4.0 5.0 6.0 9.0 14.0 11.0 10.0 13.0 11.0 12.0 11.0 4.0 3.0 -2.0 -7.0 -10.0 -13.0 -14.0 -19.0 -17.0 -24.0 -23.0 -26.0 -25.0 -30.0 -29.0 -34.0 -39.0 -40.0 -41.0 -44.0 -47.0 -44.0 -53.0 -56.0 -57.0 -58.0 -63.0 -66.0 -61.0 -66.0 -71.0 -70.0 -71.0 -72.0 -79.0 -80.0 -81.0 -82.0 -85.0 -88.0 -91.0 -92.0 -93.0 -98.0 -99.0 -102.0 -105.0 -104.0 -111.0 -110.0 59 -126.0 -123.0 -124.0 -121.0 -118.0 -117.0 -114.0 -109.0 -110.0 -107.0 -106.0 -103.0 -102.0 -99.0 -96.0 -93.0 -92.0 -91.0 -90.0 -87.0 -84.0 -83.0 -82.0 -83.0 -78.0 -74.0 -71.0 -70.0 -69.0 -68.0 -65.0 -60.0 -61.0 -60.0 -57.0 -52.0 -53.0 -52.0 -49.0 -46.0 -41.0 -40.0 -41.0 -36.0 -33.0 -32.0 -27.0 -24.0 -23.0 -22.0 -19.0 -14.0 -11.0 -10.0 -7.0 -2.0 -1.0 -2.0 -1.0 4.0 5.0 6.0 9.0 14.0 11.0 10.0 13.0 11.0 12.0 9.0 4.0 1.0 -4.0 -5.0 -10.0 -11.0 -14.0 -19.0 -17.0 -22.0 -23.0 -26.0 -25.0 -30.0 -31.0 -34.0 -37.0 -40.0 -43.0 -44.0 -47.0 -46.0 -53.0 -56.0 -59.0 -60.0 -63.0 -66.0 -61.0 -66.0 -69.0 -72.0 -71.0 -72.0 -77.0 -80.0 -81.0 -84.0 -87.0 -88.0 -91.0 -92.0 -93.0 -98.0 -101.0 -104.0 -105.0 -104.0 -109.0 60 -129.0 -126.0 -123.0 -124.0 -121.0 -118.0 -117.0 -114.0 -109.0 -110.0 -107.0 -106.0 -103.0 -102.0 -99.0 -96.0 -93.0 -92.0 -91.0 -88.0 -87.0 -84.0 -83.0 -82.0 -81.0 -77.0 -74.0 -71.0 -70.0 -69.0 -68.0 -65.0 -60.0 -61.0 -60.0 -57.0 -52.0 -53.0 -50.0 -47.0 -46.0 -41.0 -40.0 -41.0 -36.0 -33.0 -30.0 -27.0 -24.0 -23.0 -20.0 -19.0 -14.0 -11.0 -10.0 -5.0 -2.0 -1.0 -2.0 -1.0 4.0 5.0 6.0 9.0 14.0 11.0 10.0 13.0 13.0 10.0 9.0 2.0 -1.0 -4.0 -7.0 -10.0 -11.0 -15.0 -20.0 -17.0 -22.0 -23.0 -26.0 -27.0 -32.0 -31.0 -34.0 -37.0 -42.0 -43.0 -46.0 -49.0 -48.0 -55.0 -58.0 -59.0 -60.0 -63.0 -66.0 -61.0 -66.0 -71.0 -74.0 -71.0 -72.0 -79.0 -80.0 -83.0 -86.0 -87.0 -90.0 -91.0 -92.0 -95.0 -100.0 -101.0 -106.0 -105.0 -104.0 61 -132.0 -131.0 -128.0 -123.0 -126.0 -123.0 -120.0 -119.0 -116.0 -109.0 -112.0 -109.0 -108.0 -103.0 -104.0 -101.0 -98.0 -95.0 -92.0 -93.0 -90.0 -87.0 -86.0 -85.0 -84.0 -82.0 -79.0 -76.0 -71.0 -70.0 -71.0 -66.0 -67.0 -60.0 -63.0 -62.0 -59.0 -54.0 -53.0 -50.0 -49.0 -48.0 -43.0 -42.0 -41.0 -36.0 -35.0 -32.0 -29.0 -24.0 -23.0 -22.0 -19.0 -16.0 -13.0 -10.0 -7.0 -4.0 -3.0 -2.0 -3.0 4.0 3.0 4.0 7.0 12.0 9.0 8.0 11.0 14.0 8.0 7.0 0.0 -3.0 -6.0 -9.0 -12.0 -13.0 -15.0 -18.0 -17.0 -22.0 -21.0 -26.0 -29.0 -30.0 -33.0 -34.0 -39.0 -40.0 -43.0 -46.0 -47.0 -48.0 -55.0 -56.0 -57.0 -62.0 -61.0 -64.0 -61.0 -66.0 -69.0 -72.0 -71.0 -74.0 -77.0 -80.0 -83.0 -84.0 -87.0 -88.0 -91.0 -94.0 -97.0 -100.0 -99.0 -104.0 -105.0 62 -135.0 -132.0 -131.0 -130.0 -125.0 -124.0 -123.0 -120.0 -117.0 -116.0 -109.0 -112.0 -109.0 -108.0 -103.0 -104.0 -101.0 -98.0 -97.0 -92.0 -95.0 -92.0 -87.0 -88.0 -87.0 -83.0 -80.0 -77.0 -76.0 -73.0 -72.0 -71.0 -66.0 -67.0 -62.0 -63.0 -60.0 -59.0 -56.0 -53.0 -52.0 -49.0 -48.0 -45.0 -42.0 -41.0 -36.0 -33.0 -30.0 -29.0 -26.0 -25.0 -20.0 -17.0 -16.0 -11.0 -10.0 -7.0 -6.0 -5.0 -2.0 -5.0 2.0 3.0 4.0 7.0 12.0 7.0 6.0 9.0 14.0 6.0 5.0 0.0 -5.0 -6.0 -9.0 -14.0 -14.0 -15.0 -18.0 -17.0 -22.0 -23.0 -28.0 -29.0 -30.0 -33.0 -36.0 -39.0 -42.0 -45.0 -48.0 -49.0 -50.0 -57.0 -56.0 -57.0 -62.0 -61.0 -64.0 -63.0 -66.0 -69.0 -72.0 -71.0 -74.0 -79.0 -82.0 -83.0 -84.0 -87.0 -88.0 -93.0 -96.0 -99.0 -102.0 -99.0 -104.0 63 -136.0 -137.0 -132.0 -133.0 -132.0 -127.0 -124.0 -125.0 -122.0 -119.0 -118.0 -111.0 -114.0 -111.0 -110.0 -105.0 -106.0 -103.0 -100.0 -99.0 -92.0 -97.0 -94.0 -89.0 -90.0 -88.0 -85.0 -82.0 -79.0 -78.0 -73.0 -74.0 -73.0 -68.0 -69.0 -64.0 -65.0 -62.0 -57.0 -54.0 -53.0 -54.0 -49.0 -48.0 -47.0 -44.0 -41.0 -38.0 -35.0 -32.0 -27.0 -26.0 -25.0 -22.0 -19.0 -16.0 -13.0 -12.0 -7.0 -8.0 -7.0 -4.0 -3.0 0.0 1.0 2.0 5.0 12.0 8.0 6.0 7.0 14.0 4.0 3.0 -2.0 -6.0 -8.0 -9.0 -14.0 -16.0 -15.0 -17.0 -17.0 -21.0 -25.0 -29.0 -31.0 -30.0 -33.0 -36.0 -38.0 -43.0 -46.0 -49.0 -49.0 -50.0 -56.0 -55.0 -57.0 -61.0 -61.0 -63.0 -63.0 -66.0 -69.0 -73.0 -71.0 -76.0 -78.0 -81.0 -82.0 -83.0 -88.0 -88.0 -94.0 -95.0 -98.0 -101.0 -99.0 64 -141.0 -138.0 -137.0 -134.0 -133.0 -132.0 -129.0 -126.0 -125.0 -122.0 -121.0 -116.0 -113.0 -114.0 -113.0 -112.0 -107.0 -106.0 -105.0 -102.0 -101.0 -94.0 -98.0 -94.0 -89.0 -91.0 -88.0 -85.0 -82.0 -81.0 -80.0 -75.0 -76.0 -73.0 -68.0 -71.0 -66.0 -63.0 -62.0 -59.0 -56.0 -55.0 -54.0 -51.0 -50.0 -47.0 -44.0 -41.0 -38.0 -35.0 -32.0 -29.0 -28.0 -25.0 -20.0 -19.0 -18.0 -15.0 -14.0 -9.0 -10.0 -9.0 -6.0 -5.0 -2.0 -1.0 0.0 3.0 10.0 6.0 6.0 6.0 14.0 3.0 3.0 -3.0 -5.0 -9.0 -10.0 -14.0 -15.0 -15.0 -17.0 -19.0 -21.0 -26.0 -29.0 -30.0 -30.0 -32.0 -37.0 -38.0 -43.0 -46.0 -49.0 -51.0 -50.0 -56.0 -55.0 -57.0 -59.0 -62.0 -61.0 -63.0 -65.0 -68.0 -71.0 -71.0 -75.0 -76.0 -81.0 -82.0 -85.0 -88.0 -88.0 -94.0 -95.0 -98.0 -99.0 65 -144.0 -141.0 -140.0 -139.0 -136.0 -133.0 -132.0 -129.0 -126.0 -125.0 -122.0 -121.0 -116.0 -115.0 -114.0 -113.0 -110.0 -107.0 -108.0 -103.0 -104.0 -101.0 -94.0 -99.0 -96.0 -89.0 -89.0 -86.0 -85.0 -84.0 -83.0 -80.0 -75.0 -76.0 -75.0 -68.0 -69.0 -68.0 -65.0 -62.0 -61.0 -56.0 -57.0 -56.0 -51.0 -50.0 -45.0 -42.0 -39.0 -38.0 -35.0 -34.0 -29.0 -26.0 -23.0 -20.0 -19.0 -18.0 -17.0 -16.0 -9.0 -12.0 -11.0 -6.0 -5.0 -2.0 -1.0 0.0 3.0 8.0 6.0 4.0 4.0 14.0 1.0 3.0 -3.0 -5.0 -10.0 -10.0 -14.0 -15.0 -15.0 -17.0 -21.0 -21.0 -26.0 -29.0 -30.0 -30.0 -34.0 -39.0 -40.0 -45.0 -48.0 -51.0 -51.0 -50.0 -56.0 -55.0 -57.0 -61.0 -64.0 -61.0 -63.0 -67.0 -68.0 -73.0 -71.0 -75.0 -78.0 -81.0 -82.0 -87.0 -90.0 -90.0 -96.0 -95.0 -98.0 66 -147.0 -146.0 -143.0 -142.0 -139.0 -138.0 -135.0 -134.0 -131.0 -128.0 -127.0 -122.0 -123.0 -118.0 -117.0 -116.0 -115.0 -112.0 -109.0 -108.0 -105.0 -104.0 -103.0 -94.0 -97.0 -97.0 -91.0 -91.0 -88.0 -87.0 -86.0 -83.0 -82.0 -77.0 -76.0 -77.0 -70.0 -69.0 -68.0 -65.0 -64.0 -63.0 -58.0 -59.0 -56.0 -53.0 -50.0 -47.0 -44.0 -41.0 -38.0 -37.0 -34.0 -31.0 -26.0 -21.0 -22.0 -21.0 -20.0 -19.0 -18.0 -11.0 -14.0 -13.0 -8.0 -7.0 -4.0 -3.0 0.0 1.0 6.0 4.0 4.0 2.0 14.0 1.0 1.0 -5.0 -3.0 -10.0 -10.0 -12.0 -13.0 -16.0 -15.0 -22.0 -23.0 -26.0 -27.0 -28.0 -32.0 -34.0 -39.0 -42.0 -43.0 -46.0 -49.0 -50.0 -50.0 -54.0 -55.0 -58.0 -59.0 -62.0 -61.0 -63.0 -67.0 -68.0 -71.0 -71.0 -77.0 -78.0 -81.0 -84.0 -85.0 -88.0 -90.0 -94.0 -95.0 67 -150.0 -147.0 -146.0 -145.0 -144.0 -139.0 -138.0 -135.0 -132.0 -131.0 -128.0 -127.0 -122.0 -123.0 -118.0 -117.0 -116.0 -113.0 -114.0 -109.0 -110.0 -107.0 -104.0 -103.0 -96.0 -97.0 -95.0 -91.0 -91.0 -90.0 -89.0 -86.0 -83.0 -82.0 -79.0 -76.0 -75.0 -72.0 -71.0 -68.0 -67.0 -64.0 -63.0 -60.0 -57.0 -56.0 -51.0 -48.0 -45.0 -44.0 -41.0 -40.0 -35.0 -32.0 -31.0 -26.0 -21.0 -22.0 -23.0 -22.0 -19.0 -18.0 -13.0 -14.0 -11.0 -8.0 -7.0 -6.0 -3.0 -2.0 1.0 4.0 2.0 4.0 1.0 14.0 3.0 0.0 -4.0 -1.0 -8.0 -9.0 -10.0 -13.0 -16.0 -15.0 -20.0 -23.0 -26.0 -27.0 -30.0 -33.0 -36.0 -39.0 -42.0 -41.0 -44.0 -47.0 -48.0 -49.0 -52.0 -55.0 -56.0 -57.0 -60.0 -63.0 -63.0 -67.0 -70.0 -71.0 -73.0 -75.0 -76.0 -81.0 -84.0 -87.0 -86.0 -89.0 -92.0 68 -153.0 -150.0 -149.0 -148.0 -147.0 -142.0 -141.0 -138.0 -135.0 -134.0 -131.0 -130.0 -127.0 -124.0 -123.0 -118.0 -117.0 -116.0 -115.0 -112.0 -111.0 -110.0 -107.0 -106.0 -103.0 -96.0 -97.0 -95.0 -93.0 -91.0 -92.0 -89.0 -86.0 -85.0 -84.0 -79.0 -76.0 -77.0 -74.0 -71.0 -70.0 -67.0 -66.0 -65.0 -60.0 -59.0 -54.0 -51.0 -48.0 -47.0 -44.0 -43.0 -38.0 -35.0 -34.0 -29.0 -26.0 -21.0 -24.0 -25.0 -22.0 -21.0 -20.0 -13.0 -14.0 -11.0 -8.0 -8.0 -6.0 -5.0 -2.0 -1.0 2.0 2.0 2.0 3.0 14.0 2.0 1.0 -2.0 -1.0 -6.0 -7.0 -10.0 -13.0 -14.0 -15.0 -20.0 -23.0 -24.0 -27.0 -30.0 -33.0 -36.0 -37.0 -42.0 -39.0 -42.0 -45.0 -46.0 -49.0 -52.0 -55.0 -54.0 -57.0 -58.0 -61.0 -64.0 -67.0 -68.0 -69.0 -72.0 -73.0 -78.0 -81.0 -84.0 -87.0 -84.0 -89.0 69 -154.0 -155.0 -150.0 -151.0 -150.0 -147.0 -142.0 -143.0 -140.0 -137.0 -136.0 -133.0 -132.0 -129.0 -126.0 -125.0 -120.0 -119.0 -118.0 -117.0 -112.0 -113.0 -112.0 -109.0 -106.0 -105.0 -98.0 -99.0 -97.0 -95.0 -91.0 -92.0 -91.0 -88.0 -87.0 -86.0 -81.0 -78.0 -75.0 -72.0 -71.0 -72.0 -67.0 -66.0 -65.0 -62.0 -57.0 -56.0 -53.0 -50.0 -45.0 -44.0 -43.0 -40.0 -37.0 -34.0 -31.0 -28.0 -21.0 -26.0 -27.0 -24.0 -21.0 -22.0 -15.0 -16.0 -13.0 -8.0 -6.0 -8.0 -7.0 -2.0 -3.0 0.0 0.0 0.0 1.0 14.0 4.0 3.0 -2.0 1.0 -4.0 -5.0 -10.0 -13.0 -16.0 -15.0 -20.0 -21.0 -22.0 -27.0 -30.0 -33.0 -34.0 -35.0 -40.0 -37.0 -40.0 -43.0 -46.0 -49.0 -50.0 -53.0 -54.0 -57.0 -56.0 -61.0 -64.0 -65.0 -66.0 -67.0 -72.0 -73.0 -78.0 -79.0 -82.0 -85.0 -84.0 70 -159.0 -156.0 -155.0 -150.0 -153.0 -150.0 -147.0 -142.0 -143.0 -138.0 -139.0 -134.0 -135.0 -130.0 -131.0 -128.0 -125.0 -122.0 -119.0 -120.0 -119.0 -112.0 -115.0 -112.0 -109.0 -108.0 -103.0 -98.0 -98.0 -97.0 -97.0 -91.0 -94.0 -89.0 -90.0 -87.0 -86.0 -83.0 -80.0 -77.0 -72.0 -73.0 -72.0 -67.0 -68.0 -63.0 -62.0 -55.0 -56.0 -51.0 -50.0 -47.0 -46.0 -43.0 -40.0 -35.0 -36.0 -33.0 -30.0 -21.0 -28.0 -25.0 -26.0 -22.0 -20.0 -15.0 -18.0 -14.0 -10.0 -6.0 -10.0 -9.0 -4.0 -5.0 0.0 -2.0 -2.0 1.0 14.0 6.0 5.0 0.0 1.0 -4.0 -7.0 -10.0 -13.0 -14.0 -17.0 -18.0 -21.0 -24.0 -25.0 -28.0 -31.0 -36.0 -35.0 -40.0 -37.0 -40.0 -41.0 -44.0 -47.0 -50.0 -51.0 -54.0 -55.0 -58.0 -61.0 -62.0 -65.0 -66.0 -69.0 -72.0 -75.0 -78.0 -79.0 -82.0 -83.0 71 -160.0 -159.0 -156.0 -157.0 -150.0 -151.0 -150.0 -147.0 -142.0 -143.0 -138.0 -139.0 -134.0 -135.0 -130.0 -131.0 -128.0 -123.0 -122.0 -119.0 -120.0 -119.0 -112.0 -115.0 -112.0 -109.0 -106.0 -102.0 -98.0 -100.0 -97.0 -98.0 -91.0 -94.0 -91.0 -90.0 -85.0 -84.0 -81.0 -80.0 -77.0 -72.0 -75.0 -74.0 -67.0 -68.0 -63.0 -60.0 -53.0 -54.0 -53.0 -52.0 -47.0 -44.0 -43.0 -38.0 -35.0 -36.0 -33.0 -32.0 -21.0 -30.0 -27.0 -26.0 -22.0 -18.0 -15.0 -18.0 -12.0 -10.0 -6.0 -12.0 -11.0 -4.0 -7.0 0.0 -2.0 0.0 1.0 14.0 8.0 5.0 2.0 -1.0 -4.0 -5.0 -8.0 -11.0 -14.0 -15.0 -18.0 -21.0 -24.0 -27.0 -30.0 -29.0 -34.0 -37.0 -38.0 -35.0 -38.0 -43.0 -46.0 -45.0 -48.0 -51.0 -52.0 -55.0 -56.0 -59.0 -62.0 -63.0 -64.0 -69.0 -72.0 -75.0 -76.0 -77.0 -80.0 72 -161.0 -160.0 -159.0 -156.0 -157.0 -150.0 -151.0 -150.0 -147.0 -142.0 -143.0 -138.0 -139.0 -134.0 -135.0 -130.0 -131.0 -128.0 -123.0 -122.0 -119.0 -118.0 -119.0 -112.0 -113.0 -112.0 -109.0 -106.0 -102.0 -98.0 -100.0 -97.0 -98.0 -91.0 -94.0 -91.0 -90.0 -85.0 -82.0 -79.0 -80.0 -77.0 -72.0 -75.0 -72.0 -67.0 -66.0 -63.0 -60.0 -53.0 -52.0 -53.0 -50.0 -47.0 -44.0 -41.0 -38.0 -35.0 -36.0 -33.0 -32.0 -21.0 -29.0 -27.0 -26.0 -22.0 -18.0 -15.0 -16.0 -12.0 -10.0 -6.0 -11.0 -11.0 -4.0 -7.0 0.0 -2.0 2.0 3.0 14.0 10.0 7.0 2.0 -1.0 -4.0 -5.0 -8.0 -11.0 -12.0 -15.0 -18.0 -19.0 -22.0 -27.0 -28.0 -27.0 -32.0 -35.0 -36.0 -35.0 -36.0 -43.0 -44.0 -45.0 -46.0 -49.0 -52.0 -55.0 -54.0 -57.0 -60.0 -63.0 -66.0 -69.0 -72.0 -73.0 -74.0 -77.0 73 -162.0 -161.0 -158.0 -159.0 -156.0 -155.0 -150.0 -151.0 -148.0 -145.0 -142.0 -141.0 -138.0 -137.0 -134.0 -135.0 -130.0 -129.0 -128.0 -123.0 -122.0 -119.0 -118.0 -117.0 -112.0 -113.0 -110.0 -108.0 -105.0 -102.0 -98.0 -100.0 -97.0 -96.0 -91.0 -94.0 -91.0 -88.0 -83.0 -80.0 -79.0 -80.0 -75.0 -72.0 -73.0 -70.0 -67.0 -64.0 -61.0 -58.0 -53.0 -52.0 -51.0 -48.0 -45.0 -42.0 -41.0 -38.0 -35.0 -36.0 -33.0 -30.0 -21.0 -27.0 -27.0 -24.0 -22.0 -18.0 -15.0 -16.0 -12.0 -10.0 -6.0 -11.0 -9.0 -4.0 -7.0 0.0 -1.0 2.0 5.0 14.0 12.0 7.0 2.0 -1.0 -2.0 -3.0 -8.0 -9.0 -10.0 -15.0 -18.0 -21.0 -22.0 -25.0 -26.0 -27.0 -30.0 -33.0 -34.0 -37.0 -36.0 -41.0 -42.0 -43.0 -44.0 -49.0 -52.0 -53.0 -52.0 -55.0 -60.0 -61.0 -66.0 -67.0 -70.0 -71.0 -72.0 74 -165.0 -164.0 -159.0 -158.0 -161.0 -156.0 -153.0 -152.0 -151.0 -148.0 -145.0 -144.0 -141.0 -138.0 -137.0 -136.0 -133.0 -132.0 -129.0 -128.0 -123.0 -124.0 -121.0 -118.0 -117.0 -114.0 -113.0 -111.0 -108.0 -107.0 -102.0 -100.0 -100.0 -97.0 -98.0 -93.0 -94.0 -91.0 -86.0 -83.0 -80.0 -81.0 -78.0 -75.0 -74.0 -73.0 -70.0 -67.0 -64.0 -61.0 -56.0 -53.0 -54.0 -50.0 -47.0 -45.0 -44.0 -43.0 -38.0 -37.0 -36.0 -33.0 -28.0 -21.0 -27.0 -27.0 -26.0 -20.0 -18.0 -17.0 -18.0 -12.0 -12.0 -6.0 -12.0 -11.0 -6.0 -5.0 -2.0 -1.0 2.0 7.0 13.0 14.0 5.0 2.0 -1.0 0.0 -3.0 -6.0 -7.0 -12.0 -15.0 -18.0 -19.0 -22.0 -25.0 -24.0 -27.0 -30.0 -31.0 -34.0 -35.0 -36.0 -39.0 -42.0 -41.0 -46.0 -47.0 -50.0 -51.0 -52.0 -57.0 -58.0 -63.0 -64.0 -67.0 -70.0 -69.0 75 -166.0 -167.0 -166.0 -159.0 -158.0 -159.0 -154.0 -153.0 -152.0 -149.0 -148.0 -143.0 -144.0 -139.0 -138.0 -137.0 -136.0 -131.0 -132.0 -127.0 -128.0 -123.0 -126.0 -121.0 -116.0 -117.0 -114.0 -114.0 -111.0 -110.0 -107.0 -102.0 -100.0 -98.0 -97.0 -99.0 -93.0 -92.0 -91.0 -86.0 -84.0 -82.0 -83.0 -79.0 -77.0 -75.0 -72.0 -69.0 -67.0 -64.0 -60.0 -56.0 -54.0 -54.0 -48.0 -45.0 -46.0 -46.0 -45.0 -39.0 -39.0 -36.0 -32.0 -29.0 -21.0 -28.0 -29.0 -26.0 -20.0 -19.0 -19.0 -18.0 -12.0 -14.0 -6.0 -13.0 -13.0 -8.0 -6.0 -4.0 0.0 2.0 5.0 13.0 14.0 3.0 0.0 -1.0 0.0 -3.0 -8.0 -7.0 -14.0 -17.0 -20.0 -21.0 -22.0 -25.0 -24.0 -27.0 -30.0 -33.0 -34.0 -35.0 -36.0 -39.0 -42.0 -41.0 -46.0 -47.0 -52.0 -51.0 -54.0 -59.0 -58.0 -63.0 -64.0 -67.0 -70.0 76 -167.0 -166.0 -167.0 -166.0 -159.0 -158.0 -157.0 -154.0 -153.0 -150.0 -149.0 -146.0 -143.0 -142.0 -139.0 -138.0 -135.0 -134.0 -131.0 -130.0 -127.0 -126.0 -123.0 -124.0 -121.0 -116.0 -115.0 -113.0 -112.0 -111.0 -110.0 -105.0 -102.0 -100.0 -98.0 -97.0 -97.0 -93.0 -93.0 -90.0 -86.0 -84.0 -83.0 -84.0 -79.0 -78.0 -73.0 -70.0 -67.0 -66.0 -63.0 -60.0 -56.0 -54.0 -53.0 -48.0 -45.0 -46.0 -47.0 -44.0 -39.0 -38.0 -35.0 -30.0 -29.0 -21.0 -28.0 -28.0 -25.0 -20.0 -19.0 -20.0 -19.0 -12.0 -15.0 -6.0 -12.0 -12.0 -9.0 -4.0 -3.0 2.0 3.0 4.0 13.0 14.0 3.0 0.0 -3.0 0.0 -5.0 -10.0 -9.0 -16.0 -19.0 -22.0 -21.0 -24.0 -25.0 -24.0 -27.0 -30.0 -33.0 -34.0 -35.0 -36.0 -39.0 -44.0 -43.0 -46.0 -49.0 -52.0 -51.0 -56.0 -61.0 -60.0 -63.0 -64.0 -67.0 77 -172.0 -167.0 -166.0 -167.0 -166.0 -159.0 -158.0 -157.0 -154.0 -153.0 -150.0 -149.0 -146.0 -143.0 -142.0 -139.0 -138.0 -135.0 -134.0 -129.0 -130.0 -125.0 -126.0 -125.0 -124.0 -121.0 -116.0 -115.0 -113.0 -112.0 -113.0 -108.0 -105.0 -104.0 -100.0 -98.0 -97.0 -97.0 -91.0 -91.0 -92.0 -86.0 -84.0 -85.0 -82.0 -81.0 -76.0 -73.0 -70.0 -67.0 -64.0 -64.0 -58.0 -56.0 -56.0 -51.0 -48.0 -45.0 -47.0 -47.0 -42.0 -39.0 -38.0 -33.0 -30.0 -29.0 -21.0 -28.0 -28.0 -27.0 -20.0 -21.0 -20.0 -19.0 -14.0 -15.0 -6.0 -14.0 -12.0 -7.0 -4.0 -3.0 4.0 1.0 2.0 13.0 14.0 3.0 0.0 -1.0 -2.0 -7.0 -10.0 -9.0 -16.0 -19.0 -20.0 -21.0 -24.0 -23.0 -24.0 -27.0 -28.0 -31.0 -34.0 -35.0 -36.0 -41.0 -44.0 -43.0 -46.0 -49.0 -50.0 -53.0 -58.0 -61.0 -62.0 -61.0 -64.0 78 -171.0 -172.0 -167.0 -166.0 -167.0 -164.0 -159.0 -158.0 -157.0 -154.0 -153.0 -150.0 -149.0 -146.0 -143.0 -142.0 -139.0 -138.0 -135.0 -134.0 -129.0 -130.0 -125.0 -126.0 -125.0 -124.0 -121.0 -116.0 -115.0 -113.0 -112.0 -111.0 -108.0 -105.0 -104.0 -100.0 -98.0 -98.0 -95.0 -89.0 -91.0 -92.0 -86.0 -84.0 -85.0 -82.0 -79.0 -76.0 -73.0 -70.0 -65.0 -64.0 -62.0 -58.0 -56.0 -54.0 -51.0 -48.0 -45.0 -47.0 -45.0 -42.0 -37.0 -36.0 -33.0 -30.0 -29.0 -21.0 -26.0 -28.0 -27.0 -20.0 -21.0 -20.0 -19.0 -14.0 -15.0 -6.0 -12.0 -10.0 -7.0 -2.0 -1.0 4.0 1.0 2.0 13.0 14.0 5.0 2.0 1.0 -4.0 -7.0 -10.0 -9.0 -14.0 -17.0 -18.0 -19.0 -22.0 -23.0 -26.0 -25.0 -26.0 -31.0 -34.0 -33.0 -34.0 -39.0 -42.0 -43.0 -44.0 -49.0 -50.0 -55.0 -56.0 -59.0 -62.0 -61.0 79 -174.0 -173.0 -172.0 -167.0 -166.0 -167.0 -164.0 -161.0 -160.0 -157.0 -156.0 -151.0 -152.0 -149.0 -148.0 -145.0 -144.0 -141.0 -140.0 -137.0 -136.0 -131.0 -130.0 -123.0 -124.0 -125.0 -122.0 -120.0 -116.0 -115.0 -113.0 -112.0 -111.0 -106.0 -105.0 -104.0 -99.0 -96.0 -98.0 -95.0 -89.0 -91.0 -90.0 -86.0 -84.0 -83.0 -80.0 -77.0 -74.0 -71.0 -68.0 -65.0 -64.0 -60.0 -56.0 -54.0 -54.0 -51.0 -48.0 -45.0 -45.0 -43.0 -40.0 -37.0 -36.0 -33.0 -30.0 -29.0 -21.0 -26.0 -26.0 -25.0 -20.0 -21.0 -18.0 -19.0 -14.0 -13.0 -6.0 -10.0 -8.0 -5.0 -2.0 -1.0 4.0 1.0 4.0 13.0 14.0 7.0 2.0 1.0 -4.0 -7.0 -10.0 -9.0 -14.0 -17.0 -18.0 -19.0 -20.0 -23.0 -26.0 -25.0 -24.0 -29.0 -32.0 -33.0 -32.0 -37.0 -42.0 -43.0 -46.0 -49.0 -50.0 -55.0 -56.0 -59.0 -60.0 80 -177.0 -174.0 -175.0 -174.0 -167.0 -166.0 -167.0 -166.0 -161.0 -160.0 -159.0 -154.0 -153.0 -150.0 -149.0 -150.0 -147.0 -144.0 -141.0 -138.0 -137.0 -134.0 -133.0 -128.0 -123.0 -126.0 -123.0 -123.0 -118.0 -116.0 -117.0 -111.0 -114.0 -109.0 -106.0 -107.0 -104.0 -97.0 -96.0 -96.0 -96.0 -89.0 -91.0 -92.0 -86.0 -85.0 -83.0 -80.0 -77.0 -72.0 -69.0 -69.0 -67.0 -63.0 -58.0 -57.0 -54.0 -54.0 -53.0 -50.0 -47.0 -43.0 -43.0 -40.0 -39.0 -37.0 -33.0 -30.0 -29.0 -21.0 -26.0 -28.0 -25.0 -22.0 -21.0 -20.0 -17.0 -16.0 -13.0 -8.0 -9.0 -8.0 -3.0 -4.0 -1.0 2.0 3.0 3.0 13.0 14.0 5.0 4.0 -1.0 -2.0 -7.0 -8.0 -7.0 -12.0 -15.0 -16.0 -17.0 -18.0 -23.0 -24.0 -23.0 -24.0 -29.0 -30.0 -33.0 -32.0 -37.0 -40.0 -43.0 -46.0 -47.0 -52.0 -53.0 -54.0 -57.0 81 -178.0 -177.0 -172.0 -175.0 -174.0 -167.0 -164.0 -167.0 -164.0 -159.0 -160.0 -157.0 -154.0 -153.0 -150.0 -149.0 -148.0 -145.0 -144.0 -139.0 -138.0 -135.0 -134.0 -133.0 -128.0 -123.0 -126.0 -122.0 -121.0 -118.0 -116.0 -116.0 -111.0 -112.0 -109.0 -106.0 -108.0 -102.0 -97.0 -94.0 -96.0 -96.0 -89.0 -91.0 -90.0 -84.0 -83.0 -81.0 -78.0 -75.0 -70.0 -69.0 -67.0 -65.0 -61.0 -58.0 -57.0 -54.0 -54.0 -53.0 -50.0 -47.0 -41.0 -41.0 -40.0 -39.0 -35.0 -31.0 -28.0 -29.0 -21.0 -26.0 -28.0 -25.0 -22.0 -21.0 -20.0 -15.0 -14.0 -13.0 -8.0 -7.0 -6.0 -3.0 -4.0 -1.0 2.0 4.0 5.0 13.0 14.0 5.0 2.0 -1.0 0.0 -5.0 -6.0 -5.0 -10.0 -13.0 -14.0 -17.0 -16.0 -21.0 -22.0 -23.0 -24.0 -29.0 -32.0 -33.0 -32.0 -35.0 -40.0 -41.0 -46.0 -47.0 -50.0 -51.0 -52.0 82 -179.0 -178.0 -175.0 -172.0 -175.0 -172.0 -167.0 -164.0 -165.0 -162.0 -159.0 -158.0 -157.0 -154.0 -153.0 -150.0 -147.0 -146.0 -145.0 -142.0 -139.0 -138.0 -135.0 -132.0 -131.0 -128.0 -123.0 -125.0 -120.0 -121.0 -118.0 -116.0 -116.0 -109.0 -112.0 -109.0 -106.0 -107.0 -100.0 -97.0 -94.0 -97.0 -94.0 -89.0 -92.0 -89.0 -82.0 -81.0 -81.0 -78.0 -73.0 -70.0 -71.0 -65.0 -64.0 -59.0 -58.0 -57.0 -54.0 -55.0 -53.0 -50.0 -45.0 -41.0 -42.0 -42.0 -38.0 -33.0 -31.0 -30.0 -31.0 -21.0 -28.0 -30.0 -27.0 -24.0 -23.0 -18.0 -17.0 -16.0 -15.0 -8.0 -9.0 -6.0 -5.0 -6.0 -3.0 2.0 2.0 5.0 14.0 12.0 5.0 2.0 1.0 0.0 -7.0 -4.0 -5.0 -10.0 -11.0 -14.0 -15.0 -16.0 -19.0 -22.0 -21.0 -26.0 -27.0 -30.0 -31.0 -32.0 -37.0 -38.0 -43.0 -44.0 -47.0 -50.0 -49.0 83 -182.0 -179.0 -178.0 -175.0 -172.0 -173.0 -170.0 -167.0 -164.0 -163.0 -162.0 -157.0 -158.0 -155.0 -154.0 -153.0 -148.0 -145.0 -146.0 -143.0 -142.0 -139.0 -138.0 -133.0 -130.0 -131.0 -126.0 -122.0 -123.0 -120.0 -121.0 -118.0 -116.0 -116.0 -109.0 -112.0 -107.0 -104.0 -105.0 -100.0 -97.0 -94.0 -97.0 -94.0 -89.0 -90.0 -87.0 -80.0 -79.0 -80.0 -77.0 -74.0 -71.0 -70.0 -63.0 -62.0 -59.0 -58.0 -57.0 -54.0 -53.0 -52.0 -49.0 -46.0 -41.0 -42.0 -41.0 -36.0 -33.0 -33.0 -32.0 -32.0 -21.0 -28.0 -28.0 -29.0 -26.0 -23.0 -20.0 -19.0 -18.0 -15.0 -10.0 -11.0 -6.0 -7.0 -6.0 -4.0 2.0 4.0 5.0 14.0 10.0 3.0 0.0 1.0 0.0 -7.0 -4.0 -5.0 -10.0 -13.0 -16.0 -15.0 -16.0 -19.0 -22.0 -21.0 -26.0 -27.0 -32.0 -31.0 -34.0 -39.0 -38.0 -45.0 -46.0 -47.0 -50.0 84 -183.0 -182.0 -179.0 -178.0 -175.0 -174.0 -173.0 -172.0 -167.0 -162.0 -165.0 -162.0 -157.0 -156.0 -157.0 -156.0 -153.0 -146.0 -145.0 -146.0 -143.0 -140.0 -141.0 -138.0 -135.0 -130.0 -131.0 -125.0 -120.0 -123.0 -120.0 -119.0 -118.0 -115.0 -116.0 -109.0 -110.0 -105.0 -104.0 -103.0 -100.0 -97.0 -94.0 -97.0 -94.0 -89.0 -88.0 -85.0 -78.0 -77.0 -78.0 -77.0 -74.0 -71.0 -68.0 -63.0 -62.0 -59.0 -58.0 -55.0 -52.0 -51.0 -50.0 -47.0 -46.0 -41.0 -40.0 -39.0 -34.0 -33.0 -34.0 -33.0 -30.0 -21.0 -26.0 -29.0 -29.0 -26.0 -21.0 -21.0 -19.0 -18.0 -13.0 -12.0 -13.0 -8.0 -9.0 -7.0 -4.0 0.0 2.0 5.0 14.0 10.0 1.0 0.0 1.0 0.0 -7.0 -4.0 -5.0 -10.0 -15.0 -16.0 -15.0 -18.0 -19.0 -24.0 -21.0 -26.0 -29.0 -32.0 -33.0 -36.0 -41.0 -40.0 -45.0 -46.0 -47.0 85 -182.0 -183.0 -180.0 -179.0 -178.0 -175.0 -174.0 -173.0 -170.0 -165.0 -162.0 -163.0 -162.0 -157.0 -156.0 -157.0 -154.0 -151.0 -146.0 -145.0 -146.0 -141.0 -140.0 -139.0 -136.0 -135.0 -130.0 -130.0 -123.0 -120.0 -123.0 -118.0 -119.0 -116.0 -115.0 -116.0 -109.0 -108.0 -103.0 -102.0 -103.0 -100.0 -97.0 -94.0 -97.0 -92.0 -89.0 -88.0 -83.0 -76.0 -77.0 -78.0 -75.0 -72.0 -69.0 -66.0 -63.0 -62.0 -59.0 -56.0 -55.0 -50.0 -51.0 -48.0 -47.0 -46.0 -39.0 -38.0 -37.0 -34.0 -33.0 -34.0 -33.0 -28.0 -21.0 -26.0 -29.0 -29.0 -24.0 -22.0 -21.0 -21.0 -16.0 -15.0 -14.0 -15.0 -10.0 -10.0 -7.0 -3.0 -1.0 2.0 5.0 14.0 10.0 1.0 2.0 1.0 0.0 -5.0 -4.0 -5.0 -12.0 -13.0 -14.0 -15.0 -18.0 -21.0 -24.0 -21.0 -26.0 -29.0 -32.0 -35.0 -36.0 -41.0 -40.0 -43.0 -46.0 86 -185.0 -182.0 -181.0 -180.0 -179.0 -178.0 -173.0 -174.0 -171.0 -168.0 -165.0 -162.0 -163.0 -160.0 -157.0 -156.0 -155.0 -152.0 -151.0 -146.0 -145.0 -144.0 -141.0 -140.0 -137.0 -136.0 -133.0 -129.0 -128.0 -123.0 -120.0 -123.0 -118.0 -119.0 -116.0 -115.0 -114.0 -107.0 -106.0 -101.0 -102.0 -103.0 -98.0 -97.0 -94.0 -95.0 -92.0 -87.0 -86.0 -81.0 -76.0 -77.0 -76.0 -73.0 -70.0 -67.0 -66.0 -63.0 -62.0 -57.0 -56.0 -53.0 -50.0 -51.0 -48.0 -47.0 -44.0 -37.0 -36.0 -37.0 -34.0 -33.0 -34.0 -31.0 -28.0 -21.0 -26.0 -27.0 -27.0 -26.0 -22.0 -21.0 -21.0 -16.0 -16.0 -16.0 -15.0 -10.0 -10.0 -7.0 -1.0 1.0 1.0 3.0 14.0 10.0 1.0 2.0 1.0 0.0 -5.0 -6.0 -5.0 -12.0 -13.0 -14.0 -15.0 -20.0 -23.0 -24.0 -21.0 -26.0 -31.0 -32.0 -37.0 -36.0 -41.0 -40.0 -43.0 87 -182.0 -186.0 -180.0 -183.0 -180.0 -181.0 -176.0 -173.0 -172.0 -169.0 -170.0 -165.0 -162.0 -163.0 -160.0 -159.0 -158.0 -153.0 -152.0 -149.0 -146.0 -147.0 -146.0 -143.0 -140.0 -139.0 -136.0 -132.0 -127.0 -130.0 -123.0 -122.0 -123.0 -118.0 -121.0 -118.0 -115.0 -112.0 -105.0 -106.0 -101.0 -102.0 -101.0 -98.0 -97.0 -92.0 -93.0 -90.0 -85.0 -84.0 -79.0 -76.0 -77.0 -74.0 -71.0 -68.0 -67.0 -66.0 -63.0 -62.0 -55.0 -54.0 -51.0 -50.0 -51.0 -48.0 -45.0 -42.0 -37.0 -36.0 -37.0 -34.0 -33.0 -32.0 -31.0 -28.0 -21.0 -25.0 -27.0 -27.0 -27.0 -22.0 -21.0 -21.0 -18.0 -16.0 -18.0 -14.0 -11.0 -9.0 -5.0 -1.0 1.0 1.0 3.0 14.0 10.0 3.0 2.0 1.0 2.0 -5.0 -6.0 -5.0 -10.0 -13.0 -12.0 -17.0 -20.0 -21.0 -22.0 -21.0 -28.0 -29.0 -34.0 -35.0 -36.0 -41.0 -40.0 88 -189.0 -182.0 -187.0 -180.0 -183.0 -178.0 -179.0 -176.0 -173.0 -170.0 -169.0 -168.0 -165.0 -160.0 -163.0 -160.0 -159.0 -156.0 -153.0 -150.0 -149.0 -146.0 -147.0 -144.0 -141.0 -140.0 -137.0 -135.0 -130.0 -127.0 -130.0 -123.0 -122.0 -121.0 -118.0 -121.0 -118.0 -113.0 -110.0 -105.0 -106.0 -101.0 -102.0 -101.0 -98.0 -95.0 -90.0 -92.0 -90.0 -83.0 -82.0 -79.0 -78.0 -75.0 -72.0 -71.0 -70.0 -67.0 -66.0 -63.0 -62.0 -53.0 -52.0 -51.0 -50.0 -51.0 -46.0 -43.0 -42.0 -37.0 -36.0 -37.0 -34.0 -33.0 -32.0 -31.0 -28.0 -21.0 -25.0 -29.0 -27.0 -27.0 -22.0 -21.0 -22.0 -18.0 -16.0 -18.0 -15.0 -10.0 -7.0 -6.0 -1.0 1.0 3.0 2.0 14.0 10.0 1.0 2.0 1.0 3.0 -4.0 -6.0 -5.0 -9.0 -12.0 -14.0 -18.0 -19.0 -20.0 -22.0 -23.0 -29.0 -31.0 -33.0 -37.0 -36.0 -40.0 89 -188.0 -189.0 -182.0 -187.0 -180.0 -183.0 -176.0 -179.0 -176.0 -171.0 -170.0 -167.0 -168.0 -163.0 -160.0 -163.0 -158.0 -157.0 -156.0 -153.0 -150.0 -147.0 -146.0 -145.0 -142.0 -141.0 -138.0 -136.0 -133.0 -130.0 -127.0 -128.0 -123.0 -122.0 -121.0 -118.0 -119.0 -116.0 -111.0 -108.0 -105.0 -106.0 -101.0 -102.0 -101.0 -98.0 -95.0 -88.0 -91.0 -88.0 -83.0 -82.0 -79.0 -78.0 -73.0 -70.0 -71.0 -70.0 -67.0 -64.0 -63.0 -60.0 -53.0 -50.0 -51.0 -50.0 -49.0 -44.0 -41.0 -42.0 -37.0 -36.0 -35.0 -34.0 -33.0 -32.0 -31.0 -28.0 -21.0 -27.0 -29.0 -27.0 -25.0 -22.0 -21.0 -22.0 -18.0 -15.0 -18.0 -13.0 -8.0 -5.0 -6.0 -1.0 1.0 5.0 4.0 14.0 10.0 2.0 2.0 1.0 3.0 -2.0 -5.0 -7.0 -7.0 -10.0 -15.0 -16.0 -17.0 -18.0 -23.0 -23.0 -29.0 -30.0 -31.0 -36.0 -35.0 90 -189.0 -188.0 -187.0 -182.0 -189.0 -180.0 -183.0 -176.0 -177.0 -176.0 -171.0 -172.0 -167.0 -168.0 -163.0 -160.0 -161.0 -156.0 -159.0 -154.0 -153.0 -152.0 -147.0 -146.0 -145.0 -142.0 -139.0 -137.0 -134.0 -135.0 -132.0 -129.0 -128.0 -123.0 -124.0 -121.0 -116.0 -119.0 -116.0 -111.0 -110.0 -105.0 -108.0 -103.0 -102.0 -101.0 -96.0 -93.0 -86.0 -89.0 -88.0 -85.0 -82.0 -77.0 -78.0 -71.0 -70.0 -71.0 -70.0 -67.0 -62.0 -63.0 -60.0 -53.0 -50.0 -51.0 -48.0 -49.0 -44.0 -43.0 -42.0 -37.0 -38.0 -33.0 -34.0 -33.0 -32.0 -33.0 -30.0 -21.0 -27.0 -27.0 -27.0 -25.0 -23.0 -21.0 -22.0 -18.0 -15.0 -16.0 -11.0 -8.0 -5.0 -6.0 -1.0 1.0 5.0 6.0 14.0 10.0 4.0 3.0 0.0 3.0 0.0 -5.0 -6.0 -7.0 -8.0 -13.0 -16.0 -17.0 -18.0 -23.0 -25.0 -29.0 -30.0 -31.0 -34.0 91 -194.0 -189.0 -190.0 -187.0 -182.0 -187.0 -180.0 -183.0 -176.0 -177.0 -176.0 -171.0 -172.0 -167.0 -168.0 -163.0 -160.0 -161.0 -156.0 -157.0 -154.0 -151.0 -152.0 -147.0 -144.0 -145.0 -142.0 -139.0 -137.0 -134.0 -135.0 -132.0 -129.0 -128.0 -123.0 -124.0 -121.0 -116.0 -117.0 -114.0 -111.0 -110.0 -105.0 -108.0 -103.0 -102.0 -99.0 -96.0 -93.0 -86.0 -87.0 -88.0 -85.0 -82.0 -77.0 -76.0 -71.0 -70.0 -71.0 -68.0 -65.0 -62.0 -61.0 -58.0 -53.0 -50.0 -51.0 -48.0 -47.0 -44.0 -43.0 -42.0 -37.0 -38.0 -33.0 -34.0 -33.0 -32.0 -31.0 -30.0 -21.0 -27.0 -25.0 -28.0 -25.0 -23.0 -21.0 -22.0 -17.0 -13.0 -14.0 -9.0 -8.0 -5.0 -4.0 1.0 3.0 7.0 8.0 14.0 10.0 4.0 1.0 0.0 3.0 0.0 -5.0 -6.0 -7.0 -8.0 -13.0 -16.0 -19.0 -20.0 -23.0 -25.0 -29.0 -30.0 -31.0 92 -193.0 -194.0 -187.0 -190.0 -187.0 -182.0 -185.0 -180.0 -183.0 -176.0 -179.0 -174.0 -171.0 -170.0 -167.0 -168.0 -163.0 -160.0 -161.0 -156.0 -157.0 -156.0 -151.0 -150.0 -147.0 -146.0 -145.0 -143.0 -138.0 -137.0 -134.0 -133.0 -134.0 -131.0 -130.0 -125.0 -126.0 -121.0 -116.0 -115.0 -114.0 -111.0 -110.0 -105.0 -108.0 -105.0 -102.0 -99.0 -94.0 -91.0 -84.0 -87.0 -86.0 -83.0 -80.0 -77.0 -76.0 -71.0 -70.0 -71.0 -66.0 -63.0 -60.0 -59.0 -58.0 -53.0 -50.0 -49.0 -46.0 -49.0 -44.0 -43.0 -44.0 -39.0 -40.0 -35.0 -34.0 -33.0 -34.0 -33.0 -30.0 -21.0 -25.0 -25.0 -28.0 -25.0 -23.0 -20.0 -21.0 -17.0 -13.0 -12.0 -9.0 -8.0 -3.0 -2.0 3.0 5.0 9.0 8.0 14.0 10.0 4.0 1.0 0.0 3.0 0.0 -7.0 -8.0 -7.0 -8.0 -13.0 -18.0 -19.0 -20.0 -23.0 -25.0 -29.0 -30.0 93 -196.0 -193.0 -192.0 -187.0 -190.0 -185.0 -182.0 -185.0 -180.0 -181.0 -176.0 -177.0 -174.0 -171.0 -170.0 -167.0 -166.0 -161.0 -160.0 -159.0 -156.0 -157.0 -156.0 -149.0 -148.0 -147.0 -147.0 -144.0 -141.0 -138.0 -137.0 -134.0 -133.0 -133.0 -131.0 -130.0 -127.0 -124.0 -119.0 -116.0 -115.0 -114.0 -109.0 -110.0 -105.0 -108.0 -103.0 -102.0 -97.0 -92.0 -89.0 -84.0 -87.0 -84.0 -81.0 -80.0 -79.0 -78.0 -71.0 -72.0 -71.0 -64.0 -61.0 -62.0 -59.0 -60.0 -53.0 -48.0 -49.0 -46.0 -49.0 -44.0 -43.0 -42.0 -39.0 -40.0 -35.0 -34.0 -33.0 -34.0 -33.0 -28.0 -21.0 -25.0 -25.0 -28.0 -25.0 -23.0 -20.0 -19.0 -15.0 -13.0 -12.0 -9.0 -6.0 -3.0 -2.0 5.0 5.0 9.0 8.0 14.0 10.0 4.0 1.0 0.0 3.0 -2.0 -9.0 -8.0 -7.0 -8.0 -15.0 -18.0 -21.0 -20.0 -23.0 -25.0 -29.0 94 -197.0 -196.0 -193.0 -192.0 -187.0 -190.0 -183.0 -182.0 -185.0 -178.0 -181.0 -174.0 -177.0 -172.0 -171.0 -170.0 -165.0 -164.0 -161.0 -158.0 -159.0 -156.0 -157.0 -154.0 -147.0 -148.0 -145.0 -146.0 -142.0 -141.0 -138.0 -137.0 -134.0 -131.0 -133.0 -131.0 -128.0 -127.0 -122.0 -119.0 -116.0 -115.0 -114.0 -109.0 -110.0 -105.0 -106.0 -101.0 -100.0 -95.0 -90.0 -89.0 -84.0 -85.0 -82.0 -79.0 -80.0 -79.0 -78.0 -71.0 -72.0 -69.0 -62.0 -61.0 -62.0 -59.0 -60.0 -51.0 -48.0 -49.0 -46.0 -49.0 -44.0 -45.0 -42.0 -39.0 -42.0 -35.0 -34.0 -35.0 -36.0 -31.0 -28.0 -21.0 -25.0 -25.0 -26.0 -24.0 -24.0 -18.0 -17.0 -16.0 -13.0 -12.0 -9.0 -6.0 -3.0 0.0 5.0 4.0 9.0 8.0 14.0 10.0 4.0 0.0 1.0 1.0 -4.0 -7.0 -8.0 -7.0 -10.0 -15.0 -20.0 -21.0 -20.0 -23.0 -25.0 95 -202.0 -197.0 -198.0 -193.0 -194.0 -187.0 -188.0 -183.0 -182.0 -183.0 -178.0 -179.0 -174.0 -175.0 -172.0 -171.0 -168.0 -163.0 -164.0 -159.0 -158.0 -160.0 -156.0 -155.0 -154.0 -147.0 -146.0 -144.0 -144.0 -142.0 -141.0 -138.0 -137.0 -132.0 -131.0 -133.0 -129.0 -126.0 -127.0 -122.0 -121.0 -116.0 -115.0 -116.0 -109.0 -110.0 -103.0 -104.0 -99.0 -98.0 -93.0 -90.0 -89.0 -84.0 -83.0 -80.0 -79.0 -80.0 -79.0 -78.0 -71.0 -70.0 -67.0 -62.0 -61.0 -62.0 -57.0 -58.0 -51.0 -48.0 -49.0 -46.0 -49.0 -42.0 -45.0 -42.0 -39.0 -42.0 -35.0 -34.0 -35.0 -34.0 -31.0 -28.0 -21.0 -25.0 -25.0 -25.0 -24.0 -23.0 -16.0 -17.0 -16.0 -13.0 -10.0 -9.0 -6.0 -1.0 0.0 5.0 4.0 9.0 8.0 14.0 10.0 2.0 1.0 -1.0 1.0 -4.0 -9.0 -8.0 -7.0 -12.0 -17.0 -22.0 -23.0 -20.0 -23.0 96 -201.0 -202.0 -197.0 -198.0 -193.0 -194.0 -187.0 -188.0 -183.0 -182.0 -183.0 -178.0 -179.0 -174.0 -175.0 -172.0 -171.0 -168.0 -163.0 -162.0 -159.0 -156.0 -161.0 -156.0 -153.0 -154.0 -147.0 -146.0 -144.0 -144.0 -142.0 -139.0 -138.0 -137.0 -132.0 -131.0 -134.0 -129.0 -124.0 -125.0 -122.0 -121.0 -116.0 -115.0 -116.0 -109.0 -108.0 -103.0 -104.0 -99.0 -96.0 -93.0 -90.0 -89.0 -84.0 -81.0 -80.0 -79.0 -80.0 -77.0 -76.0 -71.0 -68.0 -65.0 -62.0 -61.0 -62.0 -57.0 -56.0 -51.0 -48.0 -49.0 -46.0 -47.0 -42.0 -45.0 -42.0 -39.0 -40.0 -35.0 -34.0 -35.0 -32.0 -31.0 -28.0 -21.0 -25.0 -25.0 -23.0 -22.0 -21.0 -14.0 -17.0 -16.0 -11.0 -8.0 -7.0 -4.0 1.0 0.0 5.0 4.0 9.0 10.0 14.0 10.0 4.0 3.0 0.0 1.0 -6.0 -7.0 -10.0 -9.0 -12.0 -19.0 -20.0 -23.0 -20.0 97 -200.0 -201.0 -200.0 -197.0 -200.0 -193.0 -194.0 -187.0 -186.0 -183.0 -182.0 -183.0 -178.0 -179.0 -174.0 -175.0 -172.0 -169.0 -170.0 -163.0 -162.0 -159.0 -156.0 -159.0 -156.0 -153.0 -152.0 -146.0 -145.0 -144.0 -144.0 -140.0 -139.0 -136.0 -137.0 -132.0 -129.0 -132.0 -129.0 -122.0 -125.0 -122.0 -121.0 -116.0 -115.0 -114.0 -109.0 -106.0 -101.0 -102.0 -97.0 -96.0 -91.0 -88.0 -89.0 -84.0 -81.0 -80.0 -79.0 -80.0 -75.0 -74.0 -69.0 -66.0 -65.0 -62.0 -61.0 -60.0 -55.0 -56.0 -51.0 -48.0 -49.0 -46.0 -49.0 -42.0 -45.0 -44.0 -39.0 -40.0 -37.0 -34.0 -35.0 -32.0 -33.0 -28.0 -21.0 -25.0 -24.0 -23.0 -22.0 -19.0 -14.0 -17.0 -14.0 -9.0 -6.0 -5.0 -2.0 1.0 0.0 5.0 4.0 9.0 12.0 14.0 10.0 6.0 3.0 0.0 -1.0 -4.0 -5.0 -10.0 -11.0 -14.0 -19.0 -18.0 -21.0 98 -205.0 -200.0 -201.0 -200.0 -197.0 -198.0 -193.0 -194.0 -187.0 -186.0 -183.0 -182.0 -183.0 -178.0 -179.0 -174.0 -175.0 -172.0 -169.0 -168.0 -163.0 -160.0 -159.0 -156.0 -157.0 -156.0 -153.0 -152.0 -146.0 -145.0 -144.0 -142.0 -140.0 -139.0 -136.0 -137.0 -132.0 -129.0 -130.0 -127.0 -122.0 -125.0 -122.0 -121.0 -116.0 -115.0 -112.0 -111.0 -106.0 -101.0 -102.0 -97.0 -94.0 -91.0 -88.0 -89.0 -84.0 -81.0 -80.0 -79.0 -78.0 -75.0 -72.0 -67.0 -68.0 -67.0 -62.0 -63.0 -60.0 -55.0 -58.0 -51.0 -48.0 -49.0 -46.0 -49.0 -42.0 -45.0 -44.0 -39.0 -40.0 -37.0 -32.0 -35.0 -32.0 -33.0 -28.0 -21.0 -24.0 -22.0 -21.0 -20.0 -19.0 -14.0 -17.0 -12.0 -7.0 -4.0 -4.0 -4.0 0.0 -2.0 3.0 4.0 9.0 14.0 14.0 10.0 6.0 3.0 -2.0 -1.0 -6.0 -7.0 -10.0 -13.0 -16.0 -19.0 -18.0 99 -206.0 -205.0 -198.0 -201.0 -200.0 -197.0 -196.0 -193.0 -192.0 -185.0 -186.0 -181.0 -182.0 -181.0 -178.0 -179.0 -174.0 -173.0 -172.0 -169.0 -168.0 -163.0 -160.0 -157.0 -156.0 -157.0 -154.0 -153.0 -151.0 -146.0 -145.0 -142.0 -142.0 -138.0 -139.0 -136.0 -135.0 -132.0 -129.0 -128.0 -127.0 -122.0 -123.0 -122.0 -119.0 -116.0 -113.0 -110.0 -109.0 -104.0 -99.0 -102.0 -95.0 -92.0 -89.0 -88.0 -89.0 -84.0 -81.0 -80.0 -77.0 -76.0 -73.0 -70.0 -67.0 -68.0 -67.0 -62.0 -61.0 -60.0 -55.0 -58.0 -51.0 -48.0 -49.0 -46.0 -47.0 -42.0 -45.0 -44.0 -39.0 -40.0 -37.0 -32.0 -35.0 -34.0 -31.0 -28.0 -21.0 -24.0 -22.0 -19.0 -20.0 -19.0 -14.0 -15.0 -10.0 -5.0 -2.0 -4.0 -4.0 0.0 -2.0 3.0 6.0 9.0 14.0 14.0 10.0 6.0 1.0 -2.0 -3.0 -8.0 -7.0 -12.0 -15.0 -16.0 -19.0 100 -207.0 -206.0 -203.0 -198.0 -201.0 -200.0 -197.0 -196.0 -193.0 -190.0 -185.0 -184.0 -181.0 -182.0 -181.0 -178.0 -179.0 -172.0 -175.0 -172.0 -169.0 -166.0 -163.0 -158.0 -157.0 -156.0 -157.0 -153.0 -152.0 -151.0 -146.0 -143.0 -142.0 -140.0 -138.0 -139.0 -136.0 -133.0 -132.0 -127.0 -128.0 -127.0 -120.0 -123.0 -120.0 -117.0 -114.0 -111.0 -108.0 -107.0 -102.0 -99.0 -100.0 -93.0 -90.0 -89.0 -88.0 -89.0 -84.0 -81.0 -80.0 -75.0 -74.0 -71.0 -70.0 -67.0 -68.0 -65.0 -60.0 -61.0 -60.0 -55.0 -56.0 -51.0 -48.0 -51.0 -48.0 -47.0 -42.0 -47.0 -44.0 -39.0 -40.0 -37.0 -32.0 -36.0 -36.0 -30.0 -27.0 -21.0 -24.0 -20.0 -19.0 -20.0 -17.0 -12.0 -13.0 -8.0 -3.0 -2.0 -4.0 -5.0 0.0 0.0 3.0 6.0 7.0 14.0 14.0 10.0 4.0 1.0 -2.0 -5.0 -6.0 -7.0 -14.0 -15.0 -16.0 101 -208.0 -209.0 -206.0 -205.0 -198.0 -203.0 -198.0 -197.0 -196.0 -191.0 -192.0 -183.0 -184.0 -181.0 -182.0 -181.0 -178.0 -177.0 -172.0 -173.0 -172.0 -167.0 -166.0 -161.0 -158.0 -157.0 -156.0 -156.0 -151.0 -152.0 -151.0 -144.0 -143.0 -140.0 -140.0 -138.0 -139.0 -134.0 -133.0 -130.0 -127.0 -128.0 -125.0 -120.0 -121.0 -118.0 -115.0 -112.0 -109.0 -106.0 -105.0 -102.0 -97.0 -98.0 -91.0 -90.0 -89.0 -88.0 -89.0 -84.0 -79.0 -78.0 -73.0 -72.0 -71.0 -70.0 -65.0 -66.0 -65.0 -60.0 -63.0 -62.0 -53.0 -56.0 -51.0 -48.0 -51.0 -48.0 -47.0 -42.0 -47.0 -42.0 -37.0 -40.0 -37.0 -32.0 -37.0 -35.0 -28.0 -27.0 -21.0 -22.0 -20.0 -19.0 -20.0 -15.0 -10.0 -11.0 -6.0 -3.0 -2.0 -4.0 -5.0 0.0 2.0 3.0 4.0 7.0 14.0 14.0 8.0 4.0 1.0 -2.0 -3.0 -8.0 -7.0 -12.0 -13.0 102 -213.0 -208.0 -207.0 -208.0 -207.0 -198.0 -201.0 -198.0 -195.0 -194.0 -191.0 -190.0 -183.0 -184.0 -181.0 -182.0 -179.0 -176.0 -177.0 -170.0 -173.0 -170.0 -167.0 -164.0 -161.0 -158.0 -157.0 -155.0 -154.0 -151.0 -152.0 -149.0 -144.0 -141.0 -140.0 -140.0 -138.0 -137.0 -134.0 -131.0 -132.0 -127.0 -126.0 -127.0 -118.0 -119.0 -116.0 -113.0 -110.0 -107.0 -104.0 -105.0 -100.0 -95.0 -96.0 -91.0 -90.0 -89.0 -88.0 -87.0 -82.0 -77.0 -76.0 -71.0 -72.0 -71.0 -68.0 -63.0 -64.0 -65.0 -60.0 -63.0 -60.0 -53.0 -56.0 -51.0 -48.0 -51.0 -48.0 -47.0 -42.0 -45.0 -40.0 -37.0 -40.0 -37.0 -32.0 -36.0 -33.0 -28.0 -27.0 -20.0 -22.0 -20.0 -19.0 -18.0 -13.0 -8.0 -9.0 -6.0 -3.0 -2.0 -4.0 -3.0 2.0 2.0 3.0 4.0 7.0 14.0 14.0 8.0 6.0 1.0 0.0 -3.0 -8.0 -5.0 -10.0 103 -210.0 -213.0 -208.0 -207.0 -208.0 -205.0 -198.0 -201.0 -198.0 -195.0 -194.0 -191.0 -190.0 -183.0 -184.0 -181.0 -182.0 -179.0 -176.0 -175.0 -170.0 -171.0 -170.0 -167.0 -162.0 -161.0 -158.0 -157.0 -155.0 -154.0 -151.0 -150.0 -149.0 -144.0 -141.0 -140.0 -141.0 -138.0 -135.0 -132.0 -131.0 -132.0 -127.0 -126.0 -125.0 -118.0 -117.0 -116.0 -113.0 -112.0 -105.0 -104.0 -103.0 -100.0 -95.0 -94.0 -91.0 -92.0 -89.0 -86.0 -87.0 -84.0 -75.0 -74.0 -71.0 -72.0 -73.0 -68.0 -61.0 -64.0 -65.0 -60.0 -61.0 -58.0 -53.0 -56.0 -51.0 -48.0 -51.0 -48.0 -47.0 -42.0 -43.0 -40.0 -37.0 -40.0 -37.0 -32.0 -34.0 -31.0 -26.0 -25.0 -20.0 -22.0 -20.0 -17.0 -16.0 -11.0 -6.0 -9.0 -6.0 -3.0 -2.0 -2.0 -3.0 4.0 2.0 2.0 2.0 5.0 14.0 14.0 6.0 6.0 -1.0 0.0 -3.0 -8.0 -5.0 104 -215.0 -210.0 -213.0 -210.0 -207.0 -206.0 -203.0 -198.0 -199.0 -196.0 -195.0 -192.0 -191.0 -188.0 -183.0 -184.0 -181.0 -180.0 -179.0 -176.0 -177.0 -170.0 -171.0 -170.0 -165.0 -162.0 -159.0 -158.0 -158.0 -157.0 -156.0 -151.0 -150.0 -149.0 -144.0 -141.0 -138.0 -141.0 -136.0 -137.0 -132.0 -131.0 -132.0 -129.0 -126.0 -123.0 -116.0 -115.0 -114.0 -111.0 -110.0 -105.0 -104.0 -101.0 -98.0 -93.0 -94.0 -91.0 -92.0 -89.0 -84.0 -85.0 -82.0 -75.0 -74.0 -71.0 -72.0 -71.0 -68.0 -61.0 -64.0 -67.0 -60.0 -59.0 -58.0 -53.0 -54.0 -53.0 -48.0 -51.0 -50.0 -47.0 -44.0 -45.0 -40.0 -37.0 -38.0 -37.0 -32.0 -32.0 -29.0 -26.0 -25.0 -20.0 -22.0 -20.0 -17.0 -14.0 -11.0 -6.0 -9.0 -6.0 -3.0 -2.0 0.0 -1.0 4.0 2.0 2.0 4.0 7.0 14.0 14.0 5.0 4.0 -1.0 0.0 -3.0 -6.0 105 -218.0 -215.0 -210.0 -213.0 -210.0 -205.0 -206.0 -203.0 -198.0 -199.0 -196.0 -195.0 -192.0 -191.0 -188.0 -183.0 -184.0 -181.0 -180.0 -177.0 -176.0 -175.0 -170.0 -171.0 -168.0 -165.0 -162.0 -159.0 -158.0 -158.0 -157.0 -154.0 -151.0 -150.0 -149.0 -144.0 -141.0 -138.0 -139.0 -134.0 -139.0 -132.0 -131.0 -134.0 -129.0 -128.0 -121.0 -116.0 -115.0 -116.0 -109.0 -112.0 -105.0 -104.0 -103.0 -96.0 -93.0 -94.0 -93.0 -92.0 -89.0 -84.0 -85.0 -80.0 -75.0 -74.0 -71.0 -72.0 -71.0 -70.0 -61.0 -64.0 -65.0 -60.0 -59.0 -58.0 -53.0 -54.0 -53.0 -48.0 -51.0 -50.0 -45.0 -44.0 -45.0 -40.0 -37.0 -38.0 -36.0 -31.0 -30.0 -27.0 -26.0 -25.0 -18.0 -22.0 -18.0 -15.0 -12.0 -11.0 -8.0 -9.0 -6.0 -1.0 -2.0 2.0 -1.0 4.0 2.0 4.0 6.0 5.0 14.0 12.0 5.0 4.0 -1.0 2.0 -3.0 106 -219.0 -220.0 -215.0 -210.0 -213.0 -212.0 -205.0 -208.0 -205.0 -200.0 -199.0 -198.0 -197.0 -194.0 -193.0 -190.0 -185.0 -186.0 -181.0 -182.0 -177.0 -178.0 -175.0 -170.0 -171.0 -170.0 -167.0 -164.0 -159.0 -160.0 -158.0 -157.0 -156.0 -151.0 -152.0 -151.0 -144.0 -141.0 -136.0 -137.0 -134.0 -139.0 -132.0 -131.0 -132.0 -129.0 -126.0 -121.0 -116.0 -115.0 -114.0 -109.0 -110.0 -105.0 -104.0 -101.0 -96.0 -93.0 -94.0 -93.0 -90.0 -91.0 -82.0 -85.0 -80.0 -75.0 -74.0 -71.0 -70.0 -71.0 -72.0 -61.0 -64.0 -63.0 -62.0 -61.0 -60.0 -53.0 -56.0 -55.0 -50.0 -51.0 -50.0 -45.0 -46.0 -47.0 -42.0 -37.0 -37.0 -36.0 -29.0 -30.0 -29.0 -26.0 -23.0 -16.0 -20.0 -16.0 -13.0 -12.0 -11.0 -8.0 -9.0 -6.0 -1.0 0.0 2.0 -1.0 6.0 2.0 6.0 6.0 5.0 14.0 10.0 5.0 4.0 -1.0 2.0 107 -220.0 -219.0 -218.0 -215.0 -210.0 -211.0 -210.0 -205.0 -206.0 -203.0 -200.0 -197.0 -198.0 -195.0 -194.0 -193.0 -190.0 -185.0 -186.0 -181.0 -182.0 -177.0 -178.0 -173.0 -170.0 -171.0 -168.0 -166.0 -163.0 -159.0 -160.0 -158.0 -157.0 -154.0 -151.0 -152.0 -149.0 -142.0 -139.0 -136.0 -137.0 -134.0 -137.0 -132.0 -131.0 -130.0 -127.0 -124.0 -119.0 -114.0 -113.0 -114.0 -109.0 -108.0 -103.0 -102.0 -101.0 -96.0 -93.0 -94.0 -93.0 -88.0 -89.0 -82.0 -85.0 -80.0 -75.0 -74.0 -71.0 -70.0 -71.0 -72.0 -61.0 -62.0 -63.0 -62.0 -61.0 -60.0 -53.0 -56.0 -55.0 -50.0 -51.0 -50.0 -45.0 -46.0 -45.0 -42.0 -37.0 -35.0 -34.0 -29.0 -30.0 -29.0 -24.0 -23.0 -16.0 -19.0 -16.0 -15.0 -12.0 -11.0 -10.0 -11.0 -4.0 1.0 0.0 2.0 1.0 8.0 2.0 6.0 6.0 6.0 14.0 8.0 5.0 4.0 -1.0 108 -223.0 -220.0 -219.0 -218.0 -217.0 -210.0 -209.0 -212.0 -205.0 -206.0 -203.0 -202.0 -197.0 -196.0 -195.0 -194.0 -193.0 -188.0 -187.0 -184.0 -181.0 -182.0 -179.0 -176.0 -173.0 -170.0 -171.0 -169.0 -166.0 -163.0 -159.0 -161.0 -160.0 -155.0 -154.0 -153.0 -152.0 -147.0 -142.0 -137.0 -136.0 -137.0 -134.0 -137.0 -132.0 -131.0 -128.0 -127.0 -122.0 -117.0 -112.0 -113.0 -114.0 -107.0 -106.0 -103.0 -102.0 -101.0 -96.0 -93.0 -94.0 -91.0 -86.0 -87.0 -82.0 -85.0 -80.0 -75.0 -72.0 -71.0 -70.0 -71.0 -70.0 -61.0 -62.0 -64.0 -64.0 -61.0 -58.0 -55.0 -56.0 -55.0 -50.0 -51.0 -50.0 -47.0 -48.0 -44.0 -41.0 -39.0 -35.0 -34.0 -29.0 -30.0 -27.0 -22.0 -21.0 -14.0 -17.0 -16.0 -15.0 -12.0 -11.0 -10.0 -9.0 -4.0 1.0 0.0 2.0 0.0 8.0 2.0 6.0 8.0 6.0 14.0 8.0 5.0 4.0 109 -222.0 -223.0 -218.0 -219.0 -218.0 -217.0 -210.0 -209.0 -210.0 -203.0 -206.0 -201.0 -202.0 -197.0 -196.0 -195.0 -192.0 -191.0 -188.0 -187.0 -184.0 -181.0 -182.0 -179.0 -174.0 -173.0 -170.0 -170.0 -167.0 -166.0 -163.0 -159.0 -161.0 -158.0 -155.0 -154.0 -153.0 -150.0 -145.0 -142.0 -137.0 -136.0 -137.0 -134.0 -137.0 -132.0 -129.0 -126.0 -125.0 -120.0 -115.0 -112.0 -113.0 -112.0 -105.0 -104.0 -103.0 -102.0 -101.0 -96.0 -93.0 -94.0 -89.0 -86.0 -87.0 -82.0 -83.0 -78.0 -75.0 -72.0 -71.0 -70.0 -71.0 -68.0 -61.0 -62.0 -64.0 -64.0 -61.0 -58.0 -55.0 -56.0 -55.0 -50.0 -51.0 -50.0 -49.0 -47.0 -44.0 -39.0 -38.0 -37.0 -34.0 -29.0 -28.0 -27.0 -22.0 -19.0 -14.0 -17.0 -16.0 -15.0 -12.0 -11.0 -10.0 -7.0 -4.0 1.0 2.0 2.0 2.0 8.0 2.0 8.0 8.0 6.0 14.0 8.0 5.0 110 -227.0 -222.0 -223.0 -218.0 -219.0 -216.0 -215.0 -210.0 -209.0 -208.0 -203.0 -204.0 -201.0 -200.0 -197.0 -196.0 -193.0 -190.0 -191.0 -186.0 -187.0 -184.0 -181.0 -180.0 -177.0 -174.0 -171.0 -169.0 -168.0 -167.0 -166.0 -163.0 -159.0 -159.0 -158.0 -155.0 -152.0 -151.0 -148.0 -145.0 -142.0 -137.0 -136.0 -137.0 -134.0 -135.0 -130.0 -127.0 -124.0 -123.0 -118.0 -115.0 -112.0 -111.0 -110.0 -103.0 -104.0 -103.0 -102.0 -101.0 -96.0 -91.0 -92.0 -89.0 -86.0 -87.0 -80.0 -81.0 -78.0 -77.0 -72.0 -71.0 -72.0 -69.0 -68.0 -61.0 -60.0 -64.0 -64.0 -61.0 -58.0 -55.0 -56.0 -55.0 -50.0 -51.0 -48.0 -49.0 -47.0 -42.0 -37.0 -38.0 -37.0 -34.0 -29.0 -28.0 -27.0 -20.0 -19.0 -14.0 -17.0 -16.0 -15.0 -12.0 -11.0 -8.0 -7.0 -4.0 1.0 4.0 4.0 2.0 8.0 4.0 8.0 8.0 4.0 14.0 8.0 111 -228.0 -229.0 -222.0 -225.0 -218.0 -221.0 -216.0 -215.0 -212.0 -211.0 -210.0 -203.0 -206.0 -201.0 -202.0 -199.0 -196.0 -195.0 -192.0 -191.0 -186.0 -187.0 -186.0 -183.0 -178.0 -179.0 -174.0 -173.0 -171.0 -170.0 -167.0 -164.0 -165.0 -161.0 -161.0 -160.0 -157.0 -154.0 -149.0 -146.0 -145.0 -144.0 -137.0 -136.0 -137.0 -134.0 -135.0 -130.0 -129.0 -124.0 -121.0 -118.0 -115.0 -112.0 -111.0 -110.0 -103.0 -104.0 -103.0 -100.0 -99.0 -96.0 -89.0 -90.0 -89.0 -86.0 -87.0 -80.0 -79.0 -78.0 -77.0 -72.0 -71.0 -72.0 -69.0 -68.0 -61.0 -60.0 -62.0 -64.0 -61.0 -58.0 -55.0 -56.0 -55.0 -50.0 -51.0 -48.0 -48.0 -45.0 -40.0 -35.0 -39.0 -39.0 -32.0 -27.0 -26.0 -25.0 -18.0 -19.0 -14.0 -19.0 -16.0 -17.0 -12.0 -11.0 -8.0 -7.0 -4.0 1.0 6.0 4.0 2.0 8.0 4.0 8.0 8.0 6.0 14.0 112 -233.0 -228.0 -227.0 -224.0 -227.0 -218.0 -221.0 -216.0 -213.0 -214.0 -211.0 -210.0 -203.0 -204.0 -201.0 -202.0 -199.0 -194.0 -197.0 -192.0 -191.0 -188.0 -187.0 -184.0 -181.0 -178.0 -177.0 -173.0 -172.0 -173.0 -170.0 -169.0 -164.0 -163.0 -163.0 -161.0 -158.0 -157.0 -154.0 -151.0 -148.0 -145.0 -146.0 -139.0 -136.0 -135.0 -134.0 -133.0 -128.0 -127.0 -122.0 -121.0 -118.0 -113.0 -112.0 -109.0 -110.0 -103.0 -104.0 -105.0 -98.0 -97.0 -94.0 -89.0 -90.0 -89.0 -86.0 -85.0 -80.0 -81.0 -78.0 -77.0 -72.0 -69.0 -72.0 -69.0 -66.0 -61.0 -60.0 -62.0 -64.0 -61.0 -58.0 -55.0 -56.0 -55.0 -50.0 -51.0 -48.0 -46.0 -43.0 -40.0 -35.0 -40.0 -37.0 -32.0 -27.0 -24.0 -25.0 -18.0 -19.0 -14.0 -19.0 -16.0 -15.0 -10.0 -11.0 -8.0 -5.0 -2.0 3.0 6.0 4.0 4.0 8.0 4.0 6.0 8.0 8.0 113 -234.0 -233.0 -228.0 -227.0 -224.0 -225.0 -218.0 -221.0 -216.0 -213.0 -214.0 -211.0 -210.0 -203.0 -204.0 -201.0 -202.0 -199.0 -194.0 -195.0 -192.0 -189.0 -188.0 -187.0 -182.0 -181.0 -178.0 -177.0 -173.0 -172.0 -173.0 -168.0 -169.0 -164.0 -163.0 -163.0 -161.0 -158.0 -155.0 -152.0 -151.0 -148.0 -145.0 -144.0 -139.0 -136.0 -133.0 -134.0 -133.0 -128.0 -125.0 -122.0 -121.0 -118.0 -113.0 -110.0 -109.0 -110.0 -103.0 -104.0 -105.0 -98.0 -95.0 -92.0 -89.0 -90.0 -89.0 -86.0 -83.0 -80.0 -81.0 -78.0 -77.0 -72.0 -69.0 -72.0 -69.0 -66.0 -61.0 -60.0 -62.0 -66.0 -61.0 -58.0 -55.0 -56.0 -55.0 -52.0 -52.0 -47.0 -44.0 -43.0 -40.0 -35.0 -38.0 -35.0 -30.0 -25.0 -22.0 -25.0 -18.0 -19.0 -14.0 -19.0 -16.0 -13.0 -10.0 -11.0 -8.0 -3.0 0.0 3.0 6.0 4.0 4.0 8.0 6.0 6.0 8.0 114 -235.0 -234.0 -233.0 -230.0 -227.0 -224.0 -223.0 -218.0 -219.0 -216.0 -213.0 -212.0 -211.0 -208.0 -203.0 -204.0 -201.0 -200.0 -199.0 -194.0 -197.0 -192.0 -189.0 -190.0 -185.0 -182.0 -179.0 -177.0 -178.0 -175.0 -174.0 -171.0 -168.0 -169.0 -164.0 -163.0 -162.0 -161.0 -158.0 -155.0 -152.0 -151.0 -150.0 -145.0 -144.0 -139.0 -136.0 -131.0 -132.0 -131.0 -128.0 -125.0 -120.0 -119.0 -116.0 -111.0 -110.0 -109.0 -110.0 -103.0 -104.0 -103.0 -98.0 -93.0 -92.0 -89.0 -90.0 -89.0 -84.0 -83.0 -80.0 -81.0 -78.0 -75.0 -72.0 -69.0 -70.0 -69.0 -66.0 -61.0 -60.0 -62.0 -64.0 -61.0 -58.0 -55.0 -56.0 -54.0 -52.0 -50.0 -45.0 -42.0 -43.0 -40.0 -35.0 -36.0 -33.0 -30.0 -23.0 -22.0 -25.0 -18.0 -19.0 -14.0 -17.0 -14.0 -13.0 -10.0 -9.0 -6.0 -1.0 0.0 5.0 8.0 4.0 4.0 8.0 8.0 8.0 115 -238.0 -235.0 -234.0 -233.0 -230.0 -227.0 -224.0 -223.0 -218.0 -219.0 -216.0 -213.0 -212.0 -211.0 -208.0 -203.0 -204.0 -201.0 -200.0 -197.0 -194.0 -195.0 -192.0 -189.0 -188.0 -185.0 -182.0 -179.0 -177.0 -178.0 -175.0 -174.0 -171.0 -168.0 -169.0 -164.0 -163.0 -162.0 -159.0 -156.0 -155.0 -152.0 -151.0 -148.0 -145.0 -144.0 -139.0 -136.0 -131.0 -132.0 -129.0 -128.0 -123.0 -120.0 -119.0 -114.0 -111.0 -110.0 -109.0 -110.0 -103.0 -104.0 -101.0 -96.0 -93.0 -92.0 -89.0 -90.0 -87.0 -84.0 -83.0 -80.0 -81.0 -76.0 -75.0 -72.0 -69.0 -70.0 -69.0 -66.0 -61.0 -60.0 -63.0 -64.0 -61.0 -58.0 -55.0 -56.0 -52.0 -51.0 -48.0 -43.0 -42.0 -43.0 -40.0 -33.0 -34.0 -31.0 -28.0 -23.0 -22.0 -23.0 -18.0 -19.0 -14.0 -15.0 -14.0 -13.0 -8.0 -7.0 -4.0 -1.0 2.0 5.0 8.0 4.0 6.0 8.0 8.0 116 -241.0 -240.0 -235.0 -234.0 -235.0 -230.0 -229.0 -226.0 -225.0 -218.0 -221.0 -218.0 -215.0 -212.0 -213.0 -210.0 -205.0 -206.0 -201.0 -200.0 -199.0 -194.0 -195.0 -194.0 -191.0 -190.0 -187.0 -184.0 -179.0 -177.0 -180.0 -175.0 -174.0 -171.0 -170.0 -171.0 -166.0 -165.0 -160.0 -159.0 -158.0 -155.0 -154.0 -151.0 -150.0 -145.0 -144.0 -141.0 -138.0 -131.0 -130.0 -131.0 -126.0 -125.0 -122.0 -119.0 -116.0 -111.0 -112.0 -109.0 -110.0 -103.0 -104.0 -101.0 -98.0 -95.0 -94.0 -89.0 -90.0 -87.0 -84.0 -85.0 -80.0 -81.0 -78.0 -77.0 -72.0 -71.0 -70.0 -71.0 -66.0 -63.0 -60.0 -63.0 -64.0 -61.0 -58.0 -55.0 -55.0 -50.0 -49.0 -46.0 -43.0 -42.0 -41.0 -38.0 -31.0 -32.0 -29.0 -28.0 -23.0 -22.0 -23.0 -18.0 -19.0 -14.0 -15.0 -14.0 -11.0 -6.0 -5.0 -4.0 1.0 2.0 5.0 8.0 4.0 8.0 8.0 117 -242.0 -243.0 -238.0 -235.0 -236.0 -233.0 -228.0 -231.0 -226.0 -225.0 -218.0 -221.0 -218.0 -215.0 -212.0 -213.0 -212.0 -205.0 -208.0 -203.0 -200.0 -201.0 -194.0 -193.0 -192.0 -191.0 -190.0 -188.0 -185.0 -181.0 -177.0 -180.0 -177.0 -172.0 -171.0 -172.0 -169.0 -168.0 -163.0 -158.0 -159.0 -160.0 -153.0 -152.0 -151.0 -148.0 -145.0 -144.0 -141.0 -138.0 -131.0 -130.0 -131.0 -124.0 -123.0 -120.0 -121.0 -118.0 -111.0 -114.0 -111.0 -108.0 -103.0 -102.0 -101.0 -100.0 -97.0 -94.0 -89.0 -92.0 -89.0 -84.0 -87.0 -80.0 -81.0 -80.0 -79.0 -72.0 -73.0 -72.0 -71.0 -66.0 -65.0 -60.0 -63.0 -66.0 -63.0 -57.0 -55.0 -55.0 -48.0 -49.0 -48.0 -45.0 -42.0 -39.0 -38.0 -31.0 -30.0 -31.0 -30.0 -23.0 -22.0 -23.0 -18.0 -19.0 -14.0 -15.0 -12.0 -11.0 -4.0 -5.0 -4.0 3.0 0.0 5.0 10.0 6.0 10.0 118 -243.0 -242.0 -241.0 -238.0 -235.0 -236.0 -231.0 -228.0 -229.0 -224.0 -225.0 -218.0 -221.0 -216.0 -215.0 -212.0 -211.0 -210.0 -205.0 -206.0 -203.0 -200.0 -201.0 -194.0 -191.0 -192.0 -189.0 -189.0 -186.0 -185.0 -181.0 -177.0 -180.0 -177.0 -172.0 -171.0 -172.0 -167.0 -166.0 -163.0 -158.0 -159.0 -158.0 -153.0 -152.0 -149.0 -146.0 -143.0 -142.0 -139.0 -136.0 -131.0 -130.0 -129.0 -122.0 -121.0 -120.0 -121.0 -118.0 -111.0 -114.0 -111.0 -106.0 -103.0 -102.0 -101.0 -100.0 -97.0 -94.0 -89.0 -92.0 -89.0 -84.0 -85.0 -80.0 -81.0 -80.0 -79.0 -72.0 -73.0 -72.0 -71.0 -66.0 -65.0 -60.0 -63.0 -64.0 -62.0 -57.0 -54.0 -53.0 -48.0 -49.0 -48.0 -45.0 -42.0 -39.0 -36.0 -31.0 -30.0 -31.0 -28.0 -23.0 -22.0 -21.0 -18.0 -19.0 -14.0 -13.0 -10.0 -9.0 -4.0 -5.0 -2.0 3.0 0.0 5.0 10.0 8.0 119 -246.0 -243.0 -242.0 -241.0 -238.0 -235.0 -234.0 -231.0 -228.0 -227.0 -224.0 -223.0 -218.0 -219.0 -216.0 -215.0 -212.0 -209.0 -210.0 -205.0 -206.0 -203.0 -200.0 -199.0 -194.0 -191.0 -190.0 -188.0 -187.0 -186.0 -185.0 -181.0 -177.0 -178.0 -177.0 -172.0 -171.0 -170.0 -167.0 -164.0 -163.0 -158.0 -159.0 -156.0 -153.0 -152.0 -147.0 -144.0 -141.0 -140.0 -137.0 -136.0 -131.0 -128.0 -127.0 -122.0 -121.0 -120.0 -121.0 -118.0 -111.0 -112.0 -109.0 -104.0 -103.0 -102.0 -99.0 -98.0 -95.0 -94.0 -89.0 -92.0 -89.0 -84.0 -85.0 -80.0 -79.0 -80.0 -77.0 -72.0 -73.0 -72.0 -71.0 -66.0 -65.0 -60.0 -63.0 -63.0 -60.0 -57.0 -54.0 -51.0 -48.0 -49.0 -46.0 -43.0 -40.0 -37.0 -34.0 -31.0 -30.0 -29.0 -28.0 -23.0 -22.0 -21.0 -18.0 -19.0 -14.0 -13.0 -10.0 -9.0 -4.0 -3.0 -2.0 3.0 2.0 7.0 12.0 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-5.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-5.html"},{"title":"混合ガウス分布のEMアルゴリズム","text":"クラスタリング で省略した、混合ガウス分布のEMアルゴリズムの計算過程を記述します。 EMアルゴリズム 観測データ \\(\\mathbf{X}=\\{\\mathbf{x}_1,\\ldots,\\mathbf{x}_N\\}\\) に対する対数尤度関数は、 \\((9.7)\\) から以下のように書けます。 （※明示的にパラメータを記載しています。） $$\\ln p\\left(\\mathbf{X}|\\boldsymbol{\\pi,\\mu,\\Sigma}\\right) = \\sum_{n=1}&#94;N\\ln\\left\\{\\sum_{k=1}&#94;K\\pi_k\\mathcal{N}\\left(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k\\right)\\right\\}\\qquad (9.14)$$ E step $$\\begin{aligned} p(z_{k}=1|\\mathbf{x}) &\\equiv \\frac{p(z_{k}=1)p(\\mathbf{x}|z_{k}=1)}{p(\\mathbf{x})}\\qquad (\\because\\text{Bayes' theorem})\\\\ &\\propto p(z_{k}=1)p(\\mathbf{x}|z_{k}=1) \\\\ &=\\pi_k\\mathcal{N}(\\mathbf{x}|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k) \\end{aligned}$$ なので、総和が \\(1\\) になるように正規化を行えば 負担率 が以下のように求まります。 $$\\gamma(z_{k})\\equiv p(z_{k}=1|\\mathbf{x}) =\\frac{\\pi_{k}\\mathcal{N}(\\mathbf{x}|\\mathbf{\\mu_{\\rm{k}}}, \\mathbf{\\Sigma_{\\rm{k}}})}{\\sum_{j=1}&#94;{K}\\pi_{j}\\mathcal{N}(\\mathbf{x}|\\mathbf{\\mu_{\\rm{j}}}, \\mathbf{\\Sigma_{\\rm{j}}})}\\qquad (9.13)$$ ※ なお、この時分母である \\(\\sum_{j=1}&#94;{K}\\pi_{j}\\mathcal{N}(\\mathbf{x}|\\mathbf{\\mu_{\\rm{j}}}, \\mathbf{\\Sigma_{\\rm{j}}})\\) が \\(p(\\mathbf{x})\\) であることは有用です。 （ 生物データマイニング論 第1回 では、これを用いて可視化していました。） Maximization step ※ 対数尤度関数 \\((9.14)\\) を \\(\\ln L\\) と記述します。 \\(\\boldsymbol{\\mu}_k\\) 対数尤度 \\((9.14)\\) を \\(\\boldsymbol{\\mu}_k\\) で微分します。この時 正規分布は \\(e&#94;{\\text{hoge}}\\) という形をしており、微分しても形が変わらないので、 $$\\begin{aligned} \\frac{\\partial\\ln L}{\\partial\\boldsymbol{\\mu}_k} &= \\sum_{i=n}&#94;N \\frac{\\pi_k\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)}{\\sum_j \\pi_j \\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_j,\\boldsymbol{\\Sigma}_j)}\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\\\ &= \\boldsymbol{\\Sigma}_k&#94;{-1}\\sum_{n=1}&#94;N \\gamma_{nk}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\\\ &= 0\\\\ \\therefore\\boldsymbol{\\mu}_k&#94;{\\star} &= \\frac{\\sum_{n=1}&#94;N\\gamma(z_{nk})\\mathbf{x}_n}{\\sum_{n=1}&#94;N\\gamma(z_{nk})} \\qquad (9.17)\\\\ \\end{aligned}$$ と最適解が求まりました。 \\(\\pi_k\\) パラメータ \\(\\pi_k\\) については、 \\(\\sum_{k=1}&#94;K \\pi_k = 1\\) という制約に注意する必要があります。ですが、 隠れマルコフモデルの最尤推定 で行なった能登同様に、ラグランジュの未定乗数 \\(\\lambda\\) を導入すればこの問題は解けます。 $$L_{\\lambda} = \\log L + \\lambda\\left(\\sum_{c=1}&#94;K \\pi_c - 1\\right)$$ の導関数が \\(0\\) となる条件を求める事になるので、 $$\\begin{aligned} \\frac{\\partial L_{\\lambda}}{\\partial\\pi_k} &= \\sum_{n=1}&#94;N \\frac{\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)}{\\sum_k \\pi_k \\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)} + \\lambda\\\\ &= \\sum_{n=1}&#94;N \\frac{\\gamma_{nk}}{\\pi_k} + \\lambda = 0 &\\therefore \\pi_k = -\\frac{1}{\\lambda}\\sum_{n=1}&#94;N \\gamma_{ic}\\\\ \\frac{\\partial L_{\\lambda}}{\\partial\\lambda} &= \\sum_{k=1}&#94;K \\pi_k - 1\\\\ &= \\left(-\\frac{1}{\\lambda}\\sum_{k=1}&#94;K\\sum_{n=1}&#94;N \\gamma_{nk}\\right) - 1 = 0 &\\therefore \\lambda = -n \\end{aligned}$$ より、 $$\\pi_k&#94;{\\star} = \\frac{\\sum_{n=1}&#94;N\\gamma(z_{nk})}{N} \\qquad(9.22)$$ と最適解が求まりました。 \\(\\boldsymbol{\\Sigma}_k\\) \\(\\boldsymbol{\\mu}_k\\) と同様に、対数尤度 \\((9.14)\\) を \\(\\boldsymbol{\\Sigma}_k\\) で微分します。すると、 $$\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\log L = \\sum_{n=1}&#94;N\\frac{\\pi_k\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)}{\\sum_j \\pi_j \\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_j,\\boldsymbol{\\Sigma}_j)}$$ となります。ここで、 \\(\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)\\) を計算すると、 $$\\begin{aligned} &\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)\\\\ =&\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\frac{1}{(2\\pi)&#94;{D/2}}\\frac{1}{|\\boldsymbol{\\Sigma}_k|&#94;{1/2}}\\exp\\left\\{-\\frac{1}{2}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;T\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\right\\}\\\\ =&\\frac{1}{(2\\pi)&#94;{D/2}}\\biggl(\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\frac{1}{|\\boldsymbol{\\Sigma}_k|&#94;{1/2}}\\biggr)\\exp\\left\\{-\\frac{1}{2}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;T\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\right\\}\\\\ &+\\frac{1}{(2\\pi)&#94;{D/2}}\\frac{1}{|\\boldsymbol{\\Sigma}_k|&#94;{1/2}}\\left(\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\exp\\left\\{-\\frac{1}{2}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;T\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\right\\}\\right)\\\\ =&\\frac{1}{(2\\pi)&#94;{D/2}}\\biggl(-\\frac{1}{2}\\biggr)|\\boldsymbol{\\Sigma}_k|&#94;{-1/2}\\boldsymbol{\\Sigma}_k&#94;{-1}\\exp\\left\\{-\\frac{1}{2}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;T\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\right\\}\\quad (\\ast1)\\\\ &+\\frac{1}{(2\\pi)&#94;{D/2}}\\frac{1}{|\\boldsymbol{\\Sigma}_k|&#94;{1/2}}\\frac{1}{2}\\exp\\left\\{-\\frac{1}{2}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;T\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)\\right\\}\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;{T}\\boldsymbol{\\Sigma}_k&#94;{-1}\\quad (\\ast2)\\\\ =&-\\frac{1}{2}\\boldsymbol{\\Sigma}_k&#94;{-1}\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)+\\frac{1}{2}\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;{T}\\boldsymbol{\\Sigma}_k&#94;{-1}\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k)\\\\ =&\\frac{1}{2}\\left\\{\\boldsymbol{\\Sigma}_k&#94;{-1}-\\boldsymbol{\\Sigma}_k&#94;{-1}(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)(\\mathbf{x}_n-\\boldsymbol{\\mu}_k)&#94;{T}\\boldsymbol{\\Sigma}_k&#94;{-1}\\right\\}\\mathcal{N}(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k) \\end{aligned}$$ したがって、 $$ \\boldsymbol{\\Sigma}_k&#94;{\\star}= \\frac{\\sum_{n=1}&#94;N\\gamma(z_{nk})\\left(\\mathbf{x}_n-\\boldsymbol{\\mu}_k\\right)\\left(\\mathbf{x}_n-\\boldsymbol{\\mu}_k\\right)&#94;{\\mathrm{T}}}{\\sum_{n=1}&#94;N\\gamma(z_{nk})} \\qquad (9.19) $$ と最適解が求まりました。 ※ \\(\\ast1,\\ast2\\) の式変形は以下でより詳細に説明します。 が、その前にいくつか基本事項の定義を振り返ります。 行列式 $$\\det A=\\displaystyle\\sum_{\\sigma\\in S_n}\\mathrm{sgn}(\\sigma)\\prod_{i=1}&#94;na_{i\\sigma(i)}=\\displaystyle\\sum_{\\sigma\\in S_n}\\mathrm{sgn}(\\sigma)a_{1\\sigma(1)}a_{2\\sigma(2)}\\cdots a_{n\\sigma(n)}$$ \\(\\sigma\\) は \\(1\\) から \\(n\\) の置換（順列）を表す。 \\(\\mathrm{sgn}(\\sigma)\\) は置換の符号を表す。なお、\b置換の符号は 互\b換の数 に注目しており、奇置換（互換の数が奇数個）なら \\(-1\\) 、偶置換なら \\(+1\\) \b\b 余韻子 \\(n\\) 次正方行列 \\(A := (a_{ij})\\) に対し、 \\(i\\) 行と \\(i\\) 列を \\(1\\) つずつ取り去って作られる小行列を \\(M_{ij}\\) とする。つまり、 $$ M_{ij} = \\small \\left[ \\begin{array}{ccc} a_{11} & \\cdots &a_{1\\hspace{1mm}j-1} & a_{1\\hspace{1mm}j+1} & \\cdots & a_{1n} \\\\ \\vdots & &\\vdots & \\vdots & &\\vdots \\\\ a_{i-1 \\hspace{1mm} 1} & \\cdots &a_{i-1\\hspace{1mm}j-1} & a_{i-1\\hspace{1mm}j+1} & \\cdots & a_{i-1 \\hspace{1mm}n} \\\\ a_{i+1 \\hspace{1mm} 1} & \\cdots &a_{i+1\\hspace{1mm}j-1} & a_{i+1\\hspace{1mm}j+1} & \\cdots & a_{i+1 \\hspace{1mm}n} \\\\ \\vdots & &\\vdots & \\vdots & &\\vdots \\\\ a_{n1} &\\cdots &a_{n\\hspace{1mm}j-1} & a_{n\\hspace{1mm}j+1} &\\cdots &a_{nn} \\end{array} \\right] $$ です。ここで、 \\(\\Delta_{ij}=(-1)&#94;{i+j}|M_{ij}|\\) とすると、以下の 余因子展開 ができます。 \\(A\\) の行列式は \\(j\\) 列に関して、以下のように展開されます。 $$\\det A=\\Delta_{1j}a_{1j}+\\Delta_{2j}a_{2j}+\\cdots+\\Delta_{nj}a_{nj}$$ \\(A\\) の行列式は \\(i\\) 行に関して、以下のように展開されます。 $$\\det A=\\Delta_{i1}a_{i1}+\\Delta_{i2}a_{i2}+\\cdots+\\Delta_{in}a_{in}$$ \b 余韻子行列 \\(n\\) 次正方行列 \\(A := (a_{ij})\\) に対し、 \\((i, j)\\) 余因子を \\((j, i)\\) 成分に持つ行列 $$\\tilde{A} := \\begin{pmatrix}&\\Delta_{11}&\\Delta_{21}&\\cdots&\\Delta_{n1}\\\\&\\Delta_{21}&\\Delta_{22}&\\ldots&\\Delta_{n2}\\\\&\\vdots&\\vdots&\\ddots&\\vdots\\\\&\\Delta_{n1}&\\Delta_{n2}&\\cdots&\\Delta_{nn}\\end{pmatrix}$$ を 余韻子行列 と呼びます。ここで、余韻子展開を考えれば、余韻子行列に関して、 $$\\tilde{A}A=A\\tilde{A}=\\det(A)I_n$$ が成り立つことがわかります。 \\(\\ast1\\) の変形 以上を踏まえると、 \\(\\frac{\\partial\\det(A)}{\\partial a_{ij}} = \\Delta_{ij}\\) なので、 $$\\frac{\\partial|\\Sigma|}{\\partial\\Sigma} =\\tilde\\Sigma = |\\Sigma|\\Sigma&#94;{-1}$$ が成り立ち、 $$\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\frac{1}{|\\boldsymbol{\\Sigma}_k|&#94;{1/2}} =-\\frac{1}{2}|\\boldsymbol{\\Sigma}_k|&#94;{-\\frac{3}{2}}\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_k}\\boldsymbol{\\Sigma_k}=-\\frac{1}{2}|\\boldsymbol{\\Sigma}_k|&#94;{-1/2}\\boldsymbol{\\Sigma_k}&#94;{-1}$$ となることがわかります。 トレースと固有値の関係性 【命題】 トレースには、 \\(Tr(A) = \\sum_{k=1}&#94;{n}\\lambda_{k}\\) という関係がある。 トレース： \\(n\\times n\\) の正方行列 \\(A\\) に対して、\b対角成分の和 \\(\\sum_{k=1}&#94;{n}a_{kk}\\) を \\(A\\) のトレースと呼び、 \\(\\mathrm{Tr}(A),\\mathrm{tr}A\\) \b と表す。 【証明】 まず、固有方程式は、 $$\\phi(t) = |A-tI| = \\left|\\begin{array}{cccc} a_{11}-t & a_{12} & \\ldots & a_{1n} \\\\ a_{21} & a_{22}-t & \\ldots & a_{2n} \\\\ \\vdots & \\vdots & \\ddots & \\vdots \\\\ a_{n1} & a_{n2} & \\ldots & a_{nn}-t \\end{array} \\right|$$ である。ここで、 \\(t\\) の係数に着目する。 \\(t&#94;n\\) の係数 これは、対角成分を全て掛け合わせた次の多項式 $$(a_{11}-t)(a_{22}-t)\\ldots(a_{nn}-t)$$ における \\(t&#94;n\\) の係数と等しくなる。よって、係数は「 \\((-1)&#94;n\\) 」 \\(t&#94;{n-1}\\) の係数 これも\b、先ほどの多項式の \\(t&#94;{n-1}\\) の係数と等しくなる。（ \\(\\because\\) 余韻子展開を考える。 \\(\\sigma\\) が全単射のため、１行（列）対角成分ではないものがあると、\b少なくともあと１つは体格成分でないものがあることがわかる。） 定数項 これは、\b余韻子展開を考えれば \\(|A|\\) そのもの。 よって、係数は「 \\((-1)&#94;{n-1}(a_{11}+a_{22}+\\ldots+a_{nn})\\) 」であり、これは対角和を用いて「 $(-1)&#94;{n-1}\\mathrm{Tr}(A) $ 」とも書ける。 一方先ほどの固有方程式は固有値を解に持つ。 つまり、 \\(A\\) の固有値を \\(\\lambda_1\\) 〜 \\(\\lambda_n\\) として、 $$\\phi(t)=(-1)&#94;n(t-\\lambda_1)(t-\\lambda_2)\\cdots(t-\\lambda_n)$$ とかける。（ \\((-1)&#94;n\\) によって、 \\(t&#94;n\\) の係数を合わせている。） この式を展開すると、 \\(t&#94;{n-1}\\) の係数が「 \\((-1)&#94;{n-1}(\\lambda_1+\\lambda_2+\\ldots+\\lambda_n)\\) 」であることから $$\\mathrm{Tr}(A) = \\lambda_1+\\lambda_2+\\ldots+\\lambda_n$$ ※ちなみに、 \\(\\phi(t)=(-1)&#94;n(t-\\lambda_1)(t-\\lambda_2)\\cdots(t-\\lambda_n)\\) の定数項を考えることで、 $$|A| = \\lambda_1\\lambda_2\\ldots\\lambda_n$$ であることもわかる。 トレースの循環性 \\(A\\) を \\(m \\times n\\) 、 \\(B\\) を \\(n \\times m\\) の行列とすると、 \\(AB\\) は \\(m \\times m\\) の行列であり、 $$ \\begin{aligned} \\mathrm{Tr}[AB]&= \\sum_{i=1}&#94;{m} (AB)_{ii} \\\\&= \\sum_{i=1}&#94;{m}\\sum_{j=1}&#94;{n} A_{ij}B_{ji} \\\\&= \\sum_{j=1}&#94;{n} \\sum_{i=1}&#94;{m} B_{ji} A_{ij} \\\\&= \\sum_{j=1}&#94;{n} (BA)_{jj} \\\\&= \\mathrm{Tr}[BA] \\end{aligned} $$ となる。これを応用すれば、以下の 循環性 が証明できる。 \\(A,B,C\\) をそれぞれ \\(m\\times n,n \\times l,l \\times m\\) の行列とするとき、 $$\\begin{aligned} \\mathrm{Tr}[ABC] =& \\mathrm{Tr}[BCA] \\\\=& \\mathrm{Tr}[CAB] \\end{aligned} $$ が成り立つ。（ \\(\\because\\) ２つの\b行列積をセットで考えれば明らか） 逆行列の微分 正則行列 \\(A\\) に対して、 \\(A&#94;{-1}A=I\\) が成立するので、\bこの等式の両辺を \\(A\\) で微分して、 $$\\begin{aligned} \\biggr(\\frac{\\partial }{\\partial A}A&#94;{-1}\\biggl)A + A&#94;{-1}\\biggr(\\frac{\\partial }{\\partial A}A\\biggl) = 0\\\\ \\biggr(\\frac{\\partial A&#94;{-1}}{\\partial A}\\biggl) = -A&#94;{-1}\\biggr(\\frac{\\partial }{\\partial A}A\\biggl)A&#94;{-1} \\end{aligned}$$ シングルエントリ行列 \\((i,j)\\) 成分のみが \\(1\\) で、残りが全て \\(0\\) の行列 \\(\\mathbf{J}&#94;{ij}\\) を シングルエントリ行列 と呼ぶ。なお、\b以下の式が成り立つ。 $$\\mathrm{Tr}\\bigr(\\mathbf{AJ}&#94;{ij}\\bigl)=\\mathbf{A}_{ji}$$ \b \\(2 \\times 2\\) の行列でこれを示す。 $$\\begin{aligned} \\mathrm{Tr}\\bigr(\\mathbf{AJ}&#94;{12}\\bigl)&=\\mathrm{Tr}\\biggr(\\begin{pmatrix}a_{11}&a_{12}\\\\a_{21}&a_{22}\\end{pmatrix}\\begin{pmatrix}0&1\\\\0&0\\end{pmatrix}\\biggl)\\\\ &=\\mathrm{Tr}\\begin{pmatrix}0&a_{11}\\\\0&a_{21}\\end{pmatrix}\\\\ &=a_{21}\\\\ &=\\mathbf{A}_{21} \\end{aligned}$$ \\(\\ast2\\) の変形 以上を踏まえれば、 $$\\begin{aligned} \\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_{ij}}(\\mathbf{x}-\\boldsymbol{\\mu})&#94;T\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu}) &=\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_{ij}}\\mathrm{Tr}\\biggr((\\mathbf{x}-\\boldsymbol{\\mu})&#94;T\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})\\biggl)\\\\ &=\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_{ij}}\\mathrm{Tr}\\biggr(\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\biggl)\\\\ &=\\mathrm{Tr}\\biggr(\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}_{ij}}\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\biggl)\\\\ &=\\mathrm{Tr}\\biggr(-\\boldsymbol{\\Sigma}&#94;{-1}\\frac{\\partial\\boldsymbol{\\Sigma}}{\\partial\\boldsymbol{\\Sigma}_{ij}}\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\biggl)\\\\ &=\\mathrm{Tr}\\biggr(-\\boldsymbol{\\Sigma}&#94;{-1}\\mathbf{J}&#94;{ij}\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\biggl)\\\\ &=-\\mathrm{Tr}\\biggr(\\boldsymbol{\\Sigma}&#94;{-1}\\mathbf{J}&#94;{ij}\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\biggl)\\\\ &=-\\mathrm{Tr}\\biggr(\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\boldsymbol{\\Sigma}&#94;{-1}\\mathbf{J}&#94;{ij}\\biggl)\\\\ &=-\\left\\{\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\boldsymbol{\\Sigma}&#94;{-1}\\right\\}_{ji}\\\\ &=-\\left\\{\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\boldsymbol{\\Sigma}&#94;{-1}\\right\\}_{ij}\\\\ \\end{aligned}$$ よって、 $$\\frac{\\partial}{\\partial\\boldsymbol{\\Sigma}}(\\mathbf{x}-\\boldsymbol{\\mu})&#94;T\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})=-\\boldsymbol{\\Sigma}&#94;{-1}(\\mathbf{x}-\\boldsymbol{\\mu})(\\mathbf{x}-\\boldsymbol{\\mu})&#94;{T}\\boldsymbol{\\Sigma}&#94;{-1}$$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-1-2.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-1-2.html"},{"title":"クラスタリング","text":"講師： 津田宏治 資料： 生物データマイニング論(2019) 講義の方針 データ解析アルゴリズムは、生物学の研究に不可欠 R や python のパッケージとして、すぐダウンロードして使うことができる。 しかし、原理を知らずに使うと、アルゴリズムの出す結果を盲信することになり危険。 正しい理解：結果を疑えるようになること。 階層的クラスタリング クラスタリング データ点を クラスタ（互いに類似したグループ） に分割する。 距離尺度：ユークリッド距離、コサイン距離など。 階層的クラスタリング 最初は各点がクラスタとなる。 二つのクラスタを選んで合併していく。 Single Link ：二つのクラスタをまたぐ最近点の距離 chaining により、ゆるいクラスタができる （非推奨） Complete Link ：二つのクラスタをまたぐ最遠点の距離 最も固いクラスタができるが、細かく分け過ぎる傾向がある。 Average Link ：二つのクラスタをまたぐ点対の平均距離 最もバランスがとれており、通常はこれを用いる。 最後は一つのクラスタになる。 デンドログラム ：合併の過程を樹形図の形で表したもの。 K-Means 分割的クラスタリング の一手法。$K$ クラスにデータ点を分割する。 以下を繰り返す。 各データ点 $\\mathbf{x}$ を最も近い中心点 $\\mu_k$ に割り当てて、クラスタ $c_1,\\ldots,c_K$ を作成する。 割当を元に中心点を計算しなおす。 $$\\mu_k = \\sum_{j\\in C_i} \\mathbf{x}_j$$ 実装 In [1]: import numpy as np import matplotlib.pyplot as plt Data. In [2]: np . random . seed ( 0 ) In [3]: N = 30 ; K = 5 vmin = 0 ; vmax = 1 In [4]: # Training Data. data = np . random . uniform ( vmin , vmax , ( N , 2 )) x , y = data . T In [5]: plt . scatter ( x , y ) plt . title ( \"Training Data.\" ) plt . show () In [6]: # Background Color Xs , Ys = np . meshgrid ( np . linspace ( vmin , vmax , 100 ), np . linspace ( vmin , vmax , 100 )) XYs = np . c_ [ Xs . ravel (), Ys . ravel ()] Training. 自作のモジュール （ kerasy.ML.KMeans.KMeans ） を使って学習させます。 In [7]: from kerasy.ML.KMeans import KMeans In [8]: model = KMeans ( K = K , random_state = 0 ) In [9]: model . fit ( data ) Visualization. In [10]: Nfig = len ( model . history ) col = 3 row = Nfig // col + 1 if Nfig % col != 0 else Nfig//col In [11]: # For Visualization. plt_model = KMeans ( K = K ) In [12]: fig = plt . figure ( figsize = ( 6 * col , 4 * row )) for i ,( idx , mu ) in enumerate ( model . history ): # Plot Training Data with respective class color. ax = fig . add_subplot ( row , col , i + 1 ) ax . scatter ( x , y , c = idx ) # Plot Representative points(µk) of each class. mux , muy = mu . T ax . scatter ( mux , muy , marker = 'x' , c = \"red\" , s = 200 ) # Background. plt_model . mu = mu Z , _ = plt_model . predict ( XYs ) Zs = Z . reshape ( Xs . shape ) ax . pcolor ( Xs , Ys , Zs , alpha = 0.2 ) ax . set_xlim ( vmin , vmax ) ax . set_ylim ( vmin , vmax ) ax . set_title ( f \"Iteration. {i:>02} \" ) plt . show () 混合ガウス分布 混合ガウス分布は、次のように混合係数 $\\pi_k$ でガウス分布を線形重ね合わせした形でかける。 $$p(\\mathbf{x}) = \\sum_{k=1}&#94;K\\pi_k\\mathcal{N}\\left(\\mathbf{x}|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k\\right)\\qquad (9.7)$$ ここで、 二値ベクトル（1-of-K符号化法） $\\mathbf{z}$ の周辺分布は、$0\\leq\\pi_k\\leq1$ と $\\sum_{k=1}&#94;K\\pi_k = 1 $ を満たす $\\pi_k$ を用いて、 $$p\\left(\\mathbf{z}\\right) = \\prod_{k=1}&#94;K\\pi_k&#94;{z_k}\\qquad (9.9)$$ と書ける。また、$\\mathbf{z}$ が与えられた時の $\\mathbf{x}$ の事後分布は当然ながら次のガウス分布である。 $$p\\left(\\mathbf{x}|\\mathbf{z}\\right) = \\prod_{k=1}&#94;K\\mathcal{N}\\left(\\mathbf{x}|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k\\right)&#94;{z_k}\\qquad(9.11)$$ EMアルゴリズム 観測データ $\\mathbf{X}=\\{\\mathbf{x}_1,\\ldots,\\mathbf{x}_N\\}$ に対する対数尤度関数は、$(9.7)$ から以下のように書ける。 （※明示的にパラメータを記載しています。） $$\\ln p\\left(\\mathbf{X}|\\boldsymbol{\\pi,\\mu,\\Sigma}\\right) = \\sum_{n=1}&#94;N\\ln\\left\\{\\sum_{k=1}&#94;K\\pi_k\\mathcal{N}\\left(\\mathbf{x}_n|\\boldsymbol{\\mu}_k,\\boldsymbol{\\Sigma}_k\\right)\\right\\}\\qquad (9.14)$$ Expectation step M stepで必要となる $\\gamma(z_{nk})$ を求める。 この値は、$\\mathbf{x}$ が与えられた下での $\\mathbf{z}$ の条件付き確率であり、混合要素 $k$ が $\\mathbf{x}$ の観測を 「説明する」 度合いを表す 負担率(responsibility) として解釈することもできる。 $$ \\begin{aligned} \\gamma(z_{k})\\equiv p(z_{k}=1|\\mathbf{x}) &=\\frac{p(z_{k}=1)p(\\mathbf{x}|z_{k}=1)}{\\sum_{j=1}&#94;{K}p(z_{j}=1)p(\\mathbf{x}|z_{j}=1)}\\\\ &=\\frac{\\pi_{k}\\mathcal{N}(\\mathbf{x}|\\mathbf{\\mu_{\\rm{k}}}, \\mathbf{\\Sigma_{\\rm{k}}})}{\\sum_{j=1}&#94;{K}\\pi_{j}\\mathcal{N}(\\mathbf{x}|\\mathbf{\\mu_{\\rm{j}}}, \\mathbf{\\Sigma_{\\rm{j}}})}\\qquad (9.13) \\end{aligned} $$ Maximization step M stepでは、尤度関数を最大化するように各パラメータの値を更新する。 ※ 導出過程は 混合ガウス分布のEMアルゴリズム に載せています。 $$ \\begin{aligned} \\boldsymbol{\\mu}_k &= \\frac{\\sum_{n=1}&#94;N\\gamma(z_{nk})\\mathbf{x}_n}{\\sum_{n=1}&#94;N\\gamma(z_{nk})} & (9.17)\\\\ \\boldsymbol{\\Sigma}_k &= \\frac{\\sum_{n=1}&#94;N\\gamma(z_{nk})\\left(\\mathbf{x}_n-\\boldsymbol{\\mu}_k\\right)\\left(\\mathbf{x}_n-\\boldsymbol{\\mu}_k\\right)&#94;{\\mathrm{T}}}{\\sum_{n=1}&#94;N\\gamma(z_{nk})} & (9.19)\\\\ \\pi_k &= \\frac{\\sum_{n=1}&#94;N\\gamma(z_{nk})}{N} & (9.22) \\end{aligned} $$ 実装 Data. In [13]: np . random . seed ( 0 ) In [14]: N = 150 ; K = 3 In [15]: # Train Data. data = np . concatenate ([ np . random . multivariate_normal ( mean = [ 0 , 0 ], cov = np . eye ( 2 ), size = int ( N / 3 )), np . random . multivariate_normal ( mean = [ 0 , 5 ], cov = np . eye ( 2 ), size = int ( N / 3 )), np . random . multivariate_normal ( mean = [ 3 , 2 ], cov = np . eye ( 2 ), size = int ( N / 3 )), ]) x , y = data . T In [16]: plt . scatter ( x , y ) plt . title ( \"Training Data.\" ) plt . show () In [17]: # Background Color xmin , ymin = np . min ( data , axis = 0 ) xmax , ymax = np . max ( data , axis = 0 ) Xs , Ys = np . meshgrid ( np . linspace ( xmin , xmax , 100 ), np . linspace ( ymin , ymax , 100 )) XYs = np . c_ [ Xs . ravel (), Ys . ravel ()] Training. 自作のモジュール （ kerasy.ML.MixedDistribution.MixedGaussian ） を使って学習させます。 In [18]: from kerasy.ML.MixedDistribution import MixedGaussian In [19]: model = MixedGaussian ( K = K , random_state = 1234 ) In [20]: model . fit ( data , span = 20 ) Visualization. In [21]: Nfig = len ( model . history ) col = 3 row = Nfig // col + 1 if Nfig % col != 0 else Nfig//col In [22]: # For Visualization. plt_model = MixedGaussian ( K = K ) plt_model . N , plt_model . M = data . shape In [23]: fig = plt . figure ( figsize = ( 6 * col , 4 * row )) for i ,( epoch , idx , mu , S , pi ) in enumerate ( model . history ): # Plot Training Data with respective class color. ax = fig . add_subplot ( row , col , i + 1 ) ax . scatter ( x , y , c = idx ) # Background. plt_model . mu = mu plt_model . S = S plt_model . pi = pi Z = plt_model . predict ( XYs ) Zs = np . sum ( Z , axis = 1 ) . reshape ( Xs . shape ) # Likelihood. ax . pcolor ( Xs , Ys , Zs , alpha = 0.2 ) ax . set_xlim ( xmin , xmax ) ax . set_ylim ( ymin , ymax ) ax . set_title ( f \" {epoch:>02} epochs.\" ) plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物データマイニング論","url":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-1-1.html","loc":"https://iwasakishuto.github.io/University/3A/生物データマイニング論-1-1.html"},{"title":"イントロダクション","text":"講師： 山崎俊彦 参考書： CG-ARTS協会発行「ディジタル画像処理」 参考書： R. Szeliski, Computer Vision Algorithms and Applications, Springer (PDF版はインターネット上で無料公開) 講義予定 前半（山崎担当） 画像の操作 画像の特徴抽出・内容理解・構造化 機械学習一般 後半（相澤担当） 画像を撮る：カメラの内部処理・センサ・レンズ・標本化 画像を表現する。色の知覚・表現 画像の基礎的な処理。周波数変換、線形・非線形フィルタリング # 日付 担当 内容 1 9/30(月) 山崎 画像・映像を中心とした現在の技術動向の紹介、低次・領域・局所画像特徴 2 10/7(月) 山崎 特徴選択、特徴表現 3 10/21(月) 山崎 機械学習概論、教師なし学習、クラスタリング 4 10/28(月) 山崎 機械学習 (NN, SVM, RF) 5 11/7(木) 山崎 深層学習 (Deep Neural Networks) 6 11/11(月) 山崎 動画像処理 (ブロックマッチング、背景差分、オプティカルフロー) 7 11/13(水) 山崎 3次元空間情報の取得と処理 8 11/18(月) 相澤 9 11/25(月) 相澤 10 12/9(月) 相澤 11 12/16(月) 相澤 12 12/23(月) 相澤 13 1/@@ テスト パターン認識一般 現在は、90%位が 学習ベース(data-driven) 。残りが解析的手法。最近はこのhybridも。 全体的な流れ 学習(training) 検証(validation)←パラメータ最適化 推論(test, inference) なぜ今 学習ベース なのか？ データの大規模化：インターネット上から大量に収集可。 計算機の進化：ムーアの法則による高速化。さらにはクラウド 労働力のクラウド化 画像特徴 低次特徴量 色ヒストグラム（RGB,HSV,L*a*b*）：単純計算すると \\(256&#94;3\\) 個binができるので、注意。 色共起ヒストグラム（Correlogram）：隣接ピクセルの色を踏まえたヒストグラム 円、コーナー直線の数・大きさ・長さ 物体の円度、曲率等 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"映像メディア工学","url":"https://iwasakishuto.github.io/University/3A/映像メディア工学-1.html","loc":"https://iwasakishuto.github.io/University/3A/映像メディア工学-1.html"},{"title":"matplotlibチートシート","text":"In [1]: import numpy as np import matplotlib.pyplot as plt $N$ 枚の画像を plot Vsize , Hsize = () # 画像の横の長さと縦の長さ。 n_fig = \"画像の枚数\" n_col = \"横に並ぶ数\" n_row = n_fig // n_col + 1 if n_fig % n_col != 0 else n_fig // n_col # 行数を計算。 fig = plt . figure ( figsize = ( Vsize * n_col , Hsize * n_row )) for i , hoge in enumerate ( HOGEs ): ax = fig . add_subplot ( row , col , i + 1 ) \"\"\" 描きたいオブジェクトをプロット \"\"\" plt . tight_layout () plt . show () gifの画像の作成 上のようにやって全ての画像をまとめた一枚の画像を出力しても良いが、 n_fig = \"画像の枚数\" digit = len ( str ( N )) for i , hoge in enumerate ( HOGEs ): ax = fig . add_subplot ( row , col , i + 1 ) plt . figure ( figsize = \"サイズ\" ) \"\"\" 描きたいオブジェクトをプロット \"\"\" plt . savefig ( f \"img{i:>0{digit}}.png\" ) として連番の画像を作成し、それを以下のプログラムでgif画像にした方が見やすい場合もある from PIL import Image N = 30 digit = len ( str ( N )) images = [] for i in range ( N ): img = Image . open ( f \"{i:>0{digit}}.png\" ) images . append ( img ) images [ 0 ] . save ( 'out.gif' , save_all = True , append_images = images [ 1 :], loop = 0 , duration = 300 ) # loop=0: 無限ループ # duration: 一枚あたりの表示時間[ms] cmaps In [2]: cmaps = [ 'Accent' , 'Blues' , 'BrBG' , 'BuGn' , 'BuPu' , 'CMRmap' , 'Dark2' , 'GnBu' , 'Greens' , 'Greys' , 'OrRd' , 'Oranges' , 'PRGn' , 'Paired' , 'Pastel1' , 'Pastel2' , 'PiYG' , 'PuBu' , 'PuBuGn' , 'PuOr' , 'PuRd' , 'Purples' , 'RdBu' , 'RdGy' , 'RdPu' , 'RdYlBu' , 'RdYlGn' , 'Reds' , 'Set1' , 'Set2' , 'Set3' , 'Spectral' , 'Wistia' , 'YlGn' , 'YlGnBu' , 'YlOrBr' , 'YlOrRd' , 'afmhot' , 'autumn' , 'binary' , 'bone' , 'brg' , 'bwr' , 'cividis' , 'cool' , 'coolwarm' , 'copper' , 'cubehelix' , 'flag' , 'gist_earth' , 'gist_gray' , 'gist_heat' , 'gist_ncar' , 'gist_rainbow' , 'gist_stern' , 'gist_yarg' , 'gnuplot' , 'gnuplot2' , 'gray' , 'hot' , 'hsv' , 'inferno' , 'jet' , 'magma' , 'nipy_spectral' , 'ocean' , 'pink' , 'plasma' , 'prism' , 'rainbow' , 'seismic' , 'spring' , 'summer' , 'tab10' , 'tab20' , 'tab20b' , 'tab20c' , 'terrain' , 'viridis' , 'winter' ] In [3]: matrix = np . arange ( 100 ) . reshape ( 10 , 10 ) In [4]: Vsize , Hsize = ( 4 , 4 ) n_fig = len ( cmaps ) n_col = 4 n_row = n_fig // n_col + 1 if n_fig % n_col != 0 else n_fig//n_col In [5]: fig = plt . figure ( figsize = ( Vsize * n_col , Hsize * n_row )) for i , cmap in enumerate ( cmaps ): ax = fig . add_subplot ( n_row , n_col , i + 1 ) ax . matshow ( matrix , cmap = cmap ) ax . set_title ( f \"↓ {cmap} ↓\" , fontsize = 24 ), ax . set_xticks ([]), ax . set_yticks ([]) plt . tight_layout () plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"映像メディア工学","url":"https://iwasakishuto.github.io/University/3A/映像メディア工学-0.html","loc":"https://iwasakishuto.github.io/University/3A/映像メディア工学-0.html"},{"title":"生物物理学 第1回","text":"講師： 能瀬聡直 講義資料： 生物物理学 参考書： 神経科学 -脳の探求- 参考書： ニューロンの生物物理 講義概要 生物物理学とは 遺伝情報の流れ 蛋白質の構造と機能 細胞内タンパク質のダイナミックス 遺伝子操作技術 ゲノム科学とバイオインフォマティックス バイオイメージング、生体分子計測 脳・神経系の生物物理 講義日程 # 日付 担当 1 9/25 能瀬 2 10/2 樋口 3 10/9 樋口 4 10/16 樋口 5 10/23 樋口 6 10/30 樋口 7 11/6 樋口 8 11/20 能瀬 9 11/27 能瀬 10 12/4 樋口 11 12/11 能瀬 12 12/18 能瀬 13 1/8 能瀬 14 1/15 能瀬 生物物理学とは？ 物理の手法で生物を見る。 生体分子の機能や構造の研究。 対象は広範囲、ただし物理的理念を背景にもつ。 生体高分子の構造・機能、脳・神経機構など単なる記述中心の従来の生物学と異なり、論理的な思考法を用い、より普遍的な原理を見いだすことを目指している。 生物物理の代表的発見 DNA二重螺旋構造の発見（1953年、1962年ノーベル生理医学賞） 蛋白質の高次構造の解析（1960年、1962年ノーベル化学賞） 神経活動のイオン機構の解明（1953年、1963年ノーベル生理医学賞） 最近の技術革新 ヒトゲノム計画 ヒトの全遺伝子の設計図解読の終了（2000年） イメージング技術 蛍光蛋白質・レーザー顕微鏡（1990年代） 1分子観測・1分子操作 溶液中での蛋白質1分子の観察（1990年代） 神経回路の作動原理の解明に向けた従来の3つのアプローチ 解剖学(Anatomy) 神経の配線を明らかにする。 生理学(Physiology) 神経活動を測定・操作する。 理論 神経活動パターンから原理を抽出 Part1. Introduction 脳神経系における情報の流れ ニューロンの構成 脳とコンピューター 半導体 ↔︎ 半導体素子 ↔︎ 集積回路 ↔︎ コンピューター 分子 ↔︎ 神経細胞 グリア細胞 ↔︎ 神経回路 ↔︎ 脳 活動電位の特徴 全か無か： \\(\\mathrm{Na}\\) チャネル活性化に閾値がある。 一過性： \\(\\mathrm{Na}\\) チャネル不活性化 確実に伝播 一体、どのような構造を持った神経回路の中を、どのように信号が伝わることで特定の演算が創発されるのか。 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物物理学","url":"https://iwasakishuto.github.io/University/3A/生物物理学-1.html","loc":"https://iwasakishuto.github.io/University/3A/生物物理学-1.html"},{"title":"HMMをpythonで実装","text":"（kerasy.ML.HMM.HMM） の使い方 自作のモジュール （kerasy.ML.HMM.HMM） を使って実装をします。 In [1]: from kerasy.ML.HMM import HMM In [2]: model = HMM () In [3]: # 以下のようなパラメタファイルを読み込む。 ! cat params.json { \"M\": 4, \"K\": 4, \"basetypes\": [\"a\", \"c\", \"g\", \"u\"], \"pi\": [0.7, 0.1, 0.1, 0.1], \"A\": [[0.8, 0.1, 0.1, 0.0], [0.0, 0.8, 0.1, 0.1], [0.1, 0.0, 0.8, 0.1], [0.1, 0.0, 0.1, 0.8]], \"phi\": [[0.4, 0.1, 0.1, 0.4], [0.25, 0.25, 0.25, 0.25], [0.1, 0.4, 0.4, 0.1], [0.3, 0.2, 0.2, 0.3]] } In [4]: model . load_params ( \"params.json\" ) In [5]: # インスタンスに読み込まれた各種パラメータ model . params () 【Parameter】 ===================================== *initial state z(1) z(2) z(3) z(4) 0.7000 0.1000 0.1000 0.1000 ------------------------------------- *transition probability matrix [States after transition] z(1) z(2) z(3) z(4) z(1) 0.8000 0.1000 0.1000 0.0000 z(2) 0.0000 0.8000 0.1000 0.1000 z(3) 0.1000 0.0000 0.8000 0.1000 z(4) 0.1000 0.0000 0.1000 0.8000 ------------------------------------- *emission probability z(1) z(2) z(3) z(4) a 0.4000 0.2500 0.1000 0.3000 c 0.1000 0.2500 0.4000 0.2000 g 0.1000 0.2500 0.4000 0.2000 u 0.4000 0.2500 0.1000 0.3000 In [6]: # なお、この時以下のような辞書を同時に作成しています。 print ( model . base2int ) print ( model . int2base ) {'a': 0, 'c': 1, 'g': 2, 'u': 3} {0: 'a', 1: 'c', 2: 'g', 3: 'u'} In [7]: # また、パラメータはnumpyの行列の形で読み込まれています。 print ( type ( model . pi )) print ( type ( model . A )) print ( type ( model . phi )) In [8]: # 以下のようにすれば、学習したパラメタを同じ形式で出力することができます。 model . save_params ( \"out.json\" ) Viterbi algorithm HMMのViterbiアルゴリズムを実装して、尤もらしいサンプル配列の隠れ状態列を推定します。 In [9]: from kerasy.utils.bio import alignStr , readMonoSeq , readMultiSeq # ファイルの中身 cat seq1.fasta ``` sample-RNA gagaguccuauacaaacuccaaaacacugagaccauacaaguaaaaccagucgagaaaau agucaacagcacccccguugcguauccugcggagaaugccucgcuaucuguccucacgau uggucuaaccgcucggcucaggcgugugggccugaaauccgggcagcaaacuacgguaag uuuucgcguaucaaaaauacauugaugaauguucgcuauuagccgggucgacguuuugau ggugacuaggagcgaaagugauuuuuuugugagcggugucauagcaggggaucaucugag gugaacuauggacgggucagucgcccucauuggguuuguuacucagauacgugacacacg uaaggucgcacggcaguagugauccacgagaaucggcacucuuacgagcaagucuauagc gacguggcuugcuauuaagacaguaauggacucggacagcuaguacgcgacuaaucauuu ucgcacgccaucacacuuucaacccaggagcuuacaguguuccaggggccaggcuugggg cagccucuguggaagugcgagggcugcgcuaguguacauuagccgacccucagacgugaa auaaagagaugcugcugguugcacagugagcaacguucacucggcaacccgucggauacc ``` In [10]: # ファイルの読み込み seq1 = readMonoSeq ( 'seq1.fasta' ) print ( f \"Input Sequence: \\n {alignStr(seq1[0])}\" ) Input Sequence: gagaguccuauacaaacuccaaaacacugagaccauacaaguaaaaccagucgagaaaau agucaacagcacccccguugcguauccugcggagaaugccucgcuaucuguccucacgau uggucuaaccgcucggcucaggcgugugggccugaaauccgggcagcaaacuacgguaag uuuucgcguaucaaaaauacauugaugaauguucgcuauuagccgggucgacguuuugau ggugacuaggagcgaaagugauuuuuuugugagcggugucauagcaggggaucaucugag gugaacuauggacgggucagucgcccucauuggguuuguuacucagauacgugacacacg uaaggucgcacggcaguagugauccacgagaaucggcacucuuacgagcaagucuauagc gacguggcuugcuauuaagacaguaauggacucggacagcuaguacgcgacuaaucauuu ucgcacgccaucacacuuucaacccaggagcuuacaguguuccaggggccaggcuugggg cagccucuguggaagugcgagggcugcgcuaguguacauuagccgacccucagacgugaa auaaagagaugcugcugguugcacagugagcaacguucacucggcaacccgucggauacc In [11]: # この時、文字列をリストに格納しています。 print ( type ( seq1 )) In [12]: pred1 = model . predict ( sequences = seq1 , asai = True ) In [13]: # 変数asaiは、隠れ状態がZero-based numberingかどうかを決めるものであり、特に意味はありません。（課題の形式に対応したものがasai=True.） print ( f \"Hidden Indexes: \\n {alignStr(pred1[0])}\" ) Hidden Indexesn [14]: # もちろんパラメタの更新は行われていません。 model . params () 【Parameter】 ===================================== *initial state z(1) z(2) z(3) z(4) 0.7000 0.1000 0.1000 0.1000 ------------------------------------- *transition probability matrix [States after transition] z(1) z(2) z(3) z(4) z(1) 0.8000 0.1000 0.1000 0.0000 z(2) 0.0000 0.8000 0.1000 0.1000 z(3) 0.1000 0.0000 0.8000 0.1000 z(4) 0.1000 0.0000 0.1000 0.8000 ------------------------------------- *emission probability z(1) z(2) z(3) z(4) a 0.4000 0.2500 0.1000 0.3000 c 0.1000 0.2500 0.4000 0.2000 g 0.1000 0.2500 0.4000 0.2000 u 0.4000 0.2500 0.1000 0.3000 Baum-Welch algorithm HMMのBaum-Welchアルゴリズムを実装して、モデルを学習させてます。 In [15]: model = HMM () model . load_params ( \"params2.json\" ) model . params () # 文字が \"acgu\"→\"ACGT\"に変わっただけです。 【Parameter】 ===================================== *initial state z(1) z(2) z(3) z(4) 0.7000 0.1000 0.1000 0.1000 ------------------------------------- *transition probability matrix [States after transition] z(1) z(2) z(3) z(4) z(1) 0.8000 0.1000 0.1000 0.0000 z(2) 0.0000 0.8000 0.1000 0.1000 z(3) 0.1000 0.0000 0.8000 0.1000 z(4) 0.1000 0.0000 0.1000 0.8000 ------------------------------------- *emission probability z(1) z(2) z(3) z(4) A 0.4000 0.2500 0.1000 0.3000 C 0.1000 0.2500 0.4000 0.2000 G 0.1000 0.2500 0.4000 0.2000 T 0.4000 0.2500 0.1000 0.3000 cat seq2.txt ``` >Vitis_vinifera_chr14.trna15-AlaAGC (28776087-28776159) Ala (AGC) 73 bp Sc: 68.12 GGGGATGTAGCTCAGATGGTAGAGCGCTCGCTTAGCATGCGAGAGGTACGGGGATCGATA CCCCGCATCTCCA >Vitis_vinifera_chr13.trna5-ArgCCG (2691241-2691313) Arg (CCG) 73 bp Sc: 83.85 GATCGCATAGCGGAGTGGATATCGCGTTAGACTCCGAATCTAAAGGTCGTGGGTTCGAAT CCCACTGCGATCG >Vitis_vinifera_chr3.trna6-GlnCTG (5807449-5807520) Gln (CTG) 72 bp Sc: 71.93 GGTCCCATGGTCTAGTGGTCAGGACATTGGACTCTGAATCCAGTAACCCGAGTTCAAATC TCGGTGGGACCT >Vitis_vinifera_chr14.trna19-LeuAAG (25640120-25640040) Leu (AAG) 81 bp Sc: 62.71 GTGGAGATGGCCGAGTTGGTCTAAGGCGCCAGATTAAGGTTCTTGTCCGAAAGGGCGTGG GTTCAAATCCCACTCTCCACA >Vitis_vinifera_chr18.trna9-MetCAT (2896034-2896118) Met (CAT) 85 bp Sc: 60.66 GGGGTGGTGGCGCAGTTGGCTAGCGCGTAGGTCTCATAGCTTCCGAGTAATCCTGAGGTC GAGAGTTCGAGCCTCTCTCACCCCA >Vitis_vinifera_chr3.trna30-ProTGG (7498415-7498344) Pro (TGG) 72 bp Sc: 68.98 GGGCATTTGGTCTAGTGGTATGATTCTCGCTTTGGGTGCGAGAGGTCCCGAGTTCGATTC TCGGAATGACCC >Vitis_vinifera_chr5.trna13-GluTTC (21745120-21745048) Glu (TTC) 73 bp Sc: 36.67 AGTCCCATAGCCTAGTTGGTCGAGCACAAGGTTTTCAATCTTGTGGTCGTGGGTTCGAGC CCTATTGGTGGTT >Vitis_vinifera_chr5.trna3-TyrGTA (7422575-7422666) Tyr (GTA) 92 bp Sc: 33.68 CCGATCTTAACTCAATTGGTAGAGCAGAGGACCGTAGTGGGGTTGACCCAATAGATATCC TTAGGTCGTTAGTTTGAATCCAACAGGTCTAA >Vitis_vinifera_chr1.trna8-ValCAC (11396083-11396156) Val (CAC) 74 bp Sc: 66.86 GTCTAGGTGGTATAGTTGGTTATCACGCTAGTCTCACACACTAGAGGTCCCTAGTTCGAA CCCAGGCTCAGATA >Vitis_vinifera_chr14.trna2-SerTGA (4021381-4021462) Ser (TGA) 82 bp Sc: 80.82 GTCGATATGTCCGAGTGGTTAAGGAGACAGACTTGAAATCTGTTGGGCTTCGCCCGCGCA GGTTCGAACCCTGCTGTCGACG ``` In [16]: seq2 = readMultiSeq ( 'seq2.txt' ) In [17]: for i , seq in enumerate ( seq2 ): print ( f \"No. {i:>02} \\n {alignStr(seq, width=45)}\" ) No.00 GGGGATGTAGCTCAGATGGTAGAGCGCTCGCTTAGCATGCGAGAG GTACGGGGATCGATACCCCGCATCTCCA No.01 GATCGCATAGCGGAGTGGATATCGCGTTAGACTCCGAATCTAAAG GTCGTGGGTTCGAATCCCACTGCGATCG No.02 GGTCCCATGGTCTAGTGGTCAGGACATTGGACTCTGAATCCAGTA ACCCGAGTTCAAATCTCGGTGGGACCT No.03 GTGGAGATGGCCGAGTTGGTCTAAGGCGCCAGATTAAGGTTCTTG TCCGAAAGGGCGTGGGTTCAAATCCCACTCTCCACA No.04 GGGGTGGTGGCGCAGTTGGCTAGCGCGTAGGTCTCATAGCTTCCG AGTAATCCTGAGGTCGAGAGTTCGAGCCTCTCTCACCCCA No.05 GGGCATTTGGTCTAGTGGTATGATTCTCGCTTTGGGTGCGAGAGG TCCCGAGTTCGATTCTCGGAATGACCC No.06 AGTCCCATAGCCTAGTTGGTCGAGCACAAGGTTTTCAATCTTGTG GTCGTGGGTTCGAGCCCTATTGGTGGTT No.07 CCGATCTTAACTCAATTGGTAGAGCAGAGGACCGTAGTGGGGTTG ACCCAATAGATATCCTTAGGTCGTTAGTTTGAATCCAACAGGTCT AA No.08 GTCTAGGTGGTATAGTTGGTTATCACGCTAGTCTCACACACTAGA GGTCCCTAGTTCGAACCCAGGCTCAGATA No.09 GTCGATATGTCCGAGTGGTTAAGGAGACAGACTTGAAATCTGTTG GGCTTCGCCCGCGCAGGTTCGAACCCTGCTGTCGACG In [18]: # 学習させる。 model . fit ( sequences = seq2 , epochs = 2000 , verbose = False ) In [19]: import matplotlib.pyplot as plt In [20]: def plotHistory ( model ): \"\"\" 学習の過程をプロットする関数 \"\"\" plt . plot ( model . history ) plt . title ( f \"Mean Log Likelihood Transition (eoochs= {model.epoch} )\" ) plt . xlabel ( \"epochs\" ) plt . ylabel ( \"Mean Log Likelihood\" ) plt . show () In [21]: plotHistory ( model ) In [22]: model . params () 【Parameter】 ===================================== *initial state z(1) z(2) z(3) z(4) 0.1024 0.0000 0.8976 0.0000 ------------------------------------- *transition probability matrix [States after transition] z(1) z(2) z(3) z(4) z(1) 0.2819 0.7181 0.0000 0.0000 z(2) 0.0000 0.5670 0.0000 0.4330 z(3) 0.0521 0.0000 0.3415 0.6064 z(4) 0.5158 0.0000 0.0000 0.4842 ------------------------------------- *emission probability z(1) z(2) z(3) z(4) A 0.3436 0.3099 0.1059 0.0055 C 0.2538 0.0592 0.0970 0.4297 G 0.4026 0.4418 0.7971 0.0345 T 0.0000 0.1891 0.0000 0.5304 ※ 隠れ状態ごとにかなり偏った遷移を行なう。 また、 遷移行列の対角成分がそこまで大きい値では無い。 → 特定の構造が、 ある程度の長さのゆとりを持って 繰り返されていると予想される。 In [23]: pred2 = model . predict ( sequences = seq2 , asai = True ) In [24]: for i , pred in enumerate ( pred2 ): print ( f \"No. {i:>02} Hidden Indexes: \\n {alignStr(pred, width=45)}\" ) No.00 Hidden Indexes: 333334122244412241241222224412444124122412222 2411222224412224441241244441 No.01 Hidden Indexes: 334411241241222412241241124412244441224441222 2412412244412244412441122441 No.02 Hidden Indexes: 334441241244412412441222412412244441224441241 244412244412244441241222444 No.03 Hidden Indexes: 341222241244122441244412222244122441222444441 244122222241222244412244412444441241 No.04 Hidden Indexes: 333341241241122441244124112412244412412444441 2241244441222441222244412244444441244441 No.05 Hidden Indexes: 333412441244412412412224444124444122224122222 444412244412444441222412444 No.06 Hidden Indexes: 334441241244412441244122411222244444124444122 2412412244412244441241241244 No.07 Hidden Indexes: 341244441244412441241222412222241241241222441 244412412241244441224124412444122444124122444 12 No.08 Hidden Indexes: 344412241241222441244124112441244412411244122 22444441244412244412244412241 No.09 Hidden Indexes: 344124122444122412441222222412244412224441241 2244412444112412244412244441122441241 補足：上記プログラムにバグがないかの確認 Baum-Welchアルゴリズムが正しく実装できていたか、極端な配列を学習させることで確認します。 In [25]: model = HMM () model . load_params ( \"params3.json\" ) model . params () 【Parameter】 ============================== *initial state z(1) z(2) z(3) 0.7000 0.1000 0.2000 ------------------------------ *transition probability matrix [States after transition] z(1) z(2) z(3) z(1) 0.8000 0.1000 0.1000 z(2) 0.1000 0.8000 0.1000 z(3) 0.1000 0.1000 0.1000 ------------------------------ *emission probability z(1) z(2) z(3) A 0.4000 0.2500 0.1000 C 0.1000 0.2500 0.4000 G 0.1000 0.2500 0.4000 T 0.4000 0.2500 0.1000 In [26]: seq_extreme = readMonoSeq ( 'seq3.txt' ) In [27]: # かなり極端な配列の例で実装してみる。 print ( f \"Input Sequence: \\n {alignStr(seq_extreme[0])}\" ) Input Sequence: TCTTTTTCCTCCTCTCTCCTTTCCCTCTTTTCCCTTCTTCTCTCCCTTTTCCTTCTCTTC TCTCTTTTCTTCCCCTTTTCCTTTTCTCCTCCCTCCCTTTCTTCCCTCCTTCCTCCCCCC CTCCCCTTTCCTTCCTTTCTCCTTCTCCCCATATGGCCATTTACTTCAGCTGATAGACAC CGAGTAACAACAATAAAGCGTTAGGTGGACGAATGCTCTACTCTGACCTCTAGCTTGTGG GTTCGCGGCTTGCCGAACGCTGGCCTCTGCCCGTCGAACCAATAAATGTTTATCCAGGAC ACCCCGTTCTTTGGTGATATCCCTCGCTCGAGTTATAGCATTGAAACCTCCATATCCGGC GATAAGAGCTACGGACCGTATACTGGGCGCCGGTAATTGGTTGCACTCGCCCTCGGTCTT TTTCTTTTTGGTTTAGCAGAGCAAGGCGTGGAAAAGGAGAGAGGGAGAAAAGGGAAAGGG AAAAGAGGAGAAGAAAGAAAAAGGAAGGGGGGAAGAGGAGAGAAGGGAAGGGAAGGGGGA GAAAGAGGGAAAGAGGAGAAAAAAGGAGGGGGAAGAAGGAAGGGGGAAAGGGGGGGAAAG 上の配列は、以下の構造を持っていることがわかります。 index type 1~150 pyrimidine base 151~450 both 451~600 purine base In [28]: model . fit ( sequences = seq_extreme , epochs = 100 , verbose = False ) In [29]: plotHistory ( model ) In [30]: model . params () 【Parameter】 ============================== *initial state z(1) z(2) z(3) 1.0000 0.0000 0.0000 ------------------------------ *transition probability matrix [States after transition] z(1) z(2) z(3) z(1) 0.9933 0.0000 0.0067 z(2) 0.0000 1.0000 0.0000 z(3) 0.0000 0.0033 0.9967 ------------------------------ *emission probability z(1) z(2) z(3) A 0.0000 0.4851 0.2199 C 0.5034 0.0000 0.2627 G 0.0000 0.5149 0.2415 T 0.4966 0.0000 0.2760 In [31]: pred_extreme = model . predict ( sequences = seq_extreme ) In [32]: print ( f \"Hidden Indexes: \\n {alignStr(pred_extreme[0])}\" ) Hidden Indexesうまく傾向をつかんでいることから、学習アルゴリズムに大きな誤りはなさそうです。 In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-4.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-4.html"},{"title":"生物統計論 第1回","text":"講師： 木立尚孝 講義概要 09/27 (Fri) 10:25-12:10 10/04 (Fri) 10:25-12:10 10/11 (Fri) 10:25-12:10 10/18 (Fri) 10:25-12:10 10/25 (Fri) 10:25-12:10 11/08 (Fri) 10:25-12:10 11/15 (Fri) 10:25-11:30(Lecture) / 11:30-12:10: (Test) Section1.1 STATISTICAL ANALYSIS Genomic data has recently become available, so the analyzing methods still its infancy at the century scale. It is very important how much information can be extracted from genomic and other omic data. Data-driven Research Development of measurement, communication, computing technologies. data science, e-science Statistics, computer skill, artificial intelligence, machine learning. Statistical Analysis Subjects and measurements are often conclude the random events , such as noise. Aiming for finding the \"True\" distribution, and inferencing on that distribution. Power of Statistical Methods Amount of information we can extract \"Many and high\" / \"Few or low\" quality Event infinite number of data cannot answer all questions. ex) we couldn't answer \"what is the number of eyes on the next dice.\" Data dependency. Section1.2 PROBABILITY DEFINITIONS Probability: Mathematical Probability: The probability of an event consisting of n out of m possible equally likely occurrences, defined to be n / m Statistical Probability: Each event is random, but if you repeat it a lot, you can see the probability that each event occurs. Subjective Probability: A type of probability derived from an individual's personal judgment or own experience about whether a specific outcome is likely to occur. ※ Mathematical Probability is the most strict and basic. Probability space \\(\\left(\\Omega, E, P\\right)\\) $$\\begin{aligned}&\\Omega: \\text{Set, Samplemspace}\\\\&E: \\text{Events,}\\sigma\\text{-algebra}\\\\&P: \\text{Probability measure}\\end{aligned}$$ Sample Space The sets of elementary events. ex.) The number of eyes on the dice. All possible genomes. All possible gene expression profiles \\(\\omega_i\\in\\Omega\\) is the identifier of possible individual stochastic phenomena. \\(\\sigma\\) -algebra $$ \\begin{aligned} &\\varepsilon= \\left\\{E_1,E_2,\\cdots|E_i\\subseteq\\Omega:\\text{event}:\\sigma\\text{-algebra} \\right\\}\\\\ &\\Rightarrow \\varnothing,\\Omega,\\left(E_i\\setminus E_j\\right),\\left(\\bigcup_{i=1}&#94;{\\infty}E_i\\right),\\left(\\bigcap_{i=1}&#94;{\\infty}E_i\\right)\\in\\varepsilon \\end{aligned} $$ The sets of Events. Each event \\(E_i\\subseteq\\Omega\\) Include Empty set \\(\\varnothing\\) , universal set \\(\\Omega\\) Closure to variable \"Set Operation\". (ex. Union, intersection, complement) example) discrete set Real set Power set Borel set \\(\\mathcal{A}\\) Probability measure $$\\begin{aligned}&\\mathbb{P} : \\mathcal{E} \\rightarrow \\mathbb{R} \\\\& 0 \\leq \\mathbb{P}(E) \\leq 1, E \\in \\mathcal{E} \\\\&\\mathbb{P}(\\Omega)=1, \\mathbb{P}(\\varnothing)=0 \\\\&\\text { For } E_{1}, E_{2}, \\cdots \\in \\mathcal{E}, \\text{ s.t. } E_{i} \\cap E_{j}=\\varnothing, \\forall i \\neq j \\\\&\\mathbb{P}\\left(\\bigcup_{i=1}&#94;{\\infty} E_{i}\\right)=\\sum_{i=1}&#94;{\\infty} \\mathbb{P}\\left(E_{i}\\right)\\end{aligned}$$ Each event is assigned a value that indicates the likelihood or probability of occurrence. Random variable $$\\begin{aligned}X: &\\text{random variable}\\\\\\Leftrightarrow &X : \\Omega \\rightarrow \\mathbb{R} \\\\ &\\text { s.t. } X&#94;{-1}(A) \\in \\mathcal{E}, \\forall A \\in \\mathcal{A} \\\\&X&#94;{-1}(A) :=\\{\\omega \\in \\Omega \\mid X(\\omega) \\in A\\}\\end{aligned}$$ Section1.3 PROBABILITY TERMS AND PROPERTIES Probability distribution function \\(F_x\\) (cumulative distribution) Probability density function \\(f_x\\) $$F_x\\left(x+dx\\right)-F_x\\left(x\\right)=:f_x(x)dx$$ Conditional Probability Joint Probability distribution $$(X,Y): \\Omega\\rightarrow\\mathbb{R}&#94;2; (X,Y)(\\omega) = \\left(X(\\omega),Y(\\omega)\\right)\\\\\\left(X,Y\\right)&#94;{-1}(A) = \\left\\{\\omega\\in\\Omega|\\left(X(\\omega),Y(\\omega)\\right)\\in A\\right\\}$$ Independent random variables Expected Value Variance Covariance: $$\\begin{cases}X,Y: \\text{independent random variables}\\Rightarrow \\mathrm{Cov}(X,Y) = 0\\\\X,Y: \\text{independent random variables}\\not\\Leftarrow \\mathrm{Cov}(X,Y) = 0 \\end{cases}$$ Indicator Function: $$\\mathbb{I}_A(x)=\\begin{cases}1 & x\\in A\\\\0 & x\\notin A\\end{cases},A\\in\\mathcal{A}$$ Marginalization Section1.4 PROBABILITY DISTRIBUTIONS Look Here!! if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物統計論","url":"https://iwasakishuto.github.io/University/3A/生物統計論-1.html","loc":"https://iwasakishuto.github.io/University/3A/生物統計論-1.html"},{"title":"生物統計論 第0回","text":"Section1.4 PROBABILITY DISTRIBUTIONS In [1]: import numpy as np import collections import matplotlib.pyplot as plt In [2]: N = 100000 Bernoulli Distribution In [3]: def BernoulliVar ( q , N , seed = None ): rng = np . random . RandomState ( seed ) if seed is not None else np . random return np . var ( rng . rand ( N ) < q ) In [4]: qs = np . linspace ( 0 , 1 , 1000 ) In [5]: probs = [ BernoulliVar ( q , N ) for q in qs ] In [6]: plt . title ( \"Bernoulli distribution\" ) plt . plot ( qs , probs , label = \"$Var(X)$\" ) plt . xlabel ( \"q\" ) plt . ylabel ( \"$Var(X)$\" ) plt . legend () plt . show () Binomial Distribution In [7]: def BinomialProb ( n , p , N , seed = None , color = None , ax = None ): if ax == None : fig , ax = plt . subplots () rng = np . random . RandomState ( seed ) if seed is not None else np . random counter = collections . Counter ( rng . binomial ( n , p , N )) count , freqs = zip ( * sorted ( counter . most_common ())) probs = [ freq / N for freq in freqs ] ax . plot ( count , probs , color = color , label = f \"p= {p} and n= {n} \" ) ax . scatter ( count , probs , color = color ) return ax In [8]: ax = BinomialProb ( 20 , 0.5 , N , seed = 0 , color = \"blue\" ) ax = BinomialProb ( 20 , 0.7 , N , seed = 0 , color = \"green\" , ax = ax ) ax = BinomialProb ( 40 , 0.5 , N , seed = 0 , color = \"red\" , ax = ax ) plt . legend () plt . show () Normal Distribution In [9]: from scipy import stats In [10]: def NormalProb ( mu , sigma ): X = np . arange ( mu - 3.5 * sigma , mu + 3.5 * sigma , sigma / 50 ) Y = stats . norm . pdf ( X , mu , sigma ) for i in np . arange ( - 3 , 4 , 1 ): idx = np . argmin ( abs ( X - ( mu + i * sigma ))) plt . plot ([ X [ idx ], X [ idx ]], [ 0 , Y [ idx ]], 'k-' ) plt . scatter ( X [ idx ], Y [ idx ], color = \"black\" ) plt . plot ( X , Y , color = \"black\" ) In [11]: NormalProb ( mu = 0 , sigma = 0.1 ) Multivariate Normal Distribution In [12]: from scipy.stats import multivariate_normal In [13]: x , y = np . mgrid [ - 3 : 3.5 : . 01 , - 3 : 3 : . 01 ] pos = np . dstack (( x , y )) rv = multivariate_normal ([ 0.5 , - 0.2 ], [[ 2.0 , 2.3 ], [ 0.3 , 0.8 ]]) plt . contourf ( x , y , rv . pdf ( pos )) plt . show () In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"生物統計論","url":"https://iwasakishuto.github.io/University/3A/生物統計論-0.html","loc":"https://iwasakishuto.github.io/University/3A/生物統計論-0.html"},{"title":"HMMのスケーリング","text":"HMMを実装する際に課題となるのが、forward-algorithm で \\(\\alpha\\) を再帰的に求める際に、 \\(\\alpha\\left(\\mathbf{z}_{n-1}\\right)\\) に \\(p(\\mathbf{z}_n|\\mathbf{z}_{n-1})\\) と \\(p(\\mathbf{x}_n|\\mathbf{z}_n)\\) をかけるため、値が非常に小さくなり、計算機の ダイナミックレンジ を超えてしまうことです。 そこで、ここでは \\(\\alpha\\left(\\mathbf{z}_{n}\\right)\\) と \\(\\beta\\left(\\mathbf{z}_{n}\\right)\\) にスケーリングを施し、それらの値が \\(1\\) のオーダーに止まるようにする手法を説明します。 forward-backward \\(\\alpha,\\beta\\) forward-backward algorithm で用いられていた \\(\\alpha,\\beta\\) は以下のように定義されていました。 $$ \\begin{aligned} \\alpha\\left(\\mathbf{z}_{n}\\right) & \\equiv p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}, \\mathbf{z}_{n}\\right) & (13.34)\\\\ \\beta\\left(\\mathbf{z}_{n}\\right) & \\equiv p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right) & (13.35) \\end{aligned} $$ Scaling factors まず、スケーリングされた \\(\\alpha,\\beta\\) は以下のように表されます。スケーリングによって、 \\(\\alpha\\) は高々 \\(K\\) 個の変数上の確率分布 、 \\(\\beta\\) は2つの条件付き確率の比 になることがわかります。 $$ \\begin{aligned} \\widehat{\\alpha}\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)=\\frac{\\alpha\\left(\\mathbf{z}_{n}\\right)}{p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)} & (13.55)\\\\ \\widehat{\\beta}\\left(\\mathbf{z}_{n}\\right) &=\\frac{p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right)}{p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)}=\\frac{\\beta\\left(\\mathbf{z}_{n}\\right)}{p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)} & (13.61) \\end{aligned} $$ ここで、これらと \\(\\alpha,\\beta\\) を関連付けるためのスケーリング係数 \\(c\\) を導入します。 $$ c_{n}=p\\left(\\mathbf{x}_{n} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1}\\right)\\qquad (13.56) $$ すると、 $$ \\begin{aligned} p\\left(\\mathbf{x}_1,\\ldots,\\mathbf{x}_n\\right) &= p\\left(\\mathbf{x}_n | \\mathbf{x}_1,\\ldots,\\mathbf{x}_{n-1}\\right)\\cdots p\\left(\\mathbf{x}_3 | \\mathbf{x}_1,\\mathbf{x}_{2}\\right)p\\left(\\mathbf{x}_2 | \\mathbf{x}_1\\right)p(\\mathbf{x}_1)\\\\ &= c_n\\cdots c_3c_2c_1\\\\ &= \\prod_{m=1}&#94;{n} c_{m} \\end{aligned}\\qquad (13.58) $$ と展開することができるので、 $$ \\begin{aligned} \\alpha\\left(\\mathbf{z}_{n}\\right)&=p\\left(\\mathbf{z}_{n} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right) p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)=\\left(\\prod_{m=1}&#94;{n} c_{m}\\right) \\widehat{\\alpha}\\left(\\mathbf{z}_{n}\\right) & (13.58)\\\\ \\beta\\left(\\mathbf{z}_{n}\\right)&=p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)\\widehat{\\beta}\\left(\\mathbf{z}_{n}\\right) = \\left(\\prod_{m=n+1}&#94;{N} c_{m}\\right) \\widehat{\\beta}\\left(\\mathbf{z}_{n}\\right) & (13.60) \\end{aligned} $$ と対応関係がわかります。 \\(\\gamma,\\xi\\) 続いて、 \\(\\gamma,\\xi\\) と \\(\\widehat{\\alpha},\\widehat{\\beta}\\) の対応関係を求めます。 \\(\\alpha,\\beta\\) \\(\\alpha,\\beta\\) を用いると、以下のように表されていました。 $$ \\begin{aligned} \\gamma\\left(\\mathbf{z}_{n}\\right) &= \\frac{\\alpha\\left(\\mathbf{z}_{n}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} & (13.33)\\\\ \\xi\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right) &=\\frac{\\alpha\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} &(13.43) \\end{aligned}$$ \\(\\widehat{\\alpha},\\widehat{\\beta}\\) 先の対応関係を用いれば、 \\(\\widehat{\\alpha},\\widehat{\\beta}\\) を用いると、 $$ \\begin{aligned} \\gamma\\left(\\mathbf{z}_{n}\\right) &=\\widehat{\\alpha}\\left(\\mathbf{z}_{n}\\right) \\widehat{\\beta}\\left(\\mathbf{z}_{n}\\right) & (13.64)\\\\ \\xi\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right) &=\\left(c_{n}\\right)&#94;{-1} \\widehat{\\alpha}\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) \\widehat{\\beta}\\left(\\mathbf{z}_{n}\\right) & (13.65) \\end{aligned} $$ と表されることがわかります。 Recursion 最後に、再帰式の対応関係も求めます。 \\(\\alpha,\\beta\\) $$ \\begin{aligned} \\alpha\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} \\alpha\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) & (13.36)\\\\ \\alpha\\left(\\mathbf{z}_{1}\\right) &=p\\left(\\mathbf{x}_{1}, \\mathbf{z}_{1}\\right)=p\\left(\\mathbf{z}_{1}\\right) p\\left(\\mathbf{x}_{1} | \\mathbf{z}_{1}\\right)=\\prod_{k=1}&#94;{K}\\left\\{\\pi_{k} p\\left(\\mathbf{x}_{1} | \\boldsymbol{\\phi}_{k}\\right)\\right\\}&#94;{z_{1 k}} & (13.37)\\\\ \\beta\\left(\\mathbf{z}_{n}\\right) &=\\sum_{\\mathbf{z}_{n+1}} \\beta\\left(\\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{x}_{n+1} | \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) & (13.38)\\\\ \\beta\\left(\\mathbf{z}_{N}\\right) &= \\frac{\\gamma\\left(\\mathbf{z}_N\\right)p\\left(\\mathbf{X}\\right)}{\\alpha\\left(\\mathbf{z}_N\\right)} = \\frac{p\\left(\\mathbf{z}_{N} | \\mathbf{X}\\right)p(\\mathbf{X})}{p\\left(\\mathbf{X}, \\mathbf{z}_{N}\\right)} = 1 & (13.30) \\end{aligned} $$ \\(\\widehat{\\alpha},\\widehat{\\beta}\\) $$ \\begin{aligned} c_{n} \\widehat{\\alpha}\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} \\widehat{\\alpha}\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) & (13.58)\\\\ \\widehat{\\alpha}\\left(\\mathbf{z}_{1}\\right) &=p\\left(\\mathbf{z}_{1}| \\mathbf{x}_{1}\\right)=\\frac{p\\left(\\mathbf{z}_{1}\\right)p\\left(\\mathbf{x}_{1}| \\mathbf{z}_{1}\\right)}{p\\left(\\mathbf{x}_{1}\\right)} = \\frac{\\prod_{k=1}&#94;{K}\\left\\{\\pi_{k} p\\left(\\mathbf{x}_{1} | \\boldsymbol{\\phi}_{k}\\right)\\right\\}&#94;{z_{1 k}}}{p\\left(\\mathbf{x}_{1}\\right)}\\\\ c_{n+1} \\widehat{\\beta}\\left(\\mathbf{z}_{n}\\right) &=\\sum_{\\mathbf{z}_{n+1}} \\widehat{\\beta}\\left(\\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{x}_{n+1} | \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) &(13.62)\\\\ \\widehat{\\beta}\\left(\\mathbf{z}_{N}\\right) &= \\frac{\\gamma\\left(\\mathbf{z}_N\\right)}{\\widehat{\\alpha}\\left(\\mathbf{z}_N\\right)} = \\frac{p\\left(\\mathbf{z}_{N} | \\mathbf{X}\\right)}{p\\left(\\mathbf{z}_{n} | \\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}\\right)} = 1 & (13.30) \\end{aligned} $$ なお、ここで \\((13.58)\\) でどのようにして \\(c_n\\) を求めるかですが、 $$ \\begin{aligned} \\mathrm{R.H.S}\\ (13.58) &= p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} \\widehat{\\alpha}\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right)\\\\ &= p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}}p\\left(\\mathbf{z}_{n-1}|\\mathbf{x}_1,\\ldots,\\mathbf{x}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right)\\\\ &= p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n}|\\mathbf{x}_1,\\ldots,\\mathbf{x}_{n-1}\\right)\\\\ &=p\\left(\\mathbf{x}_{n},\\mathbf{z}_{n}|\\mathbf{x}_1,\\ldots,\\mathbf{x}_{n-1}\\right) \\end{aligned} $$ となることから、 \\((13.58)\\) の右辺を \\(\\mathbf{z}_n\\) について周辺化すれば、 $$\\sum_{\\mathbf{z}_{n}}p\\left(\\mathbf{x}_{n},\\mathbf{z}_{n}|\\mathbf{x}_1,\\ldots,\\mathbf{x}_{n-1}\\right) = p\\left(\\mathbf{x}_{n}|\\mathbf{x}_1,\\ldots,\\mathbf{x}_{n-1}\\right) = c_n$$ となるので、 \\(c_n\\) が求められることがわかります。 おまけ（尤度関数） 尤度関数はスケーリング係数 \\(c\\) を用いるだけで簡単に求められることがわかります。 $$p(\\mathbf{X})=\\prod_{n=1}&#94;{N} c_{n}\\qquad (13.63)$$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-3.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-3.html"},{"title":"HMMの最尤推定の計算過程","text":"ここでは、 HMMの最尤推定 で省略した計算過程について記述します。 \\(Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\) $$ \\begin{aligned} p(\\mathbf{X}, \\mathbf{Z} | \\boldsymbol{\\theta})&=p\\left(\\mathbf{z}_{1} | \\boldsymbol{\\pi}\\right)\\left[\\prod_{n=2}&#94;{N} p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}, \\mathbf{A}\\right)\\right] \\prod_{m=1}&#94;{N} p\\left(\\mathbf{x}_{m} | \\mathbf{z}_{m}, \\boldsymbol{\\phi}\\right)\\qquad (13.10)\\\\ &=\\prod_{k=1}&#94;{K} \\pi_{k}&#94;{z_{1 k}}\\left[ \\prod_{n=2}&#94;{N}\\prod_{k=1}&#94;{K} \\prod_{j=1}&#94;{K} A_{j k}&#94;{z_{n-1, j} z_{n k}} \\right] \\prod_{m=1}&#94;{N}\\prod_{i=1}&#94;{D} \\prod_{k=1}&#94;{K} \\phi_{i k}&#94;{x_{ni} z_{nk}}\\\\ \\therefore\\ln p(\\mathbf{X}, \\mathbf{Z} | \\boldsymbol{\\theta}) &=\\sum_{k=1}&#94;Kz_{1k}\\ln\\pi_k\\left[\\sum_{n=2}&#94;N\\sum_{k=1}&#94;K\\sum_{j=1}&#94;Kz_{n-1,j}z_{nk}\\ln A_{jk}\\right]\\sum_{m=1}&#94;N\\sum_{i=1}&#94;D\\sum_{k=1}&#94;Kx_{ni}z_{nk}\\ln\\phi_{ik} \\end{aligned} $$ であるから、これを \\((13.12)\\) に代入して、 $$ \\begin{aligned} Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)=&\\sum_{\\mathbf{Z}} p\\left(\\mathbf{Z} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right) \\ln p(\\mathbf{X}, \\mathbf{Z} | \\boldsymbol{\\theta})\\qquad (13.12)\\\\ =& \\sum_{\\mathbf{Z}} p\\left(\\mathbf{Z} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\sum_{k=1}&#94;Kz_{1k}\\ln\\pi_k+\\sum_{\\mathbf{Z}} p\\left(\\mathbf{Z} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\sum_{n=2}&#94;N\\sum_{k=1}&#94;K\\sum_{j=1}&#94;Kz_{n-1,j}z_{nk}\\ln A_{jk}\\\\ &+\\sum_{\\mathbf{Z}} p\\left(\\mathbf{Z} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\sum_{m=1}&#94;N\\sum_{i=1}&#94;D\\sum_{k=1}&#94;Kx_{ni}z_{nk}\\ln\\phi_{ik} \\end{aligned} $$ ここで、 \\(\\sum_{\\mathbf{Z}} = \\sum_{\\mathbf{z_1},\\mathbf{z_2},\\ldots,\\mathbf{z_N}}\\) なので、それぞれ 関係の無い部分を周辺化 でき、 $$ \\begin{aligned} Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)=& \\sum_{k=1}&#94;K\\sum_{\\mathbf{z_1}} p\\left(\\mathbf{z_1} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)z_{1k}\\ln\\pi_k+\\sum_{n=2}&#94;N\\sum_{k=1}&#94;K\\sum_{j=1}&#94;K\\sum_{\\mathbf{z_{n-1},z_n}}p\\left(\\mathbf{z_{n-1},z_n} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)z_{n-1,j}z_{nk}\\ln A_{jk}\\\\ &+\\sum_{m=1}&#94;N\\sum_{i=1}&#94;D\\sum_{k=1}&#94;K\\sum_{\\mathbf{z_n}}p\\left(\\mathbf{z_n} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)x_{ni}z_{nk}\\ln\\phi_{ik}\\\\ \\end{aligned}$$ となります。また、 \\(\\gamma,\\xi\\) の定義 を用いることで $$\\begin{aligned} Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)=& \\sum_{k=1}&#94;K\\left(\\sum_{\\mathbf{z_1}} \\gamma\\left(\\mathbf{z}_1\\right)z_{1k}\\right)\\ln\\pi_k+\\sum_{n=2}&#94;N\\sum_{k=1}&#94;K\\sum_{j=1}&#94;K\\left(\\sum_{\\mathbf{z_{n-1},z_n}}\\xi\\left(\\mathbf{z_{n-1},z_{n}}\\right) z_{n-1,j}z_{nk}\\right)\\ln A_{jk}\\\\ &+\\sum_{m=1}&#94;N\\sum_{i=1}&#94;D\\sum_{k=1}&#94;K\\left(\\sum_{\\mathbf{z_n}}\\gamma\\left(\\mathbf{z}_n\\right)x_{ni}z_{nk}\\right)\\ln\\phi_{ik} \\end{aligned} $$ と書き直せます。この時、潜在変数が離散なので、 \\(\\gamma,\\xi\\) はそれぞれ和が \\(1\\) となる \\(K,\\left(K\\times K\\right)\\) 個の非負の数の集合を用いて以下のように記述できます。 $$ \\begin{aligned} \\gamma\\left(z_{n k}\\right) &=\\sum_{\\mathbf{z}} \\gamma(\\mathbf{z}) z_{n k} &(13.15)\\\\ \\xi\\left(z_{n-1, j}, z_{n k}\\right) &=\\sum_{\\mathbf{z}} \\gamma(\\mathbf{z}) z_{n-1, j} z_{n k} &(13.16)\\end{aligned} $$ したがって、これらを用いて上記の式を書き直すと、 $$ \\begin{aligned} Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\mathrm{old}}\\right)=& \\sum_{k=1}&#94;{K} \\gamma\\left(z_{1 k}\\right) \\ln \\pi_{k}+\\sum_{n=2}&#94;{N} \\sum_{j=1}&#94;{K} \\sum_{k=1}&#94;{K} \\xi\\left(z_{n-1, j}, z_{n k}\\right) \\ln A_{j k} \\\\ &+\\sum_{n=1}&#94;{N} \\sum_{k=1}&#94;{K}\\gamma\\left(z_{n k}\\right) \\sum_{i=1}&#94;Dx_{ni} \\ln \\phi_{i k} \\end{aligned}\\qquad (13.17) $$ Maximization step ここでは、上記の \\(Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\mathrm{old}}\\right)\\) 関数を各パラメータ \\(\\boldsymbol{\\theta}\\) に関して最大化する際の ラグランジュの未定乗数法 を書き下します。 \\(\\boldsymbol{\\pi}\\) $$ \\begin{aligned} L\\left(\\boldsymbol{\\pi},\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text { old }}\\right) &= \\sum_{k=1}&#94;{K} \\gamma\\left(z_{1 k}\\right) \\ln \\pi_{k} + \\lambda_1\\left(\\sum_{k=1}&#94;K\\pi_k - 1\\right)\\\\ \\frac{\\partial L}{\\partial \\pi_k}&=\\frac{\\gamma\\left(z_{1 k}\\right)}{\\pi_k} + \\lambda_1 = 0\\quad \\therefore \\pi_k = -\\frac{\\gamma\\left(z_{1 k}\\right)}{\\lambda_1}\\\\ \\frac{\\partial L}{\\partial \\lambda_1}&=\\sum_{k=1}&#94;K\\pi_k - 1 = 0\\quad \\therefore\\lambda_1 = -\\sum_{k=1}&#94;K\\gamma\\left(z_{1 k}\\right)\\\\ \\therefore\\pi_k&#94;{\\star} &= \\frac{\\gamma\\left(z_{1 k}\\right)}{\\sum_{j=1}&#94;{K} \\gamma\\left(z_{1 j}\\right)} \\end{aligned} $$ \\(\\boldsymbol{A}\\) $$\\begin{aligned} L\\left(\\boldsymbol{A},\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text { old }}\\right) & = \\sum_{n=2}&#94;{N} \\sum_{j=1}&#94;{K} \\sum_{k=1}&#94;{K} \\xi\\left(z_{n-1, j}, z_{n k}\\right) \\ln A_{j k} + \\sum_{j=1}&#94;K\\lambda_{2,j}\\left(\\sum_{k=1}&#94;K A_{jk} - 1\\right)\\\\ \\frac{\\partial L}{\\partial A_{jk}} &= \\sum_{n=2}&#94;{N}\\frac{\\xi\\left(z_{n-1, j}, z_{n k}\\right)}{A_{jk}} + \\lambda_{2,j} = 0\\quad \\therefore A_{jk} = -\\frac{\\sum_{n=2}&#94;N\\xi\\left(z_{n-1, j}, z_{n k}\\right)}{\\lambda_{2,j}}\\\\ \\frac{\\partial L}{\\partial \\lambda_{2,j}} &= \\sum_{k=1}&#94;K A_{jk} - 1 = 0\\quad \\therefore \\lambda_{2,j} = -\\sum_{k=1}&#94;K\\sum_{n=2}&#94;N\\xi\\left(z_{n-1, j}, z_{n k}\\right)\\\\ \\therefore A_{jk}&#94;{\\star}&=\\frac{\\sum_{n=2}&#94;{N} \\xi\\left(z_{n-1, j}, z_{n k}\\right)}{\\sum_{l=1}&#94;{K} \\sum_{n=2}&#94;{N} \\xi\\left(z_{n-1, j}, z_{n l}\\right)} \\end{aligned}$$ \\(\\boldsymbol{\\phi}\\) $$\\begin{aligned} L\\left(\\boldsymbol{\\phi},\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text { old }}\\right) & = \\sum_{n=1}&#94;{N} \\sum_{k=1}&#94;{K}\\gamma\\left(z_{n k}\\right) \\sum_{i=1}&#94;Dx_{ni} \\ln \\phi_{i k} + \\sum_{k=1}&#94;K\\lambda_{3,k}\\left( \\sum_{i=1}&#94;D\\phi_{ik} - 1\\right)\\\\ \\frac{\\partial L}{\\partial\\phi_{ik}} &= \\frac{\\sum_{n=1}&#94;N\\gamma\\left(z_{n k}\\right)x_{ni}}{\\phi_{ik}} + \\lambda_{3,k}=0\\quad \\therefore \\phi_{ik} = -\\frac{\\sum_{n=1}&#94;N\\gamma\\left(z_{n k}\\right)x_{ni}}{\\lambda_{3,k}}\\\\ \\frac{\\partial L}{\\partial\\lambda_{3,k}} &= \\sum_{i=1}&#94;D\\phi_{ik} - 1 = 0 \\quad \\therefore \\lambda_{3,k} = -\\sum_{i=1}&#94;D\\sum_{n=1}&#94;N\\gamma\\left(z_{n k}\\right)x_{ni} = -\\sum_{i=1}&#94;D\\gamma\\left(z_{n k}\\right)\\\\ \\therefore \\phi_{ik}&#94;{\\star} &= \\frac{\\sum_{n=1}&#94;N\\gamma\\left(z_{n k}\\right)x_{ni}}{\\sum_{i=1}&#94;D\\gamma\\left(z_{n k}\\right)} \\end{aligned}$$ Expectation step $$ \\begin{aligned} \\gamma\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right) &(13.13)\\\\ \\xi\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right) &(13.14)\\\\ \\alpha\\left(\\mathbf{z}_{n}\\right) & \\equiv p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}, \\mathbf{z}_{n}\\right) & (13.34)\\\\ \\beta\\left(\\mathbf{z}_{n}\\right) & \\equiv p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right) & (13.35)\\\\ \\end{aligned} $$ forward-algorithm \\((\\alpha)\\) $$\\begin{aligned} \\alpha\\left(\\mathbf{z}_{n}\\right) & =p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}, \\mathbf{z}_{n}\\right) \\\\ & =p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n}\\right) \\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n}\\right) \\quad (\\because \\text{conditional independence})\\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1}, \\mathbf{z}_{n}\\right) \\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1}, \\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right) \\quad (\\because \\text{demarginalization})\\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1}, \\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n-1}\\right) \\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1} | \\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n-1}\\right) \\quad (\\because \\text{conditional independence})\\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1}, \\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) \\\\ & =p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} \\alpha(\\mathbf{z}_{n-1})p(\\mathbf{z} | \\mathbf{z}_{n-1})\\\\ \\end{aligned}$$ backward-algorithm \\((\\beta)\\) $$\\begin{aligned} \\beta\\left(\\mathbf{z}_{n}\\right) & =p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right) \\\\ & =\\sum_{\\mathbf{z}_{n+1}} p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N}, \\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) \\quad (\\because \\text{demarginalization})\\\\ & =\\sum_{\\mathbf{z}_{n+1}} p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}, \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) \\\\ & =\\sum_{\\mathbf{z}_{n+1}} p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) \\quad (\\because \\text{conditional independence})\\\\ & =\\sum_{\\mathbf{z}_{n+1}} p\\left(\\mathbf{x}_{n+2}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{x}_{n+1} | \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) \\quad (\\because \\text{conditional independence})\\\\ & =\\sum_{\\mathbf{z}_{n+1}} \\beta(\\mathbf{z}_{n+1})p(\\mathbf{x}_{n+1}|\\mathbf{z}_{n+1})p(\\mathbf{z}_{n+1}|\\mathbf{z}_n)\\qquad (13.38) \\end{aligned}$$ \\(\\gamma,\\xi\\) $$ \\begin{aligned} \\gamma\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n} | \\mathbf{X}\\right)=\\frac{p\\left(\\mathbf{X} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})}\\quad (\\because \\text{Bayes' theorem}) &(13.32)\\\\ &=\\frac{p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}, \\mathbf{z}_{n}\\right) p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} \\quad (\\because \\text{conditional independence})\\\\ &= \\frac{\\alpha\\left(\\mathbf{z}_{n}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} & (13.33) \\end{aligned} $$ $$\\begin{aligned} \\xi\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n} | \\mathbf{X}\\right) \\\\ &=\\frac{p(\\mathbf{X} | \\mathbf{z}_{n-1}, \\mathbf{z}_{n}) p\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} \\quad (\\because \\text{Bayes' theorem})\\\\ &=\\frac{p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n-1} | \\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n-1}\\right)}{p(\\mathbf{X})} \\quad (\\because \\text{conditional independence})\\\\ &=\\frac{\\alpha\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) \\beta\\left(\\mathbf{x}_{n}\\right)}{p(\\mathbf{X})}\\qquad (13.43) \\end{aligned}$$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-2.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-2.html"},{"title":"HMMの最尤推定","text":"※ かなり導出部分を省略しています。導出は適宜 HMMの最尤推定の計算過程 を参照してください。 隠れマルコフモデルは、一般に以下の式で表されます。 $$ p(\\mathbf{X}, \\mathbf{Z} | \\boldsymbol{\\theta})=p\\left(\\mathbf{z}_{1} | \\boldsymbol{\\pi}\\right)\\left[\\prod_{n=2}&#94;{N} p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}, \\mathbf{A}\\right)\\right] \\prod_{m=1}&#94;{N} p\\left(\\mathbf{x}_{m} | \\mathbf{z}_{m}, \\boldsymbol{\\phi}\\right)\\qquad (13.10) $$ \\(\\mathbf{X} = \\{\\mathbf{x}_1,\\ldots,\\mathbf{x}_N\\}\\) : \\(\\mathbf{Z} = \\{\\mathbf{z}_1,\\ldots,\\mathbf{z}_N\\}\\) \\(\\boldsymbol{\\theta}=\\{\\boldsymbol{\\pi}, \\mathbf{A}, \\boldsymbol{\\phi}\\}\\) ※ 一般に放出確率 \\(p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}, \\boldsymbol{\\phi}\\right)\\) は、 二値のベクトル \\(\\mathbf{z}_n\\) の \\(K\\) 個の可能な状態に対応した \\(K\\) 個の要素を持つベクトルからなる任意の分布 $$ p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}, \\phi\\right)=\\prod_{k=1}&#94;{K} p\\left(\\mathbf{x}_{n} | \\phi_{k}\\right)&#94;{z_{n k}}\\qquad (13.9) $$ を考えることも可能ですが、今回は下記の離散多項分布を考えます。 Name Probability Conditional Distribution initial state \\(\\pi_{k} \\equiv p\\left(z_{1 k}=1\\right)\\) \\(p\\left(\\mathbf{z}_{1} \\mid \\boldsymbol{\\pi}\\right)=\\prod_{k=1}&#94;{K} \\pi_{k}&#94;{z_{1 k}}\\quad (13.8)\\) transition probability \\(A_{j k} \\equiv p\\left(z_{n k}=1\\mid z_{n-1, j}=1\\right)\\) \\(p\\left(\\mathbf{z}_{n} \\mid \\mathbf{z}_{n-1}, \\mathbf{A}\\right)=\\prod_{k=1}&#94;{K} \\prod_{j=1}&#94;{K} A_{j k}&#94;{z_{n-1, j} z_{n k}}\\quad (13.7)\\) emission probability \\(\\phi_{i k}\\equiv p\\left(x_{n i}=1 \\mid z_{n k}=1\\right)\\) \\(p(\\mathbf{x}_n \\mid \\mathbf{z}_n, \\boldsymbol{\\phi})=\\prod_{i=1}&#94;{D} \\prod_{k=1}&#94;{K} \\phi_{i k}&#94;{x_{ni} z_{nk}}\\quad (13.22)\\) 尤度関数 ここで、データ集合 \\(\\mathbf{X}\\) が観測された際に、上記の同時分布を潜在変数 \\(\\mathbf{Z}\\) について周辺化することで、尤度関数は以下のように記述されます。 $$ p(\\mathbf{X} | \\boldsymbol{\\theta})=\\sum_{\\mathbf{Z}} p(\\mathbf{X}, \\mathbf{Z} | \\boldsymbol{\\theta})\\qquad (13.11) $$ しかし、この尤度関数は \\(n\\) について分解できない（ \\(\\mathbf{z}_n\\) ）ごとに和を取れないので、 条件付き独立 の性質を活かして 尤度関数の対数の期待値 を最大化する Baum-Welch algorithm (EM algorithm) を用います。 Baum-Welch (EM) パラメータ \\(\\boldsymbol{\\theta}&#94;{\\text {old }}\\) を用いて \\(p\\left(\\mathbf{Z} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\) を最大化する。 対数尤度関数の期待値 \\(Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\) を求める。 \\(Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)\\) を最大化するパラメータに更新する。 \\(\\boldsymbol{\\theta}\\rightarrow\\boldsymbol{\\theta}&#94;{\\text {old }}\\) 1に戻る。 $$ Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right)=\\sum_{\\mathbf{Z}} p\\left(\\mathbf{Z} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right) \\ln p(\\mathbf{X}, \\mathbf{Z} | \\boldsymbol{\\theta})\\qquad (13.12) $$ ここで、表記を簡単にするために、 γ 、 ξ を導入します。 $$ \\begin{aligned} \\gamma\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right) &(13.13)\\\\ \\xi\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n} | \\mathbf{X}, \\boldsymbol{\\theta}&#94;{\\text {old }}\\right) &(13.14) \\end{aligned} $$ なお、潜在変数が離散なので、以下のように記述し直せます。（ \\(\\pi_{k},A_{j k},\\phi_{j k}\\) と同様。） $$ \\begin{aligned} \\gamma\\left(z_{n k}\\right) &=\\sum_{\\mathbf{z}} \\gamma(\\mathbf{z}) z_{n k} &(13.15)\\\\ \\xi\\left(z_{n-1, j}, z_{n k}\\right) &=\\sum_{\\mathbf{z}} \\gamma(\\mathbf{z}) z_{n-1, j} z_{n k} &(13.16)\\end{aligned} $$ これらを用いると、 \\(Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\mathrm{old}}\\right)\\) が以下のように書き下せます。 （計算過程） $$ \\begin{aligned} Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\mathrm{old}}\\right)=& \\sum_{k=1}&#94;{K} \\gamma\\left(z_{1 k}\\right) \\ln \\pi_{k}+\\sum_{n=2}&#94;{N} \\sum_{j=1}&#94;{K} \\sum_{k=1}&#94;{K} \\xi\\left(z_{n-1, j}, z_{n k}\\right) \\ln A_{j k} \\\\ &+\\sum_{n=1}&#94;{N} \\sum_{k=1}&#94;{K}\\gamma\\left(z_{n k}\\right) \\sum_{i=1}&#94;Dx_{ni} \\ln \\phi_{i k} \\end{aligned}\\qquad (13.17) $$ Maximization step ※ 実際の計算の順番からは前後しますが、先にM stepを説明します。 上記の \\(Q\\left(\\boldsymbol{\\theta}, \\boldsymbol{\\theta}&#94;{\\mathrm{old}}\\right)\\) を各パラメータ \\(\\boldsymbol{\\theta}\\) に関して最大化するのは（別ブロックに別れているから）簡単で、それぞれ 適当なラグランジュ乗数を導入する ことで、以下のように求まります。 （計算過程） $$ \\begin{aligned} \\pi_{k}&= \\frac{\\gamma\\left(z_{1 k}\\right)}{\\sum_{j=1}&#94;{K} \\gamma\\left(z_{1 j}\\right)} & (13.18)\\\\ A_{j k}&= \\frac{\\sum_{n=2}&#94;{N} \\xi\\left(z_{n-1, j}, z_{n k}\\right)}{\\sum_{l=1}&#94;{K} \\sum_{n=2}&#94;{N} \\xi\\left(z_{n-1, j}, z_{n l}\\right)} & (13.19)\\\\ \\phi_{i k}&=\\frac{\\sum_{n=1}&#94;{N} \\gamma\\left(z_{n k}\\right) x_{n i}}{\\sum_{n=1}&#94;{N} \\gamma\\left(z_{n k}\\right)} & (13.23) \\end{aligned} $$ Expectation step M step で必要となる \\(\\gamma,\\xi\\) は、 条件付き独立性 を用いることで効率的に計算することができます。 $$ \\begin{aligned} \\gamma\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{z}_{n} | \\mathbf{X}\\right)=\\frac{p\\left(\\mathbf{X} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})}\\quad (\\because \\text{Bayes' theorem}) &(13.32)\\\\ &=\\frac{p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}, \\mathbf{z}_{n}\\right) p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} \\quad (\\because \\text{conditional independence})\\\\ &= \\frac{\\alpha\\left(\\mathbf{z}_{n}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} & (13.33) \\end{aligned} $$ $$ \\begin{aligned} \\alpha\\left(\\mathbf{z}_{n}\\right) & \\equiv p\\left(\\mathbf{x}_{1}, \\ldots, \\mathbf{x}_{n}, \\mathbf{z}_{n}\\right) & (13.34)\\\\ \\beta\\left(\\mathbf{z}_{n}\\right) & \\equiv p\\left(\\mathbf{x}_{n+1}, \\ldots, \\mathbf{x}_{N} | \\mathbf{z}_{n}\\right) & (13.35) \\end{aligned} $$ 条件付き独立性を用いてそれぞれ変形すると、以下の再帰式を導くことができます。 （計算過程） $$ \\begin{aligned} \\alpha\\left(\\mathbf{z}_{n}\\right) &=p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) \\sum_{\\mathbf{z}_{n-1}} \\alpha\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) & (13.36)\\\\ \\alpha\\left(\\mathbf{z}_{1}\\right) &=p\\left(\\mathbf{x}_{1}, \\mathbf{z}_{1}\\right)=p\\left(\\mathbf{z}_{1}\\right) p\\left(\\mathbf{x}_{1} | \\mathbf{z}_{1}\\right)=\\prod_{k=1}&#94;{K}\\left\\{\\pi_{k} p\\left(\\mathbf{x}_{1} | \\boldsymbol{\\phi}_{k}\\right)\\right\\}&#94;{z_{1 k}} & (13.37)\\\\ \\beta\\left(\\mathbf{z}_{n}\\right) &=\\sum_{\\mathbf{z}_{n+1}} \\beta\\left(\\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{x}_{n+1} | \\mathbf{z}_{n+1}\\right) p\\left(\\mathbf{z}_{n+1} | \\mathbf{z}_{n}\\right) & (13.38)\\\\ \\beta\\left(\\mathbf{z}_{N}\\right) &= \\frac{\\gamma\\left(\\mathbf{z}_N\\right)p\\left(\\mathbf{X}\\right)}{\\alpha\\left(\\mathbf{z}_N\\right)} = \\frac{p\\left(\\mathbf{z}_{N} | \\mathbf{X}\\right)p(\\mathbf{X})}{p\\left(\\mathbf{X}, \\mathbf{z}_{N}\\right)} = 1 & (13.30) \\end{aligned} $$ ※ なお、ここで \\(\\alpha\\) の再起式を forward-algorithm 、 \\(\\beta\\) の再起式を backward-algorithm と呼ぶことがあります。 また、これらを用いて \\(\\xi\\) を記述することもでき、以下のように表せます。 （計算過程） $$\\xi\\left(\\mathbf{z}_{n-1}, \\mathbf{z}_{n}\\right)=\\frac{\\alpha\\left(\\mathbf{z}_{n-1}\\right) p\\left(\\mathbf{x}_{n} | \\mathbf{z}_{n}\\right) p\\left(\\mathbf{z}_{n} | \\mathbf{z}_{n-1}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})}\\qquad (13.43)$$ 以上でBaum-Welchに必要な計算式が求まりました。 おまけ（尤度関数） 尤度関数は、アルゴリズムの停止条件に用いられるなど、値を求めることが非常に有用です。 求める際は、 $$ \\gamma\\left(\\mathbf{z}_{n}\\right)= \\frac{\\alpha\\left(\\mathbf{z}_{n}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)}{p(\\mathbf{X})} \\qquad (13.33) $$ の両辺を \\(\\mathbf{z}_n\\) について周辺化すれば、左辺は $$\\sum_{\\mathbf{z}_{n}} \\gamma\\left(\\mathbf{z}_{n}\\right) = \\sum_{\\mathbf{z}_{n}}p\\left(\\mathbf{z}_{n} | \\mathbf{X}\\right) = 1$$ となることが明らかなので、以下のように求まります。 $$p(\\mathbf{X})=\\sum_{\\mathbf{z}_{n}} \\alpha\\left(\\mathbf{z}_{n}\\right) \\beta\\left(\\mathbf{z}_{n}\\right)\\qquad (13.41)$$ また、上記の式は任意の \\(n\\) について成立するので、 \\(n=N\\) の場合を考えれば \\(\\alpha\\) のみを用いて求めることができます。 $$p(\\mathbf{X})=\\sum_{\\mathbf{z}_{N}} \\alpha\\left(\\mathbf{z}_{N}\\right)\\qquad (13.42)$$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-1.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-1.html"},{"title":"Numpyの行列計算チートシート","text":"はじめに 様々なアルゴリズムを実装する際に漸化式は出るけど実装時にうまくいかない。ということは良くあります。また、 Python を使って実装する場合、そのほとんどが行列の取り扱いです。 （柔軟であるが故にエラーを吐かずに動いてしまう…笑） そこで、まずは行列計算のチートシートを作成します。（随時加筆修正していきます。） 目次 基本事項 内積（行列積） 外積 In [1]: import numpy as np 基本事項 In [2]: N = 3 A = np . arange ( N ) B = np . arange ( N ) . reshape ( - 1 , N ) # np.expand_dims(A, axis=0), A[None,:] C = np . arange ( N ) . reshape ( N , - 1 ) # np.expand_dims(A, axis=1), A[:,None] D = np . arange ( N * N ) . reshape ( N , N ) In [3]: print ( f \"A = {A} \" ) print ( f \"B = {B} \" ) print ( f \"C = {C} \" ) print ( f \"D = {D} \" ) A = [0 1 2] B = [[0 1 2]] C = [[0] [1] [2]] D = [[0 1 2] [3 4 5] [6 7 8]] In [4]: print ( f \"A.shape = {A.shape} \" ) print ( f \"B.shape = {B.shape} \" ) print ( f \"C.shape = {C.shape} \" ) print ( f \"D.shape = {D.shape} \" ) A.shape = (3,) B.shape = (1, 3) C.shape = (3, 1) D.shape = (3, 3) In [5]: print ( f \"A.ndim = {A.ndim} \" ) print ( f \"B.ndim = {B.ndim} \" ) print ( f \"C.ndim = {C.ndim} \" ) print ( f \"D.ndim = {D.ndim} \" ) A.ndim = 1 B.ndim = 2 C.ndim = 2 D.ndim = 2 ndim ex. scalar $(0)$ 1 , 2 ,... vector $1$ A matrix $\\geq2$ B , C , D 内積（行列積） vector & scalar / matrix & scalar スカラーが絡むと、各要素とスカラーの積となる。 shape の変化はない。 どちらから掛けてもエラーは起こらない。 In [6]: print ( f \"np.dot(A,2) = {np.dot(A,2)}\" ) # vector & scalar print ( f \"np.dot(B,2) = {np.dot(B,2)}\" ) # matrix & scalar print ( f \"np.dot(C,2) = {np.dot(C,2)}\" ) # matrix & scalar print ( f \"np.dot(D,2) = {np.dot(D,2)}\" ) # matrix & scalar np.dot(A,2) = [0 2 4] np.dot(B,2) = [[0 2 4]] np.dot(C,2) = [[0] [2] [4]] np.dot(D,2) = [[ 0 2 4] [ 6 8 10] [12 14 16]] vector & vector 内積となる。 結果はスカラーとなる。 shape が異なると、エラーが起きる。 In [7]: print ( f \"np.dot(A,A) = {np.dot(A,A)}\" ) # vector & vector np.dot(A,A) = 5 In [8]: np . dot ( A , np . arange ( N - 1 )) # shape=(3,) & shape=(2,) ValueError : shapes (3,) and (2,) not aligned: 3 (dim 0) != 2 (dim 0) vector & matrix 行列積となる。 ベクトルは、位置によって変換のされ方が異なる。 左がベクトルの場合： np.dot((x,) (y,z)) = np.dot((1,x) (y,z)) 右がベクトルの場合： np.dot((y,z) (x,)) = np.dot((y,z) (x,1)) 行列積であるので、結果の shape は np.dot((x,y) (y,z)) = (x,z) となる。 上で y が異なるとエラーが生じる。 In [9]: print ( np . dot ( A , B )) # np.dot((3,)(1,3)) print ( np . dot ( A , C )) # np.dot((3,)(3,1)) print ( np . dot ( B , A )) # np.dot((1,3)(3,)) print ( np . dot ( C , A )) # np.dot((3,1)(3,)) ValueError : shapes (3,) and (1,3) not aligned: 3 (dim 0) != 3 (dim 0) [5] [5] ValueError : shapes (3,1) and (3,) not aligned: 1 (dim 1) != 3 (dim 0) matrix & matrix c = np.dot(a,b) a.shape=(a1,a2,...,aN,X) b.shape=(b1,b2,...,X,bM) c.shape=(a1,a2,...,aN,b1,b2,...,bM) c[i1,i2,...,iN,j1,j2,...,jM] == a[i1,i2,...,iM,:].dot(b[j1,j2,...,jM-1,:,jM]) In [10]: import itertools def checkNPdot ( shape1 , shape2 ): \"\"\" 計算可能なshapeの関係を列挙する。 \"\"\" a = np . arange ( np . prod ( shape1 )) b = np . arange ( np . prod ( shape2 )) for comb1 in itertools . permutations ( shape1 , len ( shape1 )): for comb2 in itertools . permutations ( shape2 , len ( shape2 )): try : print ( f \" {comb1} .dot( {comb2} ) = {(a.reshape(comb1).dot(b.reshape(comb2))).shape}\" ) except : pass 以下で具体的に見ていく！ np.dot(2D, 3D) c = np.dot(a,b) a.shape=(i,X) b.shape=(j,X,k) c.shape=(i,j,k) c[i,j,k] == a[i,:].dot(b[j,:,k]) In [11]: a = np . arange ( 6 ) . reshape ( 2 , 3 ) b = np . arange ( 24 ) . reshape ( 2 , 3 , 4 ) c = np . dot ( a , b ) In [12]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) print ( f \"np.dot(a,b).shape = {c.shape} \" ) a.shape = (2, 3) b.shape = (2, 3, 4) np.dot(a,b).shape = (2, 2, 4) In [13]: I , J , K = c . shape In [14]: np . all ([ c [ i , j , k ] == a [ i ,:] . dot ( b [ j ,:, k ]) for i in range ( I ) for j in range ( J ) for k in range ( K )]) Out[14]: True np.dot(3D,2D) c = np.dot(a,b) a.shape=(i,j,X) b.shape=(X,k) c.shape=(i,j,k) c[i,j,k] == a[i,j,:].dot(b[:,k]) In [15]: a = np . arange ( 24 ) . reshape ( 4 , 2 , 3 ) b = np . arange ( 6 ) . reshape ( 3 , 2 ) c = np . dot ( a , b ) In [16]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) print ( f \"np.dot(a,b).shape = {c.shape} \" ) a.shape = (4, 2, 3) b.shape = (3, 2) np.dot(a,b).shape = (4, 2, 2) In [17]: I , J , K = c . shape In [18]: np . all ([ c [ i , j , k ] == a [ i , j ,:] . dot ( b [:, k ]) for i in range ( I ) for j in range ( J ) for k in range ( K )]) Out[18]: True np.dot(3D,3D) c = np.dot(a,b) a.shape=(i,j,X) b.shape=(k,X,l) c.shape=(i,j,k,l) c[i,j,k,l] == a[i,j,:].dot(b[k,:,l]) In [19]: a = np . arange ( 24 ) . reshape ( 2 , 3 , 4 ) b = np . arange ( 60 ) . reshape ( 3 , 4 , 5 ) c = np . dot ( a , b ) In [20]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) print ( f \"np.dot(a,b).shape = {c.shape} \" ) a.shape = (2, 3, 4) b.shape = (3, 4, 5) np.dot(a,b).shape = (2, 3, 3, 5) In [21]: I , J , K , L = c . shape In [22]: np . all ([ c [ i , j , k , l ] == a [ i , j ,:] . dot ( b [ k ,:, l ]) for i in range ( I ) for j in range ( J ) for k in range ( K ) for l in range ( L )]) Out[22]: True np.dot(2D,4D) c = np.dot(a,b) a.shape=(i,X) b.shape=(j,k,X,l) c.shape=(i,j,k,l) c[i,j,k,l] == a[i,:].dot(b[j,k,:,l]) In [23]: a = np . arange ( 6 ) . reshape ( 2 , 3 ) b = np . arange ( 120 ) . reshape ( 2 , 4 , 3 , 5 ) c = np . dot ( a , b ) In [24]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) print ( f \"np.dot(a,b).shape = {c.shape} \" ) # c[i,j,k,l] == a[i,j,:].dot(b[k,:,l]) a.shape = (2, 3) b.shape = (2, 4, 3, 5) np.dot(a,b).shape = (2, 2, 4, 5) In [25]: I , J , K , L = c . shape In [26]: np . all ([ c [ i , j , k , l ] == a [ i ,:] . dot ( b [ j , k ,:, l ]) for i in range ( I ) for j in range ( J ) for k in range ( K ) for l in range ( L )]) Out[26]: True np.dot(3D,4D) c = np.dot(a,b) a.shape=(i,j,X) b.shape=(k,l,X,m) c.shape=(i,j,k,l,m) c[i,j,k,l,m] == a[i,j,:].dot(b[k,l,:,m]) In [27]: a = np . arange ( 24 ) . reshape ( 2 , 3 , 4 ) b = np . arange ( 360 ) . reshape ( 3 , 5 , 4 , 6 ) c = np . dot ( a , b ) In [28]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) print ( f \"np.dot(a,b).shape = {c.shape} \" ) a.shape = (2, 3, 4) b.shape = (3, 5, 4, 6) np.dot(a,b).shape = (2, 3, 3, 5, 6) In [29]: I , J , K , L , M = c . shape In [30]: np . all ([ c [ i , j , k , l , m ] == a [ i , j ,:] . dot ( b [ k , l ,:, m ]) for i in range ( I ) for j in range ( J ) for k in range ( K ) for l in range ( L ) for m in range ( M )]) Out[30]: True np.dot(4D,4D) c = np.dot(a,b) a.shape=(i,j,k,X) b.shape=(l,m,X,n) c.shape=(i,j,k,l,m,n) c[i,j,k,l,m,n] == a[i,j,k,:].dot(b[l,m,:,n]) In [31]: a = np . arange ( 120 ) . reshape ( 2 , 3 , 4 , 5 ) b = np . arange ( 360 ) . reshape ( 3 , 4 , 5 , 6 ) c = np . dot ( a , b ) In [32]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) print ( f \"np.dot(a,b).shape = {c.shape} \" ) a.shape = (2, 3, 4, 5) b.shape = (3, 4, 5, 6) np.dot(a,b).shape = (2, 3, 4, 3, 4, 6) In [33]: I , J , K , L , M , N = c . shape In [34]: np . all ([ c [ i , j , k , l , m , n ] == a [ i , j , k ,:] . dot ( b [ l , m ,:, n ]) for i in range ( I ) for j in range ( J ) for k in range ( K ) for l in range ( L ) for m in range ( M ) for n in range ( N )]) Out[34]: True 外積 c = np.outer(a,b) c[i][j] = a.reshape(-1,)[i]*b.reshape(-1,)[j] In [35]: c = np . outer ( a , b ) In [36]: print ( f \"a.shape = {a.shape} \" ) print ( f \"b.shape = {b.shape} \" ) a.shape = (a1,a2,...,aN) b.shape = (b1,b2,...,bM) In [37]: Na = np . prod ( a . shape ) Nb = np . prod ( b . shape ) In [38]: print ( f \"Na = {Na} \" ) print ( f \"Nb = {Nb} \" ) Na = a1*a2*・・・*aN Nb = b1*b2*・・・*bM In [39]: print ( c . shape ) (Na, Nb) In [40]: np . all ([ c [ i ][ j ] == a . reshape ( - 1 ,)[ i ] * b . reshape ( - 1 ,)[ j ] for i in range ( Na ) for j in range ( Nb )]) Out[40]: True In [ ]: if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"情報基礎実験(浅井)","url":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-0.html","loc":"https://iwasakishuto.github.io/University/3A/情報基礎実験(浅井)-0.html"},{"title":"分子生命科学Ⅲ 第1回","text":"講師： 饗場篤 参考文献： Neuroscience: Exploring the Brain, 3rd Edition 参考文献： Principles of Neurobiology 講義概要 この授業最大の目的は、 「将来僕らが脳を対象とすることになった時に敷居を低くする」 こと。 # タイトル 内容 日付 1 神経系の構造と機能 中枢神経系の構造・機能 末梢神経系の構造・機能 9/26,10/3 2 感覚神経系 感覚系の構成 体性感覚系 視覚系（末梢視覚系・平衡感覚系） 聴覚と平衡感覚（聴覚系・平衡感覚系） 化学感覚系（嗅覚系・味覚系） 10/10,17,24,31 3 運動系 脊髄による運動制御 脳による運動制御 11/14,21 4 脳と行動の化学的制御 11/28 5 摂食行動 12/12 6 脳のリズムと睡眠 脳波 睡眠 概日リズム 12/19 7 精神疾患 統合失調症 感情障害 不安障害 12/26 8 神経変性疾患 アルツハイマー病 パーキンソン病 ALS 1/9 神経系の構造と機能（１） 神経系の機能的構成 神経系は、 感覚系 、 統合系 、 運動系 の３つに分けることができる。 感覚系は、感覚器で何かを感じると、 陽イオン が神経細胞の末端に流れ込み、 活動電位 が上がり、電気的なシグナルとして 中枢神経系(CNS)特に、大脳皮質の感覚野 にこの入力を伝える。 運動系は、逆向きで、脳の運動野からのシグナルが 末梢神経系 に伝わる。 神経系の構成成分 ニューロン(神経細胞,neuron) グリア細胞(glial cells) 血管(blood vessels) ニューロン(neuron) 極性のある細胞で、 細胞体(cell body or soma) 、 樹状突起(dendrites) 、 軸索(axon) からなり、（ほとんどの場合） 活動電位(action potential) を発生する。 膝蓋腱反射(knee-jerk reflex) ニューロンがどのように神経回路に含まれているか、を示す良い例。 医師が膝蓋骨の下の腱を軽く叩くと、大腿四頭筋が伸ばされ、その信号が脊髄まで伝わる。この信号が脊髄で 運動ニューロン に直結しており、運動ニューロンが発火して少し離れた部分の筋肉を収縮させる。その反動で足が上がる。 グリア細胞(glia cells) グリア細胞はニューロン（ヒトでは \\(1\\) - \\(2\\times10&#94;{11}\\) 個）の \\(3\\) - \\(10\\) 倍（マウスだと同数程度）存在し、脳の体積の約半分を占める。 長い軸索と興奮性膜を特徴とするニューロンに対して、グリア細胞の突起は細胞体の周辺に留まり、活動電位を発生しない。 ニューロンの生存や発達、機能発言のための液性環境維持と代謝的支援、神経伝達の調節等を行なっている。 と、ニューロンの補助的な役割だと今までは考えられていたが、最近ではもっと積極的な意味があるのでは無いかと研究されている。 中枢神経系のグリア細胞が下の4種からなる。 アストロサイト(astrocyte)（アストログリア、星状膠細胞） オリゴデンドロサイト(oligodendrocyte)（オリゴデンドログリア、稀突起膠細胞） 上衣細胞(ependymal cell) ミクログリア(microglia)（小膠細胞） アストロサイト(astrocyte)の機能 血液脳関門 を形成してがんが脳に転移しないように防御したりしている。 神経伝達物質の最取り込み（神経伝達物質が出てすぐに取り込まないと、麻薬や覚せい剤のような影響が出てしまう。）。 オリゴデンドロサイト(oligodendrocyte) 中枢神経系 において、 髄鞘（ミエリン・myelin） を形成する。（ 末梢 では シュワン細胞 が髄鞘を形成する。） 上衣細胞(ependymal cells) ミクログリア(microglia) 上衣細胞は脳室と脊髄中心管を覆う一層の上皮性細胞で、脳を脳脊髄液から遮断する（脳脊髄液脳関門(cerebro-spinal fluid brain barrier)） ミクログリアは損傷に際して活性化する脳内の免疫性細胞で貪食能を持つ。アストログリア、オリゴデンドロサイト、上衣細胞が 外胚葉 由来なのに対し、ミクログリアは 中胚葉 由来である。 脳の構造 哺乳動物の脳は、ほぼ共通の構造を持っている。ヒトの特徴は、 連合野 が広いということである。 解剖学用語 解剖学用語 解剖学的切断面 神経系の構成 中枢神経系(CNS: central nervous system) 脳(brain) 大脳(cerebrum) 小脳(cerebellum) 脳幹(brain stem) 脊髄(spinal cord) 末梢神経系(PNS: peripheral nervous system) 体性神経系(somatic nervous system) 脳神経(cranial nerve) 脊髄神経(spinal nerve) 自律神経系(autonomic nervous system) 小脳(cerebellum) 脳幹（延髄・橋・中脳・間脳）の背後に位置する。 大脳や脊髄と広範な連絡を持つ運動制御中枢 言語や思考などの高次脳機能に関与 小脳の 同 側の身体の運動に関与 脳幹(brain stem) 間脳→中脳→橋→延髄からなり、上方で間脳に、下方で脊髄に連なる（狭義では間脳を含めない）。 大脳から脊髄・小脳への情報、逆に脊髄・小脳から大脳への情報を中継 呼吸、意識、体温調節等の生命維持機能を制御 （大脳・小脳の損傷では生存できるが、脳幹の損傷は通常早急な死に至る） 錐体交叉 脳の運動ニューロンの軸索が延髄の後ろで一旦交叉（ 錐体交叉 ）して反対側にいっているから、反対側の機能がうまく制限できなくなる。 一方で 小脳 は同側なので、そのようなことは起こらない。 脊髄(spinal cord) 脊髄は脊柱管にあり、延髄に続いて錐体交叉下端より始まり、脊髄円錐にて終わる。 皮膚・関節・筋肉から脳への情報、逆に脳からの情報を伝える主経路 末梢神経の脊髄神経で身体と通ずる。 脊髄に入る情報を運ぶ軸索は 後根(dorsal root) に含まれ、脊髄から出ていく情報を運ぶ軸索は 前根(ventral root) に含まれる。 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML'; var configscript = document.createElement('script'); configscript.type = 'text/x-mathjax-config'; configscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" fonts: [['STIX', 'TeX']],\" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript); (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"分子生命科学Ⅲ","url":"https://iwasakishuto.github.io/University/3A/分子生命科学Ⅲ-1.html","loc":"https://iwasakishuto.github.io/University/3A/分子生命科学Ⅲ-1.html"}]};